2022-12-08 15:08:20.795 GMT [36179] FATAL:  lock file "postmaster.pid" already exists
2022-12-08 15:08:20.795 GMT [36179] HINT:  Is another postmaster (PID 36055) running in data directory "/home/parallels/Warwick/year2/IM/CW1/online_banking_instance"?
2022-12-08 15:08:55.997 GMT [36364] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2022-12-08 15:08:55.998 GMT [36364] LOG:  could not bind IPv4 address "127.0.0.1": Address already in use
2022-12-08 15:08:55.998 GMT [36364] HINT:  Is another postmaster already running on port 5432? If not, wait a few seconds and retry.
2022-12-08 15:08:55.998 GMT [36364] WARNING:  could not create listen socket for "localhost"
2022-12-08 15:08:55.998 GMT [36364] FATAL:  could not create any TCP/IP sockets
2022-12-08 15:08:56.000 GMT [36364] LOG:  database system is shut down
2022-12-08 15:09:46.909 GMT [36585] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2022-12-08 15:09:46.909 GMT [36585] LOG:  could not bind IPv4 address "127.0.0.1": Address already in use
2022-12-08 15:09:46.909 GMT [36585] HINT:  Is another postmaster already running on port 5432? If not, wait a few seconds and retry.
2022-12-08 15:09:46.909 GMT [36585] WARNING:  could not create listen socket for "localhost"
2022-12-08 15:09:46.909 GMT [36585] FATAL:  could not create any TCP/IP sockets
2022-12-08 15:09:46.912 GMT [36585] LOG:  database system is shut down
2022-12-08 15:11:35.856 GMT [37060] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2022-12-08 15:11:35.856 GMT [37060] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2022-12-08 15:11:35.858 GMT [37060] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2022-12-08 15:11:35.863 GMT [37061] LOG:  database system was shut down at 2022-12-08 15:11:35 GMT
2022-12-08 15:11:35.869 GMT [37060] LOG:  database system is ready to accept connections
2022-12-08 15:12:25.656 GMT [37234] FATAL:  lock file "postmaster.pid" already exists
2022-12-08 15:12:25.656 GMT [37234] HINT:  Is another postmaster (PID 37060) running in data directory "/home/parallels/Warwick/year2/IM/CW1/online_banking_instance"?
2022-12-08 15:18:01.821 GMT [37060] LOG:  received fast shutdown request
2022-12-08 15:18:01.824 GMT [37060] LOG:  aborting any active transactions
2022-12-08 15:18:01.830 GMT [37060] LOG:  background worker "logical replication launcher" (PID 37067) exited with exit code 1
2022-12-08 15:18:01.830 GMT [37062] LOG:  shutting down
2022-12-08 15:18:01.849 GMT [37060] LOG:  database system is shut down
2022-12-08 15:18:12.424 GMT [38319] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2022-12-08 15:18:12.424 GMT [38319] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2022-12-08 15:18:12.425 GMT [38319] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2022-12-08 15:18:12.429 GMT [38327] LOG:  database system was shut down at 2022-12-08 15:18:12 GMT
2022-12-08 15:18:12.434 GMT [38319] LOG:  database system is ready to accept connections
2022-12-08 15:19:50.311 GMT [38319] LOG:  received fast shutdown request
2022-12-08 15:19:50.313 GMT [38319] LOG:  aborting any active transactions
2022-12-08 15:19:50.320 GMT [38319] LOG:  background worker "logical replication launcher" (PID 38333) exited with exit code 1
2022-12-08 15:19:50.320 GMT [38328] LOG:  shutting down
2022-12-08 15:19:50.342 GMT [38319] LOG:  database system is shut down
2022-12-08 15:20:04.542 GMT [38699] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2022-12-08 15:20:04.542 GMT [38699] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2022-12-08 15:20:04.543 GMT [38699] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2022-12-08 15:20:04.548 GMT [38700] LOG:  database system was shut down at 2022-12-08 15:19:50 GMT
2022-12-08 15:20:04.555 GMT [38699] LOG:  database system is ready to accept connections
2022-12-08 15:21:56.367 GMT [38699] LOG:  received fast shutdown request
2022-12-08 15:21:56.368 GMT [38699] LOG:  aborting any active transactions
2022-12-08 15:21:56.372 GMT [38699] LOG:  background worker "logical replication launcher" (PID 38706) exited with exit code 1
2022-12-08 15:21:56.373 GMT [38701] LOG:  shutting down
2022-12-08 15:21:56.389 GMT [38699] LOG:  database system is shut down
2022-12-08 15:22:13.686 GMT [39160] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2022-12-08 15:22:13.686 GMT [39160] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2022-12-08 15:22:13.688 GMT [39160] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2022-12-08 15:22:13.693 GMT [39161] LOG:  database system was shut down at 2022-12-08 15:21:56 GMT
2022-12-08 15:22:13.699 GMT [39160] LOG:  database system is ready to accept connections
2022-12-08 15:29:11.058 GMT [39160] LOG:  received fast shutdown request
2022-12-08 15:29:11.059 GMT [39160] LOG:  aborting any active transactions
2022-12-08 15:29:11.062 GMT [39160] LOG:  background worker "logical replication launcher" (PID 39167) exited with exit code 1
2022-12-08 15:29:11.066 GMT [39162] LOG:  shutting down
2022-12-08 15:29:11.078 GMT [39160] LOG:  database system is shut down
2022-12-08 15:29:15.792 GMT [40407] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2022-12-08 15:29:15.793 GMT [40407] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2022-12-08 15:29:15.795 GMT [40407] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2022-12-08 15:29:15.800 GMT [40411] LOG:  database system was shut down at 2022-12-08 15:29:11 GMT
2022-12-08 15:29:15.807 GMT [40407] LOG:  database system is ready to accept connections
2022-12-08 15:29:45.844 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:29:46.518 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:29:46.518 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:29:47.197 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:29:47.197 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:29:47.894 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:29:47.894 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:29:48.452 GMT [40588] FATAL:  could not open file "global/pg_filenode.map": No such file or directory
2022-12-08 15:29:48.506 GMT [40590] FATAL:  could not open file "global/pg_filenode.map": No such file or directory
2022-12-08 15:29:48.508 GMT [40591] FATAL:  could not open file "global/pg_filenode.map": No such file or directory
2022-12-08 15:29:48.560 GMT [40594] FATAL:  could not open file "global/pg_filenode.map": No such file or directory
2022-12-08 15:29:48.608 GMT [40597] FATAL:  could not open file "global/pg_filenode.map": No such file or directory
2022-12-08 15:29:48.615 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:29:48.615 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:29:48.645 GMT [40599] FATAL:  could not open file "global/pg_filenode.map": No such file or directory
2022-12-08 15:29:48.689 GMT [40601] FATAL:  could not open file "global/pg_filenode.map": No such file or directory
2022-12-08 15:29:49.291 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:29:49.291 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:29:49.977 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:29:49.977 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:29:50.665 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:29:50.665 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:29:51.340 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:29:51.340 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:29:52.025 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:29:52.025 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:29:52.719 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:29:52.719 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:29:53.405 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:29:53.406 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:29:54.078 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:29:54.079 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:29:54.830 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:29:54.830 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:29:55.507 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:29:55.507 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:29:56.179 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:29:56.179 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:29:56.597 GMT [40415] LOG:  using stale statistics instead of current ones because stats collector is not responding
2022-12-08 15:29:56.598 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:29:56.598 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:29:57.278 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:29:57.279 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:29:57.979 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:29:57.979 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:29:58.656 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:29:58.656 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:29:59.337 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:29:59.337 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:30:00.023 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:30:00.023 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:30:00.703 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:30:00.703 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:30:01.378 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:30:01.378 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:30:02.056 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:30:02.056 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:30:02.740 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:30:02.740 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:30:03.477 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:30:03.477 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:30:04.157 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:30:04.157 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:30:04.846 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:30:04.846 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:30:05.837 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:30:05.837 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:30:06.625 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:30:06.626 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:30:07.296 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:30:07.296 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:30:07.736 GMT [40415] LOG:  using stale statistics instead of current ones because stats collector is not responding
2022-12-08 15:30:07.737 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:30:07.737 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:30:08.405 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:30:08.405 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:30:09.074 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:30:09.074 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:30:09.748 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:30:09.748 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:30:10.410 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:30:10.410 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:30:11.070 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:30:11.070 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:30:11.733 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:30:11.733 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:30:12.407 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:30:12.407 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:30:13.078 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:30:13.078 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:30:13.752 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:30:13.752 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:30:14.426 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:30:14.427 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:30:15.097 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:30:15.097 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:30:15.766 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:30:15.766 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:30:16.437 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:30:16.437 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:30:17.106 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:30:17.106 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:30:17.775 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:30:17.775 GMT [40416] LOG:  could not open temporary statistics file "pg_stat_tmp/global.tmp": No such file or directory
2022-12-08 15:30:18.200 GMT [40415] LOG:  using stale statistics instead of current ones because stats collector is not responding
2022-12-08 15:30:29.345 GMT [40407] LOG:  could not open file "postmaster.pid": No such file or directory
2022-12-08 15:30:29.345 GMT [40407] LOG:  performing immediate shutdown because data directory lock file is invalid
2022-12-08 15:30:29.345 GMT [40407] LOG:  received immediate shutdown request
2022-12-08 15:30:29.345 GMT [40407] LOG:  could not open file "postmaster.pid": No such file or directory
2022-12-08 15:30:29.346 GMT [40416] LOG:  could not open temporary statistics file "pg_stat/global.tmp": No such file or directory
2022-12-08 15:30:29.351 GMT [40407] LOG:  database system is shut down
2022-12-08 15:31:12.080 GMT [41032] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2022-12-08 15:31:12.080 GMT [41032] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2022-12-08 15:31:12.082 GMT [41032] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2022-12-08 15:31:12.086 GMT [41033] LOG:  database system was shut down at 2022-12-08 15:31:11 GMT
2022-12-08 15:31:12.091 GMT [41032] LOG:  database system is ready to accept connections
2022-12-08 15:34:09.911 GMT [41032] LOG:  received fast shutdown request
2022-12-08 15:34:09.913 GMT [41032] LOG:  aborting any active transactions
2022-12-08 15:34:09.915 GMT [41032] LOG:  background worker "logical replication launcher" (PID 41039) exited with exit code 1
2022-12-08 15:34:09.919 GMT [41034] LOG:  shutting down
2022-12-08 15:34:09.938 GMT [41032] LOG:  database system is shut down
2022-12-08 15:38:22.357 GMT [42658] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2022-12-08 15:38:22.357 GMT [42658] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2022-12-08 15:38:22.359 GMT [42658] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2022-12-08 15:38:22.362 GMT [42666] LOG:  database system was shut down at 2022-12-08 15:38:22 GMT
2022-12-08 15:38:22.367 GMT [42658] LOG:  database system is ready to accept connections
2022-12-08 15:42:17.359 GMT [42658] LOG:  received smart shutdown request
2022-12-08 15:42:17.373 GMT [42658] LOG:  background worker "logical replication launcher" (PID 42672) exited with exit code 1
2022-12-08 15:42:17.374 GMT [42658] LOG:  received SIGHUP, reloading configuration files
2022-12-08 15:42:17.374 GMT [42667] LOG:  shutting down
2022-12-08 15:42:17.394 GMT [42658] LOG:  database system is shut down
2022-12-09 11:37:06.202 GMT [8796] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2022-12-09 11:37:06.203 GMT [8796] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2022-12-09 11:37:06.205 GMT [8796] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2022-12-09 11:37:06.210 GMT [8797] LOG:  database system was shut down at 2022-12-09 11:36:14 GMT
2022-12-09 11:37:06.218 GMT [8796] LOG:  database system is ready to accept connections
2022-12-09 11:37:50.131 GMT [9074] ERROR:  syntax error at or near "@" at character 5
2022-12-09 11:37:50.131 GMT [9074] STATEMENT:  SET @sql_dialect = 'postgresql';
2022-12-09 11:37:50.143 GMT [9074] ERROR:  syntax error at or near ")" at character 178
2022-12-09 11:37:50.143 GMT [9074] STATEMENT:  /*create a table account with a foreign key to customer*/
	CREATE TABLE account (
	    id SERIAL PRIMARY KEY,
	    init_date DATE,
	    customer_id INTEGER REFERENCES customer(id),
	);
2022-12-09 11:37:50.148 GMT [9074] ERROR:  relation "account" does not exist
2022-12-09 11:37:50.148 GMT [9074] STATEMENT:  /*create a table savings_account with a foreign key to account*/
	CREATE TABLE savings_account (
	    id SERIAL PRIMARY KEY,
	    account_id INTEGER REFERENCES account(id),
	    current_balance NUMERIC(10,2),
	    interest_rate NUMERIC(5,2)
	);
2022-12-09 11:37:50.154 GMT [9074] ERROR:  relation "account" does not exist
2022-12-09 11:37:50.154 GMT [9074] STATEMENT:  /*create a table credit_account with a foreign key to account*/
	CREATE TABLE credit_account (
	    id SERIAL PRIMARY KEY,
	    account_id INTEGER REFERENCES account(id),
	    current_balance NUMERIC(10,2),
	    credit_limit NUMERIC(10,2),
	    interest_rate NUMERIC(5,2)
	);
2022-12-09 11:37:50.159 GMT [9074] ERROR:  relation "credit_account" does not exist
2022-12-09 11:37:50.159 GMT [9074] STATEMENT:  /*create a table credit_account_application with a foreign key to credit_account*/
	CREATE TABLE credit_account_application (
	    id SERIAL PRIMARY KEY,
	    credit_account_id INTEGER REFERENCES credit_account(id),
	    is_approved BOOLEAN,
	    application_date DATE,
	    status VARCHAR(255)
	);
2022-12-09 11:37:50.164 GMT [9074] ERROR:  relation "account" does not exist
2022-12-09 11:37:50.164 GMT [9074] STATEMENT:  /*create a table debit_account with a foreign key to account*/
	CREATE TABLE debit_account (
	    id SERIAL PRIMARY KEY,
	    account_id INTEGER REFERENCES account(id),
	    current_balance NUMERIC(10,2),
	    overdraft_limit NUMERIC(10,2),
	    interest_rate NUMERIC(5,2)
	);
2022-12-09 11:37:50.176 GMT [9074] ERROR:  relation "account" does not exist
2022-12-09 11:37:50.176 GMT [9074] STATEMENT:  /*create a table loan with a foreign key to account*/
	CREATE TABLE loan (
	    id SERIAL PRIMARY KEY,
	    account_id INTEGER REFERENCES account(id),
	    current_balance NUMERIC(10,2),
	    interest_rate NUMERIC(5,2),
	    loan_amount NUMERIC(10,2),
	    loan_term INTEGER,
	    loan_start_date DATE,
	    loan_end_date DATE
	);
2022-12-09 11:37:50.180 GMT [9074] ERROR:  relation "loan" does not exist
2022-12-09 11:37:50.180 GMT [9074] STATEMENT:  /*create a table loan_application with a foreign key to loan*/
	CREATE TABLE loan_application (
	    id SERIAL PRIMARY KEY,
	    loan_id INTEGER REFERENCES loan(id),
	    is_approved BOOLEAN,
	    application_date DATE,
	    status VARCHAR(255)
	);
2022-12-09 11:37:50.185 GMT [9074] ERROR:  relation "account" does not exist
2022-12-09 11:37:50.185 GMT [9074] STATEMENT:  /*create a table transaction with a foreign key to account*/
	CREATE TABLE transaction (
	    id SERIAL PRIMARY KEY,
	    account_id INTEGER REFERENCES account(id),
	    transaction_date DATE,
	    transaction_type VARCHAR(255),
	    transaction_amount NUMERIC(10,2)
	);
2022-12-09 11:37:50.193 GMT [9074] ERROR:  relation "account" does not exist
2022-12-09 11:37:50.193 GMT [9074] STATEMENT:  /*create a table to log all actions*/
	CREATE TABLE log (
	    id SERIAL PRIMARY KEY,
	    date DATE,
	    action VARCHAR(255),
	    customer_id INTEGER REFERENCES customer(id),
	    account_id INTEGER REFERENCES account(id)
	);
2022-12-09 11:37:50.196 GMT [9074] ERROR:  relation "account" does not exist at character 64
2022-12-09 11:37:50.196 GMT [9074] STATEMENT:  /*insert 10 elements of sample data into account*/
	INSERT INTO account (init_date, customer_id)
	VALUES
	    ('2019-01-01', 1),
	    ('2019-01-01', 2),
	    ('2019-01-01', 3),
	    ('2019-01-01', 4),
	    ('2019-01-01', 5),
	    ('2019-01-01', 6),
	    ('2019-01-01', 7),
	    ('2019-01-01', 8),
	    ('2019-01-01', 9),
	    ('2019-01-01', 10);
2022-12-09 11:37:50.196 GMT [9074] ERROR:  relation "savings_account" does not exist at character 113
2022-12-09 11:37:50.196 GMT [9074] STATEMENT:  /*insert 8 elements of sample data into savings_account with different amounts and interest rates*/
	INSERT INTO savings_account (account_id, current_balance, interest_rate)
	VALUES
	    (1, 1000.00, 0.01),
	    (2, 2000.00, 0.02),
	    (3, 3000.00, 0.03),
	    (4, 4000.00, 0.04),
	    (5, 5000.00, 0.05),
	    (6, 6000.00, 0.06),
	    (7, 7000.00, 0.07),
	    (8, 8000.00, 0.08);
2022-12-09 11:37:50.197 GMT [9074] ERROR:  relation "credit_account" does not exist at character 128
2022-12-09 11:37:50.197 GMT [9074] STATEMENT:  /*insert 8 elements of sample data into credit_account with different amounts, credit limits, and interest rates*/
	INSERT INTO credit_account (account_id, current_balance, credit_limit, interest_rate)
	VALUES
	    (1, 1000.00, 10000.00, 0.01),
	    (2, 2000.00, 20000.00, 0.02),
	    (3, 3000.00, 30000.00, 0.03),
	    (4, 4000.00, 40000.00, 0.04),
	    (5, 5000.00, 50000.00, 0.05),
	    (6, 6000.00, 60000.00, 0.06),
	    (7, 7000.00, 70000.00, 0.07),
	    (8, 8000.00, 80000.00, 0.08);
2022-12-09 11:37:50.197 GMT [9074] ERROR:  relation "debit_account" does not exist at character 130
2022-12-09 11:37:50.197 GMT [9074] STATEMENT:  /*insert 8 elements of sample data into debit_account with different amounts, overdraft limits, and interest rates*/
	INSERT INTO debit_account (account_id, current_balance, overdraft_limit, interest_rate)
	VALUES
	    (1, 1000.00, 10000.00, 0.01),
	    (2, 2000.00, 20000.00, 0.02),
	    (3, 3000.00, 30000.00, 0.03),
	    (4, 4000.00, 40000.00, 0.04),
	    (5, 5000.00, 50000.00, 0.05),
	    (6, 6000.00, 60000.00, 0.06),
	    (7, 7000.00, 70000.00, 0.07),
	    (8, 8000.00, 80000.00, 0.08);
2022-12-09 11:37:50.198 GMT [9074] ERROR:  relation "loan" does not exist at character 141
2022-12-09 11:37:50.198 GMT [9074] STATEMENT:  /*insert 8 elements of sample data into loan with different amounts, interest rates, loan terms, and loan start and end dates*/
	INSERT INTO loan (account_id, loan_amount, interest_rate, loan_term, loan_start_date, loan_end_date)
	VALUES
	    (1, 1000.00, 0.01, 12, '2019-01-01', '2020-01-01'),
	    (2, 2000.00, 0.02, 12, '2019-01-01', '2020-01-01'),
	    (3, 3000.00, 0.03, 12, '2019-01-01', '2020-01-01'),
	    (4, 4000.00, 0.04, 12, '2019-01-01', '2020-01-01'),
	    (5, 5000.00, 0.05, 12, '2019-01-01', '2020-01-01'),
	    (6, 6000.00, 0.06, 12, '2019-01-01', '2020-01-01'),
	    (7, 7000.00, 0.07, 12, '2019-01-01', '2020-01-01'),
	    (8, 8000.00, 0.08, 12, '2019-01-01', '2020-01-01');
2022-12-09 11:43:05.355 GMT [10018] ERROR:  syntax error at or near "DIALECT" at character 9
2022-12-09 11:43:05.355 GMT [10018] STATEMENT:  SET SQL DIALECT PostgreSQL;
2022-12-09 11:43:05.355 GMT [10018] ERROR:  schema "online_banking" already exists
2022-12-09 11:43:05.355 GMT [10018] STATEMENT:  /*create schema*/
	CREATE SCHEMA online_banking;
2022-12-09 11:43:05.357 GMT [10018] ERROR:  relation "customer" already exists
2022-12-09 11:43:05.357 GMT [10018] STATEMENT:  /*create a table customer with their address as an array*/
	CREATE TABLE customer (
	    id SERIAL PRIMARY KEY,
	    init_date DATE,
	    first_name VARCHAR(255),
	    last_name VARCHAR(255),
	    date_of_birth DATE,
	    phone_number VARCHAR(255),
	    address VARCHAR(255) []
	);
2022-12-09 11:43:05.357 GMT [10018] ERROR:  syntax error at or near ")" at character 178
2022-12-09 11:43:05.357 GMT [10018] STATEMENT:  /*create a table account with a foreign key to customer*/
	CREATE TABLE account (
	    id SERIAL PRIMARY KEY,
	    init_date DATE,
	    customer_id INTEGER REFERENCES customer(id),
	);
2022-12-09 11:43:05.362 GMT [10018] ERROR:  relation "account" does not exist
2022-12-09 11:43:05.362 GMT [10018] STATEMENT:  /*create a table savings_account with a foreign key to account*/
	CREATE TABLE savings_account (
	    id SERIAL PRIMARY KEY,
	    account_id INTEGER REFERENCES account(id),
	    current_balance NUMERIC(10,2),
	    interest_rate NUMERIC(5,2)
	);
2022-12-09 11:43:05.366 GMT [10018] ERROR:  relation "account" does not exist
2022-12-09 11:43:05.366 GMT [10018] STATEMENT:  /*create a table credit_account with a foreign key to account*/
	CREATE TABLE credit_account (
	    id SERIAL PRIMARY KEY,
	    account_id INTEGER REFERENCES account(id),
	    current_balance NUMERIC(10,2),
	    credit_limit NUMERIC(10,2),
	    interest_rate NUMERIC(5,2)
	);
2022-12-09 11:43:05.372 GMT [10018] ERROR:  relation "credit_account" does not exist
2022-12-09 11:43:05.372 GMT [10018] STATEMENT:  /*create a table credit_account_application with a foreign key to credit_account*/
	CREATE TABLE credit_account_application (
	    id SERIAL PRIMARY KEY,
	    credit_account_id INTEGER REFERENCES credit_account(id),
	    is_approved BOOLEAN,
	    application_date DATE,
	    status VARCHAR(255)
	);
2022-12-09 11:43:05.377 GMT [10018] ERROR:  relation "account" does not exist
2022-12-09 11:43:05.377 GMT [10018] STATEMENT:  /*create a table debit_account with a foreign key to account*/
	CREATE TABLE debit_account (
	    id SERIAL PRIMARY KEY,
	    account_id INTEGER REFERENCES account(id),
	    current_balance NUMERIC(10,2),
	    overdraft_limit NUMERIC(10,2),
	    interest_rate NUMERIC(5,2)
	);
2022-12-09 11:43:05.382 GMT [10018] ERROR:  relation "account" does not exist
2022-12-09 11:43:05.382 GMT [10018] STATEMENT:  /*create a table loan with a foreign key to account*/
	CREATE TABLE loan (
	    id SERIAL PRIMARY KEY,
	    account_id INTEGER REFERENCES account(id),
	    current_balance NUMERIC(10,2),
	    interest_rate NUMERIC(5,2),
	    loan_amount NUMERIC(10,2),
	    loan_term INTEGER,
	    loan_start_date DATE,
	    loan_end_date DATE
	);
2022-12-09 11:43:05.389 GMT [10018] ERROR:  relation "loan" does not exist
2022-12-09 11:43:05.389 GMT [10018] STATEMENT:  /*create a table loan_application with a foreign key to loan*/
	CREATE TABLE loan_application (
	    id SERIAL PRIMARY KEY,
	    loan_id INTEGER REFERENCES loan(id),
	    is_approved BOOLEAN,
	    application_date DATE,
	    status VARCHAR(255)
	);
2022-12-09 11:43:05.394 GMT [10018] ERROR:  relation "account" does not exist
2022-12-09 11:43:05.394 GMT [10018] STATEMENT:  /*create a table transaction with a foreign key to account*/
	CREATE TABLE transaction (
	    id SERIAL PRIMARY KEY,
	    account_id INTEGER REFERENCES account(id),
	    transaction_date DATE,
	    transaction_type VARCHAR(255),
	    transaction_amount NUMERIC(10,2)
	);
2022-12-09 11:43:05.406 GMT [10018] ERROR:  relation "account" does not exist
2022-12-09 11:43:05.406 GMT [10018] STATEMENT:  /*create a table to log all actions*/
	CREATE TABLE log (
	    id SERIAL PRIMARY KEY,
	    date DATE,
	    action VARCHAR(255),
	    customer_id INTEGER REFERENCES customer(id),
	    account_id INTEGER REFERENCES account(id)
	);
2022-12-09 11:43:05.408 GMT [10018] ERROR:  relation "account" does not exist at character 64
2022-12-09 11:43:05.408 GMT [10018] STATEMENT:  /*insert 10 elements of sample data into account*/
	INSERT INTO account (init_date, customer_id)
	VALUES
	    ('2019-01-01', 1),
	    ('2019-01-01', 2),
	    ('2019-01-01', 3),
	    ('2019-01-01', 4),
	    ('2019-01-01', 5),
	    ('2019-01-01', 6),
	    ('2019-01-01', 7),
	    ('2019-01-01', 8),
	    ('2019-01-01', 9),
	    ('2019-01-01', 10);
2022-12-09 11:43:05.409 GMT [10018] ERROR:  relation "savings_account" does not exist at character 113
2022-12-09 11:43:05.409 GMT [10018] STATEMENT:  /*insert 8 elements of sample data into savings_account with different amounts and interest rates*/
	INSERT INTO savings_account (account_id, current_balance, interest_rate)
	VALUES
	    (1, 1000.00, 0.01),
	    (2, 2000.00, 0.02),
	    (3, 3000.00, 0.03),
	    (4, 4000.00, 0.04),
	    (5, 5000.00, 0.05),
	    (6, 6000.00, 0.06),
	    (7, 7000.00, 0.07),
	    (8, 8000.00, 0.08);
2022-12-09 11:43:05.409 GMT [10018] ERROR:  relation "credit_account" does not exist at character 128
2022-12-09 11:43:05.409 GMT [10018] STATEMENT:  /*insert 8 elements of sample data into credit_account with different amounts, credit limits, and interest rates*/
	INSERT INTO credit_account (account_id, current_balance, credit_limit, interest_rate)
	VALUES
	    (1, 1000.00, 10000.00, 0.01),
	    (2, 2000.00, 20000.00, 0.02),
	    (3, 3000.00, 30000.00, 0.03),
	    (4, 4000.00, 40000.00, 0.04),
	    (5, 5000.00, 50000.00, 0.05),
	    (6, 6000.00, 60000.00, 0.06),
	    (7, 7000.00, 70000.00, 0.07),
	    (8, 8000.00, 80000.00, 0.08);
2022-12-09 11:43:05.409 GMT [10018] ERROR:  relation "debit_account" does not exist at character 130
2022-12-09 11:43:05.409 GMT [10018] STATEMENT:  /*insert 8 elements of sample data into debit_account with different amounts, overdraft limits, and interest rates*/
	INSERT INTO debit_account (account_id, current_balance, overdraft_limit, interest_rate)
	VALUES
	    (1, 1000.00, 10000.00, 0.01),
	    (2, 2000.00, 20000.00, 0.02),
	    (3, 3000.00, 30000.00, 0.03),
	    (4, 4000.00, 40000.00, 0.04),
	    (5, 5000.00, 50000.00, 0.05),
	    (6, 6000.00, 60000.00, 0.06),
	    (7, 7000.00, 70000.00, 0.07),
	    (8, 8000.00, 80000.00, 0.08);
2022-12-09 11:43:05.409 GMT [10018] ERROR:  relation "loan" does not exist at character 141
2022-12-09 11:43:05.409 GMT [10018] STATEMENT:  /*insert 8 elements of sample data into loan with different amounts, interest rates, loan terms, and loan start and end dates*/
	INSERT INTO loan (account_id, loan_amount, interest_rate, loan_term, loan_start_date, loan_end_date)
	VALUES
	    (1, 1000.00, 0.01, 12, '2019-01-01', '2020-01-01'),
	    (2, 2000.00, 0.02, 12, '2019-01-01', '2020-01-01'),
	    (3, 3000.00, 0.03, 12, '2019-01-01', '2020-01-01'),
	    (4, 4000.00, 0.04, 12, '2019-01-01', '2020-01-01'),
	    (5, 5000.00, 0.05, 12, '2019-01-01', '2020-01-01'),
	    (6, 6000.00, 0.06, 12, '2019-01-01', '2020-01-01'),
	    (7, 7000.00, 0.07, 12, '2019-01-01', '2020-01-01'),
	    (8, 8000.00, 0.08, 12, '2019-01-01', '2020-01-01');
2022-12-09 11:47:19.564 GMT [10844] ERROR:  schema "online_banking" already exists
2022-12-09 11:47:19.564 GMT [10844] STATEMENT:  /*create schema*/
	CREATE SCHEMA online_banking;
2022-12-09 11:47:19.566 GMT [10844] ERROR:  relation "customer" already exists
2022-12-09 11:47:19.566 GMT [10844] STATEMENT:  /*create a table customer with their address as an array*/
	CREATE TABLE customer (
	    id SERIAL PRIMARY KEY,
	    init_date DATE,
	    first_name VARCHAR(255),
	    last_name VARCHAR(255),
	    date_of_birth DATE,
	    phone_number VARCHAR(255),
	    address VARCHAR(255) []
	);
2022-12-09 11:47:19.567 GMT [10844] ERROR:  syntax error at or near ")" at character 178
2022-12-09 11:47:19.567 GMT [10844] STATEMENT:  /*create a table account with a foreign key to customer*/
	CREATE TABLE account (
	    id SERIAL PRIMARY KEY,
	    init_date DATE,
	    customer_id INTEGER REFERENCES customer(id),
	);
2022-12-09 11:47:19.572 GMT [10844] ERROR:  relation "account" does not exist
2022-12-09 11:47:19.572 GMT [10844] STATEMENT:  /*create a table savings_account with a foreign key to account*/
	CREATE TABLE savings_account (
	    id SERIAL PRIMARY KEY,
	    account_id INTEGER REFERENCES account(id),
	    current_balance NUMERIC(10,2),
	    interest_rate NUMERIC(5,2)
	);
2022-12-09 11:47:19.579 GMT [10844] ERROR:  relation "account" does not exist
2022-12-09 11:47:19.579 GMT [10844] STATEMENT:  /*create a table credit_account with a foreign key to account*/
	CREATE TABLE credit_account (
	    id SERIAL PRIMARY KEY,
	    account_id INTEGER REFERENCES account(id),
	    current_balance NUMERIC(10,2),
	    credit_limit NUMERIC(10,2),
	    interest_rate NUMERIC(5,2)
	);
2022-12-09 11:47:19.585 GMT [10844] ERROR:  relation "credit_account" does not exist
2022-12-09 11:47:19.585 GMT [10844] STATEMENT:  /*create a table credit_account_application with a foreign key to credit_account*/
	CREATE TABLE credit_account_application (
	    id SERIAL PRIMARY KEY,
	    credit_account_id INTEGER REFERENCES credit_account(id),
	    is_approved BOOLEAN,
	    application_date DATE,
	    status VARCHAR(255)
	);
2022-12-09 11:47:19.589 GMT [10844] ERROR:  relation "account" does not exist
2022-12-09 11:47:19.589 GMT [10844] STATEMENT:  /*create a table debit_account with a foreign key to account*/
	CREATE TABLE debit_account (
	    id SERIAL PRIMARY KEY,
	    account_id INTEGER REFERENCES account(id),
	    current_balance NUMERIC(10,2),
	    overdraft_limit NUMERIC(10,2),
	    interest_rate NUMERIC(5,2)
	);
2022-12-09 11:47:19.593 GMT [10844] ERROR:  relation "account" does not exist
2022-12-09 11:47:19.593 GMT [10844] STATEMENT:  /*create a table loan with a foreign key to account*/
	CREATE TABLE loan (
	    id SERIAL PRIMARY KEY,
	    account_id INTEGER REFERENCES account(id),
	    current_balance NUMERIC(10,2),
	    interest_rate NUMERIC(5,2),
	    loan_amount NUMERIC(10,2),
	    loan_term INTEGER,
	    loan_start_date DATE,
	    loan_end_date DATE
	);
2022-12-09 11:47:19.598 GMT [10844] ERROR:  relation "loan" does not exist
2022-12-09 11:47:19.598 GMT [10844] STATEMENT:  /*create a table loan_application with a foreign key to loan*/
	CREATE TABLE loan_application (
	    id SERIAL PRIMARY KEY,
	    loan_id INTEGER REFERENCES loan(id),
	    is_approved BOOLEAN,
	    application_date DATE,
	    status VARCHAR(255)
	);
2022-12-09 11:47:19.603 GMT [10844] ERROR:  relation "account" does not exist
2022-12-09 11:47:19.603 GMT [10844] STATEMENT:  /*create a table transaction with a foreign key to account*/
	CREATE TABLE transaction (
	    id SERIAL PRIMARY KEY,
	    account_id INTEGER REFERENCES account(id),
	    transaction_date DATE,
	    transaction_type VARCHAR(255),
	    transaction_amount NUMERIC(10,2)
	);
2022-12-09 11:47:19.609 GMT [10844] ERROR:  relation "account" does not exist
2022-12-09 11:47:19.609 GMT [10844] STATEMENT:  /*create a table to log all actions*/
	CREATE TABLE log (
	    id SERIAL PRIMARY KEY,
	    date DATE,
	    action VARCHAR(255),
	    customer_id INTEGER REFERENCES customer(id),
	    account_id INTEGER REFERENCES account(id)
	);
2022-12-09 11:47:19.613 GMT [10844] ERROR:  relation "account" does not exist at character 64
2022-12-09 11:47:19.613 GMT [10844] STATEMENT:  /*insert 10 elements of sample data into account*/
	INSERT INTO account (init_date, customer_id)
	VALUES
	    ('2019-01-01', 1),
	    ('2019-01-01', 2),
	    ('2019-01-01', 3),
	    ('2019-01-01', 4),
	    ('2019-01-01', 5),
	    ('2019-01-01', 6),
	    ('2019-01-01', 7),
	    ('2019-01-01', 8),
	    ('2019-01-01', 9),
	    ('2019-01-01', 10);
2022-12-09 11:47:19.614 GMT [10844] ERROR:  relation "savings_account" does not exist at character 113
2022-12-09 11:47:19.614 GMT [10844] STATEMENT:  /*insert 8 elements of sample data into savings_account with different amounts and interest rates*/
	INSERT INTO savings_account (account_id, current_balance, interest_rate)
	VALUES
	    (1, 1000.00, 0.01),
	    (2, 2000.00, 0.02),
	    (3, 3000.00, 0.03),
	    (4, 4000.00, 0.04),
	    (5, 5000.00, 0.05),
	    (6, 6000.00, 0.06),
	    (7, 7000.00, 0.07),
	    (8, 8000.00, 0.08);
2022-12-09 11:47:19.615 GMT [10844] ERROR:  relation "credit_account" does not exist at character 128
2022-12-09 11:47:19.615 GMT [10844] STATEMENT:  /*insert 8 elements of sample data into credit_account with different amounts, credit limits, and interest rates*/
	INSERT INTO credit_account (account_id, current_balance, credit_limit, interest_rate)
	VALUES
	    (1, 1000.00, 10000.00, 0.01),
	    (2, 2000.00, 20000.00, 0.02),
	    (3, 3000.00, 30000.00, 0.03),
	    (4, 4000.00, 40000.00, 0.04),
	    (5, 5000.00, 50000.00, 0.05),
	    (6, 6000.00, 60000.00, 0.06),
	    (7, 7000.00, 70000.00, 0.07),
	    (8, 8000.00, 80000.00, 0.08);
2022-12-09 11:47:19.618 GMT [10844] ERROR:  relation "debit_account" does not exist at character 130
2022-12-09 11:47:19.618 GMT [10844] STATEMENT:  /*insert 8 elements of sample data into debit_account with different amounts, overdraft limits, and interest rates*/
	INSERT INTO debit_account (account_id, current_balance, overdraft_limit, interest_rate)
	VALUES
	    (1, 1000.00, 10000.00, 0.01),
	    (2, 2000.00, 20000.00, 0.02),
	    (3, 3000.00, 30000.00, 0.03),
	    (4, 4000.00, 40000.00, 0.04),
	    (5, 5000.00, 50000.00, 0.05),
	    (6, 6000.00, 60000.00, 0.06),
	    (7, 7000.00, 70000.00, 0.07),
	    (8, 8000.00, 80000.00, 0.08);
2022-12-09 11:47:19.618 GMT [10844] ERROR:  relation "loan" does not exist at character 141
2022-12-09 11:47:19.618 GMT [10844] STATEMENT:  /*insert 8 elements of sample data into loan with different amounts, interest rates, loan terms, and loan start and end dates*/
	INSERT INTO loan (account_id, loan_amount, interest_rate, loan_term, loan_start_date, loan_end_date)
	VALUES
	    (1, 1000.00, 0.01, 12, '2019-01-01', '2020-01-01'),
	    (2, 2000.00, 0.02, 12, '2019-01-01', '2020-01-01'),
	    (3, 3000.00, 0.03, 12, '2019-01-01', '2020-01-01'),
	    (4, 4000.00, 0.04, 12, '2019-01-01', '2020-01-01'),
	    (5, 5000.00, 0.05, 12, '2019-01-01', '2020-01-01'),
	    (6, 6000.00, 0.06, 12, '2019-01-01', '2020-01-01'),
	    (7, 7000.00, 0.07, 12, '2019-01-01', '2020-01-01'),
	    (8, 8000.00, 0.08, 12, '2019-01-01', '2020-01-01');
2022-12-09 11:48:33.730 GMT [11109] ERROR:  schema "online_banking" already exists
2022-12-09 11:48:33.730 GMT [11109] STATEMENT:  /*create schema*/
	CREATE SCHEMA online_banking;
2022-12-09 11:48:33.731 GMT [11109] ERROR:  syntax error at or near ")" at character 246
2022-12-09 11:48:33.731 GMT [11109] STATEMENT:  /*create a table customer with their address as an array*/
	
	
	
	
	
	
	
	
	
	/*create a table account with a foreign key to customer*/
	CREATE TABLE account (
	    id SERIAL PRIMARY KEY,
	    init_date DATE,
	    customer_id INTEGER REFERENCES customer(id),
	);
2022-12-09 11:48:33.737 GMT [11109] ERROR:  relation "account" does not exist
2022-12-09 11:48:33.737 GMT [11109] STATEMENT:  /*create a table savings_account with a foreign key to account*/
	CREATE TABLE savings_account (
	    id SERIAL PRIMARY KEY,
	    account_id INTEGER REFERENCES account(id),
	    current_balance NUMERIC(10,2),
	    interest_rate NUMERIC(5,2)
	);
2022-12-09 11:48:33.741 GMT [11109] ERROR:  relation "account" does not exist
2022-12-09 11:48:33.741 GMT [11109] STATEMENT:  /*create a table credit_account with a foreign key to account*/
	CREATE TABLE credit_account (
	    id SERIAL PRIMARY KEY,
	    account_id INTEGER REFERENCES account(id),
	    current_balance NUMERIC(10,2),
	    credit_limit NUMERIC(10,2),
	    interest_rate NUMERIC(5,2)
	);
2022-12-09 11:48:33.747 GMT [11109] ERROR:  relation "credit_account" does not exist
2022-12-09 11:48:33.747 GMT [11109] STATEMENT:  /*create a table credit_account_application with a foreign key to credit_account*/
	CREATE TABLE credit_account_application (
	    id SERIAL PRIMARY KEY,
	    credit_account_id INTEGER REFERENCES credit_account(id),
	    is_approved BOOLEAN,
	    application_date DATE,
	    status VARCHAR(255)
	);
2022-12-09 11:48:33.752 GMT [11109] ERROR:  relation "account" does not exist
2022-12-09 11:48:33.752 GMT [11109] STATEMENT:  /*create a table debit_account with a foreign key to account*/
	CREATE TABLE debit_account (
	    id SERIAL PRIMARY KEY,
	    account_id INTEGER REFERENCES account(id),
	    current_balance NUMERIC(10,2),
	    overdraft_limit NUMERIC(10,2),
	    interest_rate NUMERIC(5,2)
	);
2022-12-09 11:48:33.757 GMT [11109] ERROR:  relation "account" does not exist
2022-12-09 11:48:33.757 GMT [11109] STATEMENT:  /*create a table loan with a foreign key to account*/
	CREATE TABLE loan (
	    id SERIAL PRIMARY KEY,
	    account_id INTEGER REFERENCES account(id),
	    current_balance NUMERIC(10,2),
	    interest_rate NUMERIC(5,2),
	    loan_amount NUMERIC(10,2),
	    loan_term INTEGER,
	    loan_start_date DATE,
	    loan_end_date DATE
	);
2022-12-09 11:48:33.762 GMT [11109] ERROR:  relation "loan" does not exist
2022-12-09 11:48:33.762 GMT [11109] STATEMENT:  /*create a table loan_application with a foreign key to loan*/
	CREATE TABLE loan_application (
	    id SERIAL PRIMARY KEY,
	    loan_id INTEGER REFERENCES loan(id),
	    is_approved BOOLEAN,
	    application_date DATE,
	    status VARCHAR(255)
	);
2022-12-09 11:48:33.768 GMT [11109] ERROR:  relation "account" does not exist
2022-12-09 11:48:33.768 GMT [11109] STATEMENT:  /*create a table transaction with a foreign key to account*/
	CREATE TABLE transaction (
	    id SERIAL PRIMARY KEY,
	    account_id INTEGER REFERENCES account(id),
	    transaction_date DATE,
	    transaction_type VARCHAR(255),
	    transaction_amount NUMERIC(10,2)
	);
2022-12-09 11:48:33.772 GMT [11109] ERROR:  relation "account" does not exist
2022-12-09 11:48:33.772 GMT [11109] STATEMENT:  /*create a table to log all actions*/
	CREATE TABLE log (
	    id SERIAL PRIMARY KEY,
	    date DATE,
	    action VARCHAR(255),
	    customer_id INTEGER REFERENCES customer(id),
	    account_id INTEGER REFERENCES account(id)
	);
2022-12-09 11:48:33.774 GMT [11109] ERROR:  relation "account" does not exist at character 64
2022-12-09 11:48:33.774 GMT [11109] STATEMENT:  /*insert 10 elements of sample data into account*/
	INSERT INTO account (init_date, customer_id)
	VALUES
	    ('2019-01-01', 1),
	    ('2019-01-01', 2),
	    ('2019-01-01', 3),
	    ('2019-01-01', 4),
	    ('2019-01-01', 5),
	    ('2019-01-01', 6),
	    ('2019-01-01', 7),
	    ('2019-01-01', 8),
	    ('2019-01-01', 9),
	    ('2019-01-01', 10);
2022-12-09 11:48:33.775 GMT [11109] ERROR:  relation "savings_account" does not exist at character 113
2022-12-09 11:48:33.775 GMT [11109] STATEMENT:  /*insert 8 elements of sample data into savings_account with different amounts and interest rates*/
	INSERT INTO savings_account (account_id, current_balance, interest_rate)
	VALUES
	    (1, 1000.00, 0.01),
	    (2, 2000.00, 0.02),
	    (3, 3000.00, 0.03),
	    (4, 4000.00, 0.04),
	    (5, 5000.00, 0.05),
	    (6, 6000.00, 0.06),
	    (7, 7000.00, 0.07),
	    (8, 8000.00, 0.08);
2022-12-09 11:48:33.775 GMT [11109] ERROR:  relation "credit_account" does not exist at character 128
2022-12-09 11:48:33.775 GMT [11109] STATEMENT:  /*insert 8 elements of sample data into credit_account with different amounts, credit limits, and interest rates*/
	INSERT INTO credit_account (account_id, current_balance, credit_limit, interest_rate)
	VALUES
	    (1, 1000.00, 10000.00, 0.01),
	    (2, 2000.00, 20000.00, 0.02),
	    (3, 3000.00, 30000.00, 0.03),
	    (4, 4000.00, 40000.00, 0.04),
	    (5, 5000.00, 50000.00, 0.05),
	    (6, 6000.00, 60000.00, 0.06),
	    (7, 7000.00, 70000.00, 0.07),
	    (8, 8000.00, 80000.00, 0.08);
2022-12-09 11:48:33.775 GMT [11109] ERROR:  relation "debit_account" does not exist at character 130
2022-12-09 11:48:33.775 GMT [11109] STATEMENT:  /*insert 8 elements of sample data into debit_account with different amounts, overdraft limits, and interest rates*/
	INSERT INTO debit_account (account_id, current_balance, overdraft_limit, interest_rate)
	VALUES
	    (1, 1000.00, 10000.00, 0.01),
	    (2, 2000.00, 20000.00, 0.02),
	    (3, 3000.00, 30000.00, 0.03),
	    (4, 4000.00, 40000.00, 0.04),
	    (5, 5000.00, 50000.00, 0.05),
	    (6, 6000.00, 60000.00, 0.06),
	    (7, 7000.00, 70000.00, 0.07),
	    (8, 8000.00, 80000.00, 0.08);
2022-12-09 11:48:33.776 GMT [11109] ERROR:  relation "loan" does not exist at character 141
2022-12-09 11:48:33.776 GMT [11109] STATEMENT:  /*insert 8 elements of sample data into loan with different amounts, interest rates, loan terms, and loan start and end dates*/
	INSERT INTO loan (account_id, loan_amount, interest_rate, loan_term, loan_start_date, loan_end_date)
	VALUES
	    (1, 1000.00, 0.01, 12, '2019-01-01', '2020-01-01'),
	    (2, 2000.00, 0.02, 12, '2019-01-01', '2020-01-01'),
	    (3, 3000.00, 0.03, 12, '2019-01-01', '2020-01-01'),
	    (4, 4000.00, 0.04, 12, '2019-01-01', '2020-01-01'),
	    (5, 5000.00, 0.05, 12, '2019-01-01', '2020-01-01'),
	    (6, 6000.00, 0.06, 12, '2019-01-01', '2020-01-01'),
	    (7, 7000.00, 0.07, 12, '2019-01-01', '2020-01-01'),
	    (8, 8000.00, 0.08, 12, '2019-01-01', '2020-01-01');
2022-12-09 11:48:58.066 GMT [11255] ERROR:  schema "online_banking" already exists
2022-12-09 11:48:58.066 GMT [11255] STATEMENT:  /*create schema*/
	CREATE SCHEMA online_banking;
2022-12-09 11:48:58.069 GMT [11255] ERROR:  relation "customer" already exists
2022-12-09 11:48:58.069 GMT [11255] STATEMENT:  /*create a table customer with their address as an array*/
	CREATE TABLE customer (
	    id SERIAL PRIMARY KEY,
	    init_date DATE,
	    first_name VARCHAR(255),
	    last_name VARCHAR(255),
	    date_of_birth DATE,
	    phone_number VARCHAR(255),
	    address VARCHAR(255) []
	);
2022-12-09 11:48:58.075 GMT [11255] ERROR:  relation "account" does not exist
2022-12-09 11:48:58.075 GMT [11255] STATEMENT:  /*create a table account with a foreign key to customer*/
	
	
	
	
	
	/*create a table savings_account with a foreign key to account*/
	CREATE TABLE savings_account (
	    id SERIAL PRIMARY KEY,
	    account_id INTEGER REFERENCES account(id),
	    current_balance NUMERIC(10,2),
	    interest_rate NUMERIC(5,2)
	);
2022-12-09 11:48:58.079 GMT [11255] ERROR:  relation "account" does not exist
2022-12-09 11:48:58.079 GMT [11255] STATEMENT:  /*create a table credit_account with a foreign key to account*/
	CREATE TABLE credit_account (
	    id SERIAL PRIMARY KEY,
	    account_id INTEGER REFERENCES account(id),
	    current_balance NUMERIC(10,2),
	    credit_limit NUMERIC(10,2),
	    interest_rate NUMERIC(5,2)
	);
2022-12-09 11:48:58.084 GMT [11255] ERROR:  relation "credit_account" does not exist
2022-12-09 11:48:58.084 GMT [11255] STATEMENT:  /*create a table credit_account_application with a foreign key to credit_account*/
	CREATE TABLE credit_account_application (
	    id SERIAL PRIMARY KEY,
	    credit_account_id INTEGER REFERENCES credit_account(id),
	    is_approved BOOLEAN,
	    application_date DATE,
	    status VARCHAR(255)
	);
2022-12-09 11:48:58.090 GMT [11255] ERROR:  relation "account" does not exist
2022-12-09 11:48:58.090 GMT [11255] STATEMENT:  /*create a table debit_account with a foreign key to account*/
	CREATE TABLE debit_account (
	    id SERIAL PRIMARY KEY,
	    account_id INTEGER REFERENCES account(id),
	    current_balance NUMERIC(10,2),
	    overdraft_limit NUMERIC(10,2),
	    interest_rate NUMERIC(5,2)
	);
2022-12-09 11:48:58.094 GMT [11255] ERROR:  relation "account" does not exist
2022-12-09 11:48:58.094 GMT [11255] STATEMENT:  /*create a table loan with a foreign key to account*/
	CREATE TABLE loan (
	    id SERIAL PRIMARY KEY,
	    account_id INTEGER REFERENCES account(id),
	    current_balance NUMERIC(10,2),
	    interest_rate NUMERIC(5,2),
	    loan_amount NUMERIC(10,2),
	    loan_term INTEGER,
	    loan_start_date DATE,
	    loan_end_date DATE
	);
2022-12-09 11:48:58.103 GMT [11255] ERROR:  relation "loan" does not exist
2022-12-09 11:48:58.103 GMT [11255] STATEMENT:  /*create a table loan_application with a foreign key to loan*/
	CREATE TABLE loan_application (
	    id SERIAL PRIMARY KEY,
	    loan_id INTEGER REFERENCES loan(id),
	    is_approved BOOLEAN,
	    application_date DATE,
	    status VARCHAR(255)
	);
2022-12-09 11:48:58.107 GMT [11255] ERROR:  relation "account" does not exist
2022-12-09 11:48:58.107 GMT [11255] STATEMENT:  /*create a table transaction with a foreign key to account*/
	CREATE TABLE transaction (
	    id SERIAL PRIMARY KEY,
	    account_id INTEGER REFERENCES account(id),
	    transaction_date DATE,
	    transaction_type VARCHAR(255),
	    transaction_amount NUMERIC(10,2)
	);
2022-12-09 11:48:58.112 GMT [11255] ERROR:  relation "account" does not exist
2022-12-09 11:48:58.112 GMT [11255] STATEMENT:  /*create a table to log all actions*/
	CREATE TABLE log (
	    id SERIAL PRIMARY KEY,
	    date DATE,
	    action VARCHAR(255),
	    customer_id INTEGER REFERENCES customer(id),
	    account_id INTEGER REFERENCES account(id)
	);
2022-12-09 11:48:58.114 GMT [11255] ERROR:  relation "account" does not exist at character 64
2022-12-09 11:48:58.114 GMT [11255] STATEMENT:  /*insert 10 elements of sample data into account*/
	INSERT INTO account (init_date, customer_id)
	VALUES
	    ('2019-01-01', 1),
	    ('2019-01-01', 2),
	    ('2019-01-01', 3),
	    ('2019-01-01', 4),
	    ('2019-01-01', 5),
	    ('2019-01-01', 6),
	    ('2019-01-01', 7),
	    ('2019-01-01', 8),
	    ('2019-01-01', 9),
	    ('2019-01-01', 10);
2022-12-09 11:48:58.115 GMT [11255] ERROR:  relation "savings_account" does not exist at character 113
2022-12-09 11:48:58.115 GMT [11255] STATEMENT:  /*insert 8 elements of sample data into savings_account with different amounts and interest rates*/
	INSERT INTO savings_account (account_id, current_balance, interest_rate)
	VALUES
	    (1, 1000.00, 0.01),
	    (2, 2000.00, 0.02),
	    (3, 3000.00, 0.03),
	    (4, 4000.00, 0.04),
	    (5, 5000.00, 0.05),
	    (6, 6000.00, 0.06),
	    (7, 7000.00, 0.07),
	    (8, 8000.00, 0.08);
2022-12-09 11:48:58.115 GMT [11255] ERROR:  relation "credit_account" does not exist at character 128
2022-12-09 11:48:58.115 GMT [11255] STATEMENT:  /*insert 8 elements of sample data into credit_account with different amounts, credit limits, and interest rates*/
	INSERT INTO credit_account (account_id, current_balance, credit_limit, interest_rate)
	VALUES
	    (1, 1000.00, 10000.00, 0.01),
	    (2, 2000.00, 20000.00, 0.02),
	    (3, 3000.00, 30000.00, 0.03),
	    (4, 4000.00, 40000.00, 0.04),
	    (5, 5000.00, 50000.00, 0.05),
	    (6, 6000.00, 60000.00, 0.06),
	    (7, 7000.00, 70000.00, 0.07),
	    (8, 8000.00, 80000.00, 0.08);
2022-12-09 11:48:58.115 GMT [11255] ERROR:  relation "debit_account" does not exist at character 130
2022-12-09 11:48:58.115 GMT [11255] STATEMENT:  /*insert 8 elements of sample data into debit_account with different amounts, overdraft limits, and interest rates*/
	INSERT INTO debit_account (account_id, current_balance, overdraft_limit, interest_rate)
	VALUES
	    (1, 1000.00, 10000.00, 0.01),
	    (2, 2000.00, 20000.00, 0.02),
	    (3, 3000.00, 30000.00, 0.03),
	    (4, 4000.00, 40000.00, 0.04),
	    (5, 5000.00, 50000.00, 0.05),
	    (6, 6000.00, 60000.00, 0.06),
	    (7, 7000.00, 70000.00, 0.07),
	    (8, 8000.00, 80000.00, 0.08);
2022-12-09 11:48:58.115 GMT [11255] ERROR:  relation "loan" does not exist at character 141
2022-12-09 11:48:58.115 GMT [11255] STATEMENT:  /*insert 8 elements of sample data into loan with different amounts, interest rates, loan terms, and loan start and end dates*/
	INSERT INTO loan (account_id, loan_amount, interest_rate, loan_term, loan_start_date, loan_end_date)
	VALUES
	    (1, 1000.00, 0.01, 12, '2019-01-01', '2020-01-01'),
	    (2, 2000.00, 0.02, 12, '2019-01-01', '2020-01-01'),
	    (3, 3000.00, 0.03, 12, '2019-01-01', '2020-01-01'),
	    (4, 4000.00, 0.04, 12, '2019-01-01', '2020-01-01'),
	    (5, 5000.00, 0.05, 12, '2019-01-01', '2020-01-01'),
	    (6, 6000.00, 0.06, 12, '2019-01-01', '2020-01-01'),
	    (7, 7000.00, 0.07, 12, '2019-01-01', '2020-01-01'),
	    (8, 8000.00, 0.08, 12, '2019-01-01', '2020-01-01');
2022-12-09 11:49:38.773 GMT [11430] ERROR:  schema "online_banking" already exists
2022-12-09 11:49:38.773 GMT [11430] STATEMENT:  /*create schema*/
	CREATE SCHEMA online_banking;
2022-12-09 11:49:38.776 GMT [11430] ERROR:  relation "customer" already exists
2022-12-09 11:49:38.776 GMT [11430] STATEMENT:  /*create a table customer with their address as an array*/
	CREATE TABLE customer (
	    id SERIAL PRIMARY KEY,
	    init_date DATE,
	    first_name VARCHAR(255),
	    last_name VARCHAR(255),
	    date_of_birth DATE,
	    phone_number VARCHAR(255),
	    address VARCHAR(255) []
	);
2022-12-09 11:49:38.776 GMT [11430] ERROR:  syntax error at or near ")" at character 178
2022-12-09 11:49:38.776 GMT [11430] STATEMENT:  /*create a table account with a foreign key to customer*/
	CREATE TABLE account (
	    id SERIAL PRIMARY KEY,
	    init_date DATE,
	    customer_id INTEGER REFERENCES customer(id),
	);
2022-12-09 11:49:38.783 GMT [11430] ERROR:  relation "account" does not exist
2022-12-09 11:49:38.783 GMT [11430] STATEMENT:  /*create a table savings_account with a foreign key to account*/
	CREATE TABLE savings_account (
	    id SERIAL PRIMARY KEY,
	    account_id INTEGER REFERENCES account(id),
	    current_balance NUMERIC(10,2),
	    interest_rate NUMERIC(5,2)
	);
2022-12-09 11:49:38.788 GMT [11430] ERROR:  relation "account" does not exist
2022-12-09 11:49:38.788 GMT [11430] STATEMENT:  /*create a table credit_account with a foreign key to account*/
	CREATE TABLE credit_account (
	    id SERIAL PRIMARY KEY,
	    account_id INTEGER REFERENCES account(id),
	    current_balance NUMERIC(10,2),
	    credit_limit NUMERIC(10,2),
	    interest_rate NUMERIC(5,2)
	);
2022-12-09 11:49:38.792 GMT [11430] ERROR:  relation "credit_account" does not exist
2022-12-09 11:49:38.792 GMT [11430] STATEMENT:  /*create a table credit_account_application with a foreign key to credit_account*/
	CREATE TABLE credit_account_application (
	    id SERIAL PRIMARY KEY,
	    credit_account_id INTEGER REFERENCES credit_account(id),
	    is_approved BOOLEAN,
	    application_date DATE,
	    status VARCHAR(255)
	);
2022-12-09 11:49:38.798 GMT [11430] ERROR:  relation "account" does not exist
2022-12-09 11:49:38.798 GMT [11430] STATEMENT:  /*create a table debit_account with a foreign key to account*/
	CREATE TABLE debit_account (
	    id SERIAL PRIMARY KEY,
	    account_id INTEGER REFERENCES account(id),
	    current_balance NUMERIC(10,2),
	    overdraft_limit NUMERIC(10,2),
	    interest_rate NUMERIC(5,2)
	);
2022-12-09 11:49:38.802 GMT [11430] ERROR:  relation "account" does not exist
2022-12-09 11:49:38.802 GMT [11430] STATEMENT:  /*create a table loan with a foreign key to account*/
	CREATE TABLE loan (
	    id SERIAL PRIMARY KEY,
	    account_id INTEGER REFERENCES account(id),
	    current_balance NUMERIC(10,2),
	    interest_rate NUMERIC(5,2),
	    loan_amount NUMERIC(10,2),
	    loan_term INTEGER,
	    loan_start_date DATE,
	    loan_end_date DATE
	);
2022-12-09 11:49:38.806 GMT [11430] ERROR:  relation "loan" does not exist
2022-12-09 11:49:38.806 GMT [11430] STATEMENT:  /*create a table loan_application with a foreign key to loan*/
	CREATE TABLE loan_application (
	    id SERIAL PRIMARY KEY,
	    loan_id INTEGER REFERENCES loan(id),
	    is_approved BOOLEAN,
	    application_date DATE,
	    status VARCHAR(255)
	);
2022-12-09 11:49:38.812 GMT [11430] ERROR:  relation "account" does not exist
2022-12-09 11:49:38.812 GMT [11430] STATEMENT:  /*create a table transaction with a foreign key to account*/
	CREATE TABLE transaction (
	    id SERIAL PRIMARY KEY,
	    account_id INTEGER REFERENCES account(id),
	    transaction_date DATE,
	    transaction_type VARCHAR(255),
	    transaction_amount NUMERIC(10,2)
	);
2022-12-09 11:49:38.817 GMT [11430] ERROR:  relation "account" does not exist
2022-12-09 11:49:38.817 GMT [11430] STATEMENT:  /*create a table to log all actions*/
	CREATE TABLE log (
	    id SERIAL PRIMARY KEY,
	    date DATE,
	    action VARCHAR(255),
	    customer_id INTEGER REFERENCES customer(id),
	    account_id INTEGER REFERENCES account(id)
	);
2022-12-09 11:49:38.820 GMT [11430] ERROR:  relation "account" does not exist at character 64
2022-12-09 11:49:38.820 GMT [11430] STATEMENT:  /*insert 10 elements of sample data into account*/
	INSERT INTO account (init_date, customer_id)
	VALUES
	    ('2019-01-01', 1),
	    ('2019-01-01', 2),
	    ('2019-01-01', 3),
	    ('2019-01-01', 4),
	    ('2019-01-01', 5),
	    ('2019-01-01', 6),
	    ('2019-01-01', 7),
	    ('2019-01-01', 8),
	    ('2019-01-01', 9),
	    ('2019-01-01', 10);
2022-12-09 11:49:38.820 GMT [11430] ERROR:  relation "savings_account" does not exist at character 113
2022-12-09 11:49:38.820 GMT [11430] STATEMENT:  /*insert 8 elements of sample data into savings_account with different amounts and interest rates*/
	INSERT INTO savings_account (account_id, current_balance, interest_rate)
	VALUES
	    (1, 1000.00, 0.01),
	    (2, 2000.00, 0.02),
	    (3, 3000.00, 0.03),
	    (4, 4000.00, 0.04),
	    (5, 5000.00, 0.05),
	    (6, 6000.00, 0.06),
	    (7, 7000.00, 0.07),
	    (8, 8000.00, 0.08);
2022-12-09 11:49:38.820 GMT [11430] ERROR:  relation "credit_account" does not exist at character 128
2022-12-09 11:49:38.820 GMT [11430] STATEMENT:  /*insert 8 elements of sample data into credit_account with different amounts, credit limits, and interest rates*/
	INSERT INTO credit_account (account_id, current_balance, credit_limit, interest_rate)
	VALUES
	    (1, 1000.00, 10000.00, 0.01),
	    (2, 2000.00, 20000.00, 0.02),
	    (3, 3000.00, 30000.00, 0.03),
	    (4, 4000.00, 40000.00, 0.04),
	    (5, 5000.00, 50000.00, 0.05),
	    (6, 6000.00, 60000.00, 0.06),
	    (7, 7000.00, 70000.00, 0.07),
	    (8, 8000.00, 80000.00, 0.08);
2022-12-09 11:49:38.821 GMT [11430] ERROR:  relation "debit_account" does not exist at character 130
2022-12-09 11:49:38.821 GMT [11430] STATEMENT:  /*insert 8 elements of sample data into debit_account with different amounts, overdraft limits, and interest rates*/
	INSERT INTO debit_account (account_id, current_balance, overdraft_limit, interest_rate)
	VALUES
	    (1, 1000.00, 10000.00, 0.01),
	    (2, 2000.00, 20000.00, 0.02),
	    (3, 3000.00, 30000.00, 0.03),
	    (4, 4000.00, 40000.00, 0.04),
	    (5, 5000.00, 50000.00, 0.05),
	    (6, 6000.00, 60000.00, 0.06),
	    (7, 7000.00, 70000.00, 0.07),
	    (8, 8000.00, 80000.00, 0.08);
2022-12-09 11:49:38.821 GMT [11430] ERROR:  relation "loan" does not exist at character 141
2022-12-09 11:49:38.821 GMT [11430] STATEMENT:  /*insert 8 elements of sample data into loan with different amounts, interest rates, loan terms, and loan start and end dates*/
	INSERT INTO loan (account_id, loan_amount, interest_rate, loan_term, loan_start_date, loan_end_date)
	VALUES
	    (1, 1000.00, 0.01, 12, '2019-01-01', '2020-01-01'),
	    (2, 2000.00, 0.02, 12, '2019-01-01', '2020-01-01'),
	    (3, 3000.00, 0.03, 12, '2019-01-01', '2020-01-01'),
	    (4, 4000.00, 0.04, 12, '2019-01-01', '2020-01-01'),
	    (5, 5000.00, 0.05, 12, '2019-01-01', '2020-01-01'),
	    (6, 6000.00, 0.06, 12, '2019-01-01', '2020-01-01'),
	    (7, 7000.00, 0.07, 12, '2019-01-01', '2020-01-01'),
	    (8, 8000.00, 0.08, 12, '2019-01-01', '2020-01-01');
2022-12-09 11:49:58.485 GMT [11533] ERROR:  schema "online_banking" already exists
2022-12-09 11:49:58.485 GMT [11533] STATEMENT:  /*create schema*/
	CREATE SCHEMA online_banking;
2022-12-09 11:49:58.487 GMT [11533] ERROR:  relation "customer" already exists
2022-12-09 11:49:58.487 GMT [11533] STATEMENT:  /*create a table customer with their address as an array*/
	CREATE TABLE customer (
	    id SERIAL PRIMARY KEY,
	    init_date DATE,
	    first_name VARCHAR(255),
	    last_name VARCHAR(255),
	    date_of_birth DATE,
	    phone_number VARCHAR(255),
	    address VARCHAR(255) []
	);
2022-12-09 11:55:01.374 GMT [12612] ERROR:  relation "account" does not exist at character 15
2022-12-09 11:55:01.374 GMT [12612] STATEMENT:  SELECT * FROM account;
2022-12-09 11:56:10.718 GMT [8796] LOG:  received fast shutdown request
2022-12-09 11:56:10.720 GMT [8796] LOG:  aborting any active transactions
2022-12-09 11:56:10.725 GMT [8796] LOG:  background worker "logical replication launcher" (PID 8803) exited with exit code 1
2022-12-09 11:56:10.727 GMT [8798] LOG:  shutting down
2022-12-09 11:56:10.747 GMT [8796] LOG:  database system is shut down
2022-12-09 11:56:22.126 GMT [13056] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2022-12-09 11:56:22.126 GMT [13056] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2022-12-09 11:56:22.128 GMT [13056] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2022-12-09 11:56:22.134 GMT [13057] LOG:  database system was shut down at 2022-12-09 11:56:21 GMT
2022-12-09 11:56:22.139 GMT [13056] LOG:  database system is ready to accept connections
2022-12-09 13:53:06.385 GMT [25292] ERROR:  syntax error at or near "NOT" at character 49
2022-12-09 13:53:06.385 GMT [25292] STATEMENT:  /*Drop all tables if they exist*/
	DROP TABLE IF NOT EXISTS customer;
2022-12-09 13:53:06.386 GMT [25292] ERROR:  syntax error at or near "NOT" at character 15
2022-12-09 13:53:06.386 GMT [25292] STATEMENT:  DROP TABLE IF NOT EXISTS account;
2022-12-09 13:53:06.386 GMT [25292] ERROR:  syntax error at or near "NOT" at character 15
2022-12-09 13:53:06.386 GMT [25292] STATEMENT:  DROP TABLE IF NOT EXISTS savings_account;
2022-12-09 13:53:06.386 GMT [25292] ERROR:  syntax error at or near "NOT" at character 15
2022-12-09 13:53:06.386 GMT [25292] STATEMENT:  DROP TABLE IF NOT EXISTS credit_account;
2022-12-09 13:53:06.387 GMT [25292] ERROR:  syntax error at or near "NOT" at character 15
2022-12-09 13:53:06.387 GMT [25292] STATEMENT:  DROP TABLE IF NOT EXISTS credit_account_application;
2022-12-09 13:53:06.387 GMT [25292] ERROR:  syntax error at or near "NOT" at character 15
2022-12-09 13:53:06.387 GMT [25292] STATEMENT:  DROP TABLE IF NOT EXISTS debit_account;
2022-12-09 13:53:06.387 GMT [25292] ERROR:  syntax error at or near "NOT" at character 15
2022-12-09 13:53:06.387 GMT [25292] STATEMENT:  DROP TABLE IF NOT EXISTS loan;
2022-12-09 13:53:06.387 GMT [25292] ERROR:  syntax error at or near "NOT" at character 15
2022-12-09 13:53:06.387 GMT [25292] STATEMENT:  DROP TABLE IF NOT EXISTS loan_application;
2022-12-09 13:53:06.387 GMT [25292] ERROR:  syntax error at or near "NOT" at character 15
2022-12-09 13:53:06.387 GMT [25292] STATEMENT:  DROP TABLE IF NOT EXISTS transaction;
2022-12-09 13:53:06.387 GMT [25292] ERROR:  syntax error at or near "NOT" at character 15
2022-12-09 13:53:06.387 GMT [25292] STATEMENT:  DROP TABLE IF NOT EXISTS log;
2022-12-09 13:53:13.162 GMT [25363] ERROR:  syntax error at or near "NOT" at character 49
2022-12-09 13:53:13.162 GMT [25363] STATEMENT:  /*Drop all tables if they exist*/
	DROP TABLE IF NOT EXISTS customer;
2022-12-09 13:53:13.162 GMT [25363] ERROR:  syntax error at or near "NOT" at character 15
2022-12-09 13:53:13.162 GMT [25363] STATEMENT:  DROP TABLE IF NOT EXISTS account;
2022-12-09 13:53:13.162 GMT [25363] ERROR:  syntax error at or near "NOT" at character 15
2022-12-09 13:53:13.162 GMT [25363] STATEMENT:  DROP TABLE IF NOT EXISTS savings_account;
2022-12-09 13:53:13.163 GMT [25363] ERROR:  syntax error at or near "NOT" at character 15
2022-12-09 13:53:13.163 GMT [25363] STATEMENT:  DROP TABLE IF NOT EXISTS credit_account;
2022-12-09 13:53:13.163 GMT [25363] ERROR:  syntax error at or near "NOT" at character 15
2022-12-09 13:53:13.163 GMT [25363] STATEMENT:  DROP TABLE IF NOT EXISTS credit_account_application;
2022-12-09 13:53:13.163 GMT [25363] ERROR:  syntax error at or near "NOT" at character 15
2022-12-09 13:53:13.163 GMT [25363] STATEMENT:  DROP TABLE IF NOT EXISTS debit_account;
2022-12-09 13:53:13.163 GMT [25363] ERROR:  syntax error at or near "NOT" at character 15
2022-12-09 13:53:13.163 GMT [25363] STATEMENT:  DROP TABLE IF NOT EXISTS loan;
2022-12-09 13:53:13.164 GMT [25363] ERROR:  syntax error at or near "NOT" at character 15
2022-12-09 13:53:13.164 GMT [25363] STATEMENT:  DROP TABLE IF NOT EXISTS loan_application;
2022-12-09 13:53:13.164 GMT [25363] ERROR:  syntax error at or near "NOT" at character 15
2022-12-09 13:53:13.164 GMT [25363] STATEMENT:  DROP TABLE IF NOT EXISTS transaction;
2022-12-09 13:53:13.164 GMT [25363] ERROR:  syntax error at or near "NOT" at character 15
2022-12-09 13:53:13.164 GMT [25363] STATEMENT:  DROP TABLE IF NOT EXISTS log;
2022-12-09 13:57:05.405 GMT [26125] ERROR:  cannot drop table customer because other objects depend on it
2022-12-09 13:57:05.405 GMT [26125] DETAIL:  constraint account_customer_id_fkey on table account depends on table customer
	constraint log_customer_id_fkey on table log depends on table customer
2022-12-09 13:57:05.405 GMT [26125] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2022-12-09 13:57:05.405 GMT [26125] STATEMENT:  /*Drop all tables if they exist*/
	DROP TABLE IF EXISTS customer;
2022-12-09 13:57:05.407 GMT [26125] ERROR:  cannot drop table account because other objects depend on it
2022-12-09 13:57:05.407 GMT [26125] DETAIL:  constraint savings_account_account_id_fkey on table savings_account depends on table account
	constraint credit_account_account_id_fkey on table credit_account depends on table account
	constraint debit_account_account_id_fkey on table debit_account depends on table account
	constraint loan_account_id_fkey on table loan depends on table account
	constraint transaction_account_id_fkey on table transaction depends on table account
	constraint log_account_id_fkey on table log depends on table account
2022-12-09 13:57:05.407 GMT [26125] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2022-12-09 13:57:05.407 GMT [26125] STATEMENT:  DROP TABLE IF EXISTS account;
2022-12-09 13:57:05.416 GMT [26125] ERROR:  cannot drop table credit_account because other objects depend on it
2022-12-09 13:57:05.416 GMT [26125] DETAIL:  constraint credit_account_application_credit_account_id_fkey on table credit_account_application depends on table credit_account
2022-12-09 13:57:05.416 GMT [26125] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2022-12-09 13:57:05.416 GMT [26125] STATEMENT:  DROP TABLE IF EXISTS credit_account;
2022-12-09 13:57:05.420 GMT [26125] ERROR:  cannot drop table loan because other objects depend on it
2022-12-09 13:57:05.420 GMT [26125] DETAIL:  constraint loan_application_loan_id_fkey on table loan_application depends on table loan
2022-12-09 13:57:05.420 GMT [26125] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2022-12-09 13:57:05.420 GMT [26125] STATEMENT:  DROP TABLE IF EXISTS loan;
2022-12-09 14:21:00.609 GMT [30632] ERROR:  cannot drop table customer because other objects depend on it
2022-12-09 14:21:00.609 GMT [30632] DETAIL:  constraint account_customer_id_fkey on table account depends on table customer
	constraint log_customer_id_fkey on table log depends on table customer
2022-12-09 14:21:00.609 GMT [30632] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2022-12-09 14:21:00.609 GMT [30632] STATEMENT:  /*Drop all tables if they exist*/
	DROP TABLE IF EXISTS customer;
2022-12-09 14:21:00.611 GMT [30632] ERROR:  cannot drop table account because other objects depend on it
2022-12-09 14:21:00.611 GMT [30632] DETAIL:  constraint credit_account_account_id_fkey on table credit_account depends on table account
	constraint loan_account_id_fkey on table loan depends on table account
	constraint savings_account_account_id_fkey on table savings_account depends on table account
	constraint debit_account_account_id_fkey on table debit_account depends on table account
	constraint transaction_account_id_fkey on table transaction depends on table account
	constraint log_account_id_fkey on table log depends on table account
2022-12-09 14:21:00.611 GMT [30632] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2022-12-09 14:21:00.611 GMT [30632] STATEMENT:  DROP TABLE IF EXISTS account;
2022-12-09 14:21:00.615 GMT [30632] ERROR:  cannot drop table credit_account because other objects depend on it
2022-12-09 14:21:00.615 GMT [30632] DETAIL:  constraint credit_account_application_credit_account_id_fkey on table credit_account_application depends on table credit_account
2022-12-09 14:21:00.615 GMT [30632] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2022-12-09 14:21:00.615 GMT [30632] STATEMENT:  DROP TABLE IF EXISTS credit_account;
2022-12-09 14:21:00.620 GMT [30632] ERROR:  cannot drop table loan because other objects depend on it
2022-12-09 14:21:00.620 GMT [30632] DETAIL:  constraint loan_application_loan_id_fkey on table loan_application depends on table loan
2022-12-09 14:21:00.620 GMT [30632] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2022-12-09 14:21:00.620 GMT [30632] STATEMENT:  DROP TABLE IF EXISTS loan;
2022-12-09 14:23:19.655 GMT [13056] LOG:  received fast shutdown request
2022-12-09 14:23:19.660 GMT [13056] LOG:  aborting any active transactions
2022-12-09 14:23:19.664 GMT [13056] LOG:  background worker "logical replication launcher" (PID 13063) exited with exit code 1
2022-12-09 14:23:19.665 GMT [13058] LOG:  shutting down
2022-12-09 14:23:19.695 GMT [13056] LOG:  database system is shut down
2022-12-09 14:23:26.307 GMT [31154] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2022-12-09 14:23:26.307 GMT [31154] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2022-12-09 14:23:26.309 GMT [31154] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2022-12-09 14:23:26.315 GMT [31155] LOG:  database system was shut down at 2022-12-09 14:23:26 GMT
2022-12-09 14:23:26.320 GMT [31154] LOG:  database system is ready to accept connections
2022-12-09 15:40:56.326 GMT [31154] LOG:  received smart shutdown request
2022-12-09 15:40:56.344 GMT [31154] LOG:  received SIGHUP, reloading configuration files
2022-12-09 15:40:56.371 GMT [31154] LOG:  background worker "logical replication launcher" (PID 31161) exited with exit code 1
2022-12-09 15:40:56.397 GMT [31156] LOG:  shutting down
2022-12-09 15:40:56.413 GMT [31154] LOG:  database system is shut down
2022-12-21 10:45:29.262 GMT [9903] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2022-12-21 10:45:29.265 GMT [9903] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2022-12-21 10:45:29.266 GMT [9903] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2022-12-21 10:45:29.270 GMT [9904] LOG:  database system was shut down at 2022-12-21 10:45:29 GMT
2022-12-21 10:45:29.275 GMT [9903] LOG:  database system is ready to accept connections
2022-12-21 10:45:29.838 GMT [9929] ERROR:  syntax error at or near "passwd" at character 329
2022-12-21 10:45:29.838 GMT [9929] STATEMENT:  CREATE OR REPLACE FUNCTION add_account(customer_id INTEGER, username TEXT, passwd TEXT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	BEGIN
	    INSERT INTO account (init_date, customer_id, username, passwd)
	    VALUES (current_date, customer_id, username, DIGEST(passwd, 'sha256'));
	    CREATE ROLE username WITH LOGIN PASSWORD passwd;
	    INSERT INTO log (log_date, log_message, customer_id)
	    VALUES (current_date, 'Account added', customer_id);
	    passed := true;
	    RETURN passed;
	END;
	$$ LANGUAGE plpgsql;
2022-12-21 11:19:48.349 GMT [9903] LOG:  received fast shutdown request
2022-12-21 11:19:48.351 GMT [9903] LOG:  aborting any active transactions
2022-12-21 11:19:48.355 GMT [9903] LOG:  background worker "logical replication launcher" (PID 9910) exited with exit code 1
2022-12-21 11:19:48.356 GMT [9905] LOG:  shutting down
2022-12-21 11:19:48.369 GMT [9903] LOG:  database system is shut down
2022-12-21 11:19:58.223 GMT [15790] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2022-12-21 11:19:58.223 GMT [15790] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2022-12-21 11:19:58.224 GMT [15790] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2022-12-21 11:19:58.228 GMT [15791] LOG:  database system was shut down at 2022-12-21 11:19:57 GMT
2022-12-21 11:19:58.234 GMT [15790] LOG:  database system is ready to accept connections
2022-12-21 11:20:46.015 GMT [15790] LOG:  received fast shutdown request
2022-12-21 11:20:46.016 GMT [15790] LOG:  aborting any active transactions
2022-12-21 11:20:46.019 GMT [15790] LOG:  background worker "logical replication launcher" (PID 15797) exited with exit code 1
2022-12-21 11:20:46.023 GMT [15792] LOG:  shutting down
2022-12-21 11:20:46.056 GMT [15790] LOG:  database system is shut down
2022-12-21 11:20:49.043 GMT [16071] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2022-12-21 11:20:49.044 GMT [16071] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2022-12-21 11:20:49.045 GMT [16071] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2022-12-21 11:20:49.049 GMT [16072] LOG:  database system was shut down at 2022-12-21 11:20:48 GMT
2022-12-21 11:20:49.055 GMT [16071] LOG:  database system is ready to accept connections
2022-12-21 11:20:49.606 GMT [16115] ERROR:  syntax error at or near "DIGEST" at character 329
2022-12-21 11:20:49.606 GMT [16115] STATEMENT:  CREATE OR REPLACE FUNCTION add_account(customer_id INTEGER, username TEXT, passwd TEXT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	BEGIN
	    INSERT INTO account (init_date, customer_id, username, passwd)
	    VALUES (current_date, customer_id, username, DIGEST(passwd, 'sha256'));
	    CREATE ROLE username WITH LOGIN PASSWORD DIGEST(passwd, 'sha256');
	    INSERT INTO log (log_date, log_message, customer_id)
	    VALUES (current_date, 'Account added', customer_id);
	    passed := true;
	    RETURN passed;
	END;
	$$ LANGUAGE plpgsql;
2022-12-22 13:48:08.835 GMT [16071] LOG:  received smart shutdown request
2022-12-22 13:48:08.842 GMT [16071] LOG:  background worker "logical replication launcher" (PID 16078) exited with exit code 1
2022-12-22 13:48:08.848 GMT [16071] LOG:  received SIGHUP, reloading configuration files
2022-12-22 13:48:08.855 GMT [16073] LOG:  shutting down
2022-12-22 13:48:08.903 GMT [16071] LOG:  database system is shut down
2022-12-23 10:19:55.804 GMT [5354] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2022-12-23 10:19:55.807 GMT [5354] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2022-12-23 10:19:55.809 GMT [5354] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2022-12-23 10:19:55.813 GMT [5355] LOG:  database system was shut down at 2022-12-23 10:19:55 GMT
2022-12-23 10:19:55.820 GMT [5354] LOG:  database system is ready to accept connections
2022-12-23 10:19:56.580 GMT [5388] ERROR:  "passed" is not a known variable at character 405
2022-12-23 10:19:56.580 GMT [5388] STATEMENT:  CREATE OR REPLACE FUNCTION add_account_role(username TEXT, passwd TEXT)
	RETURNS BOOLEAN AS $$
	BEGIN
	    IF NOT EXISTS (SELECT FROM pg_catalog.pg_roles WHERE rolname = username) THEN
	        EXECUTE format(
	            'CREATE USER %I WITH
	                LOGIN
	                PASSWORD %L'
	            , username
	            , passwd
	        );
	        RAISE NOTICE 'CREATED USER "%"', username;
	        passed := true;
	        RETURN passed;
	    ELSE
	        RAISE NOTICE 'USER ALREADY EXISTS';
	    END IF;
	END;
	$$ LANGUAGE plpgsql;
2022-12-23 10:19:56.581 GMT [5388] ERROR:  syntax error at or near "DIGEST" at character 329
2022-12-23 10:19:56.581 GMT [5388] STATEMENT:  CREATE OR REPLACE FUNCTION add_account(customer_id INTEGER, username TEXT, passwd TEXT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	BEGIN
	    INSERT INTO account (init_date, customer_id, username, passwd)
	    VALUES (current_date, customer_id, username, DIGEST(passwd, 'sha256'));
	    CREATE ROLE username WITH LOGIN PASSWORD DIGEST(passwd, 'sha256');
	    SELECT add_account_role()
	    INSERT INTO log (log_date, log_message, customer_id)
	    VALUES (current_date, 'Account added', customer_id);
	    passed := true;
	    RETURN passed;
	END;
	$$ LANGUAGE plpgsql;
2022-12-23 10:23:50.206 GMT [5354] LOG:  received fast shutdown request
2022-12-23 10:23:50.208 GMT [5354] LOG:  aborting any active transactions
2022-12-23 10:23:50.215 GMT [5354] LOG:  background worker "logical replication launcher" (PID 5361) exited with exit code 1
2022-12-23 10:23:50.216 GMT [5356] LOG:  shutting down
2022-12-23 10:23:50.265 GMT [5354] LOG:  database system is shut down
2022-12-23 10:23:53.105 GMT [6170] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2022-12-23 10:23:53.106 GMT [6170] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2022-12-23 10:23:53.107 GMT [6170] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2022-12-23 10:23:53.111 GMT [6171] LOG:  database system was shut down at 2022-12-23 10:23:52 GMT
2022-12-23 10:23:53.117 GMT [6170] LOG:  database system is ready to accept connections
2022-12-23 10:24:35.556 GMT [6170] LOG:  received fast shutdown request
2022-12-23 10:24:35.557 GMT [6170] LOG:  aborting any active transactions
2022-12-23 10:24:35.561 GMT [6170] LOG:  background worker "logical replication launcher" (PID 6177) exited with exit code 1
2022-12-23 10:24:35.563 GMT [6172] LOG:  shutting down
2022-12-23 10:24:35.604 GMT [6170] LOG:  database system is shut down
2022-12-23 10:24:38.656 GMT [6448] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2022-12-23 10:24:38.656 GMT [6448] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2022-12-23 10:24:38.658 GMT [6448] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2022-12-23 10:24:38.663 GMT [6449] LOG:  database system was shut down at 2022-12-23 10:24:38 GMT
2022-12-23 10:24:38.669 GMT [6448] LOG:  database system is ready to accept connections
2022-12-23 10:24:39.361 GMT [6474] ERROR:  syntax error at or near "PERFORM" at character 1
2022-12-23 10:24:39.361 GMT [6474] STATEMENT:  PERFORM add_account(0, 'hello', 'pass');
2022-12-23 10:28:56.606 GMT [6448] LOG:  received fast shutdown request
2022-12-23 10:28:56.609 GMT [6448] LOG:  aborting any active transactions
2022-12-23 10:28:56.614 GMT [6448] LOG:  background worker "logical replication launcher" (PID 6455) exited with exit code 1
2022-12-23 10:28:56.616 GMT [6450] LOG:  shutting down
2022-12-23 10:28:56.660 GMT [6448] LOG:  database system is shut down
2022-12-23 10:28:59.250 GMT [7309] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2022-12-23 10:28:59.251 GMT [7309] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2022-12-23 10:28:59.252 GMT [7309] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2022-12-23 10:28:59.257 GMT [7310] LOG:  database system was shut down at 2022-12-23 10:28:58 GMT
2022-12-23 10:28:59.264 GMT [7309] LOG:  database system is ready to accept connections
2022-12-23 10:28:59.987 GMT [7338] ERROR:  function digest(text, unknown) does not exist at character 113
2022-12-23 10:28:59.987 GMT [7338] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2022-12-23 10:28:59.987 GMT [7338] QUERY:  INSERT INTO account (init_date, customer_id, username, passwd)
	    VALUES (current_date, customer_id, username, DIGEST(passwd, 'sha256'))
2022-12-23 10:28:59.987 GMT [7338] CONTEXT:  PL/pgSQL function add_account(integer,text,text) line 4 at SQL statement
2022-12-23 10:28:59.987 GMT [7338] STATEMENT:  SELECT * FROM add_account(0, 'hello', 'pass');
2022-12-23 10:36:11.697 GMT [7309] LOG:  received fast shutdown request
2022-12-23 10:36:11.699 GMT [7309] LOG:  aborting any active transactions
2022-12-23 10:36:11.704 GMT [7309] LOG:  background worker "logical replication launcher" (PID 7316) exited with exit code 1
2022-12-23 10:36:11.705 GMT [7311] LOG:  shutting down
2022-12-23 10:36:11.722 GMT [7309] LOG:  database system is shut down
2022-12-23 10:36:14.543 GMT [8597] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2022-12-23 10:36:14.543 GMT [8597] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2022-12-23 10:36:14.545 GMT [8597] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2022-12-23 10:36:14.549 GMT [8598] LOG:  database system was shut down at 2022-12-23 10:36:14 GMT
2022-12-23 10:36:14.556 GMT [8597] LOG:  database system is ready to accept connections
2022-12-23 10:36:15.303 GMT [8623] ERROR:  insert or update on table "account" violates foreign key constraint "account_customer_id_fkey"
2022-12-23 10:36:15.303 GMT [8623] DETAIL:  Key (customer_id)=(0) is not present in table "customer".
2022-12-23 10:36:15.303 GMT [8623] CONTEXT:  SQL statement "INSERT INTO account (init_date, customer_id, username, passwd)
	    VALUES (current_date, customer_id, username, DIGEST(passwd, 'sha256'))"
	PL/pgSQL function add_account(integer,text,text) line 4 at SQL statement
2022-12-23 10:36:15.303 GMT [8623] STATEMENT:  SELECT * FROM add_account(0, 'hello', 'pass');
2022-12-23 10:40:36.530 GMT [8597] LOG:  received fast shutdown request
2022-12-23 10:40:36.532 GMT [8597] LOG:  aborting any active transactions
2022-12-23 10:40:36.534 GMT [8597] LOG:  background worker "logical replication launcher" (PID 8604) exited with exit code 1
2022-12-23 10:40:36.538 GMT [8599] LOG:  shutting down
2022-12-23 10:40:36.588 GMT [8597] LOG:  database system is shut down
2022-12-23 10:40:39.138 GMT [9452] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2022-12-23 10:40:39.138 GMT [9452] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2022-12-23 10:40:39.140 GMT [9452] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2022-12-23 10:40:39.145 GMT [9453] LOG:  database system was shut down at 2022-12-23 10:40:38 GMT
2022-12-23 10:40:39.152 GMT [9452] LOG:  database system is ready to accept connections
2022-12-23 10:40:39.861 GMT [9478] ERROR:  function add_account(unknown, integer, unknown, unknown) does not exist at character 15
2022-12-23 10:40:39.861 GMT [9478] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2022-12-23 10:40:39.861 GMT [9478] STATEMENT:  SELECT * FROM add_account('2019-01-01', 0, 'hello', 'pass');
2022-12-23 10:41:55.651 GMT [9452] LOG:  received fast shutdown request
2022-12-23 10:41:55.652 GMT [9452] LOG:  aborting any active transactions
2022-12-23 10:41:55.657 GMT [9452] LOG:  background worker "logical replication launcher" (PID 9459) exited with exit code 1
2022-12-23 10:41:55.659 GMT [9454] LOG:  shutting down
2022-12-23 10:41:55.710 GMT [9452] LOG:  database system is shut down
2022-12-23 10:41:58.002 GMT [9809] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2022-12-23 10:41:58.002 GMT [9809] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2022-12-23 10:41:58.004 GMT [9809] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2022-12-23 10:41:58.010 GMT [9810] LOG:  database system was shut down at 2022-12-23 10:41:57 GMT
2022-12-23 10:41:58.017 GMT [9809] LOG:  database system is ready to accept connections
2022-12-23 10:41:58.747 GMT [9835] ERROR:  column "2019-01-01" does not exist at character 27
2022-12-23 10:41:58.747 GMT [9835] STATEMENT:  SELECT * FROM add_account("2019-01-01", 0, "hello", "pass");
2022-12-23 10:42:31.732 GMT [9809] LOG:  received fast shutdown request
2022-12-23 10:42:31.733 GMT [9809] LOG:  aborting any active transactions
2022-12-23 10:42:31.737 GMT [9809] LOG:  background worker "logical replication launcher" (PID 9816) exited with exit code 1
2022-12-23 10:42:31.741 GMT [9811] LOG:  shutting down
2022-12-23 10:42:31.787 GMT [9809] LOG:  database system is shut down
2022-12-23 10:42:34.887 GMT [10051] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2022-12-23 10:42:34.887 GMT [10051] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2022-12-23 10:42:34.889 GMT [10051] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2022-12-23 10:42:34.894 GMT [10052] LOG:  database system was shut down at 2022-12-23 10:42:34 GMT
2022-12-23 10:42:34.899 GMT [10051] LOG:  database system is ready to accept connections
2022-12-23 10:42:35.589 GMT [10080] ERROR:  column "hello" does not exist at character 44
2022-12-23 10:42:35.589 GMT [10080] STATEMENT:  SELECT * FROM add_account('2019-01-01', 0, "hello", "pass");
2022-12-23 10:43:00.107 GMT [10051] LOG:  received fast shutdown request
2022-12-23 10:43:00.109 GMT [10051] LOG:  aborting any active transactions
2022-12-23 10:43:00.115 GMT [10051] LOG:  background worker "logical replication launcher" (PID 10058) exited with exit code 1
2022-12-23 10:43:00.116 GMT [10053] LOG:  shutting down
2022-12-23 10:43:00.162 GMT [10051] LOG:  database system is shut down
2022-12-23 10:43:02.423 GMT [10239] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2022-12-23 10:43:02.423 GMT [10239] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2022-12-23 10:43:02.425 GMT [10239] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2022-12-23 10:43:02.430 GMT [10240] LOG:  database system was shut down at 2022-12-23 10:43:02 GMT
2022-12-23 10:43:02.436 GMT [10239] LOG:  database system is ready to accept connections
2022-12-23 10:43:03.151 GMT [10268] ERROR:  column "pass" does not exist at character 53
2022-12-23 10:43:03.151 GMT [10268] STATEMENT:  SELECT * FROM add_account('2019-01-01', 0, 'hello', "pass");
2022-12-23 10:43:11.561 GMT [10239] LOG:  received fast shutdown request
2022-12-23 10:43:11.563 GMT [10239] LOG:  aborting any active transactions
2022-12-23 10:43:11.568 GMT [10239] LOG:  background worker "logical replication launcher" (PID 10246) exited with exit code 1
2022-12-23 10:43:11.568 GMT [10241] LOG:  shutting down
2022-12-23 10:43:11.619 GMT [10239] LOG:  database system is shut down
2022-12-23 10:43:14.018 GMT [10387] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2022-12-23 10:43:14.018 GMT [10387] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2022-12-23 10:43:14.020 GMT [10387] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2022-12-23 10:43:14.024 GMT [10388] LOG:  database system was shut down at 2022-12-23 10:43:13 GMT
2022-12-23 10:43:14.044 GMT [10387] LOG:  database system is ready to accept connections
2022-12-23 10:43:14.722 GMT [10416] ERROR:  function add_account(unknown, integer, unknown, unknown) does not exist at character 15
2022-12-23 10:43:14.722 GMT [10416] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2022-12-23 10:43:14.722 GMT [10416] STATEMENT:  SELECT * FROM add_account('2019-01-01', 0, 'hello', 'pass');
2022-12-23 10:44:26.345 GMT [10387] LOG:  received fast shutdown request
2022-12-23 10:44:26.346 GMT [10387] LOG:  aborting any active transactions
2022-12-23 10:44:26.352 GMT [10387] LOG:  background worker "logical replication launcher" (PID 10394) exited with exit code 1
2022-12-23 10:44:26.353 GMT [10389] LOG:  shutting down
2022-12-23 10:44:26.402 GMT [10387] LOG:  database system is shut down
2022-12-23 10:44:28.649 GMT [10712] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2022-12-23 10:44:28.649 GMT [10712] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2022-12-23 10:44:28.650 GMT [10712] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2022-12-23 10:44:28.656 GMT [10713] LOG:  database system was shut down at 2022-12-23 10:44:28 GMT
2022-12-23 10:44:28.663 GMT [10712] LOG:  database system is ready to accept connections
2022-12-23 10:44:29.380 GMT [10738] ERROR:  function add_account(date, integer, text, text) does not exist at character 15
2022-12-23 10:44:29.380 GMT [10738] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2022-12-23 10:44:29.380 GMT [10738] STATEMENT:  SELECT * FROM add_account(DATE '2019-01-01', 0, TEXT 'hello', TEXT 'pass');
2022-12-23 10:44:56.885 GMT [10712] LOG:  received fast shutdown request
2022-12-23 10:44:56.886 GMT [10712] LOG:  aborting any active transactions
2022-12-23 10:44:56.891 GMT [10712] LOG:  background worker "logical replication launcher" (PID 10719) exited with exit code 1
2022-12-23 10:44:56.893 GMT [10714] LOG:  shutting down
2022-12-23 10:44:56.945 GMT [10712] LOG:  database system is shut down
2022-12-23 10:44:59.756 GMT [10931] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2022-12-23 10:44:59.756 GMT [10931] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2022-12-23 10:44:59.757 GMT [10931] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2022-12-23 10:44:59.770 GMT [10935] LOG:  database system was shut down at 2022-12-23 10:44:59 GMT
2022-12-23 10:44:59.776 GMT [10931] LOG:  database system is ready to accept connections
2022-12-23 10:45:00.464 GMT [10964] ERROR:  insert or update on table "account" violates foreign key constraint "account_customer_id_fkey"
2022-12-23 10:45:00.464 GMT [10964] DETAIL:  Key (customer_id)=(0) is not present in table "customer".
2022-12-23 10:45:00.464 GMT [10964] CONTEXT:  SQL statement "INSERT INTO account (init_date, customer_id, username, passwd)
	    VALUES (current_date, customer_id, username, DIGEST(passwd, 'sha256'))"
	PL/pgSQL function add_account(integer,text,text) line 4 at SQL statement
2022-12-23 10:45:00.464 GMT [10964] STATEMENT:  SELECT * FROM add_account(0, TEXT 'hello', TEXT 'pass');
2022-12-23 10:47:02.477 GMT [10931] LOG:  received fast shutdown request
2022-12-23 10:47:02.480 GMT [10931] LOG:  aborting any active transactions
2022-12-23 10:47:02.485 GMT [10931] LOG:  background worker "logical replication launcher" (PID 10941) exited with exit code 1
2022-12-23 10:47:02.485 GMT [10936] LOG:  shutting down
2022-12-23 10:47:02.538 GMT [10931] LOG:  database system is shut down
2022-12-23 10:47:04.771 GMT [11381] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2022-12-23 10:47:04.771 GMT [11381] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2022-12-23 10:47:04.773 GMT [11381] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2022-12-23 10:47:04.778 GMT [11382] LOG:  database system was shut down at 2022-12-23 10:47:04 GMT
2022-12-23 10:47:04.784 GMT [11381] LOG:  database system is ready to accept connections
2022-12-23 10:47:05.516 GMT [11407] ERROR:  column "log_date" of relation "log" does not exist at character 18
2022-12-23 10:47:05.516 GMT [11407] QUERY:  INSERT INTO log (log_date, log_message, customer_id)
	    VALUES (current_date, 'Account added', customer_id)
2022-12-23 10:47:05.516 GMT [11407] CONTEXT:  PL/pgSQL function add_account(integer,text,text) line 7 at SQL statement
2022-12-23 10:47:05.516 GMT [11407] STATEMENT:  SELECT * FROM add_account(1, TEXT 'hello', TEXT 'pass');
2022-12-23 10:48:46.217 GMT [11381] LOG:  received fast shutdown request
2022-12-23 10:48:46.218 GMT [11381] LOG:  aborting any active transactions
2022-12-23 10:48:46.223 GMT [11381] LOG:  background worker "logical replication launcher" (PID 11388) exited with exit code 1
2022-12-23 10:48:46.223 GMT [11383] LOG:  shutting down
2022-12-23 10:48:46.269 GMT [11381] LOG:  database system is shut down
2022-12-23 10:48:48.618 GMT [11807] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2022-12-23 10:48:48.618 GMT [11807] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2022-12-23 10:48:48.620 GMT [11807] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2022-12-23 10:48:48.625 GMT [11808] LOG:  database system was shut down at 2022-12-23 10:48:48 GMT
2022-12-23 10:48:48.630 GMT [11807] LOG:  database system is ready to accept connections
2022-12-23 10:58:31.689 GMT [13621] ERROR:  relation "account" does not exist at character 15
2022-12-23 10:58:31.689 GMT [13621] STATEMENT:  select * from account;
2022-12-23 11:04:58.433 GMT [11807] LOG:  received fast shutdown request
2022-12-23 11:04:58.435 GMT [11807] LOG:  aborting any active transactions
2022-12-23 11:04:58.440 GMT [11807] LOG:  background worker "logical replication launcher" (PID 11814) exited with exit code 1
2022-12-23 11:04:58.440 GMT [11809] LOG:  shutting down
2022-12-23 11:04:58.457 GMT [11807] LOG:  database system is shut down
2022-12-23 11:05:15.238 GMT [14953] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2022-12-23 11:05:15.238 GMT [14953] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2022-12-23 11:05:15.240 GMT [14953] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2022-12-23 11:05:15.245 GMT [14954] LOG:  database system was shut down at 2022-12-23 11:05:14 GMT
2022-12-23 11:05:15.252 GMT [14953] LOG:  database system is ready to accept connections
2022-12-24 21:00:36.319 GMT [14958] LOG:  statistics collector's time 2022-12-24 21:00:38.499932+00 is later than backend local time 2022-12-24 21:00:36.173166+00
2022-12-24 21:00:36.320 GMT [14958] LOG:  statistics collector's time 2022-12-24 21:00:38.499932+00 is later than backend local time 2022-12-24 21:00:36.320171+00
2022-12-24 21:00:36.652 GMT [14959] LOG:  stats_timestamp 2022-12-24 21:00:38.499932+00 is later than collector's time 2022-12-24 21:00:36.651979+00 for database 0
2022-12-28 12:36:57.529 GMT [24390] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2022-12-28 12:36:57.532 GMT [24390] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2022-12-28 12:36:57.534 GMT [24390] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2022-12-28 12:36:57.539 GMT [24391] LOG:  database system was shut down at 2022-12-28 12:36:57 GMT
2022-12-28 12:36:57.544 GMT [24390] LOG:  database system is ready to accept connections
2022-12-28 12:36:58.152 GMT [24416] ERROR:  syntax error at or near "INTO" at character 147
2022-12-28 12:36:58.152 GMT [24416] STATEMENT:  CREATE OR REPLACE VIEW view_accounts AS
	SELECT id, init_date, customer_id
	FROM account
	/*insert 10 elements of sample data into customer*/
	INSERT INTO customer (init_date, first_name, last_name, date_of_birth, phone_number, address)
	VALUES
	    ('2019-01-01', 'John', 'Smith', '1990-01-01', '123-456-7890', '{"123 Main St", "Apt 1", "New York, NY 10001"}'),
	    ('2019-01-01', 'Jane', 'Doe', '1990-01-01', '123-456-7890', '{"123 Main St", "Apt 1", "New York, NY 10001"}'),
	    ('2019-01-01', 'Bob', 'Smith', '1990-01-01', '123-456-7890', '{"123 Main St", "Apt 1", "New York, NY 10001"}'),
	    ('2019-01-01', 'Alice', 'Doe', '1990-01-01', '123-456-7890', '{"123 Main St", "Apt 1", "New York, NY 10001"}'),
	    ('2019-01-01', 'John', 'Doe', '1990-01-01', '123-456-7890', '{"123 Main St", "Apt 1", "New York, NY 10001"}'),
	    ('2019-01-01', 'Jane', 'Smith', '1990-01-01', '123-456-7890', '{"123 Main St", "Apt 1", "New York, NY 10001"}'),
	    ('2019-01-01', 'Bob', 'Doe', '1990-01-01', '123-456-7890', '{"123 Main St", "Apt 1", "New York, NY 10001"}'),
	    ('2019-01-01', 'Alice', 'Smith', '1990-01-01', '123-456-7890', '{"123 Main St", "Apt 1", "New York, NY 10001"}'),
	    ('2019-01-01', 'John', 'Dee', '1990-01-01', '123-456-7890', '{"123 Main St", "Apt 1", "New York, NY 10001"}'),
	    ('2019-01-01', 'Jane', 'Dee', '1990-01-01', '123-456-7890', '{"123 Main St", "Apt 1", "New York, NY 10001"}');
2022-12-28 12:36:58.156 GMT [24416] ERROR:  insert or update on table "account" violates foreign key constraint "account_customer_id_fkey"
2022-12-28 12:36:58.156 GMT [24416] DETAIL:  Key (customer_id)=(1) is not present in table "customer".
2022-12-28 12:36:58.156 GMT [24416] STATEMENT:  /*insert elements of sample data into account*/
	INSERT INTO account (init_date, customer_id, username, passwd)
	VALUES
	    ('2019-01-01', 1, 'JohnSmith', '4e1b8f5bacb39b35f0a97f962871b2d4d5b5e935c34db051b45e3cc5f5b5d5c5'),
	    ('2017-01-01', 2, 'JaneDoe', 'f0d5d3c9cf9b5b8c3b3e5e5ce5b5d5c8f5e5b5c5d9d5c5f5b5b5b5f5b5d5b5b5'),
	    ('2018-01-01', 3, 'BobSmith', 'e4e9b5b5b5b5e9e9e9b5b5b5e9e9b5b5b5b5b5b5e9e9e9e9b5b5b5e9b5b5b5b5'),
	    ('2015-01-01', 4, 'AliceDoe', 'c5d5d5b5b5b5b5b5b5d5d5d5d5b5b5b5b5b5b5d5d5d5d5b5b5b5b5b5b5b5b5'),
	    ('2016-01-01', 5, 'JohnDoe', 'a9d9b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5'),
	    ('2016-01-01', 6, 'JaneSmith', 'f5e9e9e9b5b5b5e9e9e9e9b5b5b5e9e9e9e9b5b5b5e9e9e9e9b5b5b5e9e9e9'),
	    ('2017-01-01', 7, 'BobDoe', 'd5d5d5d5b5b5b5b5b5d5d5d5d5b5b5b5b5b5d5d5d5d5b5b5b5b5b5b5b5b5b5'),
	    ('2014-01-01', 8, 'AliceSmith', 'b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5'),
	    ('2016-01-01', 9, 'JohnDee', 'e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5'),
	    ('2017-01-01', 10, 'JaneDee', 'c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5');
2022-12-28 12:36:58.157 GMT [24416] ERROR:  insert or update on table "savings_account" violates foreign key constraint "savings_account_account_id_fkey"
2022-12-28 12:36:58.157 GMT [24416] DETAIL:  Key (account_id)=(1) is not present in table "account".
2022-12-28 12:36:58.157 GMT [24416] STATEMENT:  /*insert 8 elements of sample data into savings_account with different amounts and interest rates*/
	INSERT INTO savings_account (account_id, current_balance, interest_rate)
	VALUES
	    (1, 1000.00, 0.01),
	    (2, 2000.00, 0.02),
	    (3, 3000.00, 0.03),
	    (4, 4000.00, 0.04),
	    (5, 5000.00, 0.05),
	    (6, 6000.00, 0.06),
	    (7, 7000.00, 0.07),
	    (8, 8000.00, 0.08);
2022-12-28 12:36:58.159 GMT [24416] ERROR:  insert or update on table "credit_account" violates foreign key constraint "credit_account_account_id_fkey"
2022-12-28 12:36:58.159 GMT [24416] DETAIL:  Key (account_id)=(1) is not present in table "account".
2022-12-28 12:36:58.159 GMT [24416] STATEMENT:  /*insert 8 elements of sample data into credit_account with different amounts, credit limits, and interest rates*/
	INSERT INTO credit_account (account_id, current_balance, credit_limit, interest_rate)
	VALUES
	    (1, 1000.00, 10000.00, 0.01),
	    (2, 2000.00, 20000.00, 0.02),
	    (3, 3000.00, 30000.00, 0.03),
	    (4, 4000.00, 40000.00, 0.04),
	    (5, 5000.00, 50000.00, 0.05),
	    (6, 6000.00, 60000.00, 0.06),
	    (7, 7000.00, 70000.00, 0.07),
	    (8, 8000.00, 80000.00, 0.08);
2022-12-28 12:36:58.162 GMT [24416] ERROR:  insert or update on table "debit_account" violates foreign key constraint "debit_account_account_id_fkey"
2022-12-28 12:36:58.162 GMT [24416] DETAIL:  Key (account_id)=(1) is not present in table "account".
2022-12-28 12:36:58.162 GMT [24416] STATEMENT:  /*insert 8 elements of sample data into debit_account with different amounts, overdraft limits, and interest rates*/
	INSERT INTO debit_account (account_id, current_balance, overdraft_limit, interest_rate)
	VALUES
	    (1, 1000.00, 10000.00, 0.01),
	    (2, 2000.00, 20000.00, 0.02),
	    (3, 3000.00, 30000.00, 0.03),
	    (4, 4000.00, 40000.00, 0.04),
	    (5, 5000.00, 50000.00, 0.05),
	    (6, 6000.00, 60000.00, 0.06),
	    (7, 7000.00, 70000.00, 0.07),
	    (8, 8000.00, 80000.00, 0.08);
2022-12-28 12:36:58.164 GMT [24416] ERROR:  insert or update on table "loan" violates foreign key constraint "loan_account_id_fkey"
2022-12-28 12:36:58.164 GMT [24416] DETAIL:  Key (account_id)=(1) is not present in table "account".
2022-12-28 12:36:58.164 GMT [24416] STATEMENT:  /*insert 8 elements of sample data into loan with different amounts, interest rates, loan terms, and loan start and end dates*/
	INSERT INTO loan (account_id, loan_amount, interest_rate, loan_term, loan_start_date, loan_end_date)
	VALUES
	    (1, 1000.00, 0.01, 12, '2019-01-01', '2020-01-01'),
	    (2, 2000.00, 0.02, 12, '2019-01-01', '2020-01-01'),
	    (3, 3000.00, 0.03, 12, '2019-01-01', '2020-01-01'),
	    (4, 4000.00, 0.04, 12, '2019-01-01', '2020-01-01'),
	    (5, 5000.00, 0.05, 12, '2019-01-01', '2020-01-01'),
	    (6, 6000.00, 0.06, 12, '2019-01-01', '2020-01-01'),
	    (7, 7000.00, 0.07, 12, '2019-01-01', '2020-01-01'),
	    (8, 8000.00, 0.08, 12, '2019-01-01', '2020-01-01');
2022-12-28 12:36:58.182 GMT [24416] ERROR:  insert or update on table "account" violates foreign key constraint "account_customer_id_fkey"
2022-12-28 12:36:58.182 GMT [24416] DETAIL:  Key (customer_id)=(1) is not present in table "customer".
2022-12-28 12:36:58.182 GMT [24416] CONTEXT:  SQL statement "INSERT INTO account (init_date, customer_id, username, passwd)
	    VALUES (current_date, customer_id, username, DIGEST(passwd, 'sha256'))"
	PL/pgSQL function add_account(integer,text,text) line 4 at SQL statement
2022-12-28 12:36:58.182 GMT [24416] STATEMENT:  SELECT * FROM add_account(1, TEXT 'hello', TEXT 'pass');
2022-12-28 12:38:42.477 GMT [24721] ERROR:  syntax error at or near "select" at character 35
2022-12-28 12:38:42.477 GMT [24721] STATEMENT:  set search_path to online_banking
	select * from customer;
2022-12-28 12:39:15.530 GMT [24721] ERROR:  relation "bank" does not exist at character 15
2022-12-28 12:39:15.530 GMT [24721] STATEMENT:  select * from bank
	;
2022-12-28 12:39:24.236 GMT [24721] ERROR:  relation "customer" does not exist at character 15
2022-12-28 12:39:24.236 GMT [24721] STATEMENT:  select * from customer;
2022-12-28 12:44:39.839 GMT [24721] ERROR:  syntax error at or near "inset" at character 1
2022-12-28 12:44:39.839 GMT [24721] STATEMENT:  inset into online_banking.customer
	('2019-01-01', 'john', 'smith', '1990-01-01','122-145-7896', '{"123 Main St", "Apt 1", "New York, NY 10001"});
	';
	)
	;
2022-12-28 12:45:07.984 GMT [24721] ERROR:  syntax error at or near "'2019-01-01'" at character 38
2022-12-28 12:45:07.984 GMT [24721] STATEMENT:  insert into online_banking.customer
	('2019-01-01', 'john', 'smith', '1990-01-01','122-145-7896', '{"123 Main St", "Apt 1", "New York, NY 10001"}');
2022-12-28 12:47:52.800 GMT [24390] LOG:  received fast shutdown request
2022-12-28 12:47:52.802 GMT [24390] LOG:  aborting any active transactions
2022-12-28 12:47:52.805 GMT [24390] LOG:  background worker "logical replication launcher" (PID 24397) exited with exit code 1
2022-12-28 12:47:52.806 GMT [24392] LOG:  shutting down
2022-12-28 12:47:52.821 GMT [24390] LOG:  database system is shut down
2022-12-28 12:47:58.094 GMT [27915] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2022-12-28 12:47:58.094 GMT [27915] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2022-12-28 12:47:58.096 GMT [27915] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2022-12-28 12:47:58.100 GMT [27916] LOG:  database system was shut down at 2022-12-28 12:47:57 GMT
2022-12-28 12:47:58.110 GMT [27915] LOG:  database system is ready to accept connections
2022-12-28 17:03:07.782 GMT [27915] LOG:  received SIGHUP, reloading configuration files
2022-12-28 17:03:07.784 GMT [27915] LOG:  received smart shutdown request
2022-12-28 17:03:07.900 GMT [27915] LOG:  background worker "logical replication launcher" (PID 27922) exited with exit code 1
2022-12-28 17:03:07.900 GMT [27917] LOG:  shutting down
2022-12-28 17:03:07.974 GMT [27915] LOG:  database system is shut down
2022-12-29 10:55:08.264 GMT [12197] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2022-12-29 10:55:08.267 GMT [12197] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2022-12-29 10:55:08.269 GMT [12197] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2022-12-29 10:55:08.275 GMT [12198] LOG:  database system was shut down at 2022-12-29 10:55:07 GMT
2022-12-29 10:55:08.281 GMT [12197] LOG:  database system is ready to accept connections
2022-12-29 10:56:55.656 GMT [12197] LOG:  received fast shutdown request
2022-12-29 10:56:55.658 GMT [12197] LOG:  aborting any active transactions
2022-12-29 10:56:55.663 GMT [12197] LOG:  background worker "logical replication launcher" (PID 12204) exited with exit code 1
2022-12-29 10:56:55.664 GMT [12199] LOG:  shutting down
2022-12-29 10:56:55.724 GMT [12197] LOG:  database system is shut down
2022-12-29 10:56:58.614 GMT [12627] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2022-12-29 10:56:58.614 GMT [12627] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2022-12-29 10:56:58.616 GMT [12627] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2022-12-29 10:56:58.621 GMT [12628] LOG:  database system was shut down at 2022-12-29 10:56:58 GMT
2022-12-29 10:56:58.627 GMT [12627] LOG:  database system is ready to accept connections
2022-12-29 10:56:59.337 GMT [12656] ERROR:  column "id" specified more than once
2022-12-29 10:56:59.337 GMT [12656] STATEMENT:  CREATE OR REPLACE VIEW view_savings_accounts AS
	SELECT account.id, savings_account.id, savings_account.account_id, savings_account.interest_rate
	FROM savings_account
	LEFT JOIN account ON savings_account.account_id = account.id;
2022-12-29 10:56:59.403 GMT [12656] ERROR:  relation "view_savings_accounts" does not exist at character 15
2022-12-29 10:56:59.403 GMT [12656] STATEMENT:  SELECT * FROM view_savings_accounts;
2022-12-29 10:57:38.493 GMT [12627] LOG:  received fast shutdown request
2022-12-29 10:57:38.494 GMT [12627] LOG:  aborting any active transactions
2022-12-29 10:57:38.499 GMT [12627] LOG:  background worker "logical replication launcher" (PID 12634) exited with exit code 1
2022-12-29 10:57:38.501 GMT [12629] LOG:  shutting down
2022-12-29 10:57:38.550 GMT [12627] LOG:  database system is shut down
2022-12-29 10:57:40.726 GMT [12861] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2022-12-29 10:57:40.726 GMT [12861] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2022-12-29 10:57:40.728 GMT [12861] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2022-12-29 10:57:40.733 GMT [12862] LOG:  database system was shut down at 2022-12-29 10:57:40 GMT
2022-12-29 10:57:40.740 GMT [12861] LOG:  database system is ready to accept connections
2022-12-29 10:57:41.441 GMT [12887] ERROR:  column "account_id" specified more than once
2022-12-29 10:57:41.441 GMT [12887] STATEMENT:  CREATE OR REPLACE VIEW view_savings_accounts AS
	SELECT account.id AS account_id, savings_account.id, savings_account.account_id, savings_account.interest_rate
	FROM savings_account
	LEFT JOIN account ON savings_account.account_id = account.id;
2022-12-29 10:57:41.506 GMT [12887] ERROR:  relation "view_savings_accounts" does not exist at character 15
2022-12-29 10:57:41.506 GMT [12887] STATEMENT:  SELECT * FROM view_savings_accounts;
2022-12-29 10:58:00.606 GMT [12861] LOG:  received fast shutdown request
2022-12-29 10:58:00.608 GMT [12861] LOG:  aborting any active transactions
2022-12-29 10:58:00.614 GMT [12861] LOG:  background worker "logical replication launcher" (PID 12868) exited with exit code 1
2022-12-29 10:58:00.614 GMT [12863] LOG:  shutting down
2022-12-29 10:58:00.667 GMT [12861] LOG:  database system is shut down
2022-12-29 10:58:02.746 GMT [13037] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2022-12-29 10:58:02.746 GMT [13037] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2022-12-29 10:58:02.748 GMT [13037] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2022-12-29 10:58:02.753 GMT [13038] LOG:  database system was shut down at 2022-12-29 10:58:02 GMT
2022-12-29 10:58:02.760 GMT [13037] LOG:  database system is ready to accept connections
2022-12-29 13:49:25.146 GMT [13037] LOG:  received fast shutdown request
2022-12-29 13:49:25.149 GMT [13037] LOG:  aborting any active transactions
2022-12-29 13:49:25.154 GMT [13037] LOG:  background worker "logical replication launcher" (PID 13044) exited with exit code 1
2022-12-29 13:49:25.154 GMT [13039] LOG:  shutting down
2022-12-29 13:49:25.170 GMT [13037] LOG:  database system is shut down
2022-12-29 13:49:32.282 GMT [22820] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2022-12-29 13:49:32.283 GMT [22820] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2022-12-29 13:49:32.285 GMT [22820] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2022-12-29 13:49:32.290 GMT [22821] LOG:  database system was shut down at 2022-12-29 13:49:31 GMT
2022-12-29 13:49:32.296 GMT [22820] LOG:  database system is ready to accept connections
2022-12-29 13:56:27.074 GMT [22820] LOG:  received fast shutdown request
2022-12-29 13:56:27.076 GMT [22820] LOG:  aborting any active transactions
2022-12-29 13:56:27.081 GMT [22820] LOG:  background worker "logical replication launcher" (PID 22827) exited with exit code 1
2022-12-29 13:56:27.082 GMT [22822] LOG:  shutting down
2022-12-29 13:56:27.098 GMT [22820] LOG:  database system is shut down
2022-12-29 13:56:29.695 GMT [24272] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2022-12-29 13:56:29.696 GMT [24272] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2022-12-29 13:56:29.698 GMT [24272] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2022-12-29 13:56:29.702 GMT [24273] LOG:  database system was shut down at 2022-12-29 13:56:29 GMT
2022-12-29 13:56:29.708 GMT [24272] LOG:  database system is ready to accept connections
2022-12-29 13:56:30.436 GMT [24301] ERROR:  table name "loan" specified more than once
2022-12-29 13:56:30.436 GMT [24301] STATEMENT:  CREATE OR REPLACE VIEW view_loans AS
	SELECT customer.first_name, customer.last_name, loans.customer_id, loans.account_id, loans.loan_start_date FROM customer
	INNER JOIN
	    (SELECT account.customer_id, loan.id, loan.account_id, loan.loan_start_date
	    FROM loan
	    INNER JOIN loan ON loan.account_id = account.account_id) AS loans
	ON customer.id = loans.customer_id;
2022-12-29 13:56:30.563 GMT [24301] ERROR:  relation "view_loans" does not exist at character 15
2022-12-29 13:56:30.563 GMT [24301] STATEMENT:  SELECT * FROM view_loans;
2022-12-29 13:57:53.107 GMT [24272] LOG:  received fast shutdown request
2022-12-29 13:57:53.110 GMT [24272] LOG:  aborting any active transactions
2022-12-29 13:57:53.116 GMT [24272] LOG:  background worker "logical replication launcher" (PID 24279) exited with exit code 1
2022-12-29 13:57:53.116 GMT [24274] LOG:  shutting down
2022-12-29 13:57:53.170 GMT [24272] LOG:  database system is shut down
2022-12-29 13:57:55.116 GMT [24613] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2022-12-29 13:57:55.117 GMT [24613] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2022-12-29 13:57:55.118 GMT [24613] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2022-12-29 13:57:55.123 GMT [24614] LOG:  database system was shut down at 2022-12-29 13:57:54 GMT
2022-12-29 13:57:55.129 GMT [24613] LOG:  database system is ready to accept connections
2022-12-29 13:57:55.862 GMT [24639] ERROR:  column account.account_id does not exist at character 308
2022-12-29 13:57:55.862 GMT [24639] STATEMENT:  CREATE OR REPLACE VIEW view_loans AS
	SELECT customer.first_name, customer.last_name, loans.customer_id, loans.account_id, loans.loan_start_date FROM customer
	INNER JOIN
	    (SELECT account.customer_id, loan.id, loan.account_id, loan.loan_start_date
	    FROM loan
	    INNER JOIN account ON loan.account_id = account.account_id) AS loans
	ON customer.id = loans.customer_id;
2022-12-29 13:57:55.956 GMT [24639] ERROR:  relation "view_loans" does not exist at character 15
2022-12-29 13:57:55.956 GMT [24639] STATEMENT:  SELECT * FROM view_loans;
2022-12-29 13:58:32.304 GMT [24613] LOG:  received fast shutdown request
2022-12-29 13:58:32.307 GMT [24613] LOG:  aborting any active transactions
2022-12-29 13:58:32.313 GMT [24613] LOG:  background worker "logical replication launcher" (PID 24620) exited with exit code 1
2022-12-29 13:58:32.313 GMT [24615] LOG:  shutting down
2022-12-29 13:58:32.375 GMT [24613] LOG:  database system is shut down
2022-12-29 13:58:34.265 GMT [24828] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2022-12-29 13:58:34.266 GMT [24828] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2022-12-29 13:58:34.267 GMT [24828] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2022-12-29 13:58:34.272 GMT [24829] LOG:  database system was shut down at 2022-12-29 13:58:33 GMT
2022-12-29 13:58:34.279 GMT [24828] LOG:  database system is ready to accept connections
2022-12-29 14:07:09.371 GMT [24828] LOG:  received fast shutdown request
2022-12-29 14:07:09.372 GMT [24828] LOG:  aborting any active transactions
2022-12-29 14:07:09.380 GMT [24828] LOG:  background worker "logical replication launcher" (PID 24835) exited with exit code 1
2022-12-29 14:07:09.380 GMT [24830] LOG:  shutting down
2022-12-29 14:07:09.401 GMT [24828] LOG:  database system is shut down
2022-12-29 14:07:11.553 GMT [26450] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2022-12-29 14:07:11.553 GMT [26450] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2022-12-29 14:07:11.554 GMT [26450] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2022-12-29 14:07:11.560 GMT [26451] LOG:  database system was shut down at 2022-12-29 14:07:11 GMT
2022-12-29 14:07:11.568 GMT [26450] LOG:  database system is ready to accept connections
2022-12-29 14:07:12.287 GMT [26479] ERROR:  column loan.loan_id does not exist at character 324
2022-12-29 14:07:12.287 GMT [26479] STATEMENT:  CREATE OR REPLACE VIEW view_loans AS
	SELECT customer.first_name, customer.last_name, loans.customer_id, loans.account_id, loans.loan_start_date FROM customer
	INNER JOIN
	    (SELECT account.customer_id, loan.id, loan.account_id, loan.loan_start_date
	    FROM (
	        SELECT loan.id, loan.account_id, loan.loan_start_date, loan.loan_id, loan.is_approved FROM loan
	        INNER JOIN loan_application ON loan.id = loan_application.loan_id
	    ) AS loan
	    INNER JOIN account ON loan.account_id = account.id) AS loans
	ON customer.id = loans.customer_id;
2022-12-29 14:07:12.353 GMT [26479] ERROR:  relation "view_loans" does not exist at character 15
2022-12-29 14:07:12.353 GMT [26479] STATEMENT:  SELECT * FROM view_loans;
2022-12-29 14:07:49.381 GMT [26450] LOG:  received fast shutdown request
2022-12-29 14:07:49.382 GMT [26450] LOG:  aborting any active transactions
2022-12-29 14:07:49.389 GMT [26450] LOG:  background worker "logical replication launcher" (PID 26457) exited with exit code 1
2022-12-29 14:07:49.389 GMT [26452] LOG:  shutting down
2022-12-29 14:07:49.444 GMT [26450] LOG:  database system is shut down
2022-12-29 14:07:51.285 GMT [26682] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2022-12-29 14:07:51.285 GMT [26682] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2022-12-29 14:07:51.286 GMT [26682] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2022-12-29 14:07:51.292 GMT [26685] LOG:  database system was shut down at 2022-12-29 14:07:50 GMT
2022-12-29 14:07:51.297 GMT [26682] LOG:  database system is ready to accept connections
2022-12-29 14:11:21.415 GMT [26682] LOG:  received fast shutdown request
2022-12-29 14:11:21.417 GMT [26682] LOG:  aborting any active transactions
2022-12-29 14:11:21.421 GMT [26682] LOG:  background worker "logical replication launcher" (PID 26692) exited with exit code 1
2022-12-29 14:11:21.421 GMT [26687] LOG:  shutting down
2022-12-29 14:11:21.466 GMT [26682] LOG:  database system is shut down
2022-12-29 14:11:23.366 GMT [27482] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2022-12-29 14:11:23.366 GMT [27482] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2022-12-29 14:11:23.368 GMT [27482] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2022-12-29 14:11:23.372 GMT [27483] LOG:  database system was shut down at 2022-12-29 14:11:23 GMT
2022-12-29 14:11:23.376 GMT [27482] LOG:  database system is ready to accept connections
2022-12-29 14:12:05.649 GMT [27482] LOG:  received fast shutdown request
2022-12-29 14:12:05.650 GMT [27482] LOG:  aborting any active transactions
2022-12-29 14:12:05.655 GMT [27482] LOG:  background worker "logical replication launcher" (PID 27489) exited with exit code 1
2022-12-29 14:12:05.656 GMT [27484] LOG:  shutting down
2022-12-29 14:12:05.697 GMT [27482] LOG:  database system is shut down
2022-12-29 14:12:07.593 GMT [27715] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2022-12-29 14:12:07.594 GMT [27715] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2022-12-29 14:12:07.595 GMT [27715] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2022-12-29 14:12:07.601 GMT [27722] LOG:  database system was shut down at 2022-12-29 14:12:07 GMT
2022-12-29 14:12:07.606 GMT [27715] LOG:  database system is ready to accept connections
2022-12-29 14:12:08.190 GMT [27751] ERROR:  missing FROM-clause entry for table "loan" at character 146
2022-12-29 14:12:08.190 GMT [27751] STATEMENT:  CREATE OR REPLACE VIEW view_loans AS
	SELECT customer.first_name, customer.last_name, loans.customer_id, loans.account_id, loans.loan_start_date, loan.is_approved FROM customer
	INNER JOIN
	    (SELECT account.customer_id, loan.id, loan.account_id, loan.loan_start_date
	    FROM (
	        SELECT loan.id, loan.account_id, loan.loan_start_date, loan_application.loan_id, loan_application.is_approved FROM loan
	        INNER JOIN loan_application ON loan.id = loan_application.loan_id
	    ) AS loan
	    INNER JOIN account ON loan.account_id = account.id) AS loans
	ON customer.id = loans.customer_id;
2022-12-29 14:12:08.246 GMT [27751] ERROR:  relation "view_loans" does not exist at character 15
2022-12-29 14:12:08.246 GMT [27751] STATEMENT:  SELECT * FROM view_loans;
2022-12-29 14:13:16.320 GMT [27715] LOG:  received fast shutdown request
2022-12-29 14:13:16.321 GMT [27715] LOG:  aborting any active transactions
2022-12-29 14:13:16.325 GMT [27715] LOG:  background worker "logical replication launcher" (PID 27729) exited with exit code 1
2022-12-29 14:13:16.325 GMT [27724] LOG:  shutting down
2022-12-29 14:13:16.363 GMT [27715] LOG:  database system is shut down
2022-12-29 14:13:18.061 GMT [28028] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2022-12-29 14:13:18.062 GMT [28028] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2022-12-29 14:13:18.063 GMT [28028] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2022-12-29 14:13:18.068 GMT [28029] LOG:  database system was shut down at 2022-12-29 14:13:17 GMT
2022-12-29 14:13:18.075 GMT [28028] LOG:  database system is ready to accept connections
2022-12-29 14:14:08.899 GMT [28028] LOG:  received fast shutdown request
2022-12-29 14:14:08.901 GMT [28028] LOG:  aborting any active transactions
2022-12-29 14:14:08.905 GMT [28028] LOG:  background worker "logical replication launcher" (PID 28036) exited with exit code 1
2022-12-29 14:14:08.905 GMT [28030] LOG:  shutting down
2022-12-29 14:14:08.942 GMT [28028] LOG:  database system is shut down
2022-12-29 14:14:10.836 GMT [28335] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2022-12-29 14:14:10.837 GMT [28335] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2022-12-29 14:14:10.838 GMT [28335] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2022-12-29 14:14:10.843 GMT [28336] LOG:  database system was shut down at 2022-12-29 14:14:10 GMT
2022-12-29 14:14:10.849 GMT [28335] LOG:  database system is ready to accept connections
2022-12-29 14:28:55.849 GMT [28335] LOG:  received fast shutdown request
2022-12-29 14:28:55.851 GMT [28335] LOG:  aborting any active transactions
2022-12-29 14:28:55.855 GMT [28335] LOG:  background worker "logical replication launcher" (PID 28342) exited with exit code 1
2022-12-29 14:28:55.855 GMT [28337] LOG:  shutting down
2022-12-29 14:28:55.869 GMT [28335] LOG:  database system is shut down
2022-12-29 14:28:57.760 GMT [31336] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2022-12-29 14:28:57.760 GMT [31336] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2022-12-29 14:28:57.762 GMT [31336] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2022-12-29 14:28:57.766 GMT [31337] LOG:  database system was shut down at 2022-12-29 14:28:57 GMT
2022-12-29 14:28:57.770 GMT [31336] LOG:  database system is ready to accept connections
2022-12-29 14:28:58.407 GMT [31376] ERROR:  column credit_account_application.credit_account_i does not exist at character 580
2022-12-29 14:28:58.407 GMT [31376] HINT:  Perhaps you meant to reference the column "credit_account_application.credit_account_id".
2022-12-29 14:28:58.407 GMT [31376] STATEMENT:  CREATE OR REPLACE VIEW view_credit_accounts AS
	SELECT customer.first_name, customer.last_name, credit_accounts.customer_id, credit_accounts.id, credit_accounts.is_approved FROM customer
	INNER JOIN
	    (SELECT account.customer_id, credit_account.id, credit_account.account_id, credit_account.is_approved
	    FROM (
	        SELECT credit_account.id, credit_account.account_id, credit_account.interest_rate, credit_account_application.credit_account_id, credit_account_application.is_approved FROM credit_account
	        INNER JOIN credit_account_application ON credit_account.id = credit_account_application.credit_account_i
	    ) AS credit_account
	    INNER JOIN account on credit_account.account_id = account.id) AS credit_accounts
	ON customer.id = credit_accounts.customer_id
	ORDER BY customer.last_name ASC;
2022-12-29 14:35:36.783 GMT [31336] LOG:  received fast shutdown request
2022-12-29 14:35:36.785 GMT [31336] LOG:  aborting any active transactions
2022-12-29 14:35:36.788 GMT [31336] LOG:  background worker "logical replication launcher" (PID 31343) exited with exit code 1
2022-12-29 14:35:36.793 GMT [31338] LOG:  shutting down
2022-12-29 14:35:36.806 GMT [31336] LOG:  database system is shut down
2022-12-29 14:35:38.640 GMT [32653] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2022-12-29 14:35:38.640 GMT [32653] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2022-12-29 14:35:38.642 GMT [32653] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2022-12-29 14:35:38.646 GMT [32654] LOG:  database system was shut down at 2022-12-29 14:35:38 GMT
2022-12-29 14:35:38.652 GMT [32653] LOG:  database system is ready to accept connections
2022-12-29 15:02:28.429 GMT [32653] LOG:  received fast shutdown request
2022-12-29 15:02:28.431 GMT [32653] LOG:  aborting any active transactions
2022-12-29 15:02:28.433 GMT [32653] LOG:  background worker "logical replication launcher" (PID 32660) exited with exit code 1
2022-12-29 15:02:28.435 GMT [32655] LOG:  shutting down
2022-12-29 15:02:28.451 GMT [32653] LOG:  database system is shut down
2022-12-29 15:02:40.462 GMT [37653] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2022-12-29 15:02:40.462 GMT [37653] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2022-12-29 15:02:40.464 GMT [37653] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2022-12-29 15:02:40.469 GMT [37654] LOG:  database system was shut down at 2022-12-29 15:02:40 GMT
2022-12-29 15:02:40.473 GMT [37653] LOG:  database system is ready to accept connections
2022-12-29 15:02:41.092 GMT [37699] ERROR:  syntax error at or near "EXEC" at character 1
2022-12-29 15:02:41.092 GMT [37699] STATEMENT:  EXEC add_account(1, TEXT 'hello', TEXT 'pass');
2022-12-29 15:20:59.746 GMT [37653] LOG:  received smart shutdown request
2022-12-29 15:20:59.756 GMT [37653] LOG:  background worker "logical replication launcher" (PID 37660) exited with exit code 1
2022-12-29 15:20:59.757 GMT [37655] LOG:  shutting down
2022-12-29 15:20:59.764 GMT [37653] LOG:  received SIGHUP, reloading configuration files
2022-12-29 15:20:59.776 GMT [37653] LOG:  database system is shut down
2023-01-06 12:15:00.516 GMT [17876] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-06 12:15:00.517 GMT [17876] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-06 12:15:00.528 GMT [17876] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-06 12:15:00.534 GMT [17888] LOG:  database system was shut down at 2023-01-06 12:15:00 GMT
2023-01-06 12:15:00.539 GMT [17876] LOG:  database system is ready to accept connections
2023-01-06 12:15:01.101 GMT [17913] ERROR:  syntax error at or near "CREATE" at character 166
2023-01-06 12:15:01.101 GMT [17913] STATEMENT:  CREATE TABLE IF NOT EXISTS customer_account (
	    customer_id SERIAL PRIMARY KEY REFERENCES customer(id),
	    account_id SERIAL PRIMARY KEY REFERENCES account(id)
	)
	CREATE TABLE IF NOT EXISTS account (
	    id SERIAL PRIMARY KEY,
	    open_date DATE,
	    account_balance INT,
	    account_type TINYINT
	)
	CREATE ROLE manager LOGIN WITH PASSWORD 'manager';
2023-01-06 12:15:01.101 GMT [17913] ERROR:  syntax error at or near "WITH" at character 29
2023-01-06 12:15:01.101 GMT [17913] STATEMENT:  CREATE ROLE employee1 LOGIN WITH PASSWORD 'employee1';
2023-01-06 12:15:01.102 GMT [17913] ERROR:  syntax error at or near "WITH" at character 29
2023-01-06 12:15:01.102 GMT [17913] STATEMENT:  CREATE ROLE employee2 LOGIN WITH PASSWORD 'employee2';
2023-01-06 12:15:01.102 GMT [17913] ERROR:  syntax error at or near "WITH" at character 29
2023-01-06 12:15:01.102 GMT [17913] STATEMENT:  CREATE ROLE employee3 LOGIN WITH PASSWORD 'employee3';
2023-01-06 12:15:01.103 GMT [17913] ERROR:  syntax error at or near "WITH" at character 29
2023-01-06 12:15:01.103 GMT [17913] STATEMENT:  CREATE ROLE employee4 LOGIN WITH PASSWORD 'employee4';
2023-01-06 12:15:01.103 GMT [17913] ERROR:  syntax error at or near "WITH" at character 29
2023-01-06 12:15:01.103 GMT [17913] STATEMENT:  CREATE ROLE employee5 LOGIN WITH PASSWORD 'employee5';
2023-01-06 12:15:40.217 GMT [17876] LOG:  received fast shutdown request
2023-01-06 12:15:40.219 GMT [17876] LOG:  aborting any active transactions
2023-01-06 12:15:40.224 GMT [17876] LOG:  background worker "logical replication launcher" (PID 17894) exited with exit code 1
2023-01-06 12:15:40.224 GMT [17889] LOG:  shutting down
2023-01-06 12:15:40.251 GMT [17876] LOG:  database system is shut down
2023-01-06 12:15:42.545 GMT [18116] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-06 12:15:42.546 GMT [18116] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-06 12:15:42.550 GMT [18116] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-06 12:15:42.555 GMT [18117] LOG:  database system was shut down at 2023-01-06 12:15:42 GMT
2023-01-06 12:15:42.560 GMT [18116] LOG:  database system is ready to accept connections
2023-01-06 12:15:43.057 GMT [18157] ERROR:  syntax error at or near "CREATE" at character 166
2023-01-06 12:15:43.057 GMT [18157] STATEMENT:  CREATE TABLE IF NOT EXISTS customer_account (
	    customer_id SERIAL PRIMARY KEY REFERENCES customer(id),
	    account_id SERIAL PRIMARY KEY REFERENCES account(id)
	)
	CREATE TABLE IF NOT EXISTS account (
	    id SERIAL PRIMARY KEY,
	    open_date DATE,
	    account_balance INT,
	    account_type TINYINT
	)
	CREATE ROLE manager WITH LOGIN PASSWORD 'manager';
2023-01-06 12:16:40.683 GMT [18116] LOG:  received fast shutdown request
2023-01-06 12:16:40.685 GMT [18116] LOG:  aborting any active transactions
2023-01-06 12:16:40.690 GMT [18116] LOG:  background worker "logical replication launcher" (PID 18123) exited with exit code 1
2023-01-06 12:16:40.690 GMT [18118] LOG:  shutting down
2023-01-06 12:16:40.725 GMT [18116] LOG:  database system is shut down
2023-01-06 12:16:42.879 GMT [18451] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-06 12:16:42.879 GMT [18451] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-06 12:16:42.880 GMT [18451] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-06 12:16:42.885 GMT [18457] LOG:  database system was shut down at 2023-01-06 12:16:42 GMT
2023-01-06 12:16:42.892 GMT [18451] LOG:  database system is ready to accept connections
2023-01-06 12:16:43.468 GMT [18485] ERROR:  multiple primary keys for table "customer_account" are not allowed at character 129
2023-01-06 12:16:43.468 GMT [18485] STATEMENT:  CREATE TABLE IF NOT EXISTS customer_account (
	    customer_id SERIAL PRIMARY KEY REFERENCES customer(id),
	    account_id SERIAL PRIMARY KEY REFERENCES account(id)
	);
2023-01-06 12:16:43.468 GMT [18485] ERROR:  type "tinyint" does not exist at character 127
2023-01-06 12:16:43.468 GMT [18485] STATEMENT:  CREATE TABLE IF NOT EXISTS account (
	    id SERIAL PRIMARY KEY,
	    open_date DATE,
	    account_balance INT,
	    account_type TINYINT
	);
2023-01-06 12:18:53.443 GMT [18451] LOG:  received fast shutdown request
2023-01-06 12:18:53.445 GMT [18451] LOG:  aborting any active transactions
2023-01-06 12:18:53.448 GMT [18451] LOG:  background worker "logical replication launcher" (PID 18463) exited with exit code 1
2023-01-06 12:18:53.451 GMT [18458] LOG:  shutting down
2023-01-06 12:18:53.483 GMT [18451] LOG:  database system is shut down
2023-01-06 12:18:55.264 GMT [18976] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-06 12:18:55.264 GMT [18976] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-06 12:18:55.265 GMT [18976] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-06 12:18:55.272 GMT [18981] LOG:  database system was shut down at 2023-01-06 12:18:54 GMT
2023-01-06 12:18:55.312 GMT [18976] LOG:  database system is ready to accept connections
2023-01-06 12:18:55.818 GMT [19017] ERROR:  multiple primary keys for table "customer_account" are not allowed at character 129
2023-01-06 12:18:55.818 GMT [19017] STATEMENT:  CREATE TABLE IF NOT EXISTS customer_account (
	    customer_id SERIAL PRIMARY KEY REFERENCES customer(id),
	    account_id SERIAL PRIMARY KEY REFERENCES account(id)
	);
2023-01-06 17:17:26.469 GMT [18976] LOG:  received fast shutdown request
2023-01-06 17:17:26.472 GMT [18976] LOG:  aborting any active transactions
2023-01-06 17:17:26.482 GMT [18976] LOG:  background worker "logical replication launcher" (PID 18990) exited with exit code 1
2023-01-06 17:17:26.483 GMT [18985] LOG:  shutting down
2023-01-06 17:17:26.520 GMT [18976] LOG:  database system is shut down
2023-01-06 17:17:35.900 GMT [68045] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-06 17:17:35.900 GMT [68045] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-06 17:17:35.903 GMT [68045] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-06 17:17:35.908 GMT [68046] LOG:  database system was shut down at 2023-01-06 17:17:35 GMT
2023-01-06 17:17:35.917 GMT [68045] LOG:  database system is ready to accept connections
2023-01-06 17:17:36.593 GMT [68074] ERROR:  syntax error at or near "." at character 153
2023-01-06 17:17:36.593 GMT [68074] STATEMENT:  CREATE TABLE IF NOT EXISTS debit_overdraft (
	    id SERIAL PRIMARY KEY,
	    overdraft_usage INT,
	    overdraft_limit INT,
	    interest_rate NUMERIC(5,2).
	    debit_account_id INT REFERENCES debit_account(id)
	);
2023-01-06 17:17:36.594 GMT [68074] ERROR:  syntax error at or near "dest_account_id" at character 99
2023-01-06 17:17:36.594 GMT [68074] STATEMENT:  CREATE TABLE IF NOT EXISTS transaction (
	    id SERIAL PRIMARY KEY,
	    origin_account_id INT
	    dest_account_id INT,
	    amount INT,
	    date DATE,
	    savings_statement_id INT REFERENCES savings_statement(id),
	    credit_statement_id INT REFERENCES credit_statement(id),
	    debit_statement_id INT REFERENCES debit_statement(id)
	);
2023-01-06 17:17:36.610 GMT [68074] ERROR:  syntax error at or near "CREATE" at character 146
2023-01-06 17:17:36.610 GMT [68074] STATEMENT:  CREATE TABLE IF NOT EXISTS external_account (
	    account_id SERIAL PRIMARY KEY REFERENCES online_account(id),
	    external_account_number INT
	)
	CREATE TABLE IF NOT EXISTS authentication_log (
	    id SERIAL PRIMARY KEY,
	    log_description VARCHAR,
	    log_date DATE
	)
	CREATE TABLE IF NOT EXISTS management_log (
	    id SERIAL PRIMARY KEY,
	    log_description VARCHAR,
	    log_date DATE
	)
	CREATE ROLE manager WITH LOGIN PASSWORD 'manager';
2023-01-06 17:21:56.120 GMT [68045] LOG:  received fast shutdown request
2023-01-06 17:21:56.123 GMT [68045] LOG:  aborting any active transactions
2023-01-06 17:21:56.127 GMT [68045] LOG:  background worker "logical replication launcher" (PID 68052) exited with exit code 1
2023-01-06 17:21:56.131 GMT [68047] LOG:  shutting down
2023-01-06 17:21:56.173 GMT [68045] LOG:  database system is shut down
2023-01-06 17:21:58.772 GMT [68928] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-06 17:21:58.772 GMT [68928] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-06 17:21:58.773 GMT [68928] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-06 17:21:58.777 GMT [68930] LOG:  database system was shut down at 2023-01-06 17:21:58 GMT
2023-01-06 17:21:58.783 GMT [68928] LOG:  database system is ready to accept connections
2023-01-06 17:21:59.525 GMT [68955] ERROR:  syntax error at or near "dest_account_id" at character 99
2023-01-06 17:21:59.525 GMT [68955] STATEMENT:  CREATE TABLE IF NOT EXISTS transaction (
	    id SERIAL PRIMARY KEY,
	    origin_account_id INT
	    dest_account_id INT,
	    amount INT,
	    date DATE,
	    savings_statement_id INT REFERENCES savings_statement(id),
	    credit_statement_id INT REFERENCES credit_statement(id),
	    debit_statement_id INT REFERENCES debit_statement(id)
	);
2023-01-06 17:22:21.626 GMT [68928] LOG:  received fast shutdown request
2023-01-06 17:22:21.628 GMT [68928] LOG:  aborting any active transactions
2023-01-06 17:22:21.631 GMT [68928] LOG:  background worker "logical replication launcher" (PID 68936) exited with exit code 1
2023-01-06 17:22:21.635 GMT [68931] LOG:  shutting down
2023-01-06 17:22:21.674 GMT [68928] LOG:  database system is shut down
2023-01-06 17:22:23.745 GMT [69114] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-06 17:22:23.745 GMT [69114] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-06 17:22:23.749 GMT [69114] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-06 17:22:23.755 GMT [69115] LOG:  database system was shut down at 2023-01-06 17:22:23 GMT
2023-01-06 17:22:23.761 GMT [69114] LOG:  database system is ready to accept connections
2023-01-06 17:23:04.638 GMT [69114] LOG:  received fast shutdown request
2023-01-06 17:23:04.640 GMT [69114] LOG:  aborting any active transactions
2023-01-06 17:23:04.644 GMT [69114] LOG:  background worker "logical replication launcher" (PID 69121) exited with exit code 1
2023-01-06 17:23:04.646 GMT [69116] LOG:  shutting down
2023-01-06 17:23:04.686 GMT [69114] LOG:  database system is shut down
2023-01-06 17:23:06.413 GMT [69355] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-06 17:23:06.414 GMT [69355] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-06 17:23:06.415 GMT [69355] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-06 17:23:06.419 GMT [69356] LOG:  database system was shut down at 2023-01-06 17:23:06 GMT
2023-01-06 17:23:06.426 GMT [69355] LOG:  database system is ready to accept connections
2023-01-06 17:23:07.191 GMT [69381] ERROR:  syntax error at or near "CREATE" at character 51
2023-01-06 17:23:07.191 GMT [69381] STATEMENT:  CREATE ROLE manager WITH LOGIN PASSWORD 'manager' CREATE ROLE;
2023-01-06 17:23:25.479 GMT [69355] LOG:  received fast shutdown request
2023-01-06 17:23:25.482 GMT [69355] LOG:  aborting any active transactions
2023-01-06 17:23:25.488 GMT [69355] LOG:  background worker "logical replication launcher" (PID 69362) exited with exit code 1
2023-01-06 17:23:25.489 GMT [69357] LOG:  shutting down
2023-01-06 17:23:25.536 GMT [69355] LOG:  database system is shut down
2023-01-09 07:07:37.036 GMT [7448] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-09 07:07:37.039 GMT [7448] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-09 07:07:37.040 GMT [7448] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-09 07:07:37.043 GMT [7456] LOG:  database system was shut down at 2023-01-09 07:07:36 GMT
2023-01-09 07:07:37.048 GMT [7448] LOG:  database system is ready to accept connections
2023-01-09 07:07:37.689 GMT [7484] ERROR:  missing FROM-clause entry for table "security_question_answer" at character 105
2023-01-09 07:07:37.689 GMT [7484] STATEMENT:  CREATE OR REPLACE VIEW view_security_questions AS
	SELECT security_question_option.question_description, security_question_answer.question_answer
	FROM user_login_security_question
	INNER JOIN security_question_option ON user_login_security_question.question_choice_id = security_question_option.id;
2023-01-09 07:07:37.690 GMT [7484] ERROR:  syntax error at or near "INNER" at character 1
2023-01-09 07:07:37.690 GMT [7484] STATEMENT:  INNER JOIN security_question_answer ON user_login_security_question.id = security_question_answer.question_id;
2023-01-09 07:07:37.694 GMT [7484] ERROR:  column "id" specified more than once
2023-01-09 07:07:37.694 GMT [7484] STATEMENT:  CREATE OR REPLACE VIEW view_personal_information AS
	SELECT * FROM customer
	LEFT JOIN view_online_account_details ON customer.id = view_online_account_details.customer_id;
2023-01-09 07:07:37.697 GMT [7484] ERROR:  column credit_account.credit_limit does not exist at character 109
2023-01-09 07:07:37.697 GMT [7484] STATEMENT:  CREATE OR REPLACE VIEW view_credit_acounts AS
	SELECT credit_account.id, credit_account.outstanding_balance, credit_account.credit_limit, credit_account.interest_rate
	FROM credit_account
	LEFT JOIN view_online_account_details ON credit_account.account_id = view_online_account_details.id;
2023-01-09 07:11:09.336 GMT [7448] LOG:  received fast shutdown request
2023-01-09 07:11:09.337 GMT [7448] LOG:  aborting any active transactions
2023-01-09 07:11:09.341 GMT [7448] LOG:  background worker "logical replication launcher" (PID 7462) exited with exit code 1
2023-01-09 07:11:09.341 GMT [7457] LOG:  shutting down
2023-01-09 07:11:09.397 GMT [7448] LOG:  database system is shut down
2023-01-09 07:11:11.553 GMT [8251] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-09 07:11:11.554 GMT [8251] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-09 07:11:11.555 GMT [8251] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-09 07:11:11.561 GMT [8252] LOG:  database system was shut down at 2023-01-09 07:11:11 GMT
2023-01-09 07:11:11.567 GMT [8251] LOG:  database system is ready to accept connections
2023-01-09 07:11:12.289 GMT [8280] ERROR:  relation "user_login" does not exist at character 75
2023-01-09 07:11:12.289 GMT [8280] STATEMENT:  CREATE OR REPLACE VIEW view_login AS
	SELECT id, account_id, username
	FROM user_login
	WHERE username = current_user;
2023-01-09 07:11:12.289 GMT [8280] ERROR:  relation "user_login" does not exist at character 92
2023-01-09 07:11:12.289 GMT [8280] STATEMENT:  CREATE OR REPLACE VIEW view_login_secret AS
	SELECT id, account_id, username, password
	FROM user_login
	WHERE username = current_user;
2023-01-09 07:11:12.289 GMT [8280] ERROR:  relation "user_login_security_question" does not exist at character 151
2023-01-09 07:11:12.289 GMT [8280] STATEMENT:  CREATE OR REPLACE VIEW view_security_questions AS
	SELECT security_question_option.question_description, security_question_answer.question_answer
	FROM user_login_security_question
	INNER JOIN security_question_option ON user_login_security_question.question_choice_id = security_question_option.id;
2023-01-09 07:11:12.289 GMT [8280] ERROR:  syntax error at or near "INNER" at character 1
2023-01-09 07:11:12.289 GMT [8280] STATEMENT:  INNER JOIN security_question_answer ON user_login_security_question.id = security_question_answer.question_id;
2023-01-09 07:11:12.289 GMT [8280] ERROR:  relation "online_account" does not exist at character 171
2023-01-09 07:11:12.289 GMT [8280] STATEMENT:  CREATE OR REPLACE VIEW view_online_account_details AS
	SELECT online_account.id, online_account.date_opened, online_account.sort_code, online_account.customer_id
	    FROM online_account
	INNER JOIN view_login ON online_account.id = view_login.id;
2023-01-09 07:11:12.289 GMT [8280] ERROR:  relation "customer" does not exist at character 170
2023-01-09 07:11:12.289 GMT [8280] STATEMENT:  CREATE OR REPLACE VIEW view_personal_information AS
	SELECT customer.first_name, customer.last_name, customer.date_of_birth, customer.address, customer.phone_number FROM customer
	LEFT JOIN view_online_account_details ON customer.id = view_online_account_details.customer_id;
2023-01-09 07:11:12.290 GMT [8280] ERROR:  relation "loan" does not exist at character 112
2023-01-09 07:11:12.290 GMT [8280] STATEMENT:  CREATE OR REPLACE VIEW view_loans AS
	SELECT loan.id, loan.loan_amount, loan.loan_duration, loan.loan_type
	FROM loan
	LEFT JOIN view_online_account_details ON loan.account_id = view_online_account_details.id;
2023-01-09 07:11:12.290 GMT [8280] ERROR:  relation "savings_account" does not exist at character 143
2023-01-09 07:11:12.290 GMT [8280] STATEMENT:  CREATE OR REPLACE VIEW view_savings_account AS
	SELECT savings_account.id, savings_account.current_balance, savings_account.interest_rate
	FROM savings_account
	LEFT JOIN view_online_account_details ON savings_account.account_id = view_online_account_details.id;
2023-01-09 07:11:12.290 GMT [8280] ERROR:  relation "credit_account" does not exist at character 172
2023-01-09 07:11:12.290 GMT [8280] STATEMENT:  CREATE OR REPLACE VIEW view_credit_acounts AS
	SELECT credit_account.id, credit_account.outstanding_balance, credit_account.credit_limit, credit_account.interest_rate
	FROM credit_account
	LEFT JOIN view_online_account_details ON credit_account.account_id = view_online_account_details.id;
2023-01-09 07:11:12.290 GMT [8280] ERROR:  relation "debit_account" does not exist at character 136
2023-01-09 07:11:12.290 GMT [8280] STATEMENT:  CREATE OR REPLACE VIEW view_debit_accounts AS
	SELECT debit_account.id, debit_account.current_balance, debit_account.interest_rate
	FROM debit_account
	LEFT JOIN view_online_account_details ON debit_account.account_id = view_online_account_details.id;
2023-01-09 07:11:36.488 GMT [8251] LOG:  received fast shutdown request
2023-01-09 07:11:36.490 GMT [8251] LOG:  aborting any active transactions
2023-01-09 07:11:36.493 GMT [8251] LOG:  background worker "logical replication launcher" (PID 8258) exited with exit code 1
2023-01-09 07:11:36.497 GMT [8253] LOG:  shutting down
2023-01-09 07:11:36.553 GMT [8251] LOG:  database system is shut down
2023-01-09 07:11:38.506 GMT [8440] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-09 07:11:38.506 GMT [8440] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-09 07:11:38.509 GMT [8440] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-09 07:11:38.514 GMT [8441] LOG:  database system was shut down at 2023-01-09 07:11:38 GMT
2023-01-09 07:11:38.519 GMT [8440] LOG:  database system is ready to accept connections
2023-01-09 07:11:39.219 GMT [8469] ERROR:  missing FROM-clause entry for table "security_question_answer" at character 105
2023-01-09 07:11:39.219 GMT [8469] STATEMENT:  CREATE OR REPLACE VIEW view_security_questions AS
	SELECT security_question_option.question_description, security_question_answer.question_answer
	FROM user_login_security_question
	INNER JOIN security_question_option ON user_login_security_question.question_choice_id = security_question_option.id;
2023-01-09 07:11:39.219 GMT [8469] ERROR:  syntax error at or near "INNER" at character 1
2023-01-09 07:11:39.219 GMT [8469] STATEMENT:  INNER JOIN security_question_answer ON user_login_security_question.id = security_question_answer.question_id;
2023-01-09 07:11:39.222 GMT [8469] ERROR:  column customer.address does not exist at character 125
2023-01-09 07:11:39.222 GMT [8469] STATEMENT:  CREATE OR REPLACE VIEW view_personal_information AS
	SELECT customer.first_name, customer.last_name, customer.date_of_birth, customer.address, customer.phone_number FROM customer
	LEFT JOIN view_online_account_details ON customer.id = view_online_account_details.customer_id;
2023-01-09 07:11:39.227 GMT [8469] ERROR:  column credit_account.credit_limit does not exist at character 109
2023-01-09 07:11:39.227 GMT [8469] STATEMENT:  CREATE OR REPLACE VIEW view_credit_acounts AS
	SELECT credit_account.id, credit_account.outstanding_balance, credit_account.credit_limit, credit_account.interest_rate
	FROM credit_account
	LEFT JOIN view_online_account_details ON credit_account.account_id = view_online_account_details.id;
2023-01-09 07:13:39.913 GMT [8440] LOG:  received fast shutdown request
2023-01-09 07:13:39.915 GMT [8440] LOG:  aborting any active transactions
2023-01-09 07:13:39.919 GMT [8440] LOG:  background worker "logical replication launcher" (PID 8447) exited with exit code 1
2023-01-09 07:13:39.919 GMT [8442] LOG:  shutting down
2023-01-09 07:13:39.953 GMT [8440] LOG:  database system is shut down
2023-01-09 07:13:41.762 GMT [8899] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-09 07:13:41.762 GMT [8899] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-09 07:13:41.764 GMT [8899] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-09 07:13:41.769 GMT [8900] LOG:  database system was shut down at 2023-01-09 07:13:41 GMT
2023-01-09 07:13:41.776 GMT [8899] LOG:  database system is ready to accept connections
2023-01-09 07:13:42.444 GMT [8942] ERROR:  missing FROM-clause entry for table "security_question_answer" at character 105
2023-01-09 07:13:42.444 GMT [8942] STATEMENT:  CREATE OR REPLACE VIEW view_security_questions AS
	SELECT security_question_option.question_description, security_question_answer.question_answer
	FROM user_login_security_question
	INNER JOIN security_question_option ON user_login_security_question.question_choice_id = security_question_option.id;
2023-01-09 07:13:42.444 GMT [8942] ERROR:  syntax error at or near "INNER" at character 1
2023-01-09 07:13:42.444 GMT [8942] STATEMENT:  INNER JOIN security_question_answer ON user_login_security_question.id = security_question_answer.question_id;
2023-01-09 07:13:42.457 GMT [8942] ERROR:  column credit_account.credit_limit does not exist at character 109
2023-01-09 07:13:42.457 GMT [8942] STATEMENT:  CREATE OR REPLACE VIEW view_credit_acounts AS
	SELECT credit_account.id, credit_account.outstanding_balance, credit_account.credit_limit, credit_account.interest_rate
	FROM credit_account
	LEFT JOIN view_online_account_details ON credit_account.account_id = view_online_account_details.id;
2023-01-09 07:14:19.139 GMT [8899] LOG:  received fast shutdown request
2023-01-09 07:14:19.141 GMT [8899] LOG:  aborting any active transactions
2023-01-09 07:14:19.147 GMT [8899] LOG:  background worker "logical replication launcher" (PID 8906) exited with exit code 1
2023-01-09 07:14:19.147 GMT [8901] LOG:  shutting down
2023-01-09 07:14:19.187 GMT [8899] LOG:  database system is shut down
2023-01-09 07:14:20.906 GMT [9155] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-09 07:14:20.907 GMT [9155] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-09 07:14:20.908 GMT [9155] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-09 07:14:20.914 GMT [9156] LOG:  database system was shut down at 2023-01-09 07:14:20 GMT
2023-01-09 07:14:20.921 GMT [9155] LOG:  database system is ready to accept connections
2023-01-09 07:14:21.637 GMT [9181] ERROR:  missing FROM-clause entry for table "security_question_answer" at character 105
2023-01-09 07:14:21.637 GMT [9181] STATEMENT:  CREATE OR REPLACE VIEW view_security_questions AS
	SELECT security_question_option.question_description, security_question_answer.question_answer
	FROM user_login_security_question
	INNER JOIN security_question_option ON user_login_security_question.question_choice_id = security_question_option.id;
2023-01-09 07:14:21.637 GMT [9181] ERROR:  syntax error at or near "INNER" at character 1
2023-01-09 07:14:21.637 GMT [9181] STATEMENT:  INNER JOIN security_question_answer ON user_login_security_question.id = security_question_answer.question_id;
2023-01-09 07:17:06.364 GMT [9155] LOG:  received fast shutdown request
2023-01-09 07:17:06.367 GMT [9155] LOG:  aborting any active transactions
2023-01-09 07:17:06.369 GMT [9155] LOG:  background worker "logical replication launcher" (PID 9162) exited with exit code 1
2023-01-09 07:17:06.375 GMT [9157] LOG:  shutting down
2023-01-09 07:17:06.413 GMT [9155] LOG:  database system is shut down
2023-01-09 07:17:08.045 GMT [9745] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-09 07:17:08.045 GMT [9745] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-09 07:17:08.052 GMT [9745] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-09 07:17:08.057 GMT [9746] LOG:  database system was shut down at 2023-01-09 07:17:07 GMT
2023-01-09 07:17:08.062 GMT [9745] LOG:  database system is ready to accept connections
2023-01-09 07:17:08.700 GMT [9783] ERROR:  missing FROM-clause entry for table "security_question_answer" at character 105
2023-01-09 07:17:08.700 GMT [9783] STATEMENT:  CREATE OR REPLACE VIEW view_security_questions AS
	SELECT security_question_option.question_description, security_question_answer.question_answer
	FROM user_login_security_question
	INNER JOIN security_question_option ON user_login_security_question.question_choice_id = security_question_option.id;
2023-01-09 07:17:08.700 GMT [9783] ERROR:  syntax error at or near "INNER" at character 1
2023-01-09 07:17:08.700 GMT [9783] STATEMENT:  INNER JOIN security_question_answer ON user_login_security_question.id = security_question_answer.question_id;
2023-01-09 07:17:08.701 GMT [9783] ERROR:  relation "view_login" does not exist at character 197
2023-01-09 07:17:08.701 GMT [9783] STATEMENT:  CREATE OR REPLACE VIEW view_online_account_details AS
	SELECT online_account.id, online_account.date_opened, online_account.sort_code, online_account.customer_id
	    FROM online_account
	INNER JOIN view_login ON online_account.id = view_login.id;
2023-01-09 07:17:08.701 GMT [9783] ERROR:  relation "view_online_account_details" does not exist at character 95
2023-01-09 07:17:08.701 GMT [9783] STATEMENT:  CREATE OR REPLACE VIEW view_personal_information AS
	SELECT customer.* FROM customer
	LEFT JOIN view_online_account_details ON customer.id = view_online_account_details.customer_id;
2023-01-09 07:17:08.701 GMT [9783] ERROR:  relation "view_online_account_details" does not exist at character 127
2023-01-09 07:17:08.701 GMT [9783] STATEMENT:  CREATE OR REPLACE VIEW view_loans AS
	SELECT loan.id, loan.loan_amount, loan.loan_duration, loan.loan_type
	FROM loan
	LEFT JOIN view_online_account_details ON loan.account_id = view_online_account_details.id;
2023-01-09 07:17:08.701 GMT [9783] ERROR:  relation "view_online_account_details" does not exist at character 169
2023-01-09 07:17:08.701 GMT [9783] STATEMENT:  CREATE OR REPLACE VIEW view_savings_account AS
	SELECT savings_account.id, savings_account.current_balance, savings_account.interest_rate
	FROM savings_account
	LEFT JOIN view_online_account_details ON savings_account.account_id = view_online_account_details.id;
2023-01-09 07:17:08.701 GMT [9783] ERROR:  relation "view_online_account_details" does not exist at character 197
2023-01-09 07:17:08.701 GMT [9783] STATEMENT:  CREATE OR REPLACE VIEW view_credit_acounts AS
	SELECT credit_account.id, credit_account.outstanding_balance, credit_account.credit_limit, credit_account.interest_rate
	FROM credit_account
	LEFT JOIN view_online_account_details ON credit_account.account_id = view_online_account_details.id;
2023-01-09 07:17:08.702 GMT [9783] ERROR:  relation "view_online_account_details" does not exist at character 160
2023-01-09 07:17:08.702 GMT [9783] STATEMENT:  CREATE OR REPLACE VIEW view_debit_accounts AS
	SELECT debit_account.id, debit_account.current_balance, debit_account.interest_rate
	FROM debit_account
	LEFT JOIN view_online_account_details ON debit_account.account_id = view_online_account_details.id;
2023-01-09 07:18:03.780 GMT [9745] LOG:  received fast shutdown request
2023-01-09 07:18:03.782 GMT [9745] LOG:  aborting any active transactions
2023-01-09 07:18:03.786 GMT [9745] LOG:  background worker "logical replication launcher" (PID 9752) exited with exit code 1
2023-01-09 07:18:03.788 GMT [9747] LOG:  shutting down
2023-01-09 07:18:03.825 GMT [9745] LOG:  database system is shut down
2023-01-09 07:18:05.661 GMT [10041] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-09 07:18:05.661 GMT [10041] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-09 07:18:05.663 GMT [10041] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-09 07:18:05.667 GMT [10042] LOG:  database system was shut down at 2023-01-09 07:18:05 GMT
2023-01-09 07:18:05.675 GMT [10041] LOG:  database system is ready to accept connections
2023-01-09 07:18:06.310 GMT [10082] ERROR:  missing FROM-clause entry for table "security_question_answer" at character 105
2023-01-09 07:18:06.310 GMT [10082] STATEMENT:  CREATE OR REPLACE VIEW view_security_questions AS
	SELECT security_question_option.question_description, security_question_answer.question_answer
	FROM user_login_security_question
	INNER JOIN security_question_option ON user_login_security_question.question_choice_id = security_question_option.id;
2023-01-09 07:18:06.310 GMT [10082] ERROR:  syntax error at or near "INNER" at character 1
2023-01-09 07:18:06.310 GMT [10082] STATEMENT:  INNER JOIN security_question_answer ON user_login_security_question.id = security_question_answer.question_id;
2023-01-09 07:18:06.311 GMT [10082] ERROR:  relation "view_login" does not exist at character 197
2023-01-09 07:18:06.311 GMT [10082] STATEMENT:  CREATE OR REPLACE VIEW view_online_account_details AS
	SELECT online_account.id, online_account.date_opened, online_account.sort_code, online_account.customer_id
	    FROM online_account
	INNER JOIN view_login ON online_account.id = view_login.id;
2023-01-09 07:18:06.311 GMT [10082] ERROR:  relation "view_online_account_details" does not exist at character 95
2023-01-09 07:18:06.311 GMT [10082] STATEMENT:  CREATE OR REPLACE VIEW view_personal_information AS
	SELECT customer.* FROM customer
	LEFT JOIN view_online_account_details ON customer.id = view_online_account_details.customer_id;
2023-01-09 07:18:06.312 GMT [10082] ERROR:  relation "view_online_account_details" does not exist at character 127
2023-01-09 07:18:06.312 GMT [10082] STATEMENT:  CREATE OR REPLACE VIEW view_loans AS
	SELECT loan.id, loan.loan_amount, loan.loan_duration, loan.loan_type
	FROM loan
	LEFT JOIN view_online_account_details ON loan.account_id = view_online_account_details.id;
2023-01-09 07:18:06.312 GMT [10082] ERROR:  relation "view_online_account_details" does not exist at character 169
2023-01-09 07:18:06.312 GMT [10082] STATEMENT:  CREATE OR REPLACE VIEW view_savings_account AS
	SELECT savings_account.id, savings_account.current_balance, savings_account.interest_rate
	FROM savings_account
	LEFT JOIN view_online_account_details ON savings_account.account_id = view_online_account_details.id;
2023-01-09 07:18:06.312 GMT [10082] ERROR:  relation "view_online_account_details" does not exist at character 197
2023-01-09 07:18:06.312 GMT [10082] STATEMENT:  CREATE OR REPLACE VIEW view_credit_acounts AS
	SELECT credit_account.id, credit_account.outstanding_balance, credit_account.credit_limit, credit_account.interest_rate
	FROM credit_account
	LEFT JOIN view_online_account_details ON credit_account.account_id = view_online_account_details.id;
2023-01-09 07:18:06.312 GMT [10082] ERROR:  relation "view_online_account_details" does not exist at character 160
2023-01-09 07:18:06.312 GMT [10082] STATEMENT:  CREATE OR REPLACE VIEW view_debit_accounts AS
	SELECT debit_account.id, debit_account.current_balance, debit_account.interest_rate
	FROM debit_account
	LEFT JOIN view_online_account_details ON debit_account.account_id = view_online_account_details.id;
2023-01-09 07:18:48.554 GMT [10041] LOG:  received fast shutdown request
2023-01-09 07:18:48.556 GMT [10041] LOG:  aborting any active transactions
2023-01-09 07:18:48.560 GMT [10041] LOG:  background worker "logical replication launcher" (PID 10048) exited with exit code 1
2023-01-09 07:18:48.563 GMT [10043] LOG:  shutting down
2023-01-09 07:18:48.596 GMT [10041] LOG:  database system is shut down
2023-01-09 07:18:50.286 GMT [10296] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-09 07:18:50.286 GMT [10296] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-09 07:18:50.288 GMT [10296] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-09 07:18:50.293 GMT [10297] LOG:  database system was shut down at 2023-01-09 07:18:50 GMT
2023-01-09 07:18:50.298 GMT [10296] LOG:  database system is ready to accept connections
2023-01-09 07:18:50.987 GMT [10336] ERROR:  missing FROM-clause entry for table "security_question_answer" at character 105
2023-01-09 07:18:50.987 GMT [10336] STATEMENT:  CREATE OR REPLACE VIEW view_security_questions AS
	SELECT security_question_option.question_description, security_question_answer.question_answer
	FROM user_login_security_question
	INNER JOIN security_question_option ON user_login_security_question.question_choice_id = security_question_option.id;
2023-01-09 07:18:50.988 GMT [10336] ERROR:  syntax error at or near "INNER" at character 1
2023-01-09 07:18:50.988 GMT [10336] STATEMENT:  INNER JOIN security_question_answer ON user_login_security_question.id = security_question_answer.question_id;
2023-01-09 07:45:38.623 GMT [10296] LOG:  received fast shutdown request
2023-01-09 07:45:38.625 GMT [10296] LOG:  aborting any active transactions
2023-01-09 07:45:38.630 GMT [10296] LOG:  background worker "logical replication launcher" (PID 10303) exited with exit code 1
2023-01-09 07:45:38.630 GMT [10298] LOG:  shutting down
2023-01-09 07:45:38.649 GMT [10296] LOG:  database system is shut down
2023-01-09 07:45:48.630 GMT [15383] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-09 07:45:48.630 GMT [15383] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-09 07:45:48.632 GMT [15383] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-09 07:45:48.638 GMT [15384] LOG:  database system was shut down at 2023-01-09 07:45:48 GMT
2023-01-09 07:45:48.645 GMT [15383] LOG:  database system is ready to accept connections
2023-01-09 07:45:49.366 GMT [15419] ERROR:  missing FROM-clause entry for table "security_question_answer" at character 112
2023-01-09 07:45:49.366 GMT [15419] STATEMENT:  CREATE OR REPLACE VIEW client.view_security_questions AS
	SELECT security_question_option.question_description, security_question_answer.question_answer
	FROM user_login_security_question
	INNER JOIN security_question_option ON user_login_security_question.question_choice_id = security_question_option.id;
2023-01-09 07:45:49.366 GMT [15419] ERROR:  syntax error at or near "INNER" at character 1
2023-01-09 07:45:49.366 GMT [15419] STATEMENT:  INNER JOIN security_question_answer ON user_login_security_question.id = security_question_answer.question_id;
2023-01-09 07:45:49.380 GMT [15419] ERROR:  column savings_statement.account_id does not exist at character 334
2023-01-09 07:45:49.380 GMT [15419] STATEMENT:  CREATE OR REPLACE VIEW client.view_savings_account_statements AS
	SELECT savings_account_statement.id, savings_account_statement.starting_date, savings_account_statement.end_date, savings_account_statement.amount, savings_account_statement.account_id
	FROM view_savings_account
	LEFT JOIN savings_statement ON view_savings_account.id = savings_statement.account_id;
2023-01-09 07:45:49.380 GMT [15419] ERROR:  relation "view_savings_account_statements" does not exist at character 200
2023-01-09 07:45:49.380 GMT [15419] STATEMENT:  CREATE OR REPLACE VIEW client.view_savings_statement AS
	SELECT transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date, transaction.savings_statement_id
	FROM view_savings_account_statements
	LEFT JOIN transaction ON view_savings_account_statements.id = transaction.savings_statement_id;
2023-01-09 07:45:49.384 GMT [15419] ERROR:  syntax error at or near "ROLE" at character 38
2023-01-09 07:45:49.384 GMT [15419] STATEMENT:  CREATE OR REPLACE VIEW staff.
	CREATE ROLE manager WITH LOGIN PASSWORD 'manager';
2023-01-09 07:50:28.084 GMT [15383] LOG:  received fast shutdown request
2023-01-09 07:50:28.085 GMT [15383] LOG:  aborting any active transactions
2023-01-09 07:50:28.092 GMT [15383] LOG:  background worker "logical replication launcher" (PID 15390) exited with exit code 1
2023-01-09 07:50:28.093 GMT [15385] LOG:  shutting down
2023-01-09 07:50:28.134 GMT [15383] LOG:  database system is shut down
2023-01-09 07:50:30.044 GMT [16350] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-09 07:50:30.045 GMT [16350] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-09 07:50:30.046 GMT [16350] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-09 07:50:30.052 GMT [16351] LOG:  database system was shut down at 2023-01-09 07:50:29 GMT
2023-01-09 07:50:30.059 GMT [16350] LOG:  database system is ready to accept connections
2023-01-09 07:50:30.810 GMT [16379] ERROR:  missing FROM-clause entry for table "security_question_answer" at character 112
2023-01-09 07:50:30.810 GMT [16379] STATEMENT:  CREATE OR REPLACE VIEW client.view_security_questions AS
	SELECT security_question_option.question_description, security_question_answer.question_answer
	FROM user_login_security_question
	INNER JOIN security_question_option ON user_login_security_question.question_choice_id = security_question_option.id;
2023-01-09 07:50:30.810 GMT [16379] ERROR:  syntax error at or near "INNER" at character 1
2023-01-09 07:50:30.810 GMT [16379] STATEMENT:  INNER JOIN security_question_answer ON user_login_security_question.id = security_question_answer.question_id;
2023-01-09 07:50:30.824 GMT [16379] ERROR:  missing FROM-clause entry for table "savings_account_statement" at character 73
2023-01-09 07:50:30.824 GMT [16379] STATEMENT:  CREATE OR REPLACE VIEW client.view_savings_account_statements AS
	SELECT savings_account_statement.id, savings_account_statement.starting_date, savings_account_statement.end_date, savings_account_statement.amount, savings_account_statement.account_id
	FROM view_savings_account
	LEFT JOIN savings_statement ON view_savings_account.id = savings_statement.account_id;
2023-01-09 07:50:30.825 GMT [16379] ERROR:  relation "view_savings_account_statements" does not exist at character 200
2023-01-09 07:50:30.825 GMT [16379] STATEMENT:  CREATE OR REPLACE VIEW client.view_savings_statement AS
	SELECT transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date, transaction.savings_statement_id
	FROM view_savings_account_statements
	LEFT JOIN transaction ON view_savings_account_statements.id = transaction.savings_statement_id;
2023-01-09 07:50:30.830 GMT [16379] ERROR:  syntax error at or near "ROLE" at character 38
2023-01-09 07:50:30.830 GMT [16379] STATEMENT:  CREATE OR REPLACE VIEW staff.
	CREATE ROLE manager WITH LOGIN PASSWORD 'manager';
2023-01-09 07:51:32.431 GMT [16350] LOG:  received fast shutdown request
2023-01-09 07:51:32.433 GMT [16350] LOG:  aborting any active transactions
2023-01-09 07:51:32.438 GMT [16350] LOG:  background worker "logical replication launcher" (PID 16357) exited with exit code 1
2023-01-09 07:51:32.439 GMT [16352] LOG:  shutting down
2023-01-09 07:51:32.482 GMT [16350] LOG:  database system is shut down
2023-01-09 07:51:34.443 GMT [16682] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-09 07:51:34.444 GMT [16682] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-09 07:51:34.446 GMT [16682] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-09 07:51:34.451 GMT [16683] LOG:  database system was shut down at 2023-01-09 07:51:34 GMT
2023-01-09 07:51:34.458 GMT [16682] LOG:  database system is ready to accept connections
2023-01-09 07:51:35.204 GMT [16708] ERROR:  missing FROM-clause entry for table "security_question_answer" at character 112
2023-01-09 07:51:35.204 GMT [16708] STATEMENT:  CREATE OR REPLACE VIEW client.view_security_questions AS
	SELECT security_question_option.question_description, security_question_answer.question_answer
	FROM user_login_security_question
	INNER JOIN security_question_option ON user_login_security_question.question_choice_id = security_question_option.id;
2023-01-09 07:51:35.204 GMT [16708] ERROR:  syntax error at or near "INNER" at character 1
2023-01-09 07:51:35.204 GMT [16708] STATEMENT:  INNER JOIN security_question_answer ON user_login_security_question.id = security_question_answer.question_id;
2023-01-09 07:51:35.229 GMT [16708] ERROR:  syntax error at or near "ROLE" at character 38
2023-01-09 07:51:35.229 GMT [16708] STATEMENT:  CREATE OR REPLACE VIEW staff.
	CREATE ROLE manager WITH LOGIN PASSWORD 'manager';
2023-01-09 07:51:59.931 GMT [16682] LOG:  received fast shutdown request
2023-01-09 07:51:59.932 GMT [16682] LOG:  aborting any active transactions
2023-01-09 07:51:59.937 GMT [16682] LOG:  background worker "logical replication launcher" (PID 16689) exited with exit code 1
2023-01-09 07:51:59.938 GMT [16684] LOG:  shutting down
2023-01-09 07:51:59.978 GMT [16682] LOG:  database system is shut down
2023-01-09 07:52:01.902 GMT [16878] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-09 07:52:01.902 GMT [16878] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-09 07:52:01.904 GMT [16878] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-09 07:52:01.910 GMT [16879] LOG:  database system was shut down at 2023-01-09 07:52:01 GMT
2023-01-09 07:52:01.916 GMT [16878] LOG:  database system is ready to accept connections
2023-01-09 07:52:02.651 GMT [16904] ERROR:  missing FROM-clause entry for table "security_question_answer" at character 112
2023-01-09 07:52:02.651 GMT [16904] STATEMENT:  CREATE OR REPLACE VIEW client.view_security_questions AS
	SELECT security_question_option.question_description, security_question_answer.question_answer
	FROM user_login_security_question
	INNER JOIN security_question_option ON user_login_security_question.question_choice_id = security_question_option.id;
2023-01-09 07:52:02.651 GMT [16904] ERROR:  syntax error at or near "INNER" at character 1
2023-01-09 07:52:02.651 GMT [16904] STATEMENT:  INNER JOIN security_question_answer ON user_login_security_question.id = security_question_answer.question_id;
2023-01-09 08:06:07.068 GMT [16878] LOG:  received fast shutdown request
2023-01-09 08:06:07.070 GMT [16878] LOG:  aborting any active transactions
2023-01-09 08:06:07.074 GMT [16878] LOG:  background worker "logical replication launcher" (PID 16885) exited with exit code 1
2023-01-09 08:06:07.074 GMT [16880] LOG:  shutting down
2023-01-09 08:06:07.090 GMT [16878] LOG:  database system is shut down
2023-01-09 08:06:09.032 GMT [19763] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-09 08:06:09.032 GMT [19763] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-09 08:06:09.058 GMT [19763] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-09 08:06:09.074 GMT [19764] LOG:  database system was shut down at 2023-01-09 08:06:08 GMT
2023-01-09 08:06:09.082 GMT [19763] LOG:  database system is ready to accept connections
2023-01-09 08:06:09.810 GMT [19797] ERROR:  missing FROM-clause entry for table "security_question_answer" at character 112
2023-01-09 08:06:09.810 GMT [19797] STATEMENT:  CREATE OR REPLACE VIEW client.view_security_questions AS
	SELECT security_question_option.question_description, security_question_answer.question_answer
	FROM user_login_security_question
	INNER JOIN security_question_option ON user_login_security_question.question_choice_id = security_question_option.id;
2023-01-09 08:06:09.810 GMT [19797] ERROR:  syntax error at or near "INNER" at character 1
2023-01-09 08:06:09.810 GMT [19797] STATEMENT:  INNER JOIN security_question_answer ON user_login_security_question.id = security_question_answer.question_id;
2023-01-09 08:06:09.840 GMT [19797] ERROR:  relation "view_credit_accounts" does not exist at character 164
2023-01-09 08:06:09.840 GMT [19797] STATEMENT:  CREATE OR REPLACE VIEW client.view_credit_account_applications AS
	SELECT credit_account_application.application_status, credit_account_application.account_id
	FROM view_credit_accounts
	RIGHT JOIN credit_account_application ON view_credit_accounts.id = credit_account_application.loan_id;
2023-01-09 08:06:09.841 GMT [19797] ERROR:  relation "view_credit_accounts" does not exist at character 287
2023-01-09 08:06:09.841 GMT [19797] STATEMENT:  CREATE OR REPLACE VIEW client.view_credit_account_statements AS
	SELECT credit_statement.id, credit_statement.starting_date, credit_statement.end_date, credit_statement.amount, credit_statement.minimum_payment, credit_statement.minimum_payment_due_date, credit_statement.account_id
	FROM view_credit_accounts
	RIGHT JOIN credit_statement ON view_credit_account.id = credit_statement.account_id;
2023-01-09 08:06:09.841 GMT [19797] ERROR:  relation "view_credit_account_statements" does not exist at character 204
2023-01-09 08:06:09.841 GMT [19797] STATEMENT:  CREATE OR REPLACE VIEW client.view_credit_account_statement AS
	SELECT transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date, transaction.credit_account_id
	FROM view_credit_account_statements
	RIGHT JOIN transaction ON view_credit_account_statements.id = transaction.credit_statement_id;
2023-01-09 08:06:09.843 GMT [19797] ERROR:  column debit_statement.minimum_payment does not exist at character 172
2023-01-09 08:06:09.843 GMT [19797] STATEMENT:  CREATE OR REPLACE VIEW client.view_debit_account_statements AS
	SELECT debit_statement.id, debit_statement.starting_date, debit_statement.end_date, debit_statement.amount, debit_statement.minimum_payment, debit_statement.minimum_payment_due_date, debit_statement.account_id
	FROM view_debit_accounts
	RIGHT JOIN debit_statement ON view_debit_accounts.id = debit_statement.account_id;
2023-01-09 08:06:09.843 GMT [19797] ERROR:  relation "view_debit_account_statements" does not exist at character 200
2023-01-09 08:06:09.843 GMT [19797] STATEMENT:  CREATE OR REPLACE VIEW client.view_debit_account_status AS
	SELECT transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date, transaction.credit_account_id
	FROM view_debit_account_statements
	RIGHT JOIN transaction ON view_debit_account_statements.id = transaction.debit_statement_id;
2023-01-09 08:07:22.943 GMT [19763] LOG:  received fast shutdown request
2023-01-09 08:07:22.945 GMT [19763] LOG:  aborting any active transactions
2023-01-09 08:07:22.947 GMT [19763] LOG:  background worker "logical replication launcher" (PID 19770) exited with exit code 1
2023-01-09 08:07:22.951 GMT [19765] LOG:  shutting down
2023-01-09 08:07:23.001 GMT [19763] LOG:  database system is shut down
2023-01-09 08:07:24.837 GMT [20149] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-09 08:07:24.838 GMT [20149] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-09 08:07:24.840 GMT [20149] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-09 08:07:24.845 GMT [20150] LOG:  database system was shut down at 2023-01-09 08:07:24 GMT
2023-01-09 08:07:24.852 GMT [20149] LOG:  database system is ready to accept connections
2023-01-09 08:07:25.611 GMT [20175] ERROR:  missing FROM-clause entry for table "security_question_answer" at character 112
2023-01-09 08:07:25.611 GMT [20175] STATEMENT:  CREATE OR REPLACE VIEW client.view_security_questions AS
	SELECT security_question_option.question_description, security_question_answer.question_answer
	FROM user_login_security_question
	INNER JOIN security_question_option ON user_login_security_question.question_choice_id = security_question_option.id;
2023-01-09 08:07:25.611 GMT [20175] ERROR:  syntax error at or near "INNER" at character 1
2023-01-09 08:07:25.611 GMT [20175] STATEMENT:  INNER JOIN security_question_answer ON user_login_security_question.id = security_question_answer.question_id;
2023-01-09 08:07:25.634 GMT [20175] ERROR:  column credit_account_application.loan_id does not exist at character 252
2023-01-09 08:07:25.634 GMT [20175] STATEMENT:  CREATE OR REPLACE VIEW client.view_credit_account_applications AS
	SELECT credit_account_application.application_status, credit_account_application.account_id
	FROM view_credit_accounts
	RIGHT JOIN credit_account_application ON view_credit_accounts.id = credit_account_application.loan_id;
2023-01-09 08:07:25.634 GMT [20175] ERROR:  missing FROM-clause entry for table "view_credit_account" at character 339
2023-01-09 08:07:25.634 GMT [20175] STATEMENT:  CREATE OR REPLACE VIEW client.view_credit_account_statements AS
	SELECT credit_statement.id, credit_statement.starting_date, credit_statement.end_date, credit_statement.amount, credit_statement.minimum_payment, credit_statement.minimum_payment_due_date, credit_statement.account_id
	FROM view_credit_accounts
	RIGHT JOIN credit_statement ON view_credit_account.id = credit_statement.account_id;
2023-01-09 08:07:25.635 GMT [20175] ERROR:  relation "view_credit_account_statements" does not exist at character 204
2023-01-09 08:07:25.635 GMT [20175] STATEMENT:  CREATE OR REPLACE VIEW client.view_credit_account_statement AS
	SELECT transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date, transaction.credit_account_id
	FROM view_credit_account_statements
	RIGHT JOIN transaction ON view_credit_account_statements.id = transaction.credit_statement_id;
2023-01-09 08:07:25.637 GMT [20175] ERROR:  column debit_statement.minimum_payment does not exist at character 172
2023-01-09 08:07:25.637 GMT [20175] STATEMENT:  CREATE OR REPLACE VIEW client.view_debit_account_statements AS
	SELECT debit_statement.id, debit_statement.starting_date, debit_statement.end_date, debit_statement.amount, debit_statement.minimum_payment, debit_statement.minimum_payment_due_date, debit_statement.account_id
	FROM view_debit_accounts
	RIGHT JOIN debit_statement ON view_debit_accounts.id = debit_statement.account_id;
2023-01-09 08:07:25.637 GMT [20175] ERROR:  relation "view_debit_account_statements" does not exist at character 200
2023-01-09 08:07:25.637 GMT [20175] STATEMENT:  CREATE OR REPLACE VIEW client.view_debit_account_status AS
	SELECT transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date, transaction.credit_account_id
	FROM view_debit_account_statements
	RIGHT JOIN transaction ON view_debit_account_statements.id = transaction.debit_statement_id;
2023-01-09 08:07:50.521 GMT [20303] ERROR:  cannot drop table customer because other objects depend on it
2023-01-09 08:07:50.521 GMT [20303] DETAIL:  constraint online_account_customer_id_fkey on table online_account depends on table customer
	view client.view_personal_information depends on table customer
2023-01-09 08:07:50.521 GMT [20303] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2023-01-09 08:07:50.521 GMT [20303] STATEMENT:  DROP TABLE IF EXISTS customer;
2023-01-09 08:07:50.523 GMT [20303] ERROR:  cannot drop table online_account because other objects depend on it
2023-01-09 08:07:50.523 GMT [20303] DETAIL:  constraint user_login_account_id_fkey on table user_login depends on table online_account
	constraint savings_account_account_id_fkey on table savings_account depends on table online_account
	constraint credit_account_account_id_fkey on table credit_account depends on table online_account
	constraint debit_account_account_id_fkey on table debit_account depends on table online_account
	constraint loan_account_id_fkey on table loan depends on table online_account
	constraint external_account_account_id_fkey on table external_account depends on table online_account
	view client.view_online_account_details depends on table online_account
	view client.view_personal_information depends on view client.view_online_account_details
	view client.view_loans depends on view client.view_online_account_details
	view client.view_loan_applications depends on view client.view_loans
	view client.view_loan_statements depends on view client.view_loans
	view client.view_savings_account depends on view client.view_online_account_details
	view client.view_savings_account_statements depends on view client.view_savings_account
	view client.view_savings_account_statement depends on view client.view_savings_account_statements
	view client.view_credit_accounts depends on view client.view_online_account_details
	view client.view_debit_accounts depends on view client.view_online_account_details
2023-01-09 08:07:50.523 GMT [20303] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2023-01-09 08:07:50.523 GMT [20303] STATEMENT:  DROP TABLE IF EXISTS online_account;
2023-01-09 08:07:50.526 GMT [20303] ERROR:  cannot drop table user_login because other objects depend on it
2023-01-09 08:07:50.526 GMT [20303] DETAIL:  constraint user_login_security_question_login_id_fkey on table user_login_security_question depends on table user_login
	view client.view_login depends on table user_login
	view client.view_online_account_details depends on view client.view_login
	view client.view_personal_information depends on view client.view_online_account_details
	view client.view_loans depends on view client.view_online_account_details
	view client.view_loan_applications depends on view client.view_loans
	view client.view_loan_statements depends on view client.view_loans
	view client.view_savings_account depends on view client.view_online_account_details
	view client.view_savings_account_statements depends on view client.view_savings_account
	view client.view_savings_account_statement depends on view client.view_savings_account_statements
	view client.view_credit_accounts depends on view client.view_online_account_details
	view client.view_debit_accounts depends on view client.view_online_account_details
	view client.view_login_secret depends on table user_login
2023-01-09 08:07:50.526 GMT [20303] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2023-01-09 08:07:50.526 GMT [20303] STATEMENT:  DROP TABLE IF EXISTS user_login;
2023-01-09 08:07:50.527 GMT [20303] ERROR:  cannot drop table user_login_security_question because other objects depend on it
2023-01-09 08:07:50.527 GMT [20303] DETAIL:  constraint security_question_answer_question_id_fkey on table security_question_answer depends on table user_login_security_question
2023-01-09 08:07:50.527 GMT [20303] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2023-01-09 08:07:50.527 GMT [20303] STATEMENT:  DROP TABLE IF EXISTS user_login_security_question;
2023-01-09 08:07:50.528 GMT [20303] ERROR:  cannot drop table security_question_option because other objects depend on it
2023-01-09 08:07:50.528 GMT [20303] DETAIL:  constraint user_login_security_question_question_choice_id_fkey on table user_login_security_question depends on table security_question_option
2023-01-09 08:07:50.528 GMT [20303] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2023-01-09 08:07:50.528 GMT [20303] STATEMENT:  DROP TABLE IF EXISTS security_question_option;
2023-01-09 08:07:50.531 GMT [20303] ERROR:  cannot drop table savings_account because other objects depend on it
2023-01-09 08:07:50.531 GMT [20303] DETAIL:  constraint savings_statement_account_id_fkey on table savings_statement depends on table savings_account
	view client.view_savings_account depends on table savings_account
	view client.view_savings_account_statements depends on view client.view_savings_account
	view client.view_savings_account_statement depends on view client.view_savings_account_statements
2023-01-09 08:07:50.531 GMT [20303] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2023-01-09 08:07:50.531 GMT [20303] STATEMENT:  DROP TABLE IF EXISTS savings_account;
2023-01-09 08:07:50.532 GMT [20303] ERROR:  cannot drop table credit_account because other objects depend on it
2023-01-09 08:07:50.532 GMT [20303] DETAIL:  constraint credit_account_application_account_id_fkey on table credit_account_application depends on table credit_account
	constraint credit_statement_account_id_fkey on table credit_statement depends on table credit_account
	view client.view_credit_accounts depends on table credit_account
2023-01-09 08:07:50.532 GMT [20303] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2023-01-09 08:07:50.532 GMT [20303] STATEMENT:  DROP TABLE IF EXISTS credit_account;
2023-01-09 08:07:50.533 GMT [20303] ERROR:  cannot drop table debit_account because other objects depend on it
2023-01-09 08:07:50.533 GMT [20303] DETAIL:  constraint debit_statement_account_id_fkey on table debit_statement depends on table debit_account
	constraint debit_overdraft_account_id_fkey on table debit_overdraft depends on table debit_account
	view client.view_debit_accounts depends on table debit_account
2023-01-09 08:07:50.533 GMT [20303] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2023-01-09 08:07:50.533 GMT [20303] STATEMENT:  DROP TABLE IF EXISTS debit_account;
2023-01-09 08:07:50.534 GMT [20303] ERROR:  cannot drop table loan because other objects depend on it
2023-01-09 08:07:50.534 GMT [20303] DETAIL:  constraint loan_application_loan_id_fkey on table loan_application depends on table loan
	constraint loan_statement_loan_id_fkey on table loan_statement depends on table loan
	view client.view_loans depends on table loan
	view client.view_loan_applications depends on view client.view_loans
	view client.view_loan_statements depends on view client.view_loans
2023-01-09 08:07:50.534 GMT [20303] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2023-01-09 08:07:50.534 GMT [20303] STATEMENT:  DROP TABLE IF EXISTS loan;
2023-01-09 08:07:50.535 GMT [20303] ERROR:  cannot drop table savings_statement because other objects depend on it
2023-01-09 08:07:50.535 GMT [20303] DETAIL:  constraint transaction_savings_statement_id_fkey on table transaction depends on table savings_statement
	view client.view_savings_account_statements depends on table savings_statement
	view client.view_savings_account_statement depends on view client.view_savings_account_statements
2023-01-09 08:07:50.535 GMT [20303] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2023-01-09 08:07:50.535 GMT [20303] STATEMENT:  DROP TABLE IF EXISTS savings_statement;
2023-01-09 08:07:50.538 GMT [20303] ERROR:  cannot drop table credit_statement because other objects depend on it
2023-01-09 08:07:50.538 GMT [20303] DETAIL:  constraint transaction_credit_statement_id_fkey on table transaction depends on table credit_statement
2023-01-09 08:07:50.538 GMT [20303] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2023-01-09 08:07:50.538 GMT [20303] STATEMENT:  DROP TABLE IF EXISTS credit_statement;
2023-01-09 08:07:50.539 GMT [20303] ERROR:  cannot drop table debit_statement because other objects depend on it
2023-01-09 08:07:50.539 GMT [20303] DETAIL:  constraint transaction_debit_statement_id_fkey on table transaction depends on table debit_statement
2023-01-09 08:07:50.539 GMT [20303] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2023-01-09 08:07:50.539 GMT [20303] STATEMENT:  DROP TABLE IF EXISTS debit_statement;
2023-01-09 08:07:50.545 GMT [20303] ERROR:  cannot drop table transaction because other objects depend on it
2023-01-09 08:07:50.545 GMT [20303] DETAIL:  view client.view_savings_account_statement depends on table transaction
2023-01-09 08:07:50.545 GMT [20303] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2023-01-09 08:07:50.545 GMT [20303] STATEMENT:  DROP TABLE IF EXISTS transaction;
2023-01-09 08:07:50.546 GMT [20303] ERROR:  cannot drop table loan_application because other objects depend on it
2023-01-09 08:07:50.546 GMT [20303] DETAIL:  view client.view_loan_applications depends on table loan_application
2023-01-09 08:07:50.546 GMT [20303] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2023-01-09 08:07:50.546 GMT [20303] STATEMENT:  DROP TABLE IF EXISTS loan_application;
2023-01-09 08:07:50.547 GMT [20303] ERROR:  cannot drop table loan_statement because other objects depend on it
2023-01-09 08:07:50.547 GMT [20303] DETAIL:  view client.view_loan_statements depends on table loan_statement
2023-01-09 08:07:50.547 GMT [20303] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2023-01-09 08:07:50.547 GMT [20303] STATEMENT:  DROP TABLE IF EXISTS loan_statement;
2023-01-09 08:07:50.604 GMT [20303] ERROR:  missing FROM-clause entry for table "security_question_answer" at character 112
2023-01-09 08:07:50.604 GMT [20303] STATEMENT:  CREATE OR REPLACE VIEW client.view_security_questions AS
	SELECT security_question_option.question_description, security_question_answer.question_answer
	FROM user_login_security_question
	INNER JOIN security_question_option ON user_login_security_question.question_choice_id = security_question_option.id;
2023-01-09 08:07:50.604 GMT [20303] ERROR:  syntax error at or near "INNER" at character 1
2023-01-09 08:07:50.604 GMT [20303] STATEMENT:  INNER JOIN security_question_answer ON user_login_security_question.id = security_question_answer.question_id;
2023-01-09 08:07:50.626 GMT [20303] ERROR:  missing FROM-clause entry for table "view_credit_account" at character 339
2023-01-09 08:07:50.626 GMT [20303] STATEMENT:  CREATE OR REPLACE VIEW client.view_credit_account_statements AS
	SELECT credit_statement.id, credit_statement.starting_date, credit_statement.end_date, credit_statement.amount, credit_statement.minimum_payment, credit_statement.minimum_payment_due_date, credit_statement.account_id
	FROM view_credit_accounts
	RIGHT JOIN credit_statement ON view_credit_account.id = credit_statement.account_id;
2023-01-09 08:07:50.626 GMT [20303] ERROR:  relation "view_credit_account_statements" does not exist at character 204
2023-01-09 08:07:50.626 GMT [20303] STATEMENT:  CREATE OR REPLACE VIEW client.view_credit_account_statement AS
	SELECT transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date, transaction.credit_account_id
	FROM view_credit_account_statements
	RIGHT JOIN transaction ON view_credit_account_statements.id = transaction.credit_statement_id;
2023-01-09 08:07:50.628 GMT [20303] ERROR:  column debit_statement.minimum_payment does not exist at character 172
2023-01-09 08:07:50.628 GMT [20303] STATEMENT:  CREATE OR REPLACE VIEW client.view_debit_account_statements AS
	SELECT debit_statement.id, debit_statement.starting_date, debit_statement.end_date, debit_statement.amount, debit_statement.minimum_payment, debit_statement.minimum_payment_due_date, debit_statement.account_id
	FROM view_debit_accounts
	RIGHT JOIN debit_statement ON view_debit_accounts.id = debit_statement.account_id;
2023-01-09 08:07:50.628 GMT [20303] ERROR:  relation "view_debit_account_statements" does not exist at character 200
2023-01-09 08:07:50.628 GMT [20303] STATEMENT:  CREATE OR REPLACE VIEW client.view_debit_account_status AS
	SELECT transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date, transaction.credit_account_id
	FROM view_debit_account_statements
	RIGHT JOIN transaction ON view_debit_account_statements.id = transaction.debit_statement_id;
2023-01-09 08:07:50.629 GMT [20303] ERROR:  role "manager" already exists
2023-01-09 08:07:50.629 GMT [20303] STATEMENT:  CREATE ROLE manager WITH LOGIN PASSWORD 'manager';
2023-01-09 08:07:50.629 GMT [20303] ERROR:  role "employee1" already exists
2023-01-09 08:07:50.629 GMT [20303] STATEMENT:  CREATE ROLE employee1 WITH LOGIN PASSWORD 'employee1';
2023-01-09 08:07:50.629 GMT [20303] ERROR:  role "employee2" already exists
2023-01-09 08:07:50.629 GMT [20303] STATEMENT:  CREATE ROLE employee2 WITH LOGIN PASSWORD 'employee2';
2023-01-09 08:07:50.629 GMT [20303] ERROR:  role "employee3" already exists
2023-01-09 08:07:50.629 GMT [20303] STATEMENT:  CREATE ROLE employee3 WITH LOGIN PASSWORD 'employee3';
2023-01-09 08:07:50.629 GMT [20303] ERROR:  role "employee4" already exists
2023-01-09 08:07:50.629 GMT [20303] STATEMENT:  CREATE ROLE employee4 WITH LOGIN PASSWORD 'employee4';
2023-01-09 08:07:50.629 GMT [20303] ERROR:  role "employee5" already exists
2023-01-09 08:07:50.629 GMT [20303] STATEMENT:  CREATE ROLE employee5 WITH LOGIN PASSWORD 'employee5';
2023-01-09 08:07:52.287 GMT [20149] LOG:  received fast shutdown request
2023-01-09 08:07:52.288 GMT [20149] LOG:  aborting any active transactions
2023-01-09 08:07:52.293 GMT [20149] LOG:  background worker "logical replication launcher" (PID 20156) exited with exit code 1
2023-01-09 08:07:52.295 GMT [20151] LOG:  shutting down
2023-01-09 08:07:52.341 GMT [20149] LOG:  database system is shut down
2023-01-09 08:07:54.212 GMT [20394] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-09 08:07:54.213 GMT [20394] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-09 08:07:54.214 GMT [20394] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-09 08:07:54.219 GMT [20395] LOG:  database system was shut down at 2023-01-09 08:07:53 GMT
2023-01-09 08:07:54.228 GMT [20394] LOG:  database system is ready to accept connections
2023-01-09 08:07:54.950 GMT [20420] ERROR:  missing FROM-clause entry for table "security_question_answer" at character 112
2023-01-09 08:07:54.950 GMT [20420] STATEMENT:  CREATE OR REPLACE VIEW client.view_security_questions AS
	SELECT security_question_option.question_description, security_question_answer.question_answer
	FROM user_login_security_question
	INNER JOIN security_question_option ON user_login_security_question.question_choice_id = security_question_option.id;
2023-01-09 08:07:54.950 GMT [20420] ERROR:  syntax error at or near "INNER" at character 1
2023-01-09 08:07:54.950 GMT [20420] STATEMENT:  INNER JOIN security_question_answer ON user_login_security_question.id = security_question_answer.question_id;
2023-01-09 08:07:54.972 GMT [20420] ERROR:  missing FROM-clause entry for table "view_credit_account" at character 339
2023-01-09 08:07:54.972 GMT [20420] STATEMENT:  CREATE OR REPLACE VIEW client.view_credit_account_statements AS
	SELECT credit_statement.id, credit_statement.starting_date, credit_statement.end_date, credit_statement.amount, credit_statement.minimum_payment, credit_statement.minimum_payment_due_date, credit_statement.account_id
	FROM view_credit_accounts
	RIGHT JOIN credit_statement ON view_credit_account.id = credit_statement.account_id;
2023-01-09 08:07:54.972 GMT [20420] ERROR:  relation "view_credit_account_statements" does not exist at character 204
2023-01-09 08:07:54.972 GMT [20420] STATEMENT:  CREATE OR REPLACE VIEW client.view_credit_account_statement AS
	SELECT transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date, transaction.credit_account_id
	FROM view_credit_account_statements
	RIGHT JOIN transaction ON view_credit_account_statements.id = transaction.credit_statement_id;
2023-01-09 08:07:54.977 GMT [20420] ERROR:  column debit_statement.minimum_payment does not exist at character 172
2023-01-09 08:07:54.977 GMT [20420] STATEMENT:  CREATE OR REPLACE VIEW client.view_debit_account_statements AS
	SELECT debit_statement.id, debit_statement.starting_date, debit_statement.end_date, debit_statement.amount, debit_statement.minimum_payment, debit_statement.minimum_payment_due_date, debit_statement.account_id
	FROM view_debit_accounts
	RIGHT JOIN debit_statement ON view_debit_accounts.id = debit_statement.account_id;
2023-01-09 08:07:54.977 GMT [20420] ERROR:  relation "view_debit_account_statements" does not exist at character 200
2023-01-09 08:07:54.977 GMT [20420] STATEMENT:  CREATE OR REPLACE VIEW client.view_debit_account_status AS
	SELECT transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date, transaction.credit_account_id
	FROM view_debit_account_statements
	RIGHT JOIN transaction ON view_debit_account_statements.id = transaction.debit_statement_id;
2023-01-09 08:08:17.840 GMT [20394] LOG:  received fast shutdown request
2023-01-09 08:08:17.843 GMT [20394] LOG:  aborting any active transactions
2023-01-09 08:08:17.847 GMT [20394] LOG:  background worker "logical replication launcher" (PID 20401) exited with exit code 1
2023-01-09 08:08:17.847 GMT [20396] LOG:  shutting down
2023-01-09 08:08:17.889 GMT [20394] LOG:  database system is shut down
2023-01-09 08:08:20.977 GMT [20603] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-09 08:08:20.978 GMT [20603] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-09 08:08:20.979 GMT [20603] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-09 08:08:20.990 GMT [20604] LOG:  database system was shut down at 2023-01-09 08:08:20 GMT
2023-01-09 08:08:20.996 GMT [20603] LOG:  database system is ready to accept connections
2023-01-09 08:08:21.701 GMT [20629] ERROR:  missing FROM-clause entry for table "security_question_answer" at character 112
2023-01-09 08:08:21.701 GMT [20629] STATEMENT:  CREATE OR REPLACE VIEW client.view_security_questions AS
	SELECT security_question_option.question_description, security_question_answer.question_answer
	FROM user_login_security_question
	INNER JOIN security_question_option ON user_login_security_question.question_choice_id = security_question_option.id;
2023-01-09 08:08:21.701 GMT [20629] ERROR:  syntax error at or near "INNER" at character 1
2023-01-09 08:08:21.701 GMT [20629] STATEMENT:  INNER JOIN security_question_answer ON user_login_security_question.id = security_question_answer.question_id;
2023-01-09 08:08:21.736 GMT [20629] ERROR:  column transaction.credit_account_id does not exist at character 169
2023-01-09 08:08:21.736 GMT [20629] STATEMENT:  CREATE OR REPLACE VIEW client.view_credit_account_statement AS
	SELECT transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date, transaction.credit_account_id
	FROM view_credit_account_statements
	RIGHT JOIN transaction ON view_credit_account_statements.id = transaction.credit_statement_id;
2023-01-09 08:08:21.739 GMT [20629] ERROR:  column debit_statement.minimum_payment does not exist at character 172
2023-01-09 08:08:21.739 GMT [20629] STATEMENT:  CREATE OR REPLACE VIEW client.view_debit_account_statements AS
	SELECT debit_statement.id, debit_statement.starting_date, debit_statement.end_date, debit_statement.amount, debit_statement.minimum_payment, debit_statement.minimum_payment_due_date, debit_statement.account_id
	FROM view_debit_accounts
	RIGHT JOIN debit_statement ON view_debit_accounts.id = debit_statement.account_id;
2023-01-09 08:08:21.739 GMT [20629] ERROR:  relation "view_debit_account_statements" does not exist at character 200
2023-01-09 08:08:21.739 GMT [20629] STATEMENT:  CREATE OR REPLACE VIEW client.view_debit_account_status AS
	SELECT transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date, transaction.credit_account_id
	FROM view_debit_account_statements
	RIGHT JOIN transaction ON view_debit_account_statements.id = transaction.debit_statement_id;
2023-01-09 08:17:39.816 GMT [20603] LOG:  received fast shutdown request
2023-01-09 08:17:39.818 GMT [20603] LOG:  aborting any active transactions
2023-01-09 08:17:39.820 GMT [20603] LOG:  background worker "logical replication launcher" (PID 20610) exited with exit code 1
2023-01-09 08:17:39.825 GMT [20605] LOG:  shutting down
2023-01-09 08:17:39.842 GMT [20603] LOG:  database system is shut down
2023-01-09 08:17:41.742 GMT [22315] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-09 08:17:41.742 GMT [22315] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-09 08:17:41.743 GMT [22315] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-09 08:17:41.748 GMT [22316] LOG:  database system was shut down at 2023-01-09 08:17:41 GMT
2023-01-09 08:17:41.754 GMT [22315] LOG:  database system is ready to accept connections
2023-01-09 08:17:42.505 GMT [22341] ERROR:  missing FROM-clause entry for table "security_question_answer" at character 112
2023-01-09 08:17:42.505 GMT [22341] STATEMENT:  CREATE OR REPLACE VIEW client.view_security_questions AS
	SELECT security_question_option.question_description, security_question_answer.question_answer
	FROM user_login_security_question
	INNER JOIN security_question_option ON user_login_security_question.question_choice_id = security_question_option.id;
2023-01-09 08:17:42.506 GMT [22341] ERROR:  syntax error at or near "INNER" at character 1
2023-01-09 08:17:42.506 GMT [22341] STATEMENT:  INNER JOIN security_question_answer ON user_login_security_question.id = security_question_answer.question_id;
2023-01-09 08:17:42.530 GMT [22341] ERROR:  column debit_statement.minimum_payment does not exist at character 172
2023-01-09 08:17:42.530 GMT [22341] STATEMENT:  CREATE OR REPLACE VIEW client.view_debit_account_statements AS
	SELECT debit_statement.id, debit_statement.starting_date, debit_statement.end_date, debit_statement.amount, debit_statement.minimum_payment, debit_statement.minimum_payment_due_date, debit_statement.account_id
	FROM view_debit_accounts
	RIGHT JOIN debit_statement ON view_debit_accounts.id = debit_statement.account_id;
2023-01-09 08:17:42.531 GMT [22341] ERROR:  relation "view_debit_account_statements" does not exist at character 202
2023-01-09 08:17:42.531 GMT [22341] STATEMENT:  CREATE OR REPLACE VIEW client.view_debit_account_status AS
	SELECT transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date, transaction.credit_statement_id
	FROM view_debit_account_statements
	RIGHT JOIN transaction ON view_debit_account_statements.id = transaction.debit_statement_id;
2023-01-09 08:18:13.466 GMT [22315] LOG:  received fast shutdown request
2023-01-09 08:18:13.468 GMT [22315] LOG:  aborting any active transactions
2023-01-09 08:18:13.475 GMT [22315] LOG:  background worker "logical replication launcher" (PID 22322) exited with exit code 1
2023-01-09 08:18:13.475 GMT [22317] LOG:  shutting down
2023-01-09 08:18:13.520 GMT [22315] LOG:  database system is shut down
2023-01-09 08:18:15.582 GMT [22551] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-09 08:18:15.582 GMT [22551] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-09 08:18:15.584 GMT [22551] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-09 08:18:15.589 GMT [22552] LOG:  database system was shut down at 2023-01-09 08:18:15 GMT
2023-01-09 08:18:15.596 GMT [22551] LOG:  database system is ready to accept connections
2023-01-09 08:18:16.322 GMT [22577] ERROR:  missing FROM-clause entry for table "security_question_answer" at character 112
2023-01-09 08:18:16.322 GMT [22577] STATEMENT:  CREATE OR REPLACE VIEW client.view_security_questions AS
	SELECT security_question_option.question_description, security_question_answer.question_answer
	FROM user_login_security_question
	INNER JOIN security_question_option ON user_login_security_question.question_choice_id = security_question_option.id;
2023-01-09 08:18:16.325 GMT [22577] ERROR:  syntax error at or near "INNER" at character 1
2023-01-09 08:18:16.325 GMT [22577] STATEMENT:  INNER JOIN security_question_answer ON user_login_security_question.id = security_question_answer.question_id;
2023-01-09 08:23:41.357 GMT [22551] LOG:  received fast shutdown request
2023-01-09 08:23:41.359 GMT [22551] LOG:  aborting any active transactions
2023-01-09 08:23:41.363 GMT [22551] LOG:  background worker "logical replication launcher" (PID 22558) exited with exit code 1
2023-01-09 08:23:41.364 GMT [22553] LOG:  shutting down
2023-01-09 08:23:41.378 GMT [22551] LOG:  database system is shut down
2023-01-09 08:23:43.243 GMT [23617] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-09 08:23:43.243 GMT [23617] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-09 08:23:43.244 GMT [23617] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-09 08:23:43.251 GMT [23618] LOG:  database system was shut down at 2023-01-09 08:23:42 GMT
2023-01-09 08:23:43.258 GMT [23617] LOG:  database system is ready to accept connections
2023-01-09 08:27:57.901 GMT [23617] LOG:  received fast shutdown request
2023-01-09 08:27:57.902 GMT [23617] LOG:  aborting any active transactions
2023-01-09 08:27:57.907 GMT [23617] LOG:  background worker "logical replication launcher" (PID 23625) exited with exit code 1
2023-01-09 08:27:57.908 GMT [23620] LOG:  shutting down
2023-01-09 08:27:57.945 GMT [23617] LOG:  database system is shut down
2023-01-09 08:28:01.126 GMT [24503] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-09 08:28:01.127 GMT [24503] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-09 08:28:01.128 GMT [24503] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-09 08:28:01.135 GMT [24504] LOG:  database system was shut down at 2023-01-09 08:28:00 GMT
2023-01-09 08:28:01.139 GMT [24503] LOG:  database system is ready to accept connections
2023-01-09 08:36:05.681 GMT [24503] LOG:  received fast shutdown request
2023-01-09 08:36:05.682 GMT [24503] LOG:  aborting any active transactions
2023-01-09 08:36:05.687 GMT [24503] LOG:  background worker "logical replication launcher" (PID 24510) exited with exit code 1
2023-01-09 08:36:05.687 GMT [24505] LOG:  shutting down
2023-01-09 08:36:05.699 GMT [24503] LOG:  database system is shut down
2023-01-09 08:36:07.887 GMT [26062] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-09 08:36:07.888 GMT [26062] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-09 08:36:07.889 GMT [26062] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-09 08:36:07.900 GMT [26063] LOG:  database system was shut down at 2023-01-09 08:36:07 GMT
2023-01-09 08:36:07.907 GMT [26062] LOG:  database system is ready to accept connections
2023-01-09 08:36:08.566 GMT [26106] ERROR:  relation "client.view_dedit_accounts" does not exist at character 13
2023-01-09 08:36:08.566 GMT [26106] STATEMENT:  INSERT INTO client.view_dedit_accounts VALUES (3000, 0.05);
2023-01-09 08:36:23.509 GMT [26062] LOG:  received fast shutdown request
2023-01-09 08:36:23.511 GMT [26062] LOG:  aborting any active transactions
2023-01-09 08:36:23.514 GMT [26062] LOG:  background worker "logical replication launcher" (PID 26070) exited with exit code 1
2023-01-09 08:36:23.518 GMT [26064] LOG:  shutting down
2023-01-09 08:36:23.555 GMT [26062] LOG:  database system is shut down
2023-01-09 08:36:25.512 GMT [26248] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-09 08:36:25.512 GMT [26248] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-09 08:36:25.514 GMT [26248] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-09 08:36:25.519 GMT [26249] LOG:  database system was shut down at 2023-01-09 08:36:25 GMT
2023-01-09 08:36:25.524 GMT [26248] LOG:  database system is ready to accept connections
2023-01-09 08:36:26.275 GMT [26288] ERROR:  cannot insert into view "view_debit_accounts"
2023-01-09 08:36:26.275 GMT [26288] DETAIL:  Views that do not select from a single table or view are not automatically updatable.
2023-01-09 08:36:26.275 GMT [26288] HINT:  To enable inserting into the view, provide an INSTEAD OF INSERT trigger or an unconditional ON INSERT DO INSTEAD rule.
2023-01-09 08:36:26.275 GMT [26288] STATEMENT:  INSERT INTO client.view_debit_accounts VALUES (3000, 0.05);
2023-01-09 08:40:55.904 GMT [26248] LOG:  received fast shutdown request
2023-01-09 08:40:55.906 GMT [26248] LOG:  aborting any active transactions
2023-01-09 08:40:55.911 GMT [26248] LOG:  background worker "logical replication launcher" (PID 26255) exited with exit code 1
2023-01-09 08:40:55.912 GMT [26250] LOG:  shutting down
2023-01-09 08:40:55.951 GMT [26248] LOG:  database system is shut down
2023-01-09 08:40:57.623 GMT [27115] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-09 08:40:57.624 GMT [27115] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-09 08:40:57.626 GMT [27115] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-09 08:40:57.630 GMT [27116] LOG:  database system was shut down at 2023-01-09 08:40:57 GMT
2023-01-09 08:40:57.636 GMT [27115] LOG:  database system is ready to accept connections
2023-01-09 08:40:58.344 GMT [27153] ERROR:  column "alfie" does not exist at character 45
2023-01-09 08:40:58.344 GMT [27153] STATEMENT:  INSERT INTO client.view_login VALUES (1, 1, "alfie");
2023-01-09 08:41:29.247 GMT [27115] LOG:  received fast shutdown request
2023-01-09 08:41:29.249 GMT [27115] LOG:  aborting any active transactions
2023-01-09 08:41:29.252 GMT [27115] LOG:  background worker "logical replication launcher" (PID 27122) exited with exit code 1
2023-01-09 08:41:29.253 GMT [27117] LOG:  shutting down
2023-01-09 08:41:29.300 GMT [27115] LOG:  database system is shut down
2023-01-09 08:41:31.928 GMT [27329] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-09 08:41:31.928 GMT [27329] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-09 08:41:31.929 GMT [27329] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-09 08:41:31.936 GMT [27330] LOG:  database system was shut down at 2023-01-09 08:41:31 GMT
2023-01-09 08:41:31.945 GMT [27329] LOG:  database system is ready to accept connections
2023-01-09 08:41:32.688 GMT [27367] ERROR:  column "alfie" does not exist at character 42
2023-01-09 08:41:32.688 GMT [27367] STATEMENT:  INSERT INTO client.view_login VALUES (1, "alfie", "alfie");
2023-01-09 08:43:46.541 GMT [27329] LOG:  received fast shutdown request
2023-01-09 08:43:46.542 GMT [27329] LOG:  aborting any active transactions
2023-01-09 08:43:46.546 GMT [27329] LOG:  background worker "logical replication launcher" (PID 27336) exited with exit code 1
2023-01-09 08:43:46.546 GMT [27331] LOG:  shutting down
2023-01-09 08:43:46.584 GMT [27329] LOG:  database system is shut down
2023-01-09 08:43:48.633 GMT [27844] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-09 08:43:48.633 GMT [27844] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-09 08:43:48.635 GMT [27844] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-09 08:43:48.639 GMT [27846] LOG:  database system was shut down at 2023-01-09 08:43:48 GMT
2023-01-09 08:43:48.645 GMT [27844] LOG:  database system is ready to accept connections
2023-01-09 08:43:49.372 GMT [27891] ERROR:  syntax error at or near ")" at character 31
2023-01-09 08:43:49.372 GMT [27891] STATEMENT:  INSERT INTO client.view_login() VALUES (1, "alfie");
2023-01-09 08:43:58.608 GMT [27844] LOG:  received fast shutdown request
2023-01-09 08:43:58.609 GMT [27844] LOG:  aborting any active transactions
2023-01-09 08:43:58.613 GMT [27844] LOG:  background worker "logical replication launcher" (PID 27853) exited with exit code 1
2023-01-09 08:43:58.613 GMT [27848] LOG:  shutting down
2023-01-09 08:43:58.658 GMT [27844] LOG:  database system is shut down
2023-01-09 08:44:00.620 GMT [28018] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-09 08:44:00.620 GMT [28018] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-09 08:44:00.622 GMT [28018] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-09 08:44:00.626 GMT [28019] LOG:  database system was shut down at 2023-01-09 08:44:00 GMT
2023-01-09 08:44:00.631 GMT [28018] LOG:  database system is ready to accept connections
2023-01-09 08:44:01.356 GMT [28057] ERROR:  column "alfie" does not exist at character 42
2023-01-09 08:44:01.356 GMT [28057] STATEMENT:  INSERT INTO client.view_login VALUES (1, "alfie");
2023-01-09 08:44:38.569 GMT [28212] ERROR:  cannot drop table customer because other objects depend on it
2023-01-09 08:44:38.569 GMT [28212] DETAIL:  constraint online_account_customer_id_fkey on table online_account depends on table customer
	view client.view_personal_information depends on table customer
2023-01-09 08:44:38.569 GMT [28212] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2023-01-09 08:44:38.569 GMT [28212] STATEMENT:  DROP TABLE IF EXISTS customer;
2023-01-09 08:44:38.572 GMT [28212] ERROR:  cannot drop table online_account because other objects depend on it
2023-01-09 08:44:38.572 GMT [28212] DETAIL:  constraint user_login_account_id_fkey on table user_login depends on table online_account
	constraint savings_account_account_id_fkey on table savings_account depends on table online_account
	constraint credit_account_account_id_fkey on table credit_account depends on table online_account
	constraint debit_account_account_id_fkey on table debit_account depends on table online_account
	constraint loan_account_id_fkey on table loan depends on table online_account
	constraint external_account_account_id_fkey on table external_account depends on table online_account
	view client.view_online_account_details depends on table online_account
	view client.view_personal_information depends on view client.view_online_account_details
	view client.view_loans depends on view client.view_online_account_details
	view client.view_loan_applications depends on view client.view_loans
	view client.view_loan_statements depends on view client.view_loans
	view client.view_savings_account depends on view client.view_online_account_details
	view client.view_savings_account_statements depends on view client.view_savings_account
	view client.view_savings_account_statement depends on view client.view_savings_account_statements
	view client.view_credit_accounts depends on view client.view_online_account_details
	view client.view_credit_account_applications depends on view client.view_credit_accounts
	view client.view_credit_account_statements depends on view client.view_credit_accounts
	view client.view_credit_account_statement depends on view client.view_credit_account_statements
	view client.view_debit_accounts depends on view client.view_online_account_details
	view client.view_debit_account_statements depends on view client.view_debit_accounts
	view client.view_debit_account_status depends on view client.view_debit_account_statements
2023-01-09 08:44:38.572 GMT [28212] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2023-01-09 08:44:38.572 GMT [28212] STATEMENT:  DROP TABLE IF EXISTS online_account;
2023-01-09 08:44:38.579 GMT [28212] ERROR:  cannot drop table user_login because other objects depend on it
2023-01-09 08:44:38.579 GMT [28212] DETAIL:  constraint user_login_security_question_login_id_fkey on table user_login_security_question depends on table user_login
	view client.view_login depends on table user_login
	view client.view_online_account_details depends on view client.view_login
	view client.view_personal_information depends on view client.view_online_account_details
	view client.view_loans depends on view client.view_online_account_details
	view client.view_loan_applications depends on view client.view_loans
	view client.view_loan_statements depends on view client.view_loans
	view client.view_savings_account depends on view client.view_online_account_details
	view client.view_savings_account_statements depends on view client.view_savings_account
	view client.view_savings_account_statement depends on view client.view_savings_account_statements
	view client.view_credit_accounts depends on view client.view_online_account_details
	view client.view_credit_account_applications depends on view client.view_credit_accounts
	view client.view_credit_account_statements depends on view client.view_credit_accounts
	view client.view_credit_account_statement depends on view client.view_credit_account_statements
	view client.view_debit_accounts depends on view client.view_online_account_details
	view client.view_debit_account_statements depends on view client.view_debit_accounts
	view client.view_debit_account_status depends on view client.view_debit_account_statements
	view client.login depends on table user_login
	view client.view_login_secret depends on table user_login
2023-01-09 08:44:38.579 GMT [28212] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2023-01-09 08:44:38.579 GMT [28212] STATEMENT:  DROP TABLE IF EXISTS user_login;
2023-01-09 08:44:38.581 GMT [28212] ERROR:  cannot drop table user_login_security_question because other objects depend on it
2023-01-09 08:44:38.581 GMT [28212] DETAIL:  constraint security_question_answer_question_id_fkey on table security_question_answer depends on table user_login_security_question
	view client.view_security_questions depends on table user_login_security_question
2023-01-09 08:44:38.581 GMT [28212] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2023-01-09 08:44:38.581 GMT [28212] STATEMENT:  DROP TABLE IF EXISTS user_login_security_question;
2023-01-09 08:44:38.581 GMT [28212] ERROR:  cannot drop table security_question_option because other objects depend on it
2023-01-09 08:44:38.581 GMT [28212] DETAIL:  constraint user_login_security_question_question_choice_id_fkey on table user_login_security_question depends on table security_question_option
	view client.view_security_questions depends on table security_question_option
2023-01-09 08:44:38.581 GMT [28212] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2023-01-09 08:44:38.581 GMT [28212] STATEMENT:  DROP TABLE IF EXISTS security_question_option;
2023-01-09 08:44:38.582 GMT [28212] ERROR:  cannot drop table security_question_answer because other objects depend on it
2023-01-09 08:44:38.582 GMT [28212] DETAIL:  view client.view_security_questions depends on table security_question_answer
2023-01-09 08:44:38.582 GMT [28212] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2023-01-09 08:44:38.582 GMT [28212] STATEMENT:  DROP TABLE IF EXISTS security_question_answer;
2023-01-09 08:44:38.584 GMT [28212] ERROR:  cannot drop table savings_account because other objects depend on it
2023-01-09 08:44:38.584 GMT [28212] DETAIL:  constraint savings_statement_account_id_fkey on table savings_statement depends on table savings_account
	view client.view_savings_account depends on table savings_account
	view client.view_savings_account_statements depends on view client.view_savings_account
	view client.view_savings_account_statement depends on view client.view_savings_account_statements
2023-01-09 08:44:38.584 GMT [28212] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2023-01-09 08:44:38.584 GMT [28212] STATEMENT:  DROP TABLE IF EXISTS savings_account;
2023-01-09 08:44:38.586 GMT [28212] ERROR:  cannot drop table credit_account because other objects depend on it
2023-01-09 08:44:38.586 GMT [28212] DETAIL:  constraint credit_account_application_account_id_fkey on table credit_account_application depends on table credit_account
	constraint credit_statement_account_id_fkey on table credit_statement depends on table credit_account
	view client.view_credit_accounts depends on table credit_account
	view client.view_credit_account_applications depends on view client.view_credit_accounts
	view client.view_credit_account_statements depends on view client.view_credit_accounts
	view client.view_credit_account_statement depends on view client.view_credit_account_statements
2023-01-09 08:44:38.586 GMT [28212] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2023-01-09 08:44:38.586 GMT [28212] STATEMENT:  DROP TABLE IF EXISTS credit_account;
2023-01-09 08:44:38.587 GMT [28212] ERROR:  cannot drop table debit_account because other objects depend on it
2023-01-09 08:44:38.587 GMT [28212] DETAIL:  constraint debit_statement_account_id_fkey on table debit_statement depends on table debit_account
	constraint debit_overdraft_account_id_fkey on table debit_overdraft depends on table debit_account
	view client.view_debit_accounts depends on table debit_account
	view client.view_debit_account_statements depends on view client.view_debit_accounts
	view client.view_debit_account_status depends on view client.view_debit_account_statements
2023-01-09 08:44:38.587 GMT [28212] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2023-01-09 08:44:38.587 GMT [28212] STATEMENT:  DROP TABLE IF EXISTS debit_account;
2023-01-09 08:44:38.588 GMT [28212] ERROR:  cannot drop table loan because other objects depend on it
2023-01-09 08:44:38.588 GMT [28212] DETAIL:  constraint loan_application_loan_id_fkey on table loan_application depends on table loan
	constraint loan_statement_loan_id_fkey on table loan_statement depends on table loan
	view client.view_loans depends on table loan
	view client.view_loan_applications depends on view client.view_loans
	view client.view_loan_statements depends on view client.view_loans
2023-01-09 08:44:38.588 GMT [28212] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2023-01-09 08:44:38.588 GMT [28212] STATEMENT:  DROP TABLE IF EXISTS loan;
2023-01-09 08:44:38.589 GMT [28212] ERROR:  cannot drop table savings_statement because other objects depend on it
2023-01-09 08:44:38.589 GMT [28212] DETAIL:  constraint transaction_savings_statement_id_fkey on table transaction depends on table savings_statement
	view client.view_savings_account_statements depends on table savings_statement
	view client.view_savings_account_statement depends on view client.view_savings_account_statements
2023-01-09 08:44:38.589 GMT [28212] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2023-01-09 08:44:38.589 GMT [28212] STATEMENT:  DROP TABLE IF EXISTS savings_statement;
2023-01-09 08:44:38.589 GMT [28212] ERROR:  cannot drop table credit_account_application because other objects depend on it
2023-01-09 08:44:38.589 GMT [28212] DETAIL:  view client.view_credit_account_applications depends on table credit_account_application
2023-01-09 08:44:38.589 GMT [28212] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2023-01-09 08:44:38.589 GMT [28212] STATEMENT:  DROP TABLE IF EXISTS credit_account_application;
2023-01-09 08:44:38.590 GMT [28212] ERROR:  cannot drop table credit_statement because other objects depend on it
2023-01-09 08:44:38.590 GMT [28212] DETAIL:  constraint transaction_credit_statement_id_fkey on table transaction depends on table credit_statement
	view client.view_credit_account_statements depends on table credit_statement
	view client.view_credit_account_statement depends on view client.view_credit_account_statements
2023-01-09 08:44:38.590 GMT [28212] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2023-01-09 08:44:38.590 GMT [28212] STATEMENT:  DROP TABLE IF EXISTS credit_statement;
2023-01-09 08:44:38.590 GMT [28212] ERROR:  cannot drop table debit_statement because other objects depend on it
2023-01-09 08:44:38.590 GMT [28212] DETAIL:  constraint transaction_debit_statement_id_fkey on table transaction depends on table debit_statement
	view client.view_debit_account_statements depends on table debit_statement
	view client.view_debit_account_status depends on view client.view_debit_account_statements
2023-01-09 08:44:38.590 GMT [28212] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2023-01-09 08:44:38.590 GMT [28212] STATEMENT:  DROP TABLE IF EXISTS debit_statement;
2023-01-09 08:44:38.597 GMT [28212] ERROR:  cannot drop table transaction because other objects depend on it
2023-01-09 08:44:38.597 GMT [28212] DETAIL:  view client.view_savings_account_statement depends on table transaction
	view client.view_credit_account_statement depends on table transaction
	view client.view_debit_account_status depends on table transaction
2023-01-09 08:44:38.597 GMT [28212] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2023-01-09 08:44:38.597 GMT [28212] STATEMENT:  DROP TABLE IF EXISTS transaction;
2023-01-09 08:44:38.598 GMT [28212] ERROR:  cannot drop table loan_application because other objects depend on it
2023-01-09 08:44:38.598 GMT [28212] DETAIL:  view client.view_loan_applications depends on table loan_application
2023-01-09 08:44:38.598 GMT [28212] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2023-01-09 08:44:38.598 GMT [28212] STATEMENT:  DROP TABLE IF EXISTS loan_application;
2023-01-09 08:44:38.599 GMT [28212] ERROR:  cannot drop table loan_statement because other objects depend on it
2023-01-09 08:44:38.599 GMT [28212] DETAIL:  view client.view_loan_statements depends on table loan_statement
2023-01-09 08:44:38.599 GMT [28212] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2023-01-09 08:44:38.599 GMT [28212] STATEMENT:  DROP TABLE IF EXISTS loan_statement;
2023-01-09 08:44:38.674 GMT [28212] ERROR:  role "manager" already exists
2023-01-09 08:44:38.674 GMT [28212] STATEMENT:  CREATE ROLE manager WITH LOGIN PASSWORD 'manager' CREATEROLE;
2023-01-09 08:44:38.674 GMT [28212] ERROR:  role "employee1" already exists
2023-01-09 08:44:38.674 GMT [28212] STATEMENT:  CREATE ROLE employee1 WITH LOGIN PASSWORD 'employee1' CREATEROLE;
2023-01-09 08:44:38.674 GMT [28212] ERROR:  role "employee2" already exists
2023-01-09 08:44:38.674 GMT [28212] STATEMENT:  CREATE ROLE employee2 WITH LOGIN PASSWORD 'employee2' CREATEROLE;
2023-01-09 08:44:38.675 GMT [28212] ERROR:  role "employee3" already exists
2023-01-09 08:44:38.675 GMT [28212] STATEMENT:  CREATE ROLE employee3 WITH LOGIN PASSWORD 'employee3' CREATEROLE;
2023-01-09 08:44:38.675 GMT [28212] ERROR:  role "employee4" already exists
2023-01-09 08:44:38.675 GMT [28212] STATEMENT:  CREATE ROLE employee4 WITH LOGIN PASSWORD 'employee4' CREATEROLE;
2023-01-09 08:44:38.675 GMT [28212] ERROR:  role "employee5" already exists
2023-01-09 08:44:38.675 GMT [28212] STATEMENT:  CREATE ROLE employee5 WITH LOGIN PASSWORD 'employee5' CREATEROLE;
2023-01-09 08:44:38.675 GMT [28212] ERROR:  column "alfie" does not exist at character 37
2023-01-09 08:44:38.675 GMT [28212] STATEMENT:  INSERT INTO client.login VALUES (1, "alfie");
2023-01-09 08:44:40.880 GMT [28018] LOG:  received fast shutdown request
2023-01-09 08:44:40.882 GMT [28018] LOG:  aborting any active transactions
2023-01-09 08:44:40.884 GMT [28018] LOG:  background worker "logical replication launcher" (PID 28025) exited with exit code 1
2023-01-09 08:44:40.886 GMT [28020] LOG:  shutting down
2023-01-09 08:44:40.928 GMT [28018] LOG:  database system is shut down
2023-01-09 08:44:43.892 GMT [28308] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-09 08:44:43.893 GMT [28308] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-09 08:44:43.894 GMT [28308] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-09 08:44:43.899 GMT [28309] LOG:  database system was shut down at 2023-01-09 08:44:43 GMT
2023-01-09 08:44:43.904 GMT [28308] LOG:  database system is ready to accept connections
2023-01-09 08:44:44.702 GMT [28349] ERROR:  column "alfie" does not exist at character 37
2023-01-09 08:44:44.702 GMT [28349] STATEMENT:  INSERT INTO client.login VALUES (1, "alfie");
2023-01-09 08:45:26.903 GMT [28308] LOG:  received fast shutdown request
2023-01-09 08:45:26.905 GMT [28308] LOG:  aborting any active transactions
2023-01-09 08:45:26.908 GMT [28308] LOG:  background worker "logical replication launcher" (PID 28315) exited with exit code 1
2023-01-09 08:45:26.909 GMT [28310] LOG:  shutting down
2023-01-09 08:45:26.948 GMT [28308] LOG:  database system is shut down
2023-01-09 08:45:28.808 GMT [28557] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-09 08:45:28.808 GMT [28557] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-09 08:45:28.810 GMT [28557] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-09 08:45:28.814 GMT [28561] LOG:  database system was shut down at 2023-01-09 08:45:28 GMT
2023-01-09 08:45:28.821 GMT [28557] LOG:  database system is ready to accept connections
2023-01-09 08:45:29.624 GMT [28603] ERROR:  column "alfie" does not exist at character 59
2023-01-09 08:45:29.624 GMT [28603] STATEMENT:  INSERT INTO client.login(account_id, username) VALUES (1, "alfie");
2023-01-09 08:46:33.633 GMT [28557] LOG:  received fast shutdown request
2023-01-09 08:46:33.634 GMT [28557] LOG:  aborting any active transactions
2023-01-09 08:46:33.636 GMT [28557] LOG:  background worker "logical replication launcher" (PID 28567) exited with exit code 1
2023-01-09 08:46:33.643 GMT [28562] LOG:  shutting down
2023-01-09 08:46:33.690 GMT [28557] LOG:  database system is shut down
2023-01-09 08:46:35.582 GMT [28900] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-09 08:46:35.582 GMT [28900] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-09 08:46:35.583 GMT [28900] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-09 08:46:35.588 GMT [28901] LOG:  database system was shut down at 2023-01-09 08:46:35 GMT
2023-01-09 08:46:35.596 GMT [28900] LOG:  database system is ready to accept connections
2023-01-09 08:46:36.424 GMT [28929] ERROR:  column "alfie" does not exist at character 60
2023-01-09 08:46:36.424 GMT [28929] STATEMENT:  INSERT INTO client.login (account_id, username) VALUES (1, "alfie");
2023-01-09 08:47:49.335 GMT [28900] LOG:  received fast shutdown request
2023-01-09 08:47:49.337 GMT [28900] LOG:  aborting any active transactions
2023-01-09 08:47:49.341 GMT [28900] LOG:  background worker "logical replication launcher" (PID 28907) exited with exit code 1
2023-01-09 08:47:49.343 GMT [28902] LOG:  shutting down
2023-01-09 08:47:49.376 GMT [28900] LOG:  database system is shut down
2023-01-09 08:47:51.163 GMT [29210] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-09 08:47:51.164 GMT [29210] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-09 08:47:51.165 GMT [29210] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-09 08:47:51.170 GMT [29211] LOG:  database system was shut down at 2023-01-09 08:47:50 GMT
2023-01-09 08:47:51.175 GMT [29210] LOG:  database system is ready to accept connections
2023-01-09 08:47:51.916 GMT [29249] ERROR:  insert or update on table "user_login" violates foreign key constraint "user_login_account_id_fkey"
2023-01-09 08:47:51.916 GMT [29249] DETAIL:  Key (account_id)=(1) is not present in table "online_account".
2023-01-09 08:47:51.916 GMT [29249] STATEMENT:  INSERT INTO client.login (account_id, username) VALUES (1, 'alfie');
2023-01-09 08:48:15.044 GMT [29210] LOG:  received fast shutdown request
2023-01-09 08:48:15.047 GMT [29210] LOG:  aborting any active transactions
2023-01-09 08:48:15.051 GMT [29210] LOG:  background worker "logical replication launcher" (PID 29217) exited with exit code 1
2023-01-09 08:48:15.052 GMT [29212] LOG:  shutting down
2023-01-09 08:48:15.096 GMT [29210] LOG:  database system is shut down
2023-01-09 08:48:16.963 GMT [29397] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-09 08:48:16.963 GMT [29397] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-09 08:48:16.964 GMT [29397] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-09 08:48:16.968 GMT [29398] LOG:  database system was shut down at 2023-01-09 08:48:16 GMT
2023-01-09 08:48:16.974 GMT [29397] LOG:  database system is ready to accept connections
2023-01-09 08:48:17.816 GMT [29433] ERROR:  invalid input syntax for type integer: "alfie" at character 37
2023-01-09 08:48:17.816 GMT [29433] STATEMENT:  INSERT INTO client.login VALUES (1, 'alfie');
2023-01-09 09:41:23.347 GMT [29397] LOG:  received fast shutdown request
2023-01-09 09:41:23.349 GMT [29397] LOG:  aborting any active transactions
2023-01-09 09:41:23.355 GMT [29397] LOG:  background worker "logical replication launcher" (PID 29404) exited with exit code 1
2023-01-09 09:41:23.356 GMT [29399] LOG:  shutting down
2023-01-09 09:41:23.369 GMT [29397] LOG:  database system is shut down
2023-01-09 09:41:37.206 GMT [38544] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-09 09:41:37.207 GMT [38544] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-09 09:41:37.209 GMT [38544] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-09 09:41:37.212 GMT [38545] LOG:  database system was shut down at 2023-01-09 09:41:36 GMT
2023-01-09 09:41:37.217 GMT [38544] LOG:  database system is ready to accept connections
2023-01-09 09:41:37.853 GMT [38580] ERROR:  relation "client_login" does not exist at character 206
2023-01-09 09:41:37.853 GMT [38580] STATEMENT:  CREATE OR REPLACE VIEW client.client_online_account_details AS
	SELECT online_account.id, online_account.date_opened, online_account.sort_code, online_account.customer_id
	    FROM online_account
	INNER JOIN client_login ON online_account.id = client_login.id;
2023-01-09 09:41:37.858 GMT [38580] ERROR:  relation "client_online_account_details" does not exist at character 104
2023-01-09 09:41:37.858 GMT [38580] STATEMENT:  CREATE OR REPLACE VIEW client.client_personal_information AS
	SELECT customer.* FROM customer
	LEFT JOIN client_online_account_details ON customer.id = client_online_account_details.customer_id;
2023-01-09 09:41:37.858 GMT [38580] ERROR:  relation "client_online_account_details" does not exist at character 136
2023-01-09 09:41:37.858 GMT [38580] STATEMENT:  CREATE OR REPLACE VIEW client.client_loans AS
	SELECT loan.id, loan.loan_amount, loan.loan_duration, loan.loan_type
	FROM loan
	LEFT JOIN client_online_account_details ON loan.account_id = client_online_account_details.id;
2023-01-09 09:41:37.858 GMT [38580] ERROR:  relation "client_loans" does not exist at character 133
2023-01-09 09:41:37.858 GMT [38580] STATEMENT:  CREATE OR REPLACE VIEW client.client_loan_applications AS
	SELECT loan_application.application_status, loan_application.loan_id
	FROM client_loans
	RIGHT JOIN loan_application ON client_loans.id = loan_application.loan_id;
2023-01-09 09:41:37.858 GMT [38580] ERROR:  relation "client_loans" does not exist at character 145
2023-01-09 09:41:37.858 GMT [38580] STATEMENT:  CREATE OR REPLACE VIEW client.client_loan_statements AS
	SELECT loan_statement.starting_date, loan_statement.amount, loan_statement.loan_id
	FROM client_loans
	RIGHT JOIN loan_statement ON client_loans.id = loan_statement.loan_id;
2023-01-09 09:41:37.858 GMT [38580] ERROR:  relation "client_online_account_details" does not exist at character 178
2023-01-09 09:41:37.858 GMT [38580] STATEMENT:  CREATE OR REPLACE VIEW client.client_savings_account AS
	SELECT savings_account.id, savings_account.current_balance, savings_account.interest_rate
	FROM savings_account
	LEFT JOIN client_online_account_details ON savings_account.account_id = client_online_account_details.id;
2023-01-09 09:41:37.858 GMT [38580] ERROR:  relation "client_savings_account" does not exist at character 218
2023-01-09 09:41:37.858 GMT [38580] STATEMENT:  CREATE OR REPLACE VIEW client.client_savings_account_statements AS
	SELECT savings_statement.id, savings_statement.starting_date, savings_statement.end_date, savings_statement.amount, savings_statement.account_id
	FROM client_savings_account
	RIGHT JOIN savings_statement ON client_savings_account.id = savings_statement.account_id;
2023-01-09 09:41:37.858 GMT [38580] ERROR:  relation "client_savings_account_statements" does not exist at character 210
2023-01-09 09:41:37.858 GMT [38580] STATEMENT:  CREATE OR REPLACE VIEW client.client_savings_account_statement AS
	SELECT transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date, transaction.savings_statement_id
	FROM client_savings_account_statements
	RIGHT JOIN transaction ON client_savings_account_statements.id = transaction.savings_statement_id;
2023-01-09 09:41:37.859 GMT [38580] ERROR:  relation "client_online_account_details" does not exist at character 207
2023-01-09 09:41:37.859 GMT [38580] STATEMENT:  CREATE OR REPLACE VIEW client.client_credit_accounts AS
	SELECT credit_account.id, credit_account.outstanding_balance, credit_account.credit_limit, credit_account.interest_rate
	FROM credit_account
	LEFT JOIN client_online_account_details ON credit_account.account_id = client_online_account_details.id;
2023-01-09 09:41:37.859 GMT [38580] ERROR:  relation "client_credit_accounts" does not exist at character 166
2023-01-09 09:41:37.859 GMT [38580] STATEMENT:  CREATE OR REPLACE VIEW client.client_credit_account_applications AS
	SELECT credit_account_application.application_status, credit_account_application.account_id
	FROM client_credit_accounts
	RIGHT JOIN credit_account_application ON client_credit_accounts.id = credit_account_application.account_id;
2023-01-09 09:41:37.859 GMT [38580] ERROR:  relation "client_credit_accounts" does not exist at character 289
2023-01-09 09:41:37.859 GMT [38580] STATEMENT:  CREATE OR REPLACE VIEW client.client_credit_account_statements AS
	SELECT credit_statement.id, credit_statement.starting_date, credit_statement.end_date, credit_statement.amount, credit_statement.minimum_payment, credit_statement.minimum_payment_due_date, credit_statement.account_id
	FROM client_credit_accounts
	RIGHT JOIN credit_statement ON client_credit_accounts.id = credit_statement.account_id;
2023-01-09 09:41:37.859 GMT [38580] ERROR:  relation "client_credit_account_statements" does not exist at character 208
2023-01-09 09:41:37.859 GMT [38580] STATEMENT:  CREATE OR REPLACE VIEW client.client_credit_account_statement AS
	SELECT transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date, transaction.credit_statement_id
	FROM client_credit_account_statements
	RIGHT JOIN transaction ON client_credit_account_statements.id = transaction.credit_statement_id;
2023-01-09 09:41:37.859 GMT [38580] ERROR:  relation "client_online_account_details" does not exist at character 169
2023-01-09 09:41:37.859 GMT [38580] STATEMENT:  CREATE OR REPLACE VIEW client.client_debit_accounts AS
	SELECT debit_account.id, debit_account.current_balance, debit_account.interest_rate
	FROM debit_account
	LEFT JOIN client_online_account_details ON debit_account.account_id = client_online_account_details.id;
2023-01-09 09:41:37.859 GMT [38580] ERROR:  relation "client_debit_accounts" does not exist at character 206
2023-01-09 09:41:37.859 GMT [38580] STATEMENT:  CREATE OR REPLACE VIEW client.client_debit_account_statements AS
	SELECT debit_statement.id, debit_statement.starting_date, debit_statement.end_date, debit_statement.amount, debit_statement.account_id
	FROM client_debit_accounts
	RIGHT JOIN debit_statement ON client_debit_accounts.id = debit_statement.account_id;
2023-01-09 09:41:37.859 GMT [38580] ERROR:  relation "client_debit_account_statements" does not exist at character 207
2023-01-09 09:41:37.859 GMT [38580] STATEMENT:  CREATE OR REPLACE VIEW client.client_debit_account_statement AS
	SELECT transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date, transaction.credit_statement_id
	FROM client_debit_account_statements
	RIGHT JOIN transaction ON client_debit_account_statements.id = transaction.debit_statement_id;
2023-01-09 09:41:37.859 GMT [38580] ERROR:  syntax error at or near "." at character 22
2023-01-09 09:41:37.859 GMT [38580] STATEMENT:  CREATE TRIGGER client.trg_client_security_questions ON client.client_security_questions
	INSTEAD OF INSERT
	AS $$
	BEGIN
	    DECLARE prev_id INT;
	    INSERT INTO user_login_security_question (question_choice_id, login_id)
	    SELECT i.question_choice_id, i.login_id
	    FROM inserted i
	    RETURNING id INTO prev_id;
	
	    INSERT INTO security_question_answer (question_answer, question_id)
	    SELECT i.question_answer, prev_id
	    FROM inserted i;
	END;
	$$
	CREATE SCHEMA IF NOT EXISTS staff;
2023-01-09 09:43:00.392 GMT [38544] LOG:  received fast shutdown request
2023-01-09 09:43:00.393 GMT [38544] LOG:  aborting any active transactions
2023-01-09 09:43:00.396 GMT [38544] LOG:  background worker "logical replication launcher" (PID 38551) exited with exit code 1
2023-01-09 09:43:00.401 GMT [38546] LOG:  shutting down
2023-01-09 09:43:00.438 GMT [38544] LOG:  database system is shut down
2023-01-09 09:43:02.148 GMT [38878] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-09 09:43:02.149 GMT [38878] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-09 09:43:02.150 GMT [38878] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-09 09:43:02.154 GMT [38879] LOG:  database system was shut down at 2023-01-09 09:43:01 GMT
2023-01-09 09:43:02.158 GMT [38878] LOG:  database system is ready to accept connections
2023-01-09 09:43:02.921 GMT [38916] ERROR:  syntax error at or near "." at character 22
2023-01-09 09:43:02.921 GMT [38916] STATEMENT:  CREATE TRIGGER client.trg_client_security_questions ON client.client_security_questions
	INSTEAD OF INSERT
	AS $$
	BEGIN
	    DECLARE prev_id INT;
	    INSERT INTO user_login_security_question (question_choice_id, login_id)
	    SELECT i.question_choice_id, i.login_id
	    FROM inserted i
	    RETURNING id INTO prev_id;
	
	    INSERT INTO security_question_answer (question_answer, question_id)
	    SELECT i.question_answer, prev_id
	    FROM inserted i;
	END;
	$$
	CREATE SCHEMA IF NOT EXISTS staff;
2023-01-09 09:43:45.930 GMT [38878] LOG:  received fast shutdown request
2023-01-09 09:43:45.932 GMT [38878] LOG:  aborting any active transactions
2023-01-09 09:43:45.935 GMT [38878] LOG:  background worker "logical replication launcher" (PID 38885) exited with exit code 1
2023-01-09 09:43:45.938 GMT [38880] LOG:  shutting down
2023-01-09 09:43:45.973 GMT [38878] LOG:  database system is shut down
2023-01-09 09:43:47.491 GMT [39131] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-09 09:43:47.492 GMT [39131] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-09 09:43:47.493 GMT [39131] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-09 09:43:47.499 GMT [39132] LOG:  database system was shut down at 2023-01-09 09:43:47 GMT
2023-01-09 09:43:47.505 GMT [39131] LOG:  database system is ready to accept connections
2023-01-09 09:43:48.184 GMT [39167] ERROR:  syntax error at or near "ON" at character 46
2023-01-09 09:43:48.184 GMT [39167] STATEMENT:  CREATE TRIGGER trg_client_security_questions ON client.client_security_questions
	INSTEAD OF INSERT
	AS $$
	BEGIN
	    DECLARE prev_id INT;
	    INSERT INTO user_login_security_question (question_choice_id, login_id)
	    SELECT i.question_choice_id, i.login_id
	    FROM inserted i
	    RETURNING id INTO prev_id;
	
	    INSERT INTO security_question_answer (question_answer, question_id)
	    SELECT i.question_answer, prev_id
	    FROM inserted i;
	END;
	$$
	CREATE SCHEMA IF NOT EXISTS staff;
2023-01-09 10:05:02.271 GMT [39131] LOG:  received fast shutdown request
2023-01-09 10:05:02.274 GMT [39131] LOG:  aborting any active transactions
2023-01-09 10:05:02.278 GMT [39131] LOG:  background worker "logical replication launcher" (PID 39138) exited with exit code 1
2023-01-09 10:05:02.278 GMT [39133] LOG:  shutting down
2023-01-09 10:05:02.295 GMT [39131] LOG:  database system is shut down
2023-01-09 10:05:16.108 GMT [42774] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-09 10:05:16.108 GMT [42774] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-09 10:05:16.110 GMT [42774] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-09 10:05:16.114 GMT [42775] LOG:  database system was shut down at 2023-01-09 10:05:15 GMT
2023-01-09 10:05:16.119 GMT [42774] LOG:  database system is ready to accept connections
2023-01-09 10:05:16.768 GMT [42811] ERROR:  syntax error at or near "INTO" at character 131
2023-01-09 10:05:16.768 GMT [42811] CONTEXT:  invalid type name "INTO user_login_security_question (question_choice_id, login_id)
	    SELECT i.question_choice_id"
2023-01-09 10:05:16.768 GMT [42811] STATEMENT:  CREATE OR REPLACE FUNCTION trg_insert_client_security_questions() RETURNS trigger
	AS $$
	BEGIN
	    DECLARE prev_id INT;
	    INSERT INTO user_login_security_question (question_choice_id, login_id)
	    SELECT i.question_choice_id, i.login_id
	    FROM inserted i
	    RETURNING id INTO prev_id;
	
	    INSERT INTO security_question_answer (question_answer, question_id)
	    SELECT i.question_answer, prev_id
	    FROM inserted i;
	END;
	$$
	LANGUAGE plpgsql;
2023-01-09 10:05:16.768 GMT [42811] ERROR:  function trg_insert_client_security_questions() does not exist
2023-01-09 10:05:16.768 GMT [42811] STATEMENT:  CREATE TRIGGER trg_insert_client_security_questions
	INSTEAD OF INSERT ON client.client_security_questions
	    FOR EACH ROW EXECUTE FUNCTION trg_insert_client_security_questions();
2023-01-09 10:11:04.602 GMT [42774] LOG:  received fast shutdown request
2023-01-09 10:11:04.604 GMT [42774] LOG:  aborting any active transactions
2023-01-09 10:11:04.606 GMT [42774] LOG:  background worker "logical replication launcher" (PID 42781) exited with exit code 1
2023-01-09 10:11:04.609 GMT [42776] LOG:  shutting down
2023-01-09 10:11:04.623 GMT [42774] LOG:  database system is shut down
2023-01-09 10:11:06.783 GMT [43874] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-09 10:11:06.784 GMT [43874] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-09 10:11:06.785 GMT [43874] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-09 10:11:06.789 GMT [43875] LOG:  database system was shut down at 2023-01-09 10:11:06 GMT
2023-01-09 10:11:06.794 GMT [43874] LOG:  database system is ready to accept connections
2023-01-09 10:11:07.445 GMT [43913] ERROR:  syntax error at or near "INTO" at character 131
2023-01-09 10:11:07.445 GMT [43913] CONTEXT:  invalid type name "INTO user_login_security_question (question_choice_id, login_id)
	    VALUES(NEW.question_choice_id, NEW.login_id)
	    RETURNING id INTO prev_id"
2023-01-09 10:11:07.445 GMT [43913] STATEMENT:  CREATE OR REPLACE FUNCTION trg_insert_client_security_questions() RETURNS trigger
	AS $$
	BEGIN
	    DECLARE prev_id INT;
	    INSERT INTO user_login_security_question (question_choice_id, login_id)
	    VALUES(NEW.question_choice_id, NEW.login_id)
	    RETURNING id INTO prev_id;
	
	    INSERT INTO security_question_answer (question_answer, question_id)
	    SELECT i.question_answer, prev_id
	    FROM inserted i;
	END;
	$$
	LANGUAGE plpgsql;
2023-01-09 10:11:07.445 GMT [43913] ERROR:  function trg_insert_client_security_questions() does not exist
2023-01-09 10:11:07.445 GMT [43913] STATEMENT:  CREATE TRIGGER trg_insert_client_security_questions
	INSTEAD OF INSERT ON client.client_security_questions
	    FOR EACH ROW EXECUTE FUNCTION trg_insert_client_security_questions();
2023-01-09 10:16:56.384 GMT [43874] LOG:  received fast shutdown request
2023-01-09 10:16:56.388 GMT [43874] LOG:  aborting any active transactions
2023-01-09 10:16:56.393 GMT [43874] LOG:  background worker "logical replication launcher" (PID 43881) exited with exit code 1
2023-01-09 10:16:56.398 GMT [43876] LOG:  shutting down
2023-01-09 10:16:56.414 GMT [43874] LOG:  database system is shut down
2023-01-09 10:16:58.080 GMT [44976] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-09 10:16:58.080 GMT [44976] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-09 10:16:58.082 GMT [44976] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-09 10:16:58.086 GMT [44977] LOG:  database system was shut down at 2023-01-09 10:16:57 GMT
2023-01-09 10:16:58.092 GMT [44976] LOG:  database system is ready to accept connections
2023-01-09 10:16:58.726 GMT [45013] ERROR:  syntax error at or near "INTO" at character 131
2023-01-09 10:16:58.726 GMT [45013] CONTEXT:  invalid type name "INTO user_login_security_question
	    VALUES(NEW.question_choice_id, NEW.login_id)
	    RETURNING id INTO prev_id"
2023-01-09 10:16:58.726 GMT [45013] STATEMENT:  CREATE OR REPLACE FUNCTION trg_insert_client_security_questions() RETURNS trigger
	AS $$
	BEGIN
	    DECLARE prev_id INT;
	    INSERT INTO user_login_security_question
	    VALUES(NEW.question_choice_id, NEW.login_id)
	    RETURNING id INTO prev_id;
	
	    INSERT INTO security_question_answer (question_answer, question_id)
	    SELECT i.question_answer, prev_id
	    FROM inserted i;
	
	    RETURN NEW;
	END;
	$$
	LANGUAGE plpgsql;
2023-01-09 10:16:58.727 GMT [45013] ERROR:  function trg_insert_client_security_questions() does not exist
2023-01-09 10:16:58.727 GMT [45013] STATEMENT:  CREATE TRIGGER trg_insert_client_security_questions
	INSTEAD OF INSERT ON client.client_security_questions
	    FOR EACH ROW EXECUTE FUNCTION trg_insert_client_security_questions();
2023-01-09 10:17:22.243 GMT [44976] LOG:  received fast shutdown request
2023-01-09 10:17:22.245 GMT [44976] LOG:  aborting any active transactions
2023-01-09 10:17:22.250 GMT [44976] LOG:  background worker "logical replication launcher" (PID 44983) exited with exit code 1
2023-01-09 10:17:22.250 GMT [44978] LOG:  shutting down
2023-01-09 10:17:22.301 GMT [44976] LOG:  database system is shut down
2023-01-09 10:17:24.439 GMT [45165] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-09 10:17:24.440 GMT [45165] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-09 10:17:24.441 GMT [45165] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-09 10:17:24.445 GMT [45166] LOG:  database system was shut down at 2023-01-09 10:17:24 GMT
2023-01-09 10:17:24.451 GMT [45165] LOG:  database system is ready to accept connections
2023-01-09 10:17:25.093 GMT [45205] ERROR:  syntax error at or near "INTO" at character 131
2023-01-09 10:17:25.093 GMT [45205] CONTEXT:  invalid type name "INTO user_login_security_question
	    VALUES(0, 1)
	    RETURNING id INTO prev_id"
2023-01-09 10:17:25.093 GMT [45205] STATEMENT:  CREATE OR REPLACE FUNCTION trg_insert_client_security_questions() RETURNS trigger
	AS $$
	BEGIN
	    DECLARE prev_id INT;
	    INSERT INTO user_login_security_question
	    VALUES(0, 1)
	    RETURNING id INTO prev_id;
	
	    INSERT INTO security_question_answer (question_answer, question_id)
	    SELECT i.question_answer, prev_id
	    FROM inserted i;
	
	    RETURN NEW;
	END;
	$$
	LANGUAGE plpgsql;
2023-01-09 10:17:25.096 GMT [45205] ERROR:  function trg_insert_client_security_questions() does not exist
2023-01-09 10:17:25.096 GMT [45205] STATEMENT:  CREATE TRIGGER trg_insert_client_security_questions
	INSTEAD OF INSERT ON client.client_security_questions
	    FOR EACH ROW EXECUTE FUNCTION trg_insert_client_security_questions();
2023-01-09 10:18:40.909 GMT [45165] LOG:  received fast shutdown request
2023-01-09 10:18:40.911 GMT [45165] LOG:  aborting any active transactions
2023-01-09 10:18:40.913 GMT [45165] LOG:  background worker "logical replication launcher" (PID 45172) exited with exit code 1
2023-01-09 10:18:40.916 GMT [45167] LOG:  shutting down
2023-01-09 10:18:40.959 GMT [45165] LOG:  database system is shut down
2023-01-09 10:18:42.698 GMT [45502] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-09 10:18:42.698 GMT [45502] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-09 10:18:42.700 GMT [45502] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-09 10:18:42.704 GMT [45503] LOG:  database system was shut down at 2023-01-09 10:18:42 GMT
2023-01-09 10:18:42.710 GMT [45502] LOG:  database system is ready to accept connections
2023-01-09 10:19:40.559 GMT [45502] LOG:  received fast shutdown request
2023-01-09 10:19:40.561 GMT [45502] LOG:  aborting any active transactions
2023-01-09 10:19:40.564 GMT [45502] LOG:  background worker "logical replication launcher" (PID 45509) exited with exit code 1
2023-01-09 10:19:40.568 GMT [45504] LOG:  shutting down
2023-01-09 10:19:40.603 GMT [45502] LOG:  database system is shut down
2023-01-09 10:19:42.429 GMT [45801] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-09 10:19:42.429 GMT [45801] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-09 10:19:42.431 GMT [45801] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-09 10:19:42.436 GMT [45802] LOG:  database system was shut down at 2023-01-09 10:19:42 GMT
2023-01-09 10:19:42.441 GMT [45801] LOG:  database system is ready to accept connections
2023-01-09 10:20:01.120 GMT [45801] LOG:  received fast shutdown request
2023-01-09 10:20:01.121 GMT [45801] LOG:  aborting any active transactions
2023-01-09 10:20:01.125 GMT [45801] LOG:  background worker "logical replication launcher" (PID 45808) exited with exit code 1
2023-01-09 10:20:01.126 GMT [45803] LOG:  shutting down
2023-01-09 10:20:01.160 GMT [45801] LOG:  database system is shut down
2023-01-09 10:20:02.983 GMT [45997] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-09 10:20:02.984 GMT [45997] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-09 10:20:02.985 GMT [45997] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-09 10:20:02.991 GMT [45998] LOG:  database system was shut down at 2023-01-09 10:20:02 GMT
2023-01-09 10:20:02.996 GMT [45997] LOG:  database system is ready to accept connections
2023-01-09 10:20:03.633 GMT [46036] ERROR:  syntax error at or near "INTO" at character 295
2023-01-09 10:20:03.633 GMT [46036] CONTEXT:  invalid type name "INTO security_question_answer (question_answer, question_id)
	    VALUES(NEW.question_answer, prev_id)"
2023-01-09 10:20:03.633 GMT [46036] STATEMENT:  CREATE OR REPLACE FUNCTION trg_insert_client_security_questions() RETURNS trigger
	AS $$
	BEGIN
	    -- DECLARE prev_id INT;
	    -- INSERT INTO user_login_security_question
	    -- VALUES(NEW.question_choice_id, NEW.login_id)
	    -- RETURNING id INTO prev_id;
	
	    DECLARE prev_id INT;
	
	    INSERT INTO security_question_answer (question_answer, question_id)
	    VALUES(NEW.question_answer, prev_id);
	
	    RETURN NEW;
	END;
	$$
	LANGUAGE plpgsql;
2023-01-09 10:20:03.635 GMT [46036] ERROR:  function trg_insert_client_security_questions() does not exist
2023-01-09 10:20:03.635 GMT [46036] STATEMENT:  CREATE TRIGGER trg_insert_client_security_questions
	INSTEAD OF INSERT ON client.client_security_questions
	    FOR EACH ROW EXECUTE FUNCTION trg_insert_client_security_questions();
2023-01-09 10:20:58.049 GMT [45997] LOG:  received fast shutdown request
2023-01-09 10:20:58.051 GMT [45997] LOG:  aborting any active transactions
2023-01-09 10:20:58.054 GMT [45997] LOG:  background worker "logical replication launcher" (PID 46004) exited with exit code 1
2023-01-09 10:20:58.059 GMT [45999] LOG:  shutting down
2023-01-09 10:20:58.095 GMT [45997] LOG:  database system is shut down
2023-01-09 10:20:59.790 GMT [46275] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-09 10:20:59.790 GMT [46275] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-09 10:20:59.797 GMT [46275] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-09 10:20:59.802 GMT [46276] LOG:  database system was shut down at 2023-01-09 10:20:59 GMT
2023-01-09 10:20:59.808 GMT [46275] LOG:  database system is ready to accept connections
2023-01-09 10:21:25.344 GMT [46275] LOG:  received fast shutdown request
2023-01-09 10:21:25.346 GMT [46275] LOG:  aborting any active transactions
2023-01-09 10:21:25.350 GMT [46275] LOG:  background worker "logical replication launcher" (PID 46282) exited with exit code 1
2023-01-09 10:21:25.353 GMT [46277] LOG:  shutting down
2023-01-09 10:21:25.390 GMT [46275] LOG:  database system is shut down
2023-01-09 10:21:27.128 GMT [46468] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-09 10:21:27.129 GMT [46468] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-09 10:21:27.130 GMT [46468] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-09 10:21:27.136 GMT [46472] LOG:  database system was shut down at 2023-01-09 10:21:26 GMT
2023-01-09 10:21:27.142 GMT [46468] LOG:  database system is ready to accept connections
2023-01-09 10:26:24.189 GMT [46468] LOG:  received fast shutdown request
2023-01-09 10:26:24.190 GMT [46468] LOG:  aborting any active transactions
2023-01-09 10:26:24.194 GMT [46468] LOG:  background worker "logical replication launcher" (PID 46478) exited with exit code 1
2023-01-09 10:26:24.194 GMT [46473] LOG:  shutting down
2023-01-09 10:26:24.231 GMT [46468] LOG:  database system is shut down
2023-01-09 10:26:26.064 GMT [47483] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-09 10:26:26.064 GMT [47483] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-09 10:26:26.066 GMT [47483] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-09 10:26:26.071 GMT [47484] LOG:  database system was shut down at 2023-01-09 10:26:25 GMT
2023-01-09 10:26:26.088 GMT [47483] LOG:  database system is ready to accept connections
2023-01-09 10:26:26.707 GMT [47523] ERROR:  column "question_choice_id" of relation "client_security_questions" does not exist at character 47
2023-01-09 10:26:26.707 GMT [47523] STATEMENT:  INSERT INTO client.client_security_questions (question_choice_id, login_id, question_answer)
	VALUES (1, 1, "Churchill");
2023-01-09 10:29:48.010 GMT [47483] LOG:  received fast shutdown request
2023-01-09 10:29:48.012 GMT [47483] LOG:  aborting any active transactions
2023-01-09 10:29:48.015 GMT [47483] LOG:  background worker "logical replication launcher" (PID 47490) exited with exit code 1
2023-01-09 10:29:48.018 GMT [47485] LOG:  shutting down
2023-01-09 10:29:48.056 GMT [47483] LOG:  database system is shut down
2023-01-09 10:29:49.586 GMT [48170] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-09 10:29:49.587 GMT [48170] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-09 10:29:49.588 GMT [48170] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-09 10:29:49.593 GMT [48171] LOG:  database system was shut down at 2023-01-09 10:29:49 GMT
2023-01-09 10:29:49.597 GMT [48170] LOG:  database system is ready to accept connections
2023-01-09 10:29:50.330 GMT [48207] ERROR:  column "question_choice_id" of relation "client_security_questions" does not exist at character 47
2023-01-09 10:29:50.330 GMT [48207] STATEMENT:  INSERT INTO client.client_security_questions (question_choice_id, login_id, question_answer)
	VALUES (1, 1, "Churchill");
2023-01-09 10:30:31.715 GMT [48170] LOG:  received fast shutdown request
2023-01-09 10:30:31.717 GMT [48170] LOG:  aborting any active transactions
2023-01-09 10:30:31.723 GMT [48170] LOG:  background worker "logical replication launcher" (PID 48177) exited with exit code 1
2023-01-09 10:30:31.723 GMT [48172] LOG:  shutting down
2023-01-09 10:30:31.761 GMT [48170] LOG:  database system is shut down
2023-01-09 10:30:33.427 GMT [48416] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-09 10:30:33.427 GMT [48416] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-09 10:30:33.429 GMT [48416] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-09 10:30:33.433 GMT [48417] LOG:  database system was shut down at 2023-01-09 10:30:33 GMT
2023-01-09 10:30:33.439 GMT [48416] LOG:  database system is ready to accept connections
2023-01-09 10:30:34.151 GMT [48457] ERROR:  column "question_choice_id" of relation "client_security_questions" does not exist at character 40
2023-01-09 10:30:34.151 GMT [48457] STATEMENT:  INSERT INTO client_security_questions (question_choice_id, login_id, question_answer)
	VALUES (1, 1, "Churchill");
2023-01-09 10:33:46.888 GMT [48416] LOG:  received fast shutdown request
2023-01-09 10:33:46.890 GMT [48416] LOG:  aborting any active transactions
2023-01-09 10:33:46.894 GMT [48416] LOG:  background worker "logical replication launcher" (PID 48423) exited with exit code 1
2023-01-09 10:33:46.894 GMT [48418] LOG:  shutting down
2023-01-09 10:33:46.932 GMT [48416] LOG:  database system is shut down
2023-01-09 10:33:48.651 GMT [49078] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-09 10:33:48.652 GMT [49078] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-09 10:33:48.653 GMT [49078] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-09 10:33:48.658 GMT [49079] LOG:  database system was shut down at 2023-01-09 10:33:48 GMT
2023-01-09 10:33:48.664 GMT [49078] LOG:  database system is ready to accept connections
2023-01-09 10:33:49.323 GMT [49122] ERROR:  column "Churchill" does not exist at character 53
2023-01-09 10:33:49.323 GMT [49122] STATEMENT:  INSERT INTO client_security_questions
	VALUES (1, 1, "Churchill");
2023-01-09 10:34:21.360 GMT [49078] LOG:  received fast shutdown request
2023-01-09 10:34:21.362 GMT [49078] LOG:  aborting any active transactions
2023-01-09 10:34:21.366 GMT [49078] LOG:  background worker "logical replication launcher" (PID 49087) exited with exit code 1
2023-01-09 10:34:21.366 GMT [49082] LOG:  shutting down
2023-01-09 10:34:21.410 GMT [49078] LOG:  database system is shut down
2023-01-09 10:34:23.141 GMT [49304] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-09 10:34:23.141 GMT [49304] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-09 10:34:23.143 GMT [49304] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-09 10:34:23.147 GMT [49305] LOG:  database system was shut down at 2023-01-09 10:34:22 GMT
2023-01-09 10:34:23.152 GMT [49304] LOG:  database system is ready to accept connections
2023-01-09 10:34:23.816 GMT [49343] ERROR:  record "new" has no field "question_choice_id"
2023-01-09 10:34:23.816 GMT [49343] CONTEXT:  SQL statement "INSERT INTO user_login_security_question
	    VALUES(NEW.question_choice_id, NEW.login_id)
	    RETURNING id"
	PL/pgSQL function trg_insert_client_security_questions() line 4 at SQL statement
2023-01-09 10:34:23.816 GMT [49343] STATEMENT:  INSERT INTO client_security_questions
	VALUES (1, 1);
2023-01-09 10:35:13.710 GMT [49304] LOG:  received fast shutdown request
2023-01-09 10:35:13.712 GMT [49304] LOG:  aborting any active transactions
2023-01-09 10:35:13.716 GMT [49304] LOG:  background worker "logical replication launcher" (PID 49311) exited with exit code 1
2023-01-09 10:35:13.719 GMT [49306] LOG:  shutting down
2023-01-09 10:35:13.756 GMT [49304] LOG:  database system is shut down
2023-01-09 10:35:15.192 GMT [49566] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-09 10:35:15.193 GMT [49566] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-09 10:35:15.194 GMT [49566] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-09 10:35:15.198 GMT [49567] LOG:  database system was shut down at 2023-01-09 10:35:14 GMT
2023-01-09 10:35:15.206 GMT [49566] LOG:  database system is ready to accept connections
2023-01-09 10:35:15.840 GMT [49606] ERROR:  record "new" has no field "question_choice_id"
2023-01-09 10:35:15.840 GMT [49606] CONTEXT:  SQL statement "INSERT INTO user_login_security_question
	    VALUES(NEW.question_choice_id, NEW.login_id)
	    RETURNING id"
	PL/pgSQL function trg_insert_client_security_questions() line 4 at SQL statement
2023-01-09 10:35:15.840 GMT [49606] STATEMENT:  INSERT INTO client_security_questions
	VALUES (1, 'churchill');
2023-01-09 10:36:31.500 GMT [49566] LOG:  received smart shutdown request
2023-01-09 10:36:31.519 GMT [49566] LOG:  received SIGHUP, reloading configuration files
2023-01-09 10:36:31.519 GMT [49566] LOG:  background worker "logical replication launcher" (PID 49573) exited with exit code 1
2023-01-09 10:36:31.520 GMT [49568] LOG:  shutting down
2023-01-09 10:36:31.644 GMT [49566] LOG:  database system is shut down
2023-01-10 11:00:07.518 GMT [42654] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-10 11:00:07.520 GMT [42654] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-10 11:00:07.525 GMT [42654] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-10 11:00:07.530 GMT [42655] LOG:  database system was shut down at 2023-01-10 11:00:07 GMT
2023-01-10 11:00:07.537 GMT [42654] LOG:  database system is ready to accept connections
2023-01-10 11:00:08.380 GMT [42680] ERROR:  syntax error at or near "AS" at character 252
2023-01-10 11:00:08.380 GMT [42680] STATEMENT:  CREATE OR REPLACE FUNCTION unauthenticated.create_personal_info(first_name TEXT, last_name TEXT, date_of_birth DATE, phone_number TEXT, email_address TEXT, address_street TEXT, address_city TEXT, address_county TEXT, address_postcode TEXT)
	RETURN INT
	AS $$
	DECLARE success INT;
	BEGIN
	    IF NOT EXISTS (SELECT FROM customer WHERE first_name = first_name, last_name = last_name, email_address = email_address) THEN
	        INSERT INTO customer
	        VALUES (first_name, last_name, date_of_birth, phone_number, email_address, address_street, address_city, address_county, address_postcode);
	        success = 1;
	    ELSE
	        RAISE NOTICE 'CUSTOMER INFORMATION ALREADY PRESENT'
	        success = 0;
	    END IF;
	    RETURN success;
	END;
	$$ LANGUAGE plpgsql;
2023-01-10 11:00:08.381 GMT [42680] ERROR:  syntax error at or near "AS" at character 124
2023-01-10 11:00:08.381 GMT [42680] STATEMENT:  CREATE OR REPLACE FUNCTION unauthenticated.get_customer_id(first_name TEXT, last_name TEXT, email_address TEXT)
	RETURN INT
	AS $$
	DECLARE customer_id INT;
	BEGIN
	    SELECT id INTO customer_id FROM customer WHERE first_name = first_name, last_name = last_name, email_address = email_address;
	    RETURN customer_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-10 11:00:08.381 GMT [42680] ERROR:  syntax error at or near "INT" at character 177
2023-01-10 11:00:08.381 GMT [42680] STATEMENT:  CREATE OR REPLACE FUNCTION unauthenticated.create_online_account_details(username TEXT, password TEXT, first_name TEXT, last_name TEXT, email_address TEXT. question_choice_ids INT[], question_answers TEXT[])
	RETURN INT
	AS $$
	DECLARE success INT;
	DECLARE customer_id INT;
	DECLARE account_id INT;
	DECLARE online_account_id INT;
	DECLARE question_choice_id INT;
	BEGIN
	    IF NOT EXISTS (SELECT FROM user_login WHERE username = username) THEN
	        customer_id = unauthenticated.get_customer_id(first_name, last_name, email_address);
	        INSERT INTO online_account (date_opened, sort_code, customer_id)
	        VALUES ((SELECT now()), (SELECT num FROM GENERATE_SERIES(1, 6) AS s(num) LIMIT 1), customer_id)
	        RETURNING id INTO account_id;
	
	        INSERT INTO user_login (account_id, username)
	        VALUES (account_id, username)
	        RETURNING id INTO online_account_id;
	
	        FOR i IN 0..2 LOOP
	            
	            INSERT INTO user_login_security_question (question_choice_id, login_id)
	            VALUES (question_choice_ids[i], online_account_id)
	            RETURNING id INTO question_choice_id;
	
	            INSERT INTO security_question_answer (answer, question_id)
	            VALUES (question_answers[i], question_choice_id);
	
	        END LOOP;
	
	        CREATE ROLE 
	
	        success = 1;
	    ELSE
	        RAISE NOTICE 'USERNAME ALREADY TAKEN'
	        success = 0;
	
	
	    EXECUTE format(
	        'CREATE ROLE %I WITH LOGIN PASSWORD %L', username, password
	    );
	    EXECUTE format(
	        'SET ROLE %I', username
	    );
	
	
	    END IF;
	    RETURN success;
	END;
	$$ LANGUAGE plpgsql;
2023-01-10 11:02:12.061 GMT [42654] LOG:  received fast shutdown request
2023-01-10 11:02:12.063 GMT [42654] LOG:  aborting any active transactions
2023-01-10 11:02:12.068 GMT [42654] LOG:  background worker "logical replication launcher" (PID 42661) exited with exit code 1
2023-01-10 11:02:12.068 GMT [42656] LOG:  shutting down
2023-01-10 11:02:12.122 GMT [42654] LOG:  database system is shut down
2023-01-10 11:02:14.033 GMT [43232] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-10 11:02:14.034 GMT [43232] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-10 11:02:14.037 GMT [43232] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-10 11:02:14.044 GMT [43233] LOG:  database system was shut down at 2023-01-10 11:02:13 GMT
2023-01-10 11:02:14.057 GMT [43232] LOG:  database system is ready to accept connections
2023-01-10 11:02:14.959 GMT [43262] ERROR:  syntax error at or near "AS" at character 252
2023-01-10 11:02:14.959 GMT [43262] STATEMENT:  CREATE OR REPLACE FUNCTION unauthenticated.create_personal_info(first_name TEXT, last_name TEXT, date_of_birth DATE, phone_number TEXT, email_address TEXT, address_street TEXT, address_city TEXT, address_county TEXT, address_postcode TEXT)
	RETURN INT AS $$
	DECLARE success INT;
	BEGIN
	    IF NOT EXISTS (SELECT FROM customer WHERE first_name = first_name, last_name = last_name, email_address = email_address) THEN
	        INSERT INTO customer
	        VALUES (first_name, last_name, date_of_birth, phone_number, email_address, address_street, address_city, address_county, address_postcode);
	        success = 1;
	    ELSE
	        RAISE NOTICE 'CUSTOMER INFORMATION ALREADY PRESENT'
	        success = 0;
	    END IF;
	    RETURN success;
	END;
	$$ LANGUAGE plpgsql;
2023-01-10 11:02:14.961 GMT [43262] ERROR:  syntax error at or near "AS" at character 124
2023-01-10 11:02:14.961 GMT [43262] STATEMENT:  CREATE OR REPLACE FUNCTION unauthenticated.get_customer_id(first_name TEXT, last_name TEXT, email_address TEXT)
	RETURN INT AS $$
	DECLARE customer_id INT;
	BEGIN
	    SELECT id INTO customer_id FROM customer WHERE first_name = first_name, last_name = last_name, email_address = email_address;
	    RETURN customer_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-10 11:02:14.961 GMT [43262] ERROR:  syntax error at or near "INT" at character 177
2023-01-10 11:02:14.961 GMT [43262] STATEMENT:  CREATE OR REPLACE FUNCTION unauthenticated.create_online_account_details(username TEXT, password TEXT, first_name TEXT, last_name TEXT, email_address TEXT. question_choice_ids INT[], question_answers TEXT[])
	RETURN INT AS $$
	DECLARE success INT;
	DECLARE customer_id INT;
	DECLARE account_id INT;
	DECLARE online_account_id INT;
	DECLARE question_choice_id INT;
	BEGIN
	    IF NOT EXISTS (SELECT FROM user_login WHERE username = username) THEN
	        customer_id = unauthenticated.get_customer_id(first_name, last_name, email_address);
	        INSERT INTO online_account (date_opened, sort_code, customer_id)
	        VALUES ((SELECT now()), (SELECT num FROM GENERATE_SERIES(1, 6) AS s(num) LIMIT 1), customer_id)
	        RETURNING id INTO account_id;
	
	        INSERT INTO user_login (account_id, username)
	        VALUES (account_id, username)
	        RETURNING id INTO online_account_id;
	
	        FOR i IN 0..2 LOOP
	            
	            INSERT INTO user_login_security_question (question_choice_id, login_id)
	            VALUES (question_choice_ids[i], online_account_id)
	            RETURNING id INTO question_choice_id;
	
	            INSERT INTO security_question_answer (answer, question_id)
	            VALUES (question_answers[i], question_choice_id);
	
	        END LOOP;
	
	        CREATE ROLE 
	
	        success = 1;
	    ELSE
	        RAISE NOTICE 'USERNAME ALREADY TAKEN'
	        success = 0;
	
	
	    EXECUTE format(
	        'CREATE ROLE %I WITH LOGIN PASSWORD %L', username, password
	    );
	    EXECUTE format(
	        'SET ROLE %I', username
	    );
	
	
	    END IF;
	    RETURN success;
	END;
	$$ LANGUAGE plpgsql;
2023-01-10 11:02:49.179 GMT [43232] LOG:  received fast shutdown request
2023-01-10 11:02:49.181 GMT [43232] LOG:  aborting any active transactions
2023-01-10 11:02:49.184 GMT [43232] LOG:  background worker "logical replication launcher" (PID 43239) exited with exit code 1
2023-01-10 11:02:49.188 GMT [43234] LOG:  shutting down
2023-01-10 11:02:49.239 GMT [43232] LOG:  database system is shut down
2023-01-10 11:02:51.287 GMT [43500] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-10 11:02:51.288 GMT [43500] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-10 11:02:51.289 GMT [43500] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-10 11:02:51.295 GMT [43501] LOG:  database system was shut down at 2023-01-10 11:02:50 GMT
2023-01-10 11:02:51.303 GMT [43500] LOG:  database system is ready to accept connections
2023-01-10 11:02:52.174 GMT [43529] ERROR:  syntax error at or near "," at character 355
2023-01-10 11:02:52.174 GMT [43529] STATEMENT:  CREATE OR REPLACE FUNCTION unauthenticated.create_personal_info(first_name TEXT, last_name TEXT, date_of_birth DATE, phone_number TEXT, email_address TEXT, address_street TEXT, address_city TEXT, address_county TEXT, address_postcode TEXT)
	RETURNS INT AS $$
	DECLARE success INT;
	BEGIN
	    IF NOT EXISTS (SELECT FROM customer WHERE first_name = first_name, last_name = last_name, email_address = email_address) THEN
	        INSERT INTO customer
	        VALUES (first_name, last_name, date_of_birth, phone_number, email_address, address_street, address_city, address_county, address_postcode);
	        success = 1;
	    ELSE
	        RAISE NOTICE 'CUSTOMER INFORMATION ALREADY PRESENT'
	        success = 0;
	    END IF;
	    RETURN success;
	END;
	$$ LANGUAGE plpgsql;
2023-01-10 11:02:52.175 GMT [43529] ERROR:  syntax error at or near "," at character 236
2023-01-10 11:02:52.175 GMT [43529] STATEMENT:  CREATE OR REPLACE FUNCTION unauthenticated.get_customer_id(first_name TEXT, last_name TEXT, email_address TEXT)
	RETURNS INT AS $$
	DECLARE customer_id INT;
	BEGIN
	    SELECT id INTO customer_id FROM customer WHERE first_name = first_name, last_name = last_name, email_address = email_address;
	    RETURN customer_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-10 11:02:52.175 GMT [43529] ERROR:  syntax error at or near "INT" at character 177
2023-01-10 11:02:52.175 GMT [43529] STATEMENT:  CREATE OR REPLACE FUNCTION unauthenticated.create_online_account_details(username TEXT, password TEXT, first_name TEXT, last_name TEXT, email_address TEXT. question_choice_ids INT[], question_answers TEXT[])
	RETURNS INT AS $$
	DECLARE success INT;
	DECLARE customer_id INT;
	DECLARE account_id INT;
	DECLARE online_account_id INT;
	DECLARE question_choice_id INT;
	BEGIN
	    IF NOT EXISTS (SELECT FROM user_login WHERE username = username) THEN
	        customer_id = unauthenticated.get_customer_id(first_name, last_name, email_address);
	        INSERT INTO online_account (date_opened, sort_code, customer_id)
	        VALUES ((SELECT now()), (SELECT num FROM GENERATE_SERIES(1, 6) AS s(num) LIMIT 1), customer_id)
	        RETURNING id INTO account_id;
	
	        INSERT INTO user_login (account_id, username)
	        VALUES (account_id, username)
	        RETURNING id INTO online_account_id;
	
	        FOR i IN 0..2 LOOP
	            
	            INSERT INTO user_login_security_question (question_choice_id, login_id)
	            VALUES (question_choice_ids[i], online_account_id)
	            RETURNING id INTO question_choice_id;
	
	            INSERT INTO security_question_answer (answer, question_id)
	            VALUES (question_answers[i], question_choice_id);
	
	        END LOOP;
	
	        CREATE ROLE 
	
	        success = 1;
	    ELSE
	        RAISE NOTICE 'USERNAME ALREADY TAKEN'
	        success = 0;
	
	
	    EXECUTE format(
	        'CREATE ROLE %I WITH LOGIN PASSWORD %L', username, password
	    );
	    EXECUTE format(
	        'SET ROLE %I', username
	    );
	
	
	    END IF;
	    RETURN success;
	END;
	$$ LANGUAGE plpgsql;
2023-01-10 11:04:00.896 GMT [43500] LOG:  received fast shutdown request
2023-01-10 11:04:00.899 GMT [43500] LOG:  aborting any active transactions
2023-01-10 11:04:00.906 GMT [43500] LOG:  background worker "logical replication launcher" (PID 43507) exited with exit code 1
2023-01-10 11:04:00.907 GMT [43502] LOG:  shutting down
2023-01-10 11:04:00.956 GMT [43500] LOG:  database system is shut down
2023-01-10 11:04:03.899 GMT [43826] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-10 11:04:03.900 GMT [43826] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-10 11:04:03.901 GMT [43826] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-10 11:04:03.907 GMT [43827] LOG:  database system was shut down at 2023-01-10 11:04:03 GMT
2023-01-10 11:04:03.913 GMT [43826] LOG:  database system is ready to accept connections
2023-01-10 11:04:04.874 GMT [43855] ERROR:  syntax error at or near "," at character 355
2023-01-10 11:04:04.874 GMT [43855] STATEMENT:  CREATE OR REPLACE FUNCTION unauthenticated.create_personal_info(first_name TEXT, last_name TEXT, date_of_birth DATE, phone_number TEXT, email_address TEXT, address_street TEXT, address_city TEXT, address_county TEXT, address_postcode TEXT)
	RETURNS INT AS $$
	DECLARE success INT;
	BEGIN
	    IF NOT EXISTS (SELECT FROM customer WHERE first_name = first_name, last_name = last_name, email_address = email_address) THEN
	        INSERT INTO customer
	        VALUES (first_name, last_name, date_of_birth, phone_number, email_address, address_street, address_city, address_county, address_postcode);
	        success = 1;
	    ELSE
	        RAISE NOTICE 'CUSTOMER INFORMATION ALREADY PRESENT'
	        success = 0;
	    END IF;
	    RETURN success;
	END;
	$$ LANGUAGE plpgsql;
2023-01-10 11:04:04.876 GMT [43855] ERROR:  syntax error at or near "=" at character 1316
2023-01-10 11:04:04.876 GMT [43855] STATEMENT:  CREATE OR REPLACE FUNCTION unauthenticated.create_online_account_details(username TEXT, password TEXT, first_name TEXT, last_name TEXT, email_address TEXT, question_choice_ids INT[], question_answers TEXT[])
	RETURNS INT AS $$
	DECLARE success INT;
	DECLARE customer_id INT;
	DECLARE account_id INT;
	DECLARE online_account_id INT;
	DECLARE question_choice_id INT;
	BEGIN
	    IF NOT EXISTS (SELECT FROM user_login WHERE username = username) THEN
	        customer_id = unauthenticated.get_customer_id(first_name, last_name, email_address);
	        INSERT INTO online_account (date_opened, sort_code, customer_id)
	        VALUES ((SELECT now()), (SELECT num FROM GENERATE_SERIES(1, 6) AS s(num) LIMIT 1), customer_id)
	        RETURNING id INTO account_id;
	
	        INSERT INTO user_login (account_id, username)
	        VALUES (account_id, username)
	        RETURNING id INTO online_account_id;
	
	        FOR i IN 0..2 LOOP
	            
	            INSERT INTO user_login_security_question (question_choice_id, login_id)
	            VALUES (question_choice_ids[i], online_account_id)
	            RETURNING id INTO question_choice_id;
	
	            INSERT INTO security_question_answer (answer, question_id)
	            VALUES (question_answers[i], question_choice_id);
	
	        END LOOP;
	
	        CREATE ROLE 
	
	        success = 1;
	    ELSE
	        RAISE NOTICE 'USERNAME ALREADY TAKEN'
	        success = 0;
	
	
	    EXECUTE format(
	        'CREATE ROLE %I WITH LOGIN PASSWORD %L', username, password
	    );
	    EXECUTE format(
	        'SET ROLE %I', username
	    );
	
	
	    END IF;
	    RETURN success;
	END;
	$$ LANGUAGE plpgsql;
2023-01-10 11:04:25.218 GMT [43826] LOG:  received fast shutdown request
2023-01-10 11:04:25.219 GMT [43826] LOG:  aborting any active transactions
2023-01-10 11:04:25.224 GMT [43826] LOG:  background worker "logical replication launcher" (PID 43833) exited with exit code 1
2023-01-10 11:04:25.227 GMT [43828] LOG:  shutting down
2023-01-10 11:04:25.278 GMT [43826] LOG:  database system is shut down
2023-01-10 11:04:26.998 GMT [44026] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-10 11:04:26.998 GMT [44026] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-10 11:04:26.999 GMT [44026] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-10 11:04:27.004 GMT [44027] LOG:  database system was shut down at 2023-01-10 11:04:26 GMT
2023-01-10 11:04:27.009 GMT [44026] LOG:  database system is ready to accept connections
2023-01-10 11:04:27.878 GMT [44052] ERROR:  syntax error at or near "success" at character 697
2023-01-10 11:04:27.878 GMT [44052] STATEMENT:  CREATE OR REPLACE FUNCTION unauthenticated.create_personal_info(first_name TEXT, last_name TEXT, date_of_birth DATE, phone_number TEXT, email_address TEXT, address_street TEXT, address_city TEXT, address_county TEXT, address_postcode TEXT)
	RETURNS INT AS $$
	DECLARE success INT;
	BEGIN
	    IF NOT EXISTS (SELECT FROM customer WHERE first_name = first_name AND last_name = last_name AND email_address = email_address) THEN
	        INSERT INTO customer
	        VALUES (first_name, last_name, date_of_birth, phone_number, email_address, address_street, address_city, address_county, address_postcode);
	        success = 1;
	    ELSE
	        RAISE NOTICE 'CUSTOMER INFORMATION ALREADY PRESENT'
	        success = 0;
	    END IF;
	    RETURN success;
	END;
	$$ LANGUAGE plpgsql;
2023-01-10 11:04:27.880 GMT [44052] ERROR:  syntax error at or near "=" at character 1316
2023-01-10 11:04:27.880 GMT [44052] STATEMENT:  CREATE OR REPLACE FUNCTION unauthenticated.create_online_account_details(username TEXT, password TEXT, first_name TEXT, last_name TEXT, email_address TEXT, question_choice_ids INT[], question_answers TEXT[])
	RETURNS INT AS $$
	DECLARE success INT;
	DECLARE customer_id INT;
	DECLARE account_id INT;
	DECLARE online_account_id INT;
	DECLARE question_choice_id INT;
	BEGIN
	    IF NOT EXISTS (SELECT FROM user_login WHERE username = username) THEN
	        customer_id = unauthenticated.get_customer_id(first_name, last_name, email_address);
	        INSERT INTO online_account (date_opened, sort_code, customer_id)
	        VALUES ((SELECT now()), (SELECT num FROM GENERATE_SERIES(1, 6) AS s(num) LIMIT 1), customer_id)
	        RETURNING id INTO account_id;
	
	        INSERT INTO user_login (account_id, username)
	        VALUES (account_id, username)
	        RETURNING id INTO online_account_id;
	
	        FOR i IN 0..2 LOOP
	            
	            INSERT INTO user_login_security_question (question_choice_id, login_id)
	            VALUES (question_choice_ids[i], online_account_id)
	            RETURNING id INTO question_choice_id;
	
	            INSERT INTO security_question_answer (answer, question_id)
	            VALUES (question_answers[i], question_choice_id);
	
	        END LOOP;
	
	        CREATE ROLE 
	
	        success = 1;
	    ELSE
	        RAISE NOTICE 'USERNAME ALREADY TAKEN'
	        success = 0;
	
	
	    EXECUTE format(
	        'CREATE ROLE %I WITH LOGIN PASSWORD %L', username, password
	    );
	    EXECUTE format(
	        'SET ROLE %I', username
	    );
	
	
	    END IF;
	    RETURN success;
	END;
	$$ LANGUAGE plpgsql;
2023-01-10 11:05:02.904 GMT [44026] LOG:  received fast shutdown request
2023-01-10 11:05:02.905 GMT [44026] LOG:  aborting any active transactions
2023-01-10 11:05:02.910 GMT [44026] LOG:  background worker "logical replication launcher" (PID 44033) exited with exit code 1
2023-01-10 11:05:02.912 GMT [44028] LOG:  shutting down
2023-01-10 11:05:02.955 GMT [44026] LOG:  database system is shut down
2023-01-10 11:05:04.842 GMT [44266] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-10 11:05:04.842 GMT [44266] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-10 11:05:04.843 GMT [44266] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-10 11:05:04.846 GMT [44267] LOG:  database system was shut down at 2023-01-10 11:05:04 GMT
2023-01-10 11:05:04.856 GMT [44266] LOG:  database system is ready to accept connections
2023-01-10 11:05:05.856 GMT [44299] ERROR:  syntax error at or near "=" at character 1316
2023-01-10 11:05:05.856 GMT [44299] STATEMENT:  CREATE OR REPLACE FUNCTION unauthenticated.create_online_account_details(username TEXT, password TEXT, first_name TEXT, last_name TEXT, email_address TEXT, question_choice_ids INT[], question_answers TEXT[])
	RETURNS INT AS $$
	DECLARE success INT;
	DECLARE customer_id INT;
	DECLARE account_id INT;
	DECLARE online_account_id INT;
	DECLARE question_choice_id INT;
	BEGIN
	    IF NOT EXISTS (SELECT FROM user_login WHERE username = username) THEN
	        customer_id = unauthenticated.get_customer_id(first_name, last_name, email_address);
	        INSERT INTO online_account (date_opened, sort_code, customer_id)
	        VALUES ((SELECT now()), (SELECT num FROM GENERATE_SERIES(1, 6) AS s(num) LIMIT 1), customer_id)
	        RETURNING id INTO account_id;
	
	        INSERT INTO user_login (account_id, username)
	        VALUES (account_id, username)
	        RETURNING id INTO online_account_id;
	
	        FOR i IN 0..2 LOOP
	            
	            INSERT INTO user_login_security_question (question_choice_id, login_id)
	            VALUES (question_choice_ids[i], online_account_id)
	            RETURNING id INTO question_choice_id;
	
	            INSERT INTO security_question_answer (answer, question_id)
	            VALUES (question_answers[i], question_choice_id);
	
	        END LOOP;
	
	        CREATE ROLE 
	
	        success = 1;
	    ELSE
	        RAISE NOTICE 'USERNAME ALREADY TAKEN';
	        success = 0;
	
	
	    EXECUTE format(
	        'CREATE ROLE %I WITH LOGIN PASSWORD %L', username, password
	    );
	    EXECUTE format(
	        'SET ROLE %I', username
	    );
	
	
	    END IF;
	    RETURN success;
	END;
	$$ LANGUAGE plpgsql;
2023-01-11 08:02:34.800 GMT [12950] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-11 08:02:34.806 GMT [12950] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-11 08:02:34.808 GMT [12950] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-11 08:02:34.813 GMT [12951] LOG:  database system was shut down at 2023-01-11 08:02:34 GMT
2023-01-11 08:02:34.818 GMT [12950] LOG:  database system is ready to accept connections
2023-01-11 08:02:35.670 GMT [12979] ERROR:  syntax error at or near "overdraft_limit" at character 112
2023-01-11 08:02:35.670 GMT [12979] STATEMENT:  CREATE TABLE IF NOT EXISTS debit_overdraft (
	    id SERIAL PRIMARY KEY,
	    overdraft_usage NUMERIC(15, 2)
	    overdraft_limit NUMERIC(15, 2),
	    interest_rate NUMERIC(5,2),
	    account_id INT REFERENCES debit_account(id)
	);
2023-01-11 08:02:35.737 GMT [12979] ERROR:  column loan.loan_duration does not exist at character 81
2023-01-11 08:02:35.737 GMT [12979] STATEMENT:  CREATE OR REPLACE VIEW client.client_loans AS
	SELECT loan.id, loan.loan_amount, loan.loan_duration, loan.loan_type
	FROM loan
	LEFT JOIN client_online_account_details ON loan.account_id = client_online_account_details.id;
2023-01-11 08:02:35.738 GMT [12979] ERROR:  relation "client_loans" does not exist at character 133
2023-01-11 08:02:35.738 GMT [12979] STATEMENT:  CREATE OR REPLACE VIEW client.client_loan_applications AS
	SELECT loan_application.application_status, loan_application.loan_id
	FROM client_loans
	RIGHT JOIN loan_application ON client_loans.id = loan_application.loan_id;
2023-01-11 08:02:35.738 GMT [12979] ERROR:  relation "client_loans" does not exist at character 145
2023-01-11 08:02:35.738 GMT [12979] STATEMENT:  CREATE OR REPLACE VIEW client.client_loan_statements AS
	SELECT loan_statement.starting_date, loan_statement.amount, loan_statement.loan_id
	FROM client_loans
	RIGHT JOIN loan_statement ON client_loans.id = loan_statement.loan_id;
2023-01-11 08:02:35.769 GMT [12979] ERROR:  syntax error at or near "=" at character 1316
2023-01-11 08:02:35.769 GMT [12979] STATEMENT:  CREATE OR REPLACE FUNCTION unauthenticated.create_online_account_details(username TEXT, password TEXT, first_name TEXT, last_name TEXT, email_address TEXT, question_choice_ids INT[], question_answers TEXT[])
	RETURNS INT AS $$
	DECLARE success INT;
	DECLARE customer_id INT;
	DECLARE account_id INT;
	DECLARE online_account_id INT;
	DECLARE question_choice_id INT;
	BEGIN
	    IF NOT EXISTS (SELECT FROM user_login WHERE username = username) THEN
	        customer_id = unauthenticated.get_customer_id(first_name, last_name, email_address);
	        INSERT INTO online_account (date_opened, sort_code, customer_id)
	        VALUES ((SELECT now()), (SELECT num FROM GENERATE_SERIES(1, 6) AS s(num) LIMIT 1), customer_id)
	        RETURNING id INTO account_id;
	
	        INSERT INTO user_login (account_id, username)
	        VALUES (account_id, username)
	        RETURNING id INTO online_account_id;
	
	        FOR i IN 0..2 LOOP
	            
	            INSERT INTO user_login_security_question (question_choice_id, login_id)
	            VALUES (question_choice_ids[i], online_account_id)
	            RETURNING id INTO question_choice_id;
	
	            INSERT INTO security_question_answer (answer, question_id)
	            VALUES (question_answers[i], question_choice_id);
	
	        END LOOP;
	
	        CREATE ROLE 
	
	        success = 1;
	    ELSE
	        RAISE NOTICE 'USERNAME ALREADY TAKEN';
	        success = 0;
	
	
	    EXECUTE format(
	        'CREATE ROLE %I WITH LOGIN PASSWORD %L', username, password
	    );
	    EXECUTE format(
	        'SET ROLE %I', username
	    );
	
	
	    END IF;
	    RETURN success;
	END;
	$$ LANGUAGE plpgsql;
2023-01-11 08:02:35.771 GMT [12979] ERROR:  invalid input syntax for type integer: "John" at character 30
2023-01-11 08:02:35.771 GMT [12979] STATEMENT:  INSERT INTO customer
	VALUES ('John', 'Smith', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('Jane', 'Doe', '1990-01-01', '01234567890', 'test@gmail.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Bloggs', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('John', 'Bloggs', '1990-01-01', '01234567890', 'hello@yahoo.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('Jane', 'Bloggs', '1990-01-01', '01234567890', 'test@outlook.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Doe', '1990-01-01', '01234567890', 'hello@outlook.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('John', 'Doe', '1990-01-01', '01234567890', 'mybankemail@icloud.com', '1 My Bank Street', 'My Bank City', 'My Bank County', 'MB1 1NK'),
	('Jane', 'Smith', '1990-01-01', '01234567890', 'bankemail@outlook.com', '1 Bank Street', 'Bank City', 'Bank County', 'BA1 1NK'),
	('Joe', 'Smith', '1990-01-01', '01234567890', 'example@icloud.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX');
2023-01-11 08:02:35.772 GMT [12979] ERROR:  syntax error at or near "INSERT" at character 267
2023-01-11 08:02:35.772 GMT [12979] STATEMENT:  INSERT INTO online_account
	VALUES ('2020-01-01', '123456', 0),
	('2020-01-01', '123456', 1),
	('2019-01-01', '123456', 2),
	('2018-01-01', '123456', 3),
	('2017-01-01', '123456', 4),
	('2016-01-01', '123456', 5),
	('2017-02-03', '123456', 6),
	('2018-02-04', '123456', 7)
	
	INSERT INTO user_login
	VALUES (0, 'johnsmith'),
	(1, 'janedoe'),
	(2, 'joebloggs'),
	(3, 'johnbloggs'),
	(4, 'janebloggs'),
	(5, 'joedoe'),
	(6, 'johndoe'),
	(7, 'joesmith'),
	(8, 'janesmith');
2023-01-11 08:02:35.772 GMT [12979] ERROR:  invalid input syntax for type integer: "What is your favourite colour?" at character 46
2023-01-11 08:02:35.772 GMT [12979] STATEMENT:  INSERT INTO security_question_option
	VALUES ('What is your favourite colour?'),
	('What is your favourite food?'),
	('What is your favourite animal?'),
	('What is your favourite sport?'),
	('What is your favourite movie?'),
	('What is your favourite book?'),
	('What is your favourite song?'),
	('What is your favourite band?'),
	('What is your favourite game?'),
	('What is your favourite TV show?');
2023-01-11 08:02:35.774 GMT [12979] ERROR:  insert or update on table "user_login_security_question" violates foreign key constraint "user_login_security_question_question_choice_id_fkey"
2023-01-11 08:02:35.774 GMT [12979] DETAIL:  Key (question_choice_id)=(0) is not present in table "security_question_option".
2023-01-11 08:02:35.774 GMT [12979] STATEMENT:  INSERT INTO user_login_security_question
	VALUES (0, 0),
	(1, 1),
	(2, 2),
	(3, 3),
	(4, 4),
	(5, 5),
	(6, 6),
	(7, 7),
	(8, 8);
2023-01-11 08:02:35.774 GMT [12979] ERROR:  invalid input syntax for type integer: "Red" at character 46
2023-01-11 08:02:35.774 GMT [12979] STATEMENT:  INSERT INTO security_question_answer
	VALUES ('Red', 0),
	('Blue', 1),
	('Green', 2),
	('Yellow', 3),
	('Orange', 4),
	('Purple', 5),
	('Pink', 6),
	('Black', 7),
	('White', 8);
2023-01-11 08:02:35.782 GMT [12979] ERROR:  invalid input syntax for type integer: "2024-01-01" at character 26
2023-01-11 08:02:35.782 GMT [12979] STATEMENT:  INSERT INTO loan
	VALUES ('2024-01-01', 10000, 'vehicle', 0),
	('2023-03-04', 300000, 'mortgage', 0),
	('2035-03-03', 400000, 'mortgage', 1),
	('2025-04-05', 25000, 'vehicle', 1),
	('2026-05-05', 34000, 'vehicle', 1),
	('2023-06-07', 500000, 'mortgage', 2),
	('2026-04-04', 60000, 'vehicle', 2),
	('2024-03-03', 70000, 'vehicle', 2),
	('2023-02-02', 800000, 'mortgage', 3),
	('2022-01-01', 90000, 'vehicle', 3),
	('2021-01-01', 100000, 'vehicle', 3),
	('2020-01-01', 110000, 'mortgage', 4),
	('2020-01-01', 12000, 'vehicle', 4),
	('2020-01-01', 13000, 'vehicle', 4),
	('2020-01-01', 140000, 'mortgage', 5),
	('2020-01-01', 15000, 'vehicle', 5),
	('2020-01-01', 16000, 'vehicle', 5),
	('2020-01-01', 170000, 'mortgage', 6),
	('2020-01-01', 18000, 'vehicle', 6),
	('2020-01-01', 19000, 'vehicle', 6),
	('2020-01-01', 200000, 'mortgage', 7),
	('2020-01-01', 21000, 'vehicle', 7),
	('2020-01-01', 22000, 'vehicle', 7);
2023-01-11 08:03:37.680 GMT [12950] LOG:  received fast shutdown request
2023-01-11 08:03:37.682 GMT [12950] LOG:  aborting any active transactions
2023-01-11 08:03:37.686 GMT [12950] LOG:  background worker "logical replication launcher" (PID 12957) exited with exit code 1
2023-01-11 08:03:37.686 GMT [12952] LOG:  shutting down
2023-01-11 08:03:37.738 GMT [12950] LOG:  database system is shut down
2023-01-11 08:03:39.590 GMT [13250] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-11 08:03:39.590 GMT [13250] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-11 08:03:39.591 GMT [13250] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-11 08:03:39.595 GMT [13251] LOG:  database system was shut down at 2023-01-11 08:03:39 GMT
2023-01-11 08:03:39.600 GMT [13250] LOG:  database system is ready to accept connections
2023-01-11 08:03:40.282 GMT [13286] ERROR:  syntax error at or near "overdraft_limit" at character 112
2023-01-11 08:03:40.282 GMT [13286] STATEMENT:  CREATE TABLE IF NOT EXISTS debit_overdraft (
	    id SERIAL PRIMARY KEY,
	    overdraft_usage NUMERIC(15, 2)
	    overdraft_limit NUMERIC(15, 2),
	    interest_rate NUMERIC(5,2),
	    account_id INT REFERENCES debit_account(id)
	);
2023-01-11 08:03:40.348 GMT [13286] ERROR:  column loan.loan_duration does not exist at character 81
2023-01-11 08:03:40.348 GMT [13286] STATEMENT:  CREATE OR REPLACE VIEW client.client_loans AS
	SELECT loan.id, loan.loan_amount, loan.loan_duration, loan.loan_type
	FROM loan
	LEFT JOIN client_online_account_details ON loan.account_id = client_online_account_details.id;
2023-01-11 08:03:40.349 GMT [13286] ERROR:  relation "client_loans" does not exist at character 133
2023-01-11 08:03:40.349 GMT [13286] STATEMENT:  CREATE OR REPLACE VIEW client.client_loan_applications AS
	SELECT loan_application.application_status, loan_application.loan_id
	FROM client_loans
	RIGHT JOIN loan_application ON client_loans.id = loan_application.loan_id;
2023-01-11 08:03:40.349 GMT [13286] ERROR:  relation "client_loans" does not exist at character 145
2023-01-11 08:03:40.349 GMT [13286] STATEMENT:  CREATE OR REPLACE VIEW client.client_loan_statements AS
	SELECT loan_statement.starting_date, loan_statement.amount, loan_statement.loan_id
	FROM client_loans
	RIGHT JOIN loan_statement ON client_loans.id = loan_statement.loan_id;
2023-01-11 08:03:40.385 GMT [13286] ERROR:  invalid input syntax for type integer: "John" at character 30
2023-01-11 08:03:40.385 GMT [13286] STATEMENT:  INSERT INTO customer
	VALUES ('John', 'Smith', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('Jane', 'Doe', '1990-01-01', '01234567890', 'test@gmail.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Bloggs', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('John', 'Bloggs', '1990-01-01', '01234567890', 'hello@yahoo.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('Jane', 'Bloggs', '1990-01-01', '01234567890', 'test@outlook.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Doe', '1990-01-01', '01234567890', 'hello@outlook.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('John', 'Doe', '1990-01-01', '01234567890', 'mybankemail@icloud.com', '1 My Bank Street', 'My Bank City', 'My Bank County', 'MB1 1NK'),
	('Jane', 'Smith', '1990-01-01', '01234567890', 'bankemail@outlook.com', '1 Bank Street', 'Bank City', 'Bank County', 'BA1 1NK'),
	('Joe', 'Smith', '1990-01-01', '01234567890', 'example@icloud.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX');
2023-01-11 08:03:40.385 GMT [13286] ERROR:  syntax error at or near "INSERT" at character 267
2023-01-11 08:03:40.385 GMT [13286] STATEMENT:  INSERT INTO online_account
	VALUES ('2020-01-01', '123456', 0),
	('2020-01-01', '123456', 1),
	('2019-01-01', '123456', 2),
	('2018-01-01', '123456', 3),
	('2017-01-01', '123456', 4),
	('2016-01-01', '123456', 5),
	('2017-02-03', '123456', 6),
	('2018-02-04', '123456', 7)
	
	INSERT INTO user_login
	VALUES (0, 'johnsmith'),
	(1, 'janedoe'),
	(2, 'joebloggs'),
	(3, 'johnbloggs'),
	(4, 'janebloggs'),
	(5, 'joedoe'),
	(6, 'johndoe'),
	(7, 'joesmith'),
	(8, 'janesmith');
2023-01-11 08:03:40.385 GMT [13286] ERROR:  invalid input syntax for type integer: "What is your favourite colour?" at character 46
2023-01-11 08:03:40.385 GMT [13286] STATEMENT:  INSERT INTO security_question_option
	VALUES ('What is your favourite colour?'),
	('What is your favourite food?'),
	('What is your favourite animal?'),
	('What is your favourite sport?'),
	('What is your favourite movie?'),
	('What is your favourite book?'),
	('What is your favourite song?'),
	('What is your favourite band?'),
	('What is your favourite game?'),
	('What is your favourite TV show?');
2023-01-11 08:03:40.387 GMT [13286] ERROR:  insert or update on table "user_login_security_question" violates foreign key constraint "user_login_security_question_question_choice_id_fkey"
2023-01-11 08:03:40.387 GMT [13286] DETAIL:  Key (question_choice_id)=(0) is not present in table "security_question_option".
2023-01-11 08:03:40.387 GMT [13286] STATEMENT:  INSERT INTO user_login_security_question
	VALUES (0, 0),
	(1, 1),
	(2, 2),
	(3, 3),
	(4, 4),
	(5, 5),
	(6, 6),
	(7, 7),
	(8, 8);
2023-01-11 08:03:40.388 GMT [13286] ERROR:  invalid input syntax for type integer: "Red" at character 46
2023-01-11 08:03:40.388 GMT [13286] STATEMENT:  INSERT INTO security_question_answer
	VALUES ('Red', 0),
	('Blue', 1),
	('Green', 2),
	('Yellow', 3),
	('Orange', 4),
	('Purple', 5),
	('Pink', 6),
	('Black', 7),
	('White', 8);
2023-01-11 08:03:40.396 GMT [13286] ERROR:  invalid input syntax for type integer: "2024-01-01" at character 26
2023-01-11 08:03:40.396 GMT [13286] STATEMENT:  INSERT INTO loan
	VALUES ('2024-01-01', 10000, 'vehicle', 0),
	('2023-03-04', 300000, 'mortgage', 0),
	('2035-03-03', 400000, 'mortgage', 1),
	('2025-04-05', 25000, 'vehicle', 1),
	('2026-05-05', 34000, 'vehicle', 1),
	('2023-06-07', 500000, 'mortgage', 2),
	('2026-04-04', 60000, 'vehicle', 2),
	('2024-03-03', 70000, 'vehicle', 2),
	('2023-02-02', 800000, 'mortgage', 3),
	('2022-01-01', 90000, 'vehicle', 3),
	('2021-01-01', 100000, 'vehicle', 3),
	('2020-01-01', 110000, 'mortgage', 4),
	('2020-01-01', 12000, 'vehicle', 4),
	('2020-01-01', 13000, 'vehicle', 4),
	('2020-01-01', 140000, 'mortgage', 5),
	('2020-01-01', 15000, 'vehicle', 5),
	('2020-01-01', 16000, 'vehicle', 5),
	('2020-01-01', 170000, 'mortgage', 6),
	('2020-01-01', 18000, 'vehicle', 6),
	('2020-01-01', 19000, 'vehicle', 6),
	('2020-01-01', 200000, 'mortgage', 7),
	('2020-01-01', 21000, 'vehicle', 7),
	('2020-01-01', 22000, 'vehicle', 7);
2023-01-11 08:04:40.789 GMT [13250] LOG:  received fast shutdown request
2023-01-11 08:04:40.790 GMT [13250] LOG:  aborting any active transactions
2023-01-11 08:04:40.795 GMT [13250] LOG:  background worker "logical replication launcher" (PID 13257) exited with exit code 1
2023-01-11 08:04:40.796 GMT [13252] LOG:  shutting down
2023-01-11 08:04:40.839 GMT [13250] LOG:  database system is shut down
2023-01-11 08:04:43.021 GMT [13646] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-11 08:04:43.022 GMT [13646] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-11 08:04:43.023 GMT [13646] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-11 08:04:43.027 GMT [13647] LOG:  database system was shut down at 2023-01-11 08:04:42 GMT
2023-01-11 08:04:43.032 GMT [13646] LOG:  database system is ready to accept connections
2023-01-11 08:04:43.863 GMT [13675] ERROR:  invalid input syntax for type integer: "John" at character 30
2023-01-11 08:04:43.863 GMT [13675] STATEMENT:  INSERT INTO customer
	VALUES ('John', 'Smith', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('Jane', 'Doe', '1990-01-01', '01234567890', 'test@gmail.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Bloggs', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('John', 'Bloggs', '1990-01-01', '01234567890', 'hello@yahoo.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('Jane', 'Bloggs', '1990-01-01', '01234567890', 'test@outlook.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Doe', '1990-01-01', '01234567890', 'hello@outlook.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('John', 'Doe', '1990-01-01', '01234567890', 'mybankemail@icloud.com', '1 My Bank Street', 'My Bank City', 'My Bank County', 'MB1 1NK'),
	('Jane', 'Smith', '1990-01-01', '01234567890', 'bankemail@outlook.com', '1 Bank Street', 'Bank City', 'Bank County', 'BA1 1NK'),
	('Joe', 'Smith', '1990-01-01', '01234567890', 'example@icloud.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX');
2023-01-11 08:04:43.863 GMT [13675] ERROR:  syntax error at or near "INSERT" at character 267
2023-01-11 08:04:43.863 GMT [13675] STATEMENT:  INSERT INTO online_account
	VALUES ('2020-01-01', '123456', 0),
	('2020-01-01', '123456', 1),
	('2019-01-01', '123456', 2),
	('2018-01-01', '123456', 3),
	('2017-01-01', '123456', 4),
	('2016-01-01', '123456', 5),
	('2017-02-03', '123456', 6),
	('2018-02-04', '123456', 7)
	
	INSERT INTO user_login
	VALUES (0, 'johnsmith'),
	(1, 'janedoe'),
	(2, 'joebloggs'),
	(3, 'johnbloggs'),
	(4, 'janebloggs'),
	(5, 'joedoe'),
	(6, 'johndoe'),
	(7, 'joesmith'),
	(8, 'janesmith');
2023-01-11 08:04:43.864 GMT [13675] ERROR:  invalid input syntax for type integer: "What is your favourite colour?" at character 46
2023-01-11 08:04:43.864 GMT [13675] STATEMENT:  INSERT INTO security_question_option
	VALUES ('What is your favourite colour?'),
	('What is your favourite food?'),
	('What is your favourite animal?'),
	('What is your favourite sport?'),
	('What is your favourite movie?'),
	('What is your favourite book?'),
	('What is your favourite song?'),
	('What is your favourite band?'),
	('What is your favourite game?'),
	('What is your favourite TV show?');
2023-01-11 08:04:43.864 GMT [13675] ERROR:  insert or update on table "user_login_security_question" violates foreign key constraint "user_login_security_question_question_choice_id_fkey"
2023-01-11 08:04:43.864 GMT [13675] DETAIL:  Key (question_choice_id)=(0) is not present in table "security_question_option".
2023-01-11 08:04:43.864 GMT [13675] STATEMENT:  INSERT INTO user_login_security_question
	VALUES (0, 0),
	(1, 1),
	(2, 2),
	(3, 3),
	(4, 4),
	(5, 5),
	(6, 6),
	(7, 7),
	(8, 8);
2023-01-11 08:04:43.865 GMT [13675] ERROR:  invalid input syntax for type integer: "Red" at character 46
2023-01-11 08:04:43.865 GMT [13675] STATEMENT:  INSERT INTO security_question_answer
	VALUES ('Red', 0),
	('Blue', 1),
	('Green', 2),
	('Yellow', 3),
	('Orange', 4),
	('Purple', 5),
	('Pink', 6),
	('Black', 7),
	('White', 8);
2023-01-11 08:04:43.870 GMT [13675] ERROR:  invalid input syntax for type integer: "2024-01-01" at character 26
2023-01-11 08:04:43.870 GMT [13675] STATEMENT:  INSERT INTO loan
	VALUES ('2024-01-01', 10000, 'vehicle', 0),
	('2023-03-04', 300000, 'mortgage', 0),
	('2035-03-03', 400000, 'mortgage', 1),
	('2025-04-05', 25000, 'vehicle', 1),
	('2026-05-05', 34000, 'vehicle', 1),
	('2023-06-07', 500000, 'mortgage', 2),
	('2026-04-04', 60000, 'vehicle', 2),
	('2024-03-03', 70000, 'vehicle', 2),
	('2023-02-02', 800000, 'mortgage', 3),
	('2022-01-01', 90000, 'vehicle', 3),
	('2021-01-01', 100000, 'vehicle', 3),
	('2020-01-01', 110000, 'mortgage', 4),
	('2020-01-01', 12000, 'vehicle', 4),
	('2020-01-01', 13000, 'vehicle', 4),
	('2020-01-01', 140000, 'mortgage', 5),
	('2020-01-01', 15000, 'vehicle', 5),
	('2020-01-01', 16000, 'vehicle', 5),
	('2020-01-01', 170000, 'mortgage', 6),
	('2020-01-01', 18000, 'vehicle', 6),
	('2020-01-01', 19000, 'vehicle', 6),
	('2020-01-01', 200000, 'mortgage', 7),
	('2020-01-01', 21000, 'vehicle', 7),
	('2020-01-01', 22000, 'vehicle', 7);
2023-01-11 08:06:13.277 GMT [13646] LOG:  received fast shutdown request
2023-01-11 08:06:13.279 GMT [13646] LOG:  aborting any active transactions
2023-01-11 08:06:13.283 GMT [13646] LOG:  background worker "logical replication launcher" (PID 13653) exited with exit code 1
2023-01-11 08:06:13.284 GMT [13648] LOG:  shutting down
2023-01-11 08:06:13.329 GMT [13646] LOG:  database system is shut down
2023-01-11 08:06:15.462 GMT [14044] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-11 08:06:15.463 GMT [14044] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-11 08:06:15.472 GMT [14044] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-11 08:06:15.476 GMT [14048] LOG:  database system was shut down at 2023-01-11 08:06:15 GMT
2023-01-11 08:06:15.482 GMT [14044] LOG:  database system is ready to accept connections
2023-01-11 08:06:16.211 GMT [14073] ERROR:  invalid input syntax for type integer: "John" at character 30
2023-01-11 08:06:16.211 GMT [14073] STATEMENT:  INSERT INTO customer
	VALUES ('John', 'Smith', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('Jane', 'Doe', '1990-01-01', '01234567890', 'test@gmail.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Bloggs', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('John', 'Bloggs', '1990-01-01', '01234567890', 'hello@yahoo.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('Jane', 'Bloggs', '1990-01-01', '01234567890', 'test@outlook.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Doe', '1990-01-01', '01234567890', 'hello@outlook.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('John', 'Doe', '1990-01-01', '01234567890', 'mybankemail@icloud.com', '1 My Bank Street', 'My Bank City', 'My Bank County', 'MB1 1NK'),
	('Jane', 'Smith', '1990-01-01', '01234567890', 'bankemail@outlook.com', '1 Bank Street', 'Bank City', 'Bank County', 'BA1 1NK'),
	('Joe', 'Smith', '1990-01-01', '01234567890', 'example@icloud.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX');
2023-01-11 08:06:16.212 GMT [14073] ERROR:  invalid input syntax for type integer: "2020-01-01" at character 36
2023-01-11 08:06:16.212 GMT [14073] STATEMENT:  INSERT INTO online_account
	VALUES ('2020-01-01', '123456', 0),
	('2020-01-01', '123456', 1),
	('2019-01-01', '123456', 2),
	('2018-01-01', '123456', 3),
	('2017-01-01', '123456', 4),
	('2016-01-01', '123456', 5),
	('2017-02-03', '123456', 6),
	('2018-02-04', '123456', 7);
2023-01-11 08:06:16.212 GMT [14073] ERROR:  invalid input syntax for type integer: "johnsmith" at character 35
2023-01-11 08:06:16.212 GMT [14073] STATEMENT:  INSERT INTO user_login
	VALUES (0, 'johnsmith'),
	(1, 'janedoe'),
	(2, 'joebloggs'),
	(3, 'johnbloggs'),
	(4, 'janebloggs'),
	(5, 'joedoe'),
	(6, 'johndoe'),
	(7, 'joesmith'),
	(8, 'janesmith');
2023-01-11 08:06:16.212 GMT [14073] ERROR:  invalid input syntax for type integer: "What is your favourite colour?" at character 46
2023-01-11 08:06:16.212 GMT [14073] STATEMENT:  INSERT INTO security_question_option
	VALUES ('What is your favourite colour?'),
	('What is your favourite food?'),
	('What is your favourite animal?'),
	('What is your favourite sport?'),
	('What is your favourite movie?'),
	('What is your favourite book?'),
	('What is your favourite song?'),
	('What is your favourite band?'),
	('What is your favourite game?'),
	('What is your favourite TV show?');
2023-01-11 08:06:16.215 GMT [14073] ERROR:  insert or update on table "user_login_security_question" violates foreign key constraint "user_login_security_question_question_choice_id_fkey"
2023-01-11 08:06:16.215 GMT [14073] DETAIL:  Key (question_choice_id)=(0) is not present in table "security_question_option".
2023-01-11 08:06:16.215 GMT [14073] STATEMENT:  INSERT INTO user_login_security_question
	VALUES (0, 0),
	(1, 1),
	(2, 2),
	(3, 3),
	(4, 4),
	(5, 5),
	(6, 6),
	(7, 7),
	(8, 8);
2023-01-11 08:06:16.216 GMT [14073] ERROR:  invalid input syntax for type integer: "Red" at character 46
2023-01-11 08:06:16.216 GMT [14073] STATEMENT:  INSERT INTO security_question_answer
	VALUES ('Red', 0),
	('Blue', 1),
	('Green', 2),
	('Yellow', 3),
	('Orange', 4),
	('Purple', 5),
	('Pink', 6),
	('Black', 7),
	('White', 8);
2023-01-11 08:06:16.223 GMT [14073] ERROR:  invalid input syntax for type integer: "2024-01-01" at character 26
2023-01-11 08:06:16.223 GMT [14073] STATEMENT:  INSERT INTO loan
	VALUES ('2024-01-01', 10000, 'vehicle', 0),
	('2023-03-04', 300000, 'mortgage', 0),
	('2035-03-03', 400000, 'mortgage', 1),
	('2025-04-05', 25000, 'vehicle', 1),
	('2026-05-05', 34000, 'vehicle', 1),
	('2023-06-07', 500000, 'mortgage', 2),
	('2026-04-04', 60000, 'vehicle', 2),
	('2024-03-03', 70000, 'vehicle', 2),
	('2023-02-02', 800000, 'mortgage', 3),
	('2022-01-01', 90000, 'vehicle', 3),
	('2021-01-01', 100000, 'vehicle', 3),
	('2020-01-01', 110000, 'mortgage', 4),
	('2020-01-01', 12000, 'vehicle', 4),
	('2020-01-01', 13000, 'vehicle', 4),
	('2020-01-01', 140000, 'mortgage', 5),
	('2020-01-01', 15000, 'vehicle', 5),
	('2020-01-01', 16000, 'vehicle', 5),
	('2020-01-01', 170000, 'mortgage', 6),
	('2020-01-01', 18000, 'vehicle', 6),
	('2020-01-01', 19000, 'vehicle', 6),
	('2020-01-01', 200000, 'mortgage', 7),
	('2020-01-01', 21000, 'vehicle', 7),
	('2020-01-01', 22000, 'vehicle', 7);
2023-01-11 08:08:05.434 GMT [14044] LOG:  received fast shutdown request
2023-01-11 08:08:05.436 GMT [14044] LOG:  aborting any active transactions
2023-01-11 08:08:05.440 GMT [14044] LOG:  background worker "logical replication launcher" (PID 14054) exited with exit code 1
2023-01-11 08:08:05.440 GMT [14049] LOG:  shutting down
2023-01-11 08:08:05.483 GMT [14044] LOG:  database system is shut down
2023-01-11 08:08:07.244 GMT [14460] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-11 08:08:07.244 GMT [14460] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-11 08:08:07.245 GMT [14460] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-11 08:08:07.250 GMT [14461] LOG:  database system was shut down at 2023-01-11 08:08:07 GMT
2023-01-11 08:08:07.257 GMT [14460] LOG:  database system is ready to accept connections
2023-01-11 08:08:08.059 GMT [14499] ERROR:  invalid input syntax for type integer: "2020-01-01" at character 36
2023-01-11 08:08:08.059 GMT [14499] STATEMENT:  INSERT INTO online_account
	VALUES ('2020-01-01', '123456', 0),
	('2020-01-01', '123456', 1),
	('2019-01-01', '123456', 2),
	('2018-01-01', '123456', 3),
	('2017-01-01', '123456', 4),
	('2016-01-01', '123456', 5),
	('2017-02-03', '123456', 6),
	('2018-02-04', '123456', 7);
2023-01-11 08:08:08.059 GMT [14499] ERROR:  invalid input syntax for type integer: "johnsmith" at character 35
2023-01-11 08:08:08.059 GMT [14499] STATEMENT:  INSERT INTO user_login
	VALUES (0, 'johnsmith'),
	(1, 'janedoe'),
	(2, 'joebloggs'),
	(3, 'johnbloggs'),
	(4, 'janebloggs'),
	(5, 'joedoe'),
	(6, 'johndoe'),
	(7, 'joesmith'),
	(8, 'janesmith');
2023-01-11 08:08:08.060 GMT [14499] ERROR:  invalid input syntax for type integer: "What is your favourite colour?" at character 46
2023-01-11 08:08:08.060 GMT [14499] STATEMENT:  INSERT INTO security_question_option
	VALUES ('What is your favourite colour?'),
	('What is your favourite food?'),
	('What is your favourite animal?'),
	('What is your favourite sport?'),
	('What is your favourite movie?'),
	('What is your favourite book?'),
	('What is your favourite song?'),
	('What is your favourite band?'),
	('What is your favourite game?'),
	('What is your favourite TV show?');
2023-01-11 08:08:08.063 GMT [14499] ERROR:  insert or update on table "user_login_security_question" violates foreign key constraint "user_login_security_question_question_choice_id_fkey"
2023-01-11 08:08:08.063 GMT [14499] DETAIL:  Key (question_choice_id)=(0) is not present in table "security_question_option".
2023-01-11 08:08:08.063 GMT [14499] STATEMENT:  INSERT INTO user_login_security_question
	VALUES (0, 0),
	(1, 1),
	(2, 2),
	(3, 3),
	(4, 4),
	(5, 5),
	(6, 6),
	(7, 7),
	(8, 8);
2023-01-11 08:08:08.064 GMT [14499] ERROR:  invalid input syntax for type integer: "Red" at character 46
2023-01-11 08:08:08.064 GMT [14499] STATEMENT:  INSERT INTO security_question_answer
	VALUES ('Red', 0),
	('Blue', 1),
	('Green', 2),
	('Yellow', 3),
	('Orange', 4),
	('Purple', 5),
	('Pink', 6),
	('Black', 7),
	('White', 8);
2023-01-11 08:08:08.068 GMT [14499] ERROR:  invalid input syntax for type integer: "2024-01-01" at character 26
2023-01-11 08:08:08.068 GMT [14499] STATEMENT:  INSERT INTO loan
	VALUES ('2024-01-01', 10000, 'vehicle', 0),
	('2023-03-04', 300000, 'mortgage', 0),
	('2035-03-03', 400000, 'mortgage', 1),
	('2025-04-05', 25000, 'vehicle', 1),
	('2026-05-05', 34000, 'vehicle', 1),
	('2023-06-07', 500000, 'mortgage', 2),
	('2026-04-04', 60000, 'vehicle', 2),
	('2024-03-03', 70000, 'vehicle', 2),
	('2023-02-02', 800000, 'mortgage', 3),
	('2022-01-01', 90000, 'vehicle', 3),
	('2021-01-01', 100000, 'vehicle', 3),
	('2020-01-01', 110000, 'mortgage', 4),
	('2020-01-01', 12000, 'vehicle', 4),
	('2020-01-01', 13000, 'vehicle', 4),
	('2020-01-01', 140000, 'mortgage', 5),
	('2020-01-01', 15000, 'vehicle', 5),
	('2020-01-01', 16000, 'vehicle', 5),
	('2020-01-01', 170000, 'mortgage', 6),
	('2020-01-01', 18000, 'vehicle', 6),
	('2020-01-01', 19000, 'vehicle', 6),
	('2020-01-01', 200000, 'mortgage', 7),
	('2020-01-01', 21000, 'vehicle', 7),
	('2020-01-01', 22000, 'vehicle', 7);
2023-01-11 08:09:12.635 GMT [14460] LOG:  received fast shutdown request
2023-01-11 08:09:12.637 GMT [14460] LOG:  aborting any active transactions
2023-01-11 08:09:12.643 GMT [14460] LOG:  background worker "logical replication launcher" (PID 14467) exited with exit code 1
2023-01-11 08:09:12.645 GMT [14462] LOG:  shutting down
2023-01-11 08:09:12.691 GMT [14460] LOG:  database system is shut down
2023-01-11 08:09:14.702 GMT [14831] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-11 08:09:14.702 GMT [14831] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-11 08:09:14.703 GMT [14831] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-11 08:09:14.708 GMT [14837] LOG:  database system was shut down at 2023-01-11 08:09:14 GMT
2023-01-11 08:09:14.713 GMT [14831] LOG:  database system is ready to accept connections
2023-01-11 08:09:15.451 GMT [14874] ERROR:  insert or update on table "online_account" violates foreign key constraint "online_account_customer_id_fkey"
2023-01-11 08:09:15.451 GMT [14874] DETAIL:  Key (customer_id)=(0) is not present in table "customer".
2023-01-11 08:09:15.451 GMT [14874] STATEMENT:  INSERT INTO online_account (date_opened, sort_code, customer_id)
	VALUES ('2020-01-01', '123456', 0),
	('2020-01-01', '123456', 1),
	('2019-01-01', '123456', 2),
	('2018-01-01', '123456', 3),
	('2017-01-01', '123456', 4),
	('2016-01-01', '123456', 5),
	('2017-02-03', '123456', 6),
	('2018-02-04', '123456', 7);
2023-01-11 08:09:15.452 GMT [14874] ERROR:  insert or update on table "user_login" violates foreign key constraint "user_login_account_id_fkey"
2023-01-11 08:09:15.452 GMT [14874] DETAIL:  Key (account_id)=(0) is not present in table "online_account".
2023-01-11 08:09:15.452 GMT [14874] STATEMENT:  INSERT INTO user_login (account_id, username)
	VALUES (0, 'johnsmith'),
	(1, 'janedoe'),
	(2, 'joebloggs'),
	(3, 'johnbloggs'),
	(4, 'janebloggs'),
	(5, 'joedoe'),
	(6, 'johndoe'),
	(7, 'joesmith'),
	(8, 'janesmith');
2023-01-11 08:09:15.452 GMT [14874] ERROR:  column "question" of relation "security_question_option" does not exist at character 39
2023-01-11 08:09:15.452 GMT [14874] STATEMENT:  INSERT INTO security_question_option (question)
	VALUES ('What is your favourite colour?'),
	('What is your favourite food?'),
	('What is your favourite animal?'),
	('What is your favourite sport?'),
	('What is your favourite movie?'),
	('What is your favourite book?'),
	('What is your favourite song?'),
	('What is your favourite band?'),
	('What is your favourite game?'),
	('What is your favourite TV show?');
2023-01-11 08:09:15.453 GMT [14874] ERROR:  insert or update on table "user_login_security_question" violates foreign key constraint "user_login_security_question_question_choice_id_fkey"
2023-01-11 08:09:15.453 GMT [14874] DETAIL:  Key (question_choice_id)=(0) is not present in table "security_question_option".
2023-01-11 08:09:15.453 GMT [14874] STATEMENT:  INSERT INTO user_login_security_question (question_choice_id, login_id)
	VALUES (0, 0),
	(1, 1),
	(2, 2),
	(3, 3),
	(4, 4),
	(5, 5),
	(6, 6),
	(7, 7),
	(8, 8);
2023-01-11 08:09:15.453 GMT [14874] ERROR:  column "answer" of relation "security_question_answer" does not exist at character 39
2023-01-11 08:09:15.453 GMT [14874] STATEMENT:  INSERT INTO security_question_answer (answer, question_id)
	VALUES ('Red', 0),
	('Blue', 1),
	('Green', 2),
	('Yellow', 3),
	('Orange', 4),
	('Purple', 5),
	('Pink', 6),
	('Black', 7),
	('White', 8);
2023-01-11 08:09:15.453 GMT [14874] ERROR:  column "balance" of relation "savings_account" does not exist at character 30
2023-01-11 08:09:15.453 GMT [14874] STATEMENT:  INSERT INTO savings_account (balance, interest_rate, online_account_id)
	VALUES (2000.00, 2.05, 0),
	(1000.00, 2.05, 1),
	(5000.00, 2.05, 2),
	(10000.00, 2.05, 3),
	(20000.00, 2.05, 4),
	(50000.00, 2.05, 5),
	(100000.00, 2.05, 6),
	(200000.00, 2.05, 7);
2023-01-11 08:09:15.454 GMT [14874] ERROR:  column "balance" of relation "credit_account" does not exist at character 29
2023-01-11 08:09:15.454 GMT [14874] STATEMENT:  INSERT INTO credit_account (balance, credit_limit, interest_rate, online_account_id)
	VALUES (55.43, 2000.00, 4.22, 0),
	(100.00, 1000.00, 4.22, 1),
	(200.00, 5000.00, 4.22, 2),
	(300.00, 10000.00, 4.22, 3),
	(400.00, 20000.00, 4.22, 4),
	(500.00, 50000.00, 4.22, 5),
	(600.00, 100000.00, 4.22, 6),
	(700.00, 200000.00, 4.22, 7);
2023-01-11 08:09:15.454 GMT [14874] ERROR:  column "balance" of relation "debit_account" does not exist at character 28
2023-01-11 08:09:15.454 GMT [14874] STATEMENT:  INSERT INTO debit_account (balance, overdraft_limit, interest_rate, online_account_id)
	VALUES (3465.43, 0.05, 0),
	(1000.00, 0.05, 1),
	(5000.00, 0.05, 2),
	(10000.00, 0.05, 3),
	(20000.00, 0.05, 4),
	(50000.00, 0.05, 5),
	(100000.00, 0.05, 6),
	(200000.00, 0.05, 7);
2023-01-11 08:09:15.454 GMT [14874] ERROR:  column "interest_rate" of relation "loan" does not exist at character 32
2023-01-11 08:09:15.454 GMT [14874] STATEMENT:  INSERT INTO loan (loan_amount, interest_rate, loan_type, online_account_id)
	VALUES ('2024-01-01', 10000, 'vehicle', 0),
	('2023-03-04', 300000, 'mortgage', 0),
	('2035-03-03', 400000, 'mortgage', 1),
	('2025-04-05', 25000, 'vehicle', 1),
	('2026-05-05', 34000, 'vehicle', 1),
	('2023-06-07', 500000, 'mortgage', 2),
	('2026-04-04', 60000, 'vehicle', 2),
	('2024-03-03', 70000, 'vehicle', 2),
	('2023-02-02', 800000, 'mortgage', 3),
	('2022-01-01', 90000, 'vehicle', 3),
	('2021-01-01', 100000, 'vehicle', 3),
	('2020-01-01', 110000, 'mortgage', 4),
	('2020-01-01', 12000, 'vehicle', 4),
	('2020-01-01', 13000, 'vehicle', 4),
	('2020-01-01', 140000, 'mortgage', 5),
	('2020-01-01', 15000, 'vehicle', 5),
	('2020-01-01', 16000, 'vehicle', 5),
	('2020-01-01', 170000, 'mortgage', 6),
	('2020-01-01', 18000, 'vehicle', 6),
	('2020-01-01', 19000, 'vehicle', 6),
	('2020-01-01', 200000, 'mortgage', 7),
	('2020-01-01', 21000, 'vehicle', 7),
	('2020-01-01', 22000, 'vehicle', 7);
2023-01-11 08:09:58.575 GMT [14831] LOG:  received fast shutdown request
2023-01-11 08:09:58.576 GMT [14831] LOG:  aborting any active transactions
2023-01-11 08:09:58.583 GMT [14831] LOG:  background worker "logical replication launcher" (PID 14845) exited with exit code 1
2023-01-11 08:09:58.584 GMT [14840] LOG:  shutting down
2023-01-11 08:09:58.628 GMT [14831] LOG:  database system is shut down
2023-01-11 08:10:00.361 GMT [15092] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-11 08:10:00.361 GMT [15092] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-11 08:10:00.363 GMT [15092] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-11 08:10:00.368 GMT [15093] LOG:  database system was shut down at 2023-01-11 08:10:00 GMT
2023-01-11 08:10:00.373 GMT [15092] LOG:  database system is ready to accept connections
2023-01-11 08:10:01.103 GMT [15131] ERROR:  insert or update on table "online_account" violates foreign key constraint "online_account_customer_id_fkey"
2023-01-11 08:10:01.103 GMT [15131] DETAIL:  Key (customer_id)=(0) is not present in table "customer".
2023-01-11 08:10:01.103 GMT [15131] STATEMENT:  INSERT INTO online_account (date_opened, sort_code, customer_id)
	VALUES ('2020-01-01', '123456', 0),
	('2020-01-01', '123456', 1),
	('2019-01-01', '123456', 2),
	('2018-01-01', '123456', 3),
	('2017-01-01', '123456', 4),
	('2016-01-01', '123456', 5),
	('2017-02-03', '123456', 6),
	('2018-02-04', '123456', 7);
2023-01-11 08:10:01.104 GMT [15131] ERROR:  insert or update on table "user_login" violates foreign key constraint "user_login_account_id_fkey"
2023-01-11 08:10:01.104 GMT [15131] DETAIL:  Key (account_id)=(0) is not present in table "online_account".
2023-01-11 08:10:01.104 GMT [15131] STATEMENT:  INSERT INTO user_login (account_id, username)
	VALUES (0, 'johnsmith'),
	(1, 'janedoe'),
	(2, 'joebloggs'),
	(3, 'johnbloggs'),
	(4, 'janebloggs'),
	(5, 'joedoe'),
	(6, 'johndoe'),
	(7, 'joesmith'),
	(8, 'janesmith');
2023-01-11 08:10:01.105 GMT [15131] ERROR:  column "question" of relation "security_question_option" does not exist at character 39
2023-01-11 08:10:01.105 GMT [15131] STATEMENT:  INSERT INTO security_question_option (question)
	VALUES ('What is your favourite colour?'),
	('What is your favourite food?'),
	('What is your favourite animal?'),
	('What is your favourite sport?'),
	('What is your favourite movie?'),
	('What is your favourite book?'),
	('What is your favourite song?'),
	('What is your favourite band?'),
	('What is your favourite game?'),
	('What is your favourite TV show?');
2023-01-11 08:10:01.106 GMT [15131] ERROR:  insert or update on table "user_login_security_question" violates foreign key constraint "user_login_security_question_question_choice_id_fkey"
2023-01-11 08:10:01.106 GMT [15131] DETAIL:  Key (question_choice_id)=(0) is not present in table "security_question_option".
2023-01-11 08:10:01.106 GMT [15131] STATEMENT:  INSERT INTO user_login_security_question (question_choice_id, login_id)
	VALUES (0, 0),
	(1, 1),
	(2, 2),
	(3, 3),
	(4, 4),
	(5, 5),
	(6, 6),
	(7, 7),
	(8, 8);
2023-01-11 08:10:01.107 GMT [15131] ERROR:  column "answer" of relation "security_question_answer" does not exist at character 39
2023-01-11 08:10:01.107 GMT [15131] STATEMENT:  INSERT INTO security_question_answer (answer, question_id)
	VALUES ('Red', 0),
	('Blue', 1),
	('Green', 2),
	('Yellow', 3),
	('Orange', 4),
	('Purple', 5),
	('Pink', 6),
	('Black', 7),
	('White', 8);
2023-01-11 08:10:01.107 GMT [15131] ERROR:  column "balance" of relation "savings_account" does not exist at character 30
2023-01-11 08:10:01.107 GMT [15131] STATEMENT:  INSERT INTO savings_account (balance, interest_rate, online_account_id)
	VALUES (2000.00, 2.05, 0),
	(1000.00, 2.05, 1),
	(5000.00, 2.05, 2),
	(10000.00, 2.05, 3),
	(20000.00, 2.05, 4),
	(50000.00, 2.05, 5),
	(100000.00, 2.05, 6),
	(200000.00, 2.05, 7);
2023-01-11 08:10:01.107 GMT [15131] ERROR:  column "balance" of relation "credit_account" does not exist at character 29
2023-01-11 08:10:01.107 GMT [15131] STATEMENT:  INSERT INTO credit_account (balance, credit_limit, interest_rate, online_account_id)
	VALUES (55.43, 2000.00, 4.22, 0),
	(100.00, 1000.00, 4.22, 1),
	(200.00, 5000.00, 4.22, 2),
	(300.00, 10000.00, 4.22, 3),
	(400.00, 20000.00, 4.22, 4),
	(500.00, 50000.00, 4.22, 5),
	(600.00, 100000.00, 4.22, 6),
	(700.00, 200000.00, 4.22, 7);
2023-01-11 08:10:01.108 GMT [15131] ERROR:  column "balance" of relation "debit_account" does not exist at character 28
2023-01-11 08:10:01.108 GMT [15131] STATEMENT:  INSERT INTO debit_account (balance, overdraft_limit, interest_rate, online_account_id)
	VALUES (3465.43, 0.05, 0),
	(1000.00, 0.05, 1),
	(5000.00, 0.05, 2),
	(10000.00, 0.05, 3),
	(20000.00, 0.05, 4),
	(50000.00, 0.05, 5),
	(100000.00, 0.05, 6),
	(200000.00, 0.05, 7);
2023-01-11 08:10:01.108 GMT [15131] ERROR:  column "interest_rate" of relation "loan" does not exist at character 32
2023-01-11 08:10:01.108 GMT [15131] STATEMENT:  INSERT INTO loan (loan_amount, interest_rate, loan_type, online_account_id)
	VALUES ('2024-01-01', 10000, 'vehicle', 0),
	('2023-03-04', 300000, 'mortgage', 0),
	('2035-03-03', 400000, 'mortgage', 1),
	('2025-04-05', 25000, 'vehicle', 1),
	('2026-05-05', 34000, 'vehicle', 1),
	('2023-06-07', 500000, 'mortgage', 2),
	('2026-04-04', 60000, 'vehicle', 2),
	('2024-03-03', 70000, 'vehicle', 2),
	('2023-02-02', 800000, 'mortgage', 3),
	('2022-01-01', 90000, 'vehicle', 3),
	('2021-01-01', 100000, 'vehicle', 3),
	('2020-01-01', 110000, 'mortgage', 4),
	('2020-01-01', 12000, 'vehicle', 4),
	('2020-01-01', 13000, 'vehicle', 4),
	('2020-01-01', 140000, 'mortgage', 5),
	('2020-01-01', 15000, 'vehicle', 5),
	('2020-01-01', 16000, 'vehicle', 5),
	('2020-01-01', 170000, 'mortgage', 6),
	('2020-01-01', 18000, 'vehicle', 6),
	('2020-01-01', 19000, 'vehicle', 6),
	('2020-01-01', 200000, 'mortgage', 7),
	('2020-01-01', 21000, 'vehicle', 7),
	('2020-01-01', 22000, 'vehicle', 7);
2023-01-11 08:13:23.175 GMT [15092] LOG:  received fast shutdown request
2023-01-11 08:13:23.176 GMT [15092] LOG:  aborting any active transactions
2023-01-11 08:13:23.180 GMT [15092] LOG:  background worker "logical replication launcher" (PID 15099) exited with exit code 1
2023-01-11 08:13:23.180 GMT [15094] LOG:  shutting down
2023-01-11 08:13:23.222 GMT [15092] LOG:  database system is shut down
2023-01-11 08:13:25.029 GMT [15866] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-11 08:13:25.029 GMT [15866] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-11 08:13:25.031 GMT [15866] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-11 08:13:25.035 GMT [15867] LOG:  database system was shut down at 2023-01-11 08:13:24 GMT
2023-01-11 08:13:25.039 GMT [15866] LOG:  database system is ready to accept connections
2023-01-11 08:13:25.839 GMT [15904] ERROR:  insert or update on table "user_login" violates foreign key constraint "user_login_account_id_fkey"
2023-01-11 08:13:25.839 GMT [15904] DETAIL:  Key (account_id)=(9) is not present in table "online_account".
2023-01-11 08:13:25.839 GMT [15904] STATEMENT:  INSERT INTO user_login (account_id, username)
	VALUES (1, 'johnsmith'),
	(2, 'janedoe'),
	(3, 'joebloggs'),
	(4, 'johnbloggs'),
	(5, 'janebloggs'),
	(6, 'joedoe'),
	(7, 'johndoe'),
	(8, 'joesmith'),
	(9, 'janesmith');
2023-01-11 08:13:25.839 GMT [15904] ERROR:  column "question" of relation "security_question_option" does not exist at character 39
2023-01-11 08:13:25.839 GMT [15904] STATEMENT:  INSERT INTO security_question_option (question)
	VALUES ('What is your favourite colour?'),
	('What is your favourite food?'),
	('What is your favourite animal?'),
	('What is your favourite sport?'),
	('What is your favourite movie?'),
	('What is your favourite book?'),
	('What is your favourite song?'),
	('What is your favourite band?'),
	('What is your favourite game?'),
	('What is your favourite TV show?');
2023-01-11 08:13:25.840 GMT [15904] ERROR:  insert or update on table "user_login_security_question" violates foreign key constraint "user_login_security_question_question_choice_id_fkey"
2023-01-11 08:13:25.840 GMT [15904] DETAIL:  Key (question_choice_id)=(1) is not present in table "security_question_option".
2023-01-11 08:13:25.840 GMT [15904] STATEMENT:  INSERT INTO user_login_security_question (question_choice_id, login_id)
	VALUES (1, 1),
	(2, 2),
	(3, 3),
	(4, 4),
	(5, 5),
	(6, 6),
	(7, 7),
	(8, 8),
	(9, 9);
2023-01-11 08:13:25.840 GMT [15904] ERROR:  column "answer" of relation "security_question_answer" does not exist at character 39
2023-01-11 08:13:25.840 GMT [15904] STATEMENT:  INSERT INTO security_question_answer (answer, question_id)
	VALUES ('Red', 1),
	('Blue', 2),
	('Green', 3),
	('Yellow', 4),
	('Orange', 5),
	('Purple', 6),
	('Pink', 7),
	('Black', 8),
	('White', 9);
2023-01-11 08:13:25.840 GMT [15904] ERROR:  column "balance" of relation "savings_account" does not exist at character 30
2023-01-11 08:13:25.840 GMT [15904] STATEMENT:  INSERT INTO savings_account (balance, interest_rate, online_account_id)
	VALUES (2000.00, 2.05, 1),
	(1000.00, 2.05, 2),
	(5000.00, 2.05, 3),
	(10000.00, 2.05, 4),
	(20000.00, 2.05, 5),
	(50000.00, 2.05, 6),
	(100000.00, 2.05, 7),
	(200000.00, 2.05, 8);
2023-01-11 08:13:25.840 GMT [15904] ERROR:  column "balance" of relation "credit_account" does not exist at character 29
2023-01-11 08:13:25.840 GMT [15904] STATEMENT:  INSERT INTO credit_account (balance, credit_limit, interest_rate, online_account_id)
	VALUES (55.43, 2000.00, 4.22, 1),
	(100.00, 1000.00, 4.22, 2),
	(200.00, 5000.00, 4.22, 3),
	(300.00, 10000.00, 4.22, 4),
	(400.00, 20000.00, 4.22, 5),
	(500.00, 50000.00, 4.22, 6),
	(600.00, 100000.00, 4.22, 7),
	(700.00, 200000.00, 4.22, 8);
2023-01-11 08:13:25.841 GMT [15904] ERROR:  column "balance" of relation "debit_account" does not exist at character 28
2023-01-11 08:13:25.841 GMT [15904] STATEMENT:  INSERT INTO debit_account (balance, overdraft_limit, interest_rate, online_account_id)
	VALUES (3465.43, 0.05, 1),
	(1000.00, 0.05, 1),
	(5000.00, 0.05, 2),
	(10000.00, 0.05, 3),
	(20000.00, 0.05, 4),
	(50000.00, 0.05, 5),
	(100000.00, 0.05, 6),
	(200000.00, 0.05, 9);
2023-01-11 08:13:25.841 GMT [15904] ERROR:  column "interest_rate" of relation "loan" does not exist at character 32
2023-01-11 08:13:25.841 GMT [15904] STATEMENT:  INSERT INTO loan (loan_amount, interest_rate, loan_type, online_account_id)
	VALUES ('2024-01-01', 10000, 'vehicle', 8),
	('2023-03-04', 300000, 'mortgage', 8),
	('2035-03-03', 400000, 'mortgage', 1),
	('2025-04-05', 25000, 'vehicle', 1),
	('2026-05-05', 34000, 'vehicle', 1),
	('2023-06-07', 500000, 'mortgage', 2),
	('2026-04-04', 60000, 'vehicle', 2),
	('2024-03-03', 70000, 'vehicle', 2),
	('2023-02-02', 800000, 'mortgage', 3),
	('2022-01-01', 90000, 'vehicle', 3),
	('2021-01-01', 100000, 'vehicle', 3),
	('2020-01-01', 110000, 'mortgage', 4),
	('2020-01-01', 12000, 'vehicle', 4),
	('2020-01-01', 13000, 'vehicle', 4),
	('2020-01-01', 140000, 'mortgage', 5),
	('2020-01-01', 15000, 'vehicle', 5),
	('2020-01-01', 16000, 'vehicle', 5),
	('2020-01-01', 170000, 'mortgage', 6),
	('2020-01-01', 18000, 'vehicle', 6),
	('2020-01-01', 19000, 'vehicle', 6),
	('2020-01-01', 200000, 'mortgage', 7),
	('2020-01-01', 21000, 'vehicle', 7),
	('2020-01-01', 22000, 'vehicle', 7);
2023-01-11 08:14:21.002 GMT [15866] LOG:  received fast shutdown request
2023-01-11 08:14:21.004 GMT [15866] LOG:  aborting any active transactions
2023-01-11 08:14:21.009 GMT [15866] LOG:  background worker "logical replication launcher" (PID 15873) exited with exit code 1
2023-01-11 08:14:21.013 GMT [15868] LOG:  shutting down
2023-01-11 08:14:21.054 GMT [15866] LOG:  database system is shut down
2023-01-11 08:14:22.789 GMT [16181] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-11 08:14:22.790 GMT [16181] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-11 08:14:22.791 GMT [16181] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-11 08:14:22.796 GMT [16186] LOG:  database system was shut down at 2023-01-11 08:14:22 GMT
2023-01-11 08:14:22.805 GMT [16181] LOG:  database system is ready to accept connections
2023-01-11 08:14:23.533 GMT [16222] ERROR:  column "question" of relation "security_question_option" does not exist at character 39
2023-01-11 08:14:23.533 GMT [16222] STATEMENT:  INSERT INTO security_question_option (question)
	VALUES ('What is your favourite colour?'),
	('What is your favourite food?'),
	('What is your favourite animal?'),
	('What is your favourite sport?'),
	('What is your favourite movie?'),
	('What is your favourite book?'),
	('What is your favourite song?'),
	('What is your favourite band?'),
	('What is your favourite game?'),
	('What is your favourite TV show?');
2023-01-11 08:14:23.534 GMT [16222] ERROR:  insert or update on table "user_login_security_question" violates foreign key constraint "user_login_security_question_question_choice_id_fkey"
2023-01-11 08:14:23.534 GMT [16222] DETAIL:  Key (question_choice_id)=(1) is not present in table "security_question_option".
2023-01-11 08:14:23.534 GMT [16222] STATEMENT:  INSERT INTO user_login_security_question (question_choice_id, login_id)
	VALUES (1, 1),
	(2, 2),
	(3, 3),
	(4, 4),
	(5, 5),
	(6, 6),
	(7, 7),
	(8, 8),
	(9, 9);
2023-01-11 08:14:23.534 GMT [16222] ERROR:  column "answer" of relation "security_question_answer" does not exist at character 39
2023-01-11 08:14:23.534 GMT [16222] STATEMENT:  INSERT INTO security_question_answer (answer, question_id)
	VALUES ('Red', 1),
	('Blue', 2),
	('Green', 3),
	('Yellow', 4),
	('Orange', 5),
	('Purple', 6),
	('Pink', 7),
	('Black', 8),
	('White', 9);
2023-01-11 08:14:23.535 GMT [16222] ERROR:  column "balance" of relation "savings_account" does not exist at character 30
2023-01-11 08:14:23.535 GMT [16222] STATEMENT:  INSERT INTO savings_account (balance, interest_rate, online_account_id)
	VALUES (2000.00, 2.05, 1),
	(1000.00, 2.05, 2),
	(5000.00, 2.05, 3),
	(10000.00, 2.05, 4),
	(20000.00, 2.05, 5),
	(50000.00, 2.05, 6),
	(100000.00, 2.05, 7),
	(200000.00, 2.05, 8);
2023-01-11 08:14:23.535 GMT [16222] ERROR:  column "balance" of relation "credit_account" does not exist at character 29
2023-01-11 08:14:23.535 GMT [16222] STATEMENT:  INSERT INTO credit_account (balance, credit_limit, interest_rate, online_account_id)
	VALUES (55.43, 2000.00, 4.22, 1),
	(100.00, 1000.00, 4.22, 2),
	(200.00, 5000.00, 4.22, 3),
	(300.00, 10000.00, 4.22, 4),
	(400.00, 20000.00, 4.22, 5),
	(500.00, 50000.00, 4.22, 6),
	(600.00, 100000.00, 4.22, 7),
	(700.00, 200000.00, 4.22, 8);
2023-01-11 08:14:23.535 GMT [16222] ERROR:  column "balance" of relation "debit_account" does not exist at character 28
2023-01-11 08:14:23.535 GMT [16222] STATEMENT:  INSERT INTO debit_account (balance, overdraft_limit, interest_rate, online_account_id)
	VALUES (3465.43, 0.05, 1),
	(1000.00, 0.05, 1),
	(5000.00, 0.05, 2),
	(10000.00, 0.05, 3),
	(20000.00, 0.05, 4),
	(50000.00, 0.05, 5),
	(100000.00, 0.05, 6),
	(200000.00, 0.05, 9);
2023-01-11 08:14:23.535 GMT [16222] ERROR:  column "interest_rate" of relation "loan" does not exist at character 32
2023-01-11 08:14:23.535 GMT [16222] STATEMENT:  INSERT INTO loan (loan_amount, interest_rate, loan_type, online_account_id)
	VALUES ('2024-01-01', 10000, 'vehicle', 8),
	('2023-03-04', 300000, 'mortgage', 8),
	('2035-03-03', 400000, 'mortgage', 1),
	('2025-04-05', 25000, 'vehicle', 1),
	('2026-05-05', 34000, 'vehicle', 1),
	('2023-06-07', 500000, 'mortgage', 2),
	('2026-04-04', 60000, 'vehicle', 2),
	('2024-03-03', 70000, 'vehicle', 2),
	('2023-02-02', 800000, 'mortgage', 3),
	('2022-01-01', 90000, 'vehicle', 3),
	('2021-01-01', 100000, 'vehicle', 3),
	('2020-01-01', 110000, 'mortgage', 4),
	('2020-01-01', 12000, 'vehicle', 4),
	('2020-01-01', 13000, 'vehicle', 4),
	('2020-01-01', 140000, 'mortgage', 5),
	('2020-01-01', 15000, 'vehicle', 5),
	('2020-01-01', 16000, 'vehicle', 5),
	('2020-01-01', 170000, 'mortgage', 6),
	('2020-01-01', 18000, 'vehicle', 6),
	('2020-01-01', 19000, 'vehicle', 6),
	('2020-01-01', 200000, 'mortgage', 7),
	('2020-01-01', 21000, 'vehicle', 7),
	('2020-01-01', 22000, 'vehicle', 7);
2023-01-11 08:14:54.421 GMT [16181] LOG:  received fast shutdown request
2023-01-11 08:14:54.423 GMT [16181] LOG:  aborting any active transactions
2023-01-11 08:14:54.425 GMT [16181] LOG:  background worker "logical replication launcher" (PID 16194) exited with exit code 1
2023-01-11 08:14:54.428 GMT [16189] LOG:  shutting down
2023-01-11 08:14:54.472 GMT [16181] LOG:  database system is shut down
2023-01-11 08:14:56.451 GMT [16404] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-11 08:14:56.451 GMT [16404] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-11 08:14:56.453 GMT [16404] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-11 08:14:56.458 GMT [16413] LOG:  database system was shut down at 2023-01-11 08:14:56 GMT
2023-01-11 08:14:56.464 GMT [16404] LOG:  database system is ready to accept connections
2023-01-11 08:14:57.206 GMT [16442] ERROR:  column "answer" of relation "security_question_answer" does not exist at character 39
2023-01-11 08:14:57.206 GMT [16442] STATEMENT:  INSERT INTO security_question_answer (answer, question_id)
	VALUES ('Red', 1),
	('Blue', 2),
	('Green', 3),
	('Yellow', 4),
	('Orange', 5),
	('Purple', 6),
	('Pink', 7),
	('Black', 8),
	('White', 9);
2023-01-11 08:14:57.206 GMT [16442] ERROR:  column "balance" of relation "savings_account" does not exist at character 30
2023-01-11 08:14:57.206 GMT [16442] STATEMENT:  INSERT INTO savings_account (balance, interest_rate, online_account_id)
	VALUES (2000.00, 2.05, 1),
	(1000.00, 2.05, 2),
	(5000.00, 2.05, 3),
	(10000.00, 2.05, 4),
	(20000.00, 2.05, 5),
	(50000.00, 2.05, 6),
	(100000.00, 2.05, 7),
	(200000.00, 2.05, 8);
2023-01-11 08:14:57.206 GMT [16442] ERROR:  column "balance" of relation "credit_account" does not exist at character 29
2023-01-11 08:14:57.206 GMT [16442] STATEMENT:  INSERT INTO credit_account (balance, credit_limit, interest_rate, online_account_id)
	VALUES (55.43, 2000.00, 4.22, 1),
	(100.00, 1000.00, 4.22, 2),
	(200.00, 5000.00, 4.22, 3),
	(300.00, 10000.00, 4.22, 4),
	(400.00, 20000.00, 4.22, 5),
	(500.00, 50000.00, 4.22, 6),
	(600.00, 100000.00, 4.22, 7),
	(700.00, 200000.00, 4.22, 8);
2023-01-11 08:14:57.207 GMT [16442] ERROR:  column "balance" of relation "debit_account" does not exist at character 28
2023-01-11 08:14:57.207 GMT [16442] STATEMENT:  INSERT INTO debit_account (balance, overdraft_limit, interest_rate, online_account_id)
	VALUES (3465.43, 0.05, 1),
	(1000.00, 0.05, 1),
	(5000.00, 0.05, 2),
	(10000.00, 0.05, 3),
	(20000.00, 0.05, 4),
	(50000.00, 0.05, 5),
	(100000.00, 0.05, 6),
	(200000.00, 0.05, 9);
2023-01-11 08:14:57.207 GMT [16442] ERROR:  column "interest_rate" of relation "loan" does not exist at character 32
2023-01-11 08:14:57.207 GMT [16442] STATEMENT:  INSERT INTO loan (loan_amount, interest_rate, loan_type, online_account_id)
	VALUES ('2024-01-01', 10000, 'vehicle', 8),
	('2023-03-04', 300000, 'mortgage', 8),
	('2035-03-03', 400000, 'mortgage', 1),
	('2025-04-05', 25000, 'vehicle', 1),
	('2026-05-05', 34000, 'vehicle', 1),
	('2023-06-07', 500000, 'mortgage', 2),
	('2026-04-04', 60000, 'vehicle', 2),
	('2024-03-03', 70000, 'vehicle', 2),
	('2023-02-02', 800000, 'mortgage', 3),
	('2022-01-01', 90000, 'vehicle', 3),
	('2021-01-01', 100000, 'vehicle', 3),
	('2020-01-01', 110000, 'mortgage', 4),
	('2020-01-01', 12000, 'vehicle', 4),
	('2020-01-01', 13000, 'vehicle', 4),
	('2020-01-01', 140000, 'mortgage', 5),
	('2020-01-01', 15000, 'vehicle', 5),
	('2020-01-01', 16000, 'vehicle', 5),
	('2020-01-01', 170000, 'mortgage', 6),
	('2020-01-01', 18000, 'vehicle', 6),
	('2020-01-01', 19000, 'vehicle', 6),
	('2020-01-01', 200000, 'mortgage', 7),
	('2020-01-01', 21000, 'vehicle', 7),
	('2020-01-01', 22000, 'vehicle', 7);
2023-01-11 08:16:42.452 GMT [16404] LOG:  received fast shutdown request
2023-01-11 08:16:42.453 GMT [16404] LOG:  aborting any active transactions
2023-01-11 08:16:42.459 GMT [16404] LOG:  background worker "logical replication launcher" (PID 16420) exited with exit code 1
2023-01-11 08:16:42.459 GMT [16415] LOG:  shutting down
2023-01-11 08:16:42.498 GMT [16404] LOG:  database system is shut down
2023-01-11 08:16:44.212 GMT [16860] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-11 08:16:44.212 GMT [16860] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-11 08:16:44.213 GMT [16860] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-11 08:16:44.218 GMT [16861] LOG:  database system was shut down at 2023-01-11 08:16:43 GMT
2023-01-11 08:16:44.224 GMT [16860] LOG:  database system is ready to accept connections
2023-01-11 08:16:44.931 GMT [16903] ERROR:  column "online_account_id" of relation "savings_account" does not exist at character 62
2023-01-11 08:16:44.931 GMT [16903] STATEMENT:  INSERT INTO savings_account (current_balance, interest_rate, online_account_id)
	VALUES (2000.00, 2.05, 1),
	(1000.00, 2.05, 2),
	(5000.00, 2.05, 3),
	(10000.00, 2.05, 4),
	(20000.00, 2.05, 5),
	(50000.00, 2.05, 6),
	(100000.00, 2.05, 7),
	(200000.00, 2.05, 8);
2023-01-11 08:16:44.932 GMT [16903] ERROR:  column "online_account_id" of relation "credit_account" does not exist at character 79
2023-01-11 08:16:44.932 GMT [16903] STATEMENT:  INSERT INTO credit_account (outstanding_balance, credit_limit, interest_rate, online_account_id)
	VALUES (55.43, 2000.00, 4.22, 1),
	(100.00, 1000.00, 4.22, 2),
	(200.00, 5000.00, 4.22, 3),
	(300.00, 10000.00, 4.22, 4),
	(400.00, 20000.00, 4.22, 5),
	(500.00, 50000.00, 4.22, 6),
	(600.00, 100000.00, 4.22, 7),
	(700.00, 200000.00, 4.22, 8);
2023-01-11 08:16:44.932 GMT [16903] ERROR:  column "overdraft_limit" of relation "debit_account" does not exist at character 45
2023-01-11 08:16:44.932 GMT [16903] STATEMENT:  INSERT INTO debit_account (current_balance, overdraft_limit, interest_rate, online_account_id)
	VALUES (3465.43, 0.05, 1),
	(1000.00, 0.05, 1),
	(5000.00, 0.05, 2),
	(10000.00, 0.05, 3),
	(20000.00, 0.05, 4),
	(50000.00, 0.05, 5),
	(100000.00, 0.05, 6),
	(200000.00, 0.05, 9);
2023-01-11 08:16:44.932 GMT [16903] ERROR:  column "online_account_id" of relation "loan" does not exist at character 58
2023-01-11 08:16:44.932 GMT [16903] STATEMENT:  INSERT INTO loan (loan_end_date, loan_amount, loan_type, online_account_id)
	VALUES ('2024-01-01', 10000, 'vehicle', 8),
	('2023-03-04', 300000, 'mortgage', 8),
	('2035-03-03', 400000, 'mortgage', 1),
	('2025-04-05', 25000, 'vehicle', 1),
	('2026-05-05', 34000, 'vehicle', 1),
	('2023-06-07', 500000, 'mortgage', 2),
	('2026-04-04', 60000, 'vehicle', 2),
	('2024-03-03', 70000, 'vehicle', 2),
	('2023-02-02', 800000, 'mortgage', 3),
	('2022-01-01', 90000, 'vehicle', 3),
	('2021-01-01', 100000, 'vehicle', 3),
	('2020-01-01', 110000, 'mortgage', 4),
	('2020-01-01', 12000, 'vehicle', 4),
	('2020-01-01', 13000, 'vehicle', 4),
	('2020-01-01', 140000, 'mortgage', 5),
	('2020-01-01', 15000, 'vehicle', 5),
	('2020-01-01', 16000, 'vehicle', 5),
	('2020-01-01', 170000, 'mortgage', 6),
	('2020-01-01', 18000, 'vehicle', 6),
	('2020-01-01', 19000, 'vehicle', 6),
	('2020-01-01', 200000, 'mortgage', 7),
	('2020-01-01', 21000, 'vehicle', 7),
	('2020-01-01', 22000, 'vehicle', 7);
2023-01-11 08:17:20.258 GMT [16860] LOG:  received fast shutdown request
2023-01-11 08:17:20.259 GMT [16860] LOG:  aborting any active transactions
2023-01-11 08:17:20.263 GMT [16860] LOG:  background worker "logical replication launcher" (PID 16867) exited with exit code 1
2023-01-11 08:17:20.264 GMT [16862] LOG:  shutting down
2023-01-11 08:17:20.313 GMT [16860] LOG:  database system is shut down
2023-01-11 08:17:23.592 GMT [17157] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-11 08:17:23.592 GMT [17157] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-11 08:17:23.593 GMT [17157] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-11 08:17:23.599 GMT [17158] LOG:  database system was shut down at 2023-01-11 08:17:23 GMT
2023-01-11 08:17:23.604 GMT [17157] LOG:  database system is ready to accept connections
2023-01-11 08:17:24.349 GMT [17198] ERROR:  column "overdraft_limit" of relation "debit_account" does not exist at character 45
2023-01-11 08:17:24.349 GMT [17198] STATEMENT:  INSERT INTO debit_account (current_balance, overdraft_limit, interest_rate, account_id)
	VALUES (3465.43, 0.05, 1),
	(1000.00, 0.05, 1),
	(5000.00, 0.05, 2),
	(10000.00, 0.05, 3),
	(20000.00, 0.05, 4),
	(50000.00, 0.05, 5),
	(100000.00, 0.05, 6),
	(200000.00, 0.05, 9);
2023-01-11 08:17:42.497 GMT [17157] LOG:  received fast shutdown request
2023-01-11 08:17:42.499 GMT [17157] LOG:  aborting any active transactions
2023-01-11 08:17:42.503 GMT [17157] LOG:  background worker "logical replication launcher" (PID 17164) exited with exit code 1
2023-01-11 08:17:42.504 GMT [17159] LOG:  shutting down
2023-01-11 08:17:42.546 GMT [17157] LOG:  database system is shut down
2023-01-11 08:17:44.084 GMT [17347] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-11 08:17:44.084 GMT [17347] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-11 08:17:44.085 GMT [17347] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-11 08:17:44.090 GMT [17348] LOG:  database system was shut down at 2023-01-11 08:17:43 GMT
2023-01-11 08:17:44.095 GMT [17347] LOG:  database system is ready to accept connections
2023-01-11 08:18:48.762 GMT [17347] LOG:  received fast shutdown request
2023-01-11 08:18:48.763 GMT [17347] LOG:  aborting any active transactions
2023-01-11 08:18:48.769 GMT [17347] LOG:  background worker "logical replication launcher" (PID 17354) exited with exit code 1
2023-01-11 08:18:48.769 GMT [17349] LOG:  shutting down
2023-01-11 08:18:48.812 GMT [17347] LOG:  database system is shut down
2023-01-11 08:18:50.766 GMT [17711] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-11 08:18:50.766 GMT [17711] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-11 08:18:50.767 GMT [17711] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-11 08:18:50.772 GMT [17712] LOG:  database system was shut down at 2023-01-11 08:18:50 GMT
2023-01-11 08:18:50.779 GMT [17711] LOG:  database system is ready to accept connections
2023-01-11 08:19:37.665 GMT [17711] LOG:  received fast shutdown request
2023-01-11 08:19:37.667 GMT [17711] LOG:  aborting any active transactions
2023-01-11 08:19:37.672 GMT [17711] LOG:  background worker "logical replication launcher" (PID 17719) exited with exit code 1
2023-01-11 08:19:37.672 GMT [17713] LOG:  shutting down
2023-01-11 08:19:37.715 GMT [17711] LOG:  database system is shut down
2023-01-11 08:19:39.646 GMT [17997] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-11 08:19:39.646 GMT [17997] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-11 08:19:39.648 GMT [17997] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-11 08:19:39.652 GMT [17998] LOG:  database system was shut down at 2023-01-11 08:19:39 GMT
2023-01-11 08:19:39.658 GMT [17997] LOG:  database system is ready to accept connections
2023-01-11 08:19:46.424 GMT [17997] LOG:  received fast shutdown request
2023-01-11 08:19:46.425 GMT [17997] LOG:  aborting any active transactions
2023-01-11 08:19:46.429 GMT [17997] LOG:  background worker "logical replication launcher" (PID 18004) exited with exit code 1
2023-01-11 08:19:46.429 GMT [17999] LOG:  shutting down
2023-01-11 08:19:46.474 GMT [17997] LOG:  database system is shut down
2023-01-11 08:19:48.173 GMT [18158] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-11 08:19:48.174 GMT [18158] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-11 08:19:48.176 GMT [18158] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-11 08:19:48.181 GMT [18159] LOG:  database system was shut down at 2023-01-11 08:19:47 GMT
2023-01-11 08:19:48.187 GMT [18158] LOG:  database system is ready to accept connections
2023-01-11 08:20:35.481 GMT [18158] LOG:  received fast shutdown request
2023-01-11 08:20:35.483 GMT [18158] LOG:  aborting any active transactions
2023-01-11 08:20:35.488 GMT [18158] LOG:  background worker "logical replication launcher" (PID 18165) exited with exit code 1
2023-01-11 08:20:35.489 GMT [18160] LOG:  shutting down
2023-01-11 08:20:35.536 GMT [18158] LOG:  database system is shut down
2023-01-11 08:20:37.170 GMT [18431] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-11 08:20:37.170 GMT [18431] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-11 08:20:37.171 GMT [18431] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-11 08:20:37.176 GMT [18432] LOG:  database system was shut down at 2023-01-11 08:20:36 GMT
2023-01-11 08:20:37.181 GMT [18431] LOG:  database system is ready to accept connections
2023-01-11 08:21:06.782 GMT [18431] LOG:  received fast shutdown request
2023-01-11 08:21:06.783 GMT [18431] LOG:  aborting any active transactions
2023-01-11 08:21:06.788 GMT [18431] LOG:  background worker "logical replication launcher" (PID 18438) exited with exit code 1
2023-01-11 08:21:06.788 GMT [18433] LOG:  shutting down
2023-01-11 08:21:06.835 GMT [18431] LOG:  database system is shut down
2023-01-11 08:21:08.478 GMT [18637] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-11 08:21:08.478 GMT [18637] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-11 08:21:08.479 GMT [18637] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-11 08:21:08.484 GMT [18638] LOG:  database system was shut down at 2023-01-11 08:21:08 GMT
2023-01-11 08:21:08.488 GMT [18637] LOG:  database system is ready to accept connections
2023-01-11 08:21:58.267 GMT [18637] LOG:  received fast shutdown request
2023-01-11 08:21:58.270 GMT [18637] LOG:  aborting any active transactions
2023-01-11 08:21:58.274 GMT [18637] LOG:  background worker "logical replication launcher" (PID 18644) exited with exit code 1
2023-01-11 08:21:58.274 GMT [18639] LOG:  shutting down
2023-01-11 08:21:58.320 GMT [18637] LOG:  database system is shut down
2023-01-11 08:21:59.943 GMT [18911] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-11 08:21:59.943 GMT [18911] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-11 08:21:59.945 GMT [18911] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-11 08:21:59.949 GMT [18912] LOG:  database system was shut down at 2023-01-11 08:21:59 GMT
2023-01-11 08:21:59.955 GMT [18911] LOG:  database system is ready to accept connections
2023-01-11 08:22:52.944 GMT [18911] LOG:  received fast shutdown request
2023-01-11 08:22:52.946 GMT [18911] LOG:  aborting any active transactions
2023-01-11 08:22:52.950 GMT [18911] LOG:  background worker "logical replication launcher" (PID 18918) exited with exit code 1
2023-01-11 08:22:52.953 GMT [18913] LOG:  shutting down
2023-01-11 08:22:53.000 GMT [18911] LOG:  database system is shut down
2023-01-11 08:22:54.680 GMT [19185] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-11 08:22:54.680 GMT [19185] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-11 08:22:54.682 GMT [19185] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-11 08:22:54.686 GMT [19186] LOG:  database system was shut down at 2023-01-11 08:22:54 GMT
2023-01-11 08:22:54.691 GMT [19185] LOG:  database system is ready to accept connections
2023-01-11 08:23:09.129 GMT [19185] LOG:  received fast shutdown request
2023-01-11 08:23:09.130 GMT [19185] LOG:  aborting any active transactions
2023-01-11 08:23:09.133 GMT [19185] LOG:  background worker "logical replication launcher" (PID 19192) exited with exit code 1
2023-01-11 08:23:09.135 GMT [19187] LOG:  shutting down
2023-01-11 08:23:09.180 GMT [19185] LOG:  database system is shut down
2023-01-11 08:23:10.906 GMT [19364] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-11 08:23:10.906 GMT [19364] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-11 08:23:10.908 GMT [19364] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-11 08:23:10.912 GMT [19365] LOG:  database system was shut down at 2023-01-11 08:23:10 GMT
2023-01-11 08:23:10.918 GMT [19364] LOG:  database system is ready to accept connections
2023-01-11 08:28:10.556 GMT [19364] LOG:  received fast shutdown request
2023-01-11 08:28:10.557 GMT [19364] LOG:  aborting any active transactions
2023-01-11 08:28:10.562 GMT [19364] LOG:  background worker "logical replication launcher" (PID 19371) exited with exit code 1
2023-01-11 08:28:10.563 GMT [19366] LOG:  shutting down
2023-01-11 08:28:10.605 GMT [19364] LOG:  database system is shut down
2023-01-11 08:28:12.127 GMT [20351] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-11 08:28:12.127 GMT [20351] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-11 08:28:12.129 GMT [20351] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-11 08:28:12.137 GMT [20352] LOG:  database system was shut down at 2023-01-11 08:28:11 GMT
2023-01-11 08:28:12.145 GMT [20351] LOG:  database system is ready to accept connections
2023-01-11 08:29:31.346 GMT [20351] LOG:  received fast shutdown request
2023-01-11 08:29:31.348 GMT [20351] LOG:  aborting any active transactions
2023-01-11 08:29:31.353 GMT [20351] LOG:  background worker "logical replication launcher" (PID 20358) exited with exit code 1
2023-01-11 08:29:31.353 GMT [20353] LOG:  shutting down
2023-01-11 08:29:31.402 GMT [20351] LOG:  database system is shut down
2023-01-11 08:29:33.105 GMT [20763] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-11 08:29:33.105 GMT [20763] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-11 08:29:33.107 GMT [20763] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-11 08:29:33.115 GMT [20764] LOG:  database system was shut down at 2023-01-11 08:29:32 GMT
2023-01-11 08:29:33.121 GMT [20763] LOG:  database system is ready to accept connections
2023-01-11 08:30:02.216 GMT [20763] LOG:  received fast shutdown request
2023-01-11 08:30:02.217 GMT [20763] LOG:  aborting any active transactions
2023-01-11 08:30:02.222 GMT [20763] LOG:  background worker "logical replication launcher" (PID 20770) exited with exit code 1
2023-01-11 08:30:02.222 GMT [20765] LOG:  shutting down
2023-01-11 08:30:02.264 GMT [20763] LOG:  database system is shut down
2023-01-11 08:30:04.175 GMT [20975] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-11 08:30:04.175 GMT [20975] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-11 08:30:04.176 GMT [20975] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-11 08:30:04.182 GMT [20977] LOG:  database system was shut down at 2023-01-11 08:30:03 GMT
2023-01-11 08:30:04.187 GMT [20975] LOG:  database system is ready to accept connections
2023-01-11 08:30:16.440 GMT [20975] LOG:  received fast shutdown request
2023-01-11 08:30:16.442 GMT [20975] LOG:  aborting any active transactions
2023-01-11 08:30:16.447 GMT [20975] LOG:  background worker "logical replication launcher" (PID 20985) exited with exit code 1
2023-01-11 08:30:16.450 GMT [20979] LOG:  shutting down
2023-01-11 08:30:16.495 GMT [20975] LOG:  database system is shut down
2023-01-11 08:30:18.133 GMT [21183] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-11 08:30:18.133 GMT [21183] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-11 08:30:18.136 GMT [21183] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-11 08:30:18.140 GMT [21184] LOG:  database system was shut down at 2023-01-11 08:30:17 GMT
2023-01-11 08:30:18.144 GMT [21183] LOG:  database system is ready to accept connections
2023-01-11 08:30:57.835 GMT [21183] LOG:  received fast shutdown request
2023-01-11 08:30:57.839 GMT [21183] LOG:  aborting any active transactions
2023-01-11 08:30:57.847 GMT [21183] LOG:  background worker "logical replication launcher" (PID 21190) exited with exit code 1
2023-01-11 08:30:57.847 GMT [21185] LOG:  shutting down
2023-01-11 08:30:57.904 GMT [21183] LOG:  database system is shut down
2023-01-11 08:30:59.617 GMT [21439] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-11 08:30:59.617 GMT [21439] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-11 08:30:59.619 GMT [21439] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-11 08:30:59.623 GMT [21441] LOG:  database system was shut down at 2023-01-11 08:30:59 GMT
2023-01-11 08:30:59.628 GMT [21439] LOG:  database system is ready to accept connections
2023-01-11 08:33:06.795 GMT [21439] LOG:  received fast shutdown request
2023-01-11 08:33:06.796 GMT [21439] LOG:  aborting any active transactions
2023-01-11 08:33:06.799 GMT [21439] LOG:  background worker "logical replication launcher" (PID 21448) exited with exit code 1
2023-01-11 08:33:06.803 GMT [21443] LOG:  shutting down
2023-01-11 08:33:06.846 GMT [21439] LOG:  database system is shut down
2023-01-11 08:33:08.411 GMT [21955] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-11 08:33:08.411 GMT [21955] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-11 08:33:08.413 GMT [21955] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-11 08:33:08.417 GMT [21956] LOG:  database system was shut down at 2023-01-11 08:33:08 GMT
2023-01-11 08:33:08.424 GMT [21955] LOG:  database system is ready to accept connections
2023-01-11 08:33:22.181 GMT [21955] LOG:  received fast shutdown request
2023-01-11 08:33:22.183 GMT [21955] LOG:  aborting any active transactions
2023-01-11 08:33:22.186 GMT [21955] LOG:  background worker "logical replication launcher" (PID 21962) exited with exit code 1
2023-01-11 08:33:22.189 GMT [21957] LOG:  shutting down
2023-01-11 08:33:22.249 GMT [21955] LOG:  database system is shut down
2023-01-11 08:33:23.897 GMT [22119] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-11 08:33:23.897 GMT [22119] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-11 08:33:23.898 GMT [22119] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-11 08:33:23.903 GMT [22126] LOG:  database system was shut down at 2023-01-11 08:33:23 GMT
2023-01-11 08:33:23.908 GMT [22119] LOG:  database system is ready to accept connections
2023-01-11 08:37:30.911 GMT [22119] LOG:  received fast shutdown request
2023-01-11 08:37:30.913 GMT [22119] LOG:  aborting any active transactions
2023-01-11 08:37:30.919 GMT [22119] LOG:  background worker "logical replication launcher" (PID 22134) exited with exit code 1
2023-01-11 08:37:30.919 GMT [22129] LOG:  shutting down
2023-01-11 08:37:30.961 GMT [22119] LOG:  database system is shut down
2023-01-11 08:37:32.714 GMT [23036] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-11 08:37:32.714 GMT [23036] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-11 08:37:32.718 GMT [23036] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-11 08:37:32.724 GMT [23037] LOG:  database system was shut down at 2023-01-11 08:37:32 GMT
2023-01-11 08:37:32.739 GMT [23036] LOG:  database system is ready to accept connections
2023-01-11 08:37:45.079 GMT [23036] LOG:  received fast shutdown request
2023-01-11 08:37:45.080 GMT [23036] LOG:  aborting any active transactions
2023-01-11 08:37:45.084 GMT [23036] LOG:  background worker "logical replication launcher" (PID 23044) exited with exit code 1
2023-01-11 08:37:45.084 GMT [23038] LOG:  shutting down
2023-01-11 08:37:45.124 GMT [23036] LOG:  database system is shut down
2023-01-11 08:37:46.787 GMT [23213] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-11 08:37:46.788 GMT [23213] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-11 08:37:46.789 GMT [23213] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-11 08:37:46.793 GMT [23214] LOG:  database system was shut down at 2023-01-11 08:37:46 GMT
2023-01-11 08:37:46.799 GMT [23213] LOG:  database system is ready to accept connections
2023-01-11 08:40:53.292 GMT [23213] LOG:  received fast shutdown request
2023-01-11 08:40:53.293 GMT [23213] LOG:  aborting any active transactions
2023-01-11 08:40:53.298 GMT [23213] LOG:  background worker "logical replication launcher" (PID 23220) exited with exit code 1
2023-01-11 08:40:53.299 GMT [23215] LOG:  shutting down
2023-01-11 08:40:53.357 GMT [23213] LOG:  database system is shut down
2023-01-11 08:40:55.202 GMT [23901] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-11 08:40:55.202 GMT [23901] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-11 08:40:55.203 GMT [23901] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-11 08:40:55.207 GMT [23902] LOG:  database system was shut down at 2023-01-11 08:40:54 GMT
2023-01-11 08:40:55.217 GMT [23901] LOG:  database system is ready to accept connections
2023-01-11 08:40:55.990 GMT [23947] ERROR:  unrecognized privilege type "priveleges"
2023-01-11 08:40:55.990 GMT [23947] STATEMENT:  REVOKE priveleges ON ALL TABLES IN SCHEMA public FROM postgres;
2023-01-11 08:41:13.482 GMT [23901] LOG:  received fast shutdown request
2023-01-11 08:41:13.483 GMT [23901] LOG:  aborting any active transactions
2023-01-11 08:41:13.489 GMT [23901] LOG:  background worker "logical replication launcher" (PID 23908) exited with exit code 1
2023-01-11 08:41:13.489 GMT [23903] LOG:  shutting down
2023-01-11 08:41:13.540 GMT [23901] LOG:  database system is shut down
2023-01-11 08:41:15.291 GMT [24095] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-11 08:41:15.291 GMT [24095] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-11 08:41:15.293 GMT [24095] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-11 08:41:15.298 GMT [24096] LOG:  database system was shut down at 2023-01-11 08:41:15 GMT
2023-01-11 08:41:15.303 GMT [24095] LOG:  database system is ready to accept connections
2023-01-11 08:41:16.031 GMT [24139] ERROR:  unrecognized privilege type "privilege"
2023-01-11 08:41:16.031 GMT [24139] STATEMENT:  REVOKE privilege ON ALL TABLES IN SCHEMA public FROM postgres;
2023-01-11 08:41:43.244 GMT [24095] LOG:  received fast shutdown request
2023-01-11 08:41:43.246 GMT [24095] LOG:  aborting any active transactions
2023-01-11 08:41:43.251 GMT [24095] LOG:  background worker "logical replication launcher" (PID 24102) exited with exit code 1
2023-01-11 08:41:43.253 GMT [24097] LOG:  shutting down
2023-01-11 08:41:43.305 GMT [24095] LOG:  database system is shut down
2023-01-11 08:41:45.075 GMT [24308] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-11 08:41:45.076 GMT [24308] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-11 08:41:45.077 GMT [24308] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-11 08:41:45.083 GMT [24309] LOG:  database system was shut down at 2023-01-11 08:41:44 GMT
2023-01-11 08:41:45.093 GMT [24308] LOG:  database system is ready to accept connections
2023-01-11 08:42:01.784 GMT [24308] LOG:  received fast shutdown request
2023-01-11 08:42:01.786 GMT [24308] LOG:  aborting any active transactions
2023-01-11 08:42:01.790 GMT [24308] LOG:  background worker "logical replication launcher" (PID 24315) exited with exit code 1
2023-01-11 08:42:01.793 GMT [24310] LOG:  shutting down
2023-01-11 08:42:01.854 GMT [24308] LOG:  database system is shut down
2023-01-11 08:42:03.466 GMT [24520] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-11 08:42:03.466 GMT [24520] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-11 08:42:03.467 GMT [24520] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-11 08:42:03.472 GMT [24521] LOG:  database system was shut down at 2023-01-11 08:42:03 GMT
2023-01-11 08:42:03.479 GMT [24520] LOG:  database system is ready to accept connections
2023-01-11 08:44:25.615 GMT [24520] LOG:  received fast shutdown request
2023-01-11 08:44:25.617 GMT [24520] LOG:  aborting any active transactions
2023-01-11 08:44:25.623 GMT [24520] LOG:  background worker "logical replication launcher" (PID 24527) exited with exit code 1
2023-01-11 08:44:25.625 GMT [24522] LOG:  shutting down
2023-01-11 08:44:25.669 GMT [24520] LOG:  database system is shut down
2023-01-11 08:44:27.676 GMT [25075] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-11 08:44:27.676 GMT [25075] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-11 08:44:27.677 GMT [25075] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-11 08:44:27.682 GMT [25080] LOG:  database system was shut down at 2023-01-11 08:44:27 GMT
2023-01-11 08:44:27.688 GMT [25075] LOG:  database system is ready to accept connections
2023-01-11 08:44:28.483 GMT [25113] ERROR:  permission denied for schema client at character 15
2023-01-11 08:44:28.483 GMT [25113] STATEMENT:  SELECT * FROM client.view_login;
2023-01-11 08:44:28.483 GMT [25113] ERROR:  permission denied for schema client at character 15
2023-01-11 08:44:28.483 GMT [25113] STATEMENT:  SELECT * from client.client_security_questions;
2023-01-11 08:44:28.483 GMT [25113] ERROR:  permission denied for schema client at character 15
2023-01-11 08:44:28.483 GMT [25113] STATEMENT:  SELECT * FROM client.client_online_account_details;
2023-01-11 08:44:28.483 GMT [25113] ERROR:  permission denied for schema client at character 15
2023-01-11 08:44:28.483 GMT [25113] STATEMENT:  SELECT * FROM client.client_personal_information;
2023-01-11 08:44:28.483 GMT [25113] ERROR:  permission denied for schema client at character 15
2023-01-11 08:44:28.483 GMT [25113] STATEMENT:  SELECT * FROM client.client_loans;
2023-01-11 08:44:28.483 GMT [25113] ERROR:  permission denied for table customer
2023-01-11 08:44:28.483 GMT [25113] STATEMENT:  SELECT * FROM customer;
2023-01-11 08:44:58.789 GMT [25075] LOG:  received fast shutdown request
2023-01-11 08:44:58.791 GMT [25075] LOG:  aborting any active transactions
2023-01-11 08:44:58.796 GMT [25075] LOG:  background worker "logical replication launcher" (PID 25086) exited with exit code 1
2023-01-11 08:44:58.796 GMT [25081] LOG:  shutting down
2023-01-11 08:44:58.844 GMT [25075] LOG:  database system is shut down
2023-01-11 08:45:01.173 GMT [25330] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-11 08:45:01.173 GMT [25330] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-11 08:45:01.175 GMT [25330] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-11 08:45:01.180 GMT [25338] LOG:  database system was shut down at 2023-01-11 08:45:00 GMT
2023-01-11 08:45:01.187 GMT [25330] LOG:  database system is ready to accept connections
2023-01-11 08:45:01.988 GMT [25366] ERROR:  permission denied for schema client at character 15
2023-01-11 08:45:01.988 GMT [25366] STATEMENT:  SELECT * FROM client.view_login;
2023-01-11 08:45:01.988 GMT [25366] ERROR:  permission denied for schema client at character 15
2023-01-11 08:45:01.988 GMT [25366] STATEMENT:  SELECT * from client.client_security_questions;
2023-01-11 08:45:01.988 GMT [25366] ERROR:  permission denied for schema client at character 15
2023-01-11 08:45:01.988 GMT [25366] STATEMENT:  SELECT * FROM client.client_online_account_details;
2023-01-11 08:45:01.989 GMT [25366] ERROR:  permission denied for schema client at character 15
2023-01-11 08:45:01.989 GMT [25366] STATEMENT:  SELECT * FROM client.client_personal_information;
2023-01-11 08:45:01.989 GMT [25366] ERROR:  permission denied for schema client at character 15
2023-01-11 08:45:01.989 GMT [25366] STATEMENT:  SELECT * FROM client.client_loans;
2023-01-11 08:45:01.989 GMT [25366] ERROR:  permission denied for table customer
2023-01-11 08:45:01.989 GMT [25366] STATEMENT:  SELECT * FROM customer;
2023-01-11 08:47:01.754 GMT [25330] LOG:  received fast shutdown request
2023-01-11 08:47:01.756 GMT [25330] LOG:  aborting any active transactions
2023-01-11 08:47:01.763 GMT [25330] LOG:  background worker "logical replication launcher" (PID 25344) exited with exit code 1
2023-01-11 08:47:01.763 GMT [25339] LOG:  shutting down
2023-01-11 08:47:01.812 GMT [25330] LOG:  database system is shut down
2023-01-11 08:47:03.369 GMT [25795] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-11 08:47:03.369 GMT [25795] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-11 08:47:03.370 GMT [25795] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-11 08:47:03.375 GMT [25796] LOG:  database system was shut down at 2023-01-11 08:47:03 GMT
2023-01-11 08:47:03.380 GMT [25795] LOG:  database system is ready to accept connections
2023-01-11 08:47:04.240 GMT [25836] ERROR:  permission denied for table customer
2023-01-11 08:47:04.240 GMT [25836] STATEMENT:  SELECT * FROM customer;
2023-01-11 09:33:09.487 GMT [25795] LOG:  received fast shutdown request
2023-01-11 09:33:09.489 GMT [25795] LOG:  aborting any active transactions
2023-01-11 09:33:09.495 GMT [25795] LOG:  background worker "logical replication launcher" (PID 25802) exited with exit code 1
2023-01-11 09:33:09.496 GMT [25797] LOG:  shutting down
2023-01-11 09:33:09.514 GMT [25795] LOG:  database system is shut down
2023-01-11 09:33:18.920 GMT [34126] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-11 09:33:18.920 GMT [34126] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-11 09:33:18.923 GMT [34126] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-11 09:33:18.929 GMT [34127] LOG:  database system was shut down at 2023-01-11 09:33:18 GMT
2023-01-11 09:33:18.934 GMT [34126] LOG:  database system is ready to accept connections
2023-01-11 09:33:19.796 GMT [34155] ERROR:  syntax error at or near "format" at character 1625
2023-01-11 09:33:19.796 GMT [34155] STATEMENT:  CREATE OR REPLACE FUNCTION unauthenticated.create_online_account_details(username TEXT, password TEXT, first_name TEXT, last_name TEXT, email_address TEXT, question_choice_ids INT[], question_answers TEXT[])
	RETURNS INT AS $$
	DECLARE success INT;
	DECLARE customer_id INT;
	DECLARE account_id INT;
	DECLARE online_account_id INT;
	DECLARE question_choice_id INT;
	BEGIN
	    IF NOT EXISTS (SELECT FROM user_login WHERE username = username) THEN
	        customer_id = unauthenticated.get_customer_id(first_name, last_name, email_address);
	        INSERT INTO online_account (date_opened, sort_code, customer_id)
	        VALUES ((SELECT now()), (SELECT num FROM GENERATE_SERIES(1, 6) AS s(num) LIMIT 1), customer_id)
	        RETURNING id INTO account_id;
	
	        INSERT INTO user_login (account_id, username)
	        VALUES (account_id, username)
	        RETURNING id INTO online_account_id;
	
	        FOR i IN 0..2 LOOP
	            
	            INSERT INTO user_login_security_question (question_choice_id, login_id)
	            VALUES (question_choice_ids[i], online_account_id)
	            RETURNING id INTO question_choice_id;
	
	            INSERT INTO security_question_answer (answer, question_id)
	            VALUES (question_answers[i], question_choice_id);
	
	        END LOOP;
	
	        success = 1;
	    ELSE
	        RAISE NOTICE 'USERNAME ALREADY TAKEN';
	        success = 0;
	
	
	    EXECUTE format(
	        'CREATE ROLE %I WITH LOGIN PASSWORD %L', username, password
	    );
	    EXECUTE format(
	        'SET ROLE %I', username
	    );
	    EXECUTE format(
	        'GRANT USAGE ON SCHEMA client TO %I', username
	    )
	    EXECUTE format(
	        'GRANT ALL ON ALL TABLES IN SCHEMA client TO %I', username
	    );
	    EXECUTE format(
	        'REVOKE ALL ON ALL TABLES IN SCHEMA public TO %I', username
	    );
	
	    END IF;
	    RETURN success;
	END;
	$$ LANGUAGE plpgsql;
2023-01-11 09:33:19.843 GMT [34155] ERROR:  permission denied for table customer
2023-01-11 09:33:19.843 GMT [34155] STATEMENT:  SELECT * FROM customer;
2023-01-11 09:33:41.455 GMT [34126] LOG:  received fast shutdown request
2023-01-11 09:33:41.456 GMT [34126] LOG:  aborting any active transactions
2023-01-11 09:33:41.464 GMT [34126] LOG:  background worker "logical replication launcher" (PID 34133) exited with exit code 1
2023-01-11 09:33:41.464 GMT [34128] LOG:  shutting down
2023-01-11 09:33:41.522 GMT [34126] LOG:  database system is shut down
2023-01-11 09:33:43.395 GMT [34310] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-11 09:33:43.395 GMT [34310] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-11 09:33:43.397 GMT [34310] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-11 09:33:43.401 GMT [34314] LOG:  database system was shut down at 2023-01-11 09:33:43 GMT
2023-01-11 09:33:43.408 GMT [34310] LOG:  database system is ready to accept connections
2023-01-11 09:33:44.319 GMT [34353] ERROR:  permission denied for table customer
2023-01-11 09:33:44.319 GMT [34353] STATEMENT:  SELECT * FROM customer;
2023-01-11 10:02:39.205 GMT [39544] ERROR:  role "l1" already exists
2023-01-11 10:02:39.205 GMT [39544] STATEMENT:  CREATE ROLE l1 WITH CREATEDB CREATEROLE SUPERUSER;
2023-01-11 10:02:39.206 GMT [39544] ERROR:  role "l2" already exists
2023-01-11 10:02:39.206 GMT [39544] STATEMENT:  CREATE ROLE l2 WITH CREATEROLE;
2023-01-11 10:02:39.206 GMT [39544] ERROR:  role "l3" already exists
2023-01-11 10:02:39.206 GMT [39544] STATEMENT:  CREATE ROLE l3 WITH CREATEROLE;
2023-01-11 10:02:39.206 GMT [39544] ERROR:  role "l4" already exists
2023-01-11 10:02:39.206 GMT [39544] STATEMENT:  CREATE ROLE l4;
2023-01-11 10:02:39.207 GMT [39544] ERROR:  role "l5" already exists
2023-01-11 10:02:39.207 GMT [39544] STATEMENT:  CREATE ROLE l5;
2023-01-11 10:02:39.208 GMT [39544] ERROR:  role "manager" already exists
2023-01-11 10:02:39.208 GMT [39544] STATEMENT:  CREATE ROLE manager WITH LOGIN PASSWORD 'manager';
2023-01-11 10:02:39.208 GMT [39544] ERROR:  role "employee1" already exists
2023-01-11 10:02:39.208 GMT [39544] STATEMENT:  CREATE ROLE employee1 WITH LOGIN PASSWORD 'employee1';
2023-01-11 10:02:39.209 GMT [39544] ERROR:  role "employee2" already exists
2023-01-11 10:02:39.209 GMT [39544] STATEMENT:  CREATE ROLE employee2 WITH LOGIN PASSWORD 'employee2';
2023-01-11 10:02:39.209 GMT [39544] ERROR:  role "employee3" already exists
2023-01-11 10:02:39.209 GMT [39544] STATEMENT:  CREATE ROLE employee3 WITH LOGIN PASSWORD 'employee3';
2023-01-11 10:02:39.209 GMT [39544] ERROR:  role "employee4" already exists
2023-01-11 10:02:39.209 GMT [39544] STATEMENT:  CREATE ROLE employee4 WITH LOGIN PASSWORD 'employee4';
2023-01-11 10:02:39.209 GMT [39544] ERROR:  role "employee5" already exists
2023-01-11 10:02:39.209 GMT [39544] STATEMENT:  CREATE ROLE employee5 WITH LOGIN PASSWORD 'employee5';
2023-01-11 10:02:39.209 GMT [39544] ERROR:  role "unauthenticated" already exists
2023-01-11 10:02:39.209 GMT [39544] STATEMENT:  CREATE ROLE unauthenticated WITH LOGIN PASSWORD 'unauthenticated';
2023-01-11 10:02:39.215 GMT [39544] ERROR:  cannot drop table customer because other objects depend on it
2023-01-11 10:02:39.215 GMT [39544] DETAIL:  constraint online_account_customer_id_fkey on table online_account depends on table customer
	view client.client_personal_information depends on table customer
	view unauthenticated.unauthenticated_personal_information depends on table customer
	view unauthenticated.unauthenticated_customer depends on table customer
2023-01-11 10:02:39.215 GMT [39544] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2023-01-11 10:02:39.215 GMT [39544] STATEMENT:  DROP TABLE IF EXISTS customer;
2023-01-11 10:02:39.217 GMT [39544] ERROR:  cannot drop table online_account because other objects depend on it
2023-01-11 10:02:39.217 GMT [39544] DETAIL:  constraint user_login_account_id_fkey on table user_login depends on table online_account
	constraint savings_account_account_id_fkey on table savings_account depends on table online_account
	constraint credit_account_account_id_fkey on table credit_account depends on table online_account
	constraint debit_account_account_id_fkey on table debit_account depends on table online_account
	constraint loan_account_id_fkey on table loan depends on table online_account
	constraint external_account_account_id_fkey on table external_account depends on table online_account
	view client.client_online_account_details depends on table online_account
	view client.client_personal_information depends on view client.client_online_account_details
	view client.client_loans depends on view client.client_online_account_details
	view client.client_loan_applications depends on view client.client_loans
	view client.client_loan_statements depends on view client.client_loans
	view client.client_savings_account depends on view client.client_online_account_details
	view client.client_savings_account_statements depends on view client.client_savings_account
	view client.client_savings_account_statement depends on view client.client_savings_account_statements
	view client.client_credit_accounts depends on view client.client_online_account_details
	view client.client_credit_account_applications depends on view client.client_credit_accounts
	view client.client_credit_account_statements depends on view client.client_credit_accounts
	view client.client_credit_account_statement depends on view client.client_credit_account_statements
	view client.client_debit_accounts depends on view client.client_online_account_details
	view client.client_debit_account_statements depends on view client.client_debit_accounts
	view client.client_debit_account_statement depends on view client.client_debit_account_statements
2023-01-11 10:02:39.217 GMT [39544] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2023-01-11 10:02:39.217 GMT [39544] STATEMENT:  DROP TABLE IF EXISTS online_account;
2023-01-11 10:02:39.218 GMT [39544] ERROR:  cannot drop table user_login because other objects depend on it
2023-01-11 10:02:39.218 GMT [39544] DETAIL:  constraint user_login_security_question_login_id_fkey on table user_login_security_question depends on table user_login
	view client.view_login depends on table user_login
	view client.client_security_questions depends on view client.view_login
	view client.client_online_account_details depends on view client.view_login
	view client.client_personal_information depends on view client.client_online_account_details
	view client.client_loans depends on view client.client_online_account_details
	view client.client_loan_applications depends on view client.client_loans
	view client.client_loan_statements depends on view client.client_loans
	view client.client_savings_account depends on view client.client_online_account_details
	view client.client_savings_account_statements depends on view client.client_savings_account
	view client.client_savings_account_statement depends on view client.client_savings_account_statements
	view client.client_credit_accounts depends on view client.client_online_account_details
	view client.client_credit_account_applications depends on view client.client_credit_accounts
	view client.client_credit_account_statements depends on view client.client_credit_accounts
	view client.client_credit_account_statement depends on view client.client_credit_account_statements
	view client.client_debit_accounts depends on view client.client_online_account_details
	view client.client_debit_account_statements depends on view client.client_debit_accounts
	view client.client_debit_account_statement depends on view client.client_debit_account_statements
	view unauthenticated.unauthenticated_login depends on table user_login
2023-01-11 10:02:39.218 GMT [39544] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2023-01-11 10:02:39.218 GMT [39544] STATEMENT:  DROP TABLE IF EXISTS user_login;
2023-01-11 10:02:39.219 GMT [39544] ERROR:  cannot drop table user_login_security_question because other objects depend on it
2023-01-11 10:02:39.219 GMT [39544] DETAIL:  constraint security_question_answer_question_id_fkey on table security_question_answer depends on table user_login_security_question
	view client.client_security_questions depends on table user_login_security_question
2023-01-11 10:02:39.219 GMT [39544] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2023-01-11 10:02:39.219 GMT [39544] STATEMENT:  DROP TABLE IF EXISTS user_login_security_question;
2023-01-11 10:02:39.219 GMT [39544] ERROR:  cannot drop table security_question_option because other objects depend on it
2023-01-11 10:02:39.219 GMT [39544] DETAIL:  constraint user_login_security_question_question_choice_id_fkey on table user_login_security_question depends on table security_question_option
	view client.client_security_questions depends on table security_question_option
2023-01-11 10:02:39.219 GMT [39544] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2023-01-11 10:02:39.219 GMT [39544] STATEMENT:  DROP TABLE IF EXISTS security_question_option;
2023-01-11 10:02:39.220 GMT [39544] ERROR:  cannot drop table security_question_answer because other objects depend on it
2023-01-11 10:02:39.220 GMT [39544] DETAIL:  view client.client_security_questions depends on table security_question_answer
2023-01-11 10:02:39.220 GMT [39544] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2023-01-11 10:02:39.220 GMT [39544] STATEMENT:  DROP TABLE IF EXISTS security_question_answer;
2023-01-11 10:02:39.221 GMT [39544] ERROR:  cannot drop table savings_account because other objects depend on it
2023-01-11 10:02:39.221 GMT [39544] DETAIL:  constraint savings_statement_account_id_fkey on table savings_statement depends on table savings_account
	view client.client_savings_account depends on table savings_account
	view client.client_savings_account_statements depends on view client.client_savings_account
	view client.client_savings_account_statement depends on view client.client_savings_account_statements
2023-01-11 10:02:39.221 GMT [39544] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2023-01-11 10:02:39.221 GMT [39544] STATEMENT:  DROP TABLE IF EXISTS savings_account;
2023-01-11 10:02:39.222 GMT [39544] ERROR:  cannot drop table credit_account because other objects depend on it
2023-01-11 10:02:39.222 GMT [39544] DETAIL:  constraint credit_account_application_account_id_fkey on table credit_account_application depends on table credit_account
	constraint credit_statement_account_id_fkey on table credit_statement depends on table credit_account
	view client.client_credit_accounts depends on table credit_account
	view client.client_credit_account_applications depends on view client.client_credit_accounts
	view client.client_credit_account_statements depends on view client.client_credit_accounts
	view client.client_credit_account_statement depends on view client.client_credit_account_statements
2023-01-11 10:02:39.222 GMT [39544] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2023-01-11 10:02:39.222 GMT [39544] STATEMENT:  DROP TABLE IF EXISTS credit_account;
2023-01-11 10:02:39.222 GMT [39544] ERROR:  cannot drop table debit_account because other objects depend on it
2023-01-11 10:02:39.222 GMT [39544] DETAIL:  constraint debit_statement_account_id_fkey on table debit_statement depends on table debit_account
	constraint debit_overdraft_account_id_fkey on table debit_overdraft depends on table debit_account
	view client.client_debit_accounts depends on table debit_account
	view client.client_debit_account_statements depends on view client.client_debit_accounts
	view client.client_debit_account_statement depends on view client.client_debit_account_statements
2023-01-11 10:02:39.222 GMT [39544] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2023-01-11 10:02:39.222 GMT [39544] STATEMENT:  DROP TABLE IF EXISTS debit_account;
2023-01-11 10:02:39.223 GMT [39544] ERROR:  cannot drop table loan because other objects depend on it
2023-01-11 10:02:39.223 GMT [39544] DETAIL:  constraint loan_application_loan_id_fkey on table loan_application depends on table loan
	constraint loan_statement_loan_id_fkey on table loan_statement depends on table loan
	view client.client_loans depends on table loan
	view client.client_loan_applications depends on view client.client_loans
	view client.client_loan_statements depends on view client.client_loans
2023-01-11 10:02:39.223 GMT [39544] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2023-01-11 10:02:39.223 GMT [39544] STATEMENT:  DROP TABLE IF EXISTS loan;
2023-01-11 10:02:39.224 GMT [39544] ERROR:  cannot drop table savings_statement because other objects depend on it
2023-01-11 10:02:39.224 GMT [39544] DETAIL:  constraint transaction_savings_statement_id_fkey on table transaction depends on table savings_statement
	view client.client_savings_account_statements depends on table savings_statement
	view client.client_savings_account_statement depends on view client.client_savings_account_statements
2023-01-11 10:02:39.224 GMT [39544] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2023-01-11 10:02:39.224 GMT [39544] STATEMENT:  DROP TABLE IF EXISTS savings_statement;
2023-01-11 10:02:39.224 GMT [39544] ERROR:  cannot drop table credit_account_application because other objects depend on it
2023-01-11 10:02:39.224 GMT [39544] DETAIL:  view client.client_credit_account_applications depends on table credit_account_application
2023-01-11 10:02:39.224 GMT [39544] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2023-01-11 10:02:39.224 GMT [39544] STATEMENT:  DROP TABLE IF EXISTS credit_account_application;
2023-01-11 10:02:39.225 GMT [39544] ERROR:  cannot drop table credit_statement because other objects depend on it
2023-01-11 10:02:39.225 GMT [39544] DETAIL:  constraint transaction_credit_statement_id_fkey on table transaction depends on table credit_statement
	view client.client_credit_account_statements depends on table credit_statement
	view client.client_credit_account_statement depends on view client.client_credit_account_statements
2023-01-11 10:02:39.225 GMT [39544] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2023-01-11 10:02:39.225 GMT [39544] STATEMENT:  DROP TABLE IF EXISTS credit_statement;
2023-01-11 10:02:39.225 GMT [39544] ERROR:  cannot drop table debit_statement because other objects depend on it
2023-01-11 10:02:39.225 GMT [39544] DETAIL:  constraint transaction_debit_statement_id_fkey on table transaction depends on table debit_statement
	view client.client_debit_account_statements depends on table debit_statement
	view client.client_debit_account_statement depends on view client.client_debit_account_statements
2023-01-11 10:02:39.225 GMT [39544] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2023-01-11 10:02:39.225 GMT [39544] STATEMENT:  DROP TABLE IF EXISTS debit_statement;
2023-01-11 10:02:39.231 GMT [39544] ERROR:  cannot drop table transaction because other objects depend on it
2023-01-11 10:02:39.231 GMT [39544] DETAIL:  view client.client_savings_account_statement depends on table transaction
	view client.client_credit_account_statement depends on table transaction
	view client.client_debit_account_statement depends on table transaction
2023-01-11 10:02:39.231 GMT [39544] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2023-01-11 10:02:39.231 GMT [39544] STATEMENT:  DROP TABLE IF EXISTS transaction;
2023-01-11 10:02:39.233 GMT [39544] ERROR:  cannot drop table loan_application because other objects depend on it
2023-01-11 10:02:39.233 GMT [39544] DETAIL:  view client.client_loan_applications depends on table loan_application
2023-01-11 10:02:39.233 GMT [39544] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2023-01-11 10:02:39.233 GMT [39544] STATEMENT:  DROP TABLE IF EXISTS loan_application;
2023-01-11 10:02:39.234 GMT [39544] ERROR:  cannot drop table loan_statement because other objects depend on it
2023-01-11 10:02:39.234 GMT [39544] DETAIL:  view client.client_loan_statements depends on table loan_statement
2023-01-11 10:02:39.234 GMT [39544] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2023-01-11 10:02:39.234 GMT [39544] STATEMENT:  DROP TABLE IF EXISTS loan_statement;
2023-01-11 10:02:39.323 GMT [39544] ERROR:  syntax error at or near "DECLARE" at character 685
2023-01-11 10:02:39.323 GMT [39544] STATEMENT:  CREATE OR REPLACE FUNCTION client.close_online_account()
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	BEGIN
	
	    EXECUTE format('DROP USER %I', (SELECT username FROM client.view_login));
	    passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
	
	    DELETE FROM user_login WHERE id = (SELECT id FROM client.view_login);
	    passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
	
	    DELETE FROM client_online_account_details WHERE id = (SELECT id FROM client.view_login);
	    passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
	
	    RETURN passed;
	
	    SET ROLE unauthenticated;
	
	END;
	
	CREATE OR REPLACE FUNCTION client.open_debit_account()
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-11 10:02:39.323 GMT [39544] ERROR:  syntax error at or near "INSERT" at character 11
2023-01-11 10:02:39.323 GMT [39544] STATEMENT:  BEGIN
	    INSERT INTO debit_account (account_id, current_balance, interest_rate) VALUES ((SELECT id FROM client.view_login), 0, 0.01);
2023-01-11 10:02:39.323 GMT [39544] ERROR:  syntax error at or near "passed" at character 1
2023-01-11 10:02:39.323 GMT [39544] STATEMENT:  passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-11 10:02:39.323 GMT [39544] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-11 10:02:39.323 GMT [39544] STATEMENT:  RETURN passed;
2023-01-11 10:02:39.323 GMT [39544] WARNING:  there is no transaction in progress
2023-01-11 10:02:39.360 GMT [39544] ERROR:  role "johnsmith" already exists
2023-01-11 10:02:39.360 GMT [39544] STATEMENT:  CREATE ROLE johnsmith WITH LOGIN PASSWORD '123456';
2023-01-11 10:02:39.366 GMT [39544] ERROR:  permission denied for table customer
2023-01-11 10:02:39.366 GMT [39544] STATEMENT:  SELECT * FROM customer;
2023-01-11 10:28:51.798 GMT [34310] LOG:  received smart shutdown request
2023-01-11 10:28:51.811 GMT [34310] LOG:  background worker "logical replication launcher" (PID 34321) exited with exit code 1
2023-01-11 10:28:51.813 GMT [34316] LOG:  shutting down
2023-01-11 10:28:51.817 GMT [34310] LOG:  received SIGHUP, reloading configuration files
2023-01-11 10:28:51.832 GMT [34310] LOG:  database system is shut down
2023-01-11 12:29:03.628 GMT [13347] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-11 12:29:03.630 GMT [13347] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-11 12:29:03.631 GMT [13347] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-11 12:29:03.638 GMT [13348] LOG:  database system was shut down at 2023-01-11 12:29:03 GMT
2023-01-11 12:29:03.646 GMT [13347] LOG:  database system is ready to accept connections
2023-01-11 12:29:04.994 GMT [13384] ERROR:  syntax error at or near "CREATE" at character 94
2023-01-11 12:29:04.994 GMT [13384] STATEMENT:  CREATE OR REPLACE VIEW client.view_login AS
	SELECT id, account_id, username
	FROM user_login
	
	CREATE OR REPLACE VIEW client.client_security_questions AS
	SELECT security_question_option.question_description, security_question_answer.question_answer
	FROM user_login_security_question
	INNER JOIN security_question_option ON user_login_security_question.question_choice_id = security_question_option.id
	INNER JOIN security_question_answer ON user_login_security_question.id = security_question_answer.question_id
	INNER JOIN view_login ON user_login_security_question.login_id = view_login.id;
2023-01-11 12:29:04.994 GMT [13384] ERROR:  relation "view_login" does not exist at character 206
2023-01-11 12:29:04.994 GMT [13384] STATEMENT:  CREATE OR REPLACE VIEW client.client_online_account_details AS
	SELECT online_account.id, online_account.date_opened, online_account.sort_code, online_account.customer_id
	    FROM online_account
	INNER JOIN view_login ON online_account.id = view_login.id;
2023-01-11 12:29:04.995 GMT [13384] ERROR:  relation "client_online_account_details" does not exist at character 105
2023-01-11 12:29:04.995 GMT [13384] STATEMENT:  CREATE OR REPLACE VIEW client.client_personal_information AS
	SELECT customer.* FROM customer
	INNER JOIN client_online_account_details ON customer.id = client_online_account_details.customer_id;
2023-01-11 12:29:04.997 GMT [13384] ERROR:  relation "client_online_account_details" does not exist at character 137
2023-01-11 12:29:04.997 GMT [13384] STATEMENT:  CREATE OR REPLACE VIEW client.client_loans AS
	SELECT loan.id, loan.loan_amount, loan.loan_end_date, loan.loan_type
	FROM loan
	INNER JOIN client_online_account_details ON loan.account_id = client_online_account_details.id;
2023-01-11 12:29:04.997 GMT [13384] ERROR:  relation "client_loans" does not exist at character 133
2023-01-11 12:29:04.997 GMT [13384] STATEMENT:  CREATE OR REPLACE VIEW client.client_loan_applications AS
	SELECT loan_application.application_status, loan_application.loan_id
	FROM client_loans
	INNER JOIN loan_application ON client_loans.id = loan_application.loan_id;
2023-01-11 12:29:04.998 GMT [13384] ERROR:  relation "client_loans" does not exist at character 145
2023-01-11 12:29:04.998 GMT [13384] STATEMENT:  CREATE OR REPLACE VIEW client.client_loan_statements AS
	SELECT loan_statement.starting_date, loan_statement.amount, loan_statement.loan_id
	FROM client_loans
	INNER JOIN loan_statement ON client_loans.id = loan_statement.loan_id;
2023-01-11 12:29:04.998 GMT [13384] ERROR:  relation "client_online_account_details" does not exist at character 179
2023-01-11 12:29:04.998 GMT [13384] STATEMENT:  CREATE OR REPLACE VIEW client.client_savings_account AS
	SELECT savings_account.id, savings_account.current_balance, savings_account.interest_rate
	FROM savings_account
	INNER JOIN client_online_account_details ON savings_account.account_id = client_online_account_details.id;
2023-01-11 12:29:04.998 GMT [13384] ERROR:  relation "client_savings_account" does not exist at character 218
2023-01-11 12:29:04.998 GMT [13384] STATEMENT:  CREATE OR REPLACE VIEW client.client_savings_account_statements AS
	SELECT savings_statement.id, savings_statement.starting_date, savings_statement.end_date, savings_statement.amount, savings_statement.account_id
	FROM client_savings_account
	INNER JOIN savings_statement ON client_savings_account.id = savings_statement.account_id;
2023-01-11 12:29:04.999 GMT [13384] ERROR:  relation "client_savings_account_statements" does not exist at character 210
2023-01-11 12:29:04.999 GMT [13384] STATEMENT:  CREATE OR REPLACE VIEW client.client_savings_account_statement AS
	SELECT transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date, transaction.savings_statement_id
	FROM client_savings_account_statements
	INNER JOIN transaction ON client_savings_account_statements.id = transaction.savings_statement_id;
2023-01-11 12:29:04.999 GMT [13384] ERROR:  relation "client_online_account_details" does not exist at character 208
2023-01-11 12:29:04.999 GMT [13384] STATEMENT:  CREATE OR REPLACE VIEW client.client_credit_accounts AS
	SELECT credit_account.id, credit_account.outstanding_balance, credit_account.credit_limit, credit_account.interest_rate
	FROM credit_account
	INNER JOIN client_online_account_details ON credit_account.account_id = client_online_account_details.id;
2023-01-11 12:29:04.999 GMT [13384] ERROR:  relation "client_credit_accounts" does not exist at character 166
2023-01-11 12:29:04.999 GMT [13384] STATEMENT:  CREATE OR REPLACE VIEW client.client_credit_account_applications AS
	SELECT credit_account_application.application_status, credit_account_application.account_id
	FROM client_credit_accounts
	INNER JOIN credit_account_application ON client_credit_accounts.id = credit_account_application.account_id;
2023-01-11 12:29:05.000 GMT [13384] ERROR:  relation "client_credit_accounts" does not exist at character 289
2023-01-11 12:29:05.000 GMT [13384] STATEMENT:  CREATE OR REPLACE VIEW client.client_credit_account_statements AS
	SELECT credit_statement.id, credit_statement.starting_date, credit_statement.end_date, credit_statement.amount, credit_statement.minimum_payment, credit_statement.minimum_payment_due_date, credit_statement.account_id
	FROM client_credit_accounts
	INNER JOIN credit_statement ON client_credit_accounts.id = credit_statement.account_id;
2023-01-11 12:29:05.000 GMT [13384] ERROR:  relation "client_credit_account_statements" does not exist at character 208
2023-01-11 12:29:05.000 GMT [13384] STATEMENT:  CREATE OR REPLACE VIEW client.client_credit_account_statement AS
	SELECT transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date, transaction.credit_statement_id
	FROM client_credit_account_statements
	INNER JOIN transaction ON client_credit_account_statements.id = transaction.credit_statement_id;
2023-01-11 12:29:05.000 GMT [13384] ERROR:  relation "client_online_account_details" does not exist at character 170
2023-01-11 12:29:05.000 GMT [13384] STATEMENT:  CREATE OR REPLACE VIEW client.client_debit_accounts AS
	SELECT debit_account.id, debit_account.current_balance, debit_account.interest_rate
	FROM debit_account
	INNER JOIN client_online_account_details ON debit_account.account_id = client_online_account_details.id;
2023-01-11 12:29:05.002 GMT [13384] ERROR:  relation "client_debit_accounts" does not exist at character 206
2023-01-11 12:29:05.002 GMT [13384] STATEMENT:  CREATE OR REPLACE VIEW client.client_debit_account_statements AS
	SELECT debit_statement.id, debit_statement.starting_date, debit_statement.end_date, debit_statement.amount, debit_statement.account_id
	FROM client_debit_accounts
	INNER JOIN debit_statement ON client_debit_accounts.id = debit_statement.account_id;
2023-01-11 12:29:05.004 GMT [13384] ERROR:  relation "client_debit_account_statements" does not exist at character 207
2023-01-11 12:29:05.004 GMT [13384] STATEMENT:  CREATE OR REPLACE VIEW client.client_debit_account_statement AS
	SELECT transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date, transaction.credit_statement_id
	FROM client_debit_account_statements
	INNER JOIN transaction ON client_debit_account_statements.id = transaction.debit_statement_id;
2023-01-11 12:29:05.004 GMT [13384] ERROR:  syntax error at or near "DECLARE" at character 727
2023-01-11 12:29:05.004 GMT [13384] STATEMENT:  CREATE OR REPLACE FUNCTION client.get_customer_id(username TEXT, password TEXT)
	RETURNS INTEGER AS $$
	DECLARE customer_id INTEGER;
	BEGIN
	    SELECT online_account_details.customer_id FROM client_online_account_details AS online_account_details
	    INNER JOIN client.view_login ON online_account_details.id = client.view_login.id
	    WHERE client.view_login.username = username AND hashtext(client.view_login.password) = password;
	END;
	
	CREATE OR REPLACE FUNCTION client.update_personal_information(first_name TEXT, last_name TEXT, date_of_birth DATE, phone_number TEXT, email_address TEXT, address_street TEXT, address_city TEXT, address_county TEXT, address_postcode TEXT, username TEXT, password TEXT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-11 12:29:05.004 GMT [13384] ERROR:  syntax error at or near "UPDATE" at character 11
2023-01-11 12:29:05.004 GMT [13384] STATEMENT:  BEGIN
	    UPDATE customer SET first_name = first_name, last_name = last_name, date_of_birth = date_of_birth, phone_number = phone_number, email_address = email_address, address_street = address_street, address_city = address_city, address_county = address_county, address_postcode = address_postcode
	    WHERE id = (SELECT * FROM get_customer_id(username, password));
2023-01-11 12:29:05.004 GMT [13384] ERROR:  syntax error at or near "passed" at character 1
2023-01-11 12:29:05.004 GMT [13384] STATEMENT:  passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-11 12:29:05.005 GMT [13384] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-11 12:29:05.005 GMT [13384] STATEMENT:  RETURN passed;
2023-01-11 12:29:05.005 GMT [13384] WARNING:  there is no transaction in progress
2023-01-11 12:29:05.005 GMT [13384] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.update_login_information(username TEXT, password TEXT)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-11 12:29:05.005 GMT [13384] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.update_login_information(username TEXT, password TEXT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-11 12:29:05.005 GMT [13384] ERROR:  syntax error at or near "UPDATE" at character 11
2023-01-11 12:29:05.005 GMT [13384] STATEMENT:  BEGIN
	    UPDATE user_login SET username = username
	    WHERE id = (SELECT id FROM client.view_login);
2023-01-11 12:29:05.005 GMT [13384] ERROR:  syntax error at or near "passed" at character 1
2023-01-11 12:29:05.005 GMT [13384] STATEMENT:  passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-11 12:29:05.006 GMT [13384] ERROR:  prepared statement "format" does not exist
2023-01-11 12:29:05.006 GMT [13384] STATEMENT:  EXECUTE format('ALTER USER %I WITH PASSWORD %L', username, password);
2023-01-11 12:29:05.007 GMT [13384] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-11 12:29:05.007 GMT [13384] STATEMENT:  RETURN passed;
2023-01-11 12:29:05.007 GMT [13384] WARNING:  there is no transaction in progress
2023-01-11 12:29:05.007 GMT [13384] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.close_online_account()
	RETURNS BOOLEAN AS $$" at character 1
2023-01-11 12:29:05.007 GMT [13384] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.close_online_account()
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-11 12:29:05.007 GMT [13384] ERROR:  syntax error at or near "EXECUTE" at character 11
2023-01-11 12:29:05.007 GMT [13384] STATEMENT:  BEGIN
	    EXECUTE format('DROP USER %I', (SELECT username FROM client.view_login));
2023-01-11 12:29:05.007 GMT [13384] ERROR:  syntax error at or near "passed" at character 1
2023-01-11 12:29:05.007 GMT [13384] STATEMENT:  passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-11 12:29:05.007 GMT [13384] ERROR:  relation "client.view_login" does not exist at character 51
2023-01-11 12:29:05.007 GMT [13384] STATEMENT:  DELETE FROM user_login WHERE id = (SELECT id FROM client.view_login);
2023-01-11 12:29:05.008 GMT [13384] ERROR:  syntax error at or near "passed" at character 1
2023-01-11 12:29:05.008 GMT [13384] STATEMENT:  passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-11 12:29:05.009 GMT [13384] ERROR:  relation "client_online_account_details" does not exist at character 13
2023-01-11 12:29:05.009 GMT [13384] STATEMENT:  DELETE FROM client_online_account_details WHERE id = (SELECT id FROM client.view_login);
2023-01-11 12:29:05.009 GMT [13384] ERROR:  syntax error at or near "passed" at character 1
2023-01-11 12:29:05.009 GMT [13384] STATEMENT:  passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-11 12:29:05.009 GMT [13384] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-11 12:29:05.009 GMT [13384] STATEMENT:  RETURN passed;
2023-01-11 12:29:05.011 GMT [13384] WARNING:  there is no transaction in progress
2023-01-11 12:29:05.011 GMT [13384] ERROR:  syntax error at or near "DECLARE" at character 1185
2023-01-11 12:29:05.011 GMT [13384] STATEMENT:  CREATE OR REPLACE FUNCTION client.open_debit_account()
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	BEGIN
	    INSERT INTO debit_account (account_id, current_balance, interest_rate) VALUES ((SELECT id FROM client.view_login), 0, 0.01);
	    passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
	    RETURN passed;
	END;
	
	
	CREATE SCHEMA IF NOT EXISTS unauthenticated;
	SET search_path TO unauthenticated, public;
	
	CREATE OR REPLACE VIEW unauthenticated.unauthenticated_personal_information AS
	SELECT id, hashtext(first_name) AS first_name, hashtext(last_name) AS last_name, hashtext(email_address) AS email_address
	FROM customer;
	
	CREATE OR REPLACE VIEW unauthenticated.unauthenticated_customer AS
	SELECT * FROM customer;
	
	CREATE OR REPLACE VIEW unauthenticated.unauthenticated_login AS
	SELECT hashtext(username) AS username FROM user_login;
	
	
	
	-- Allows a user to insert personal information into the online banking system
	CREATE OR REPLACE FUNCTION unauthenticated.create_personal_info(first_name TEXT, last_name TEXT, date_of_birth DATE, phone_number TEXT, email_address TEXT, address_street TEXT, address_city TEXT, address_county TEXT, address_postcode TEXT)
	RETURNS INT AS $$
	DECLARE success INT;
2023-01-11 12:29:05.011 GMT [13384] ERROR:  syntax error at or near "IF" at character 11
2023-01-11 12:29:05.011 GMT [13384] STATEMENT:  BEGIN
	    IF NOT EXISTS (SELECT FROM unauthenticated_personal_information WHERE hashtext(first_name) = first_name AND hashtext(last_name) = last_name AND hashtext(email_address) = email_address) THEN
	        INSERT INTO customer
	        VALUES (first_name, last_name, date_of_birth, phone_number, email_address, address_street, address_city, address_county, address_postcode);
2023-01-11 12:29:05.012 GMT [13384] ERROR:  syntax error at or near "success" at character 1
2023-01-11 12:29:05.012 GMT [13384] STATEMENT:  success = 1;
2023-01-11 12:29:05.012 GMT [13384] ERROR:  syntax error at or near "ELSE" at character 1
2023-01-11 12:29:05.012 GMT [13384] STATEMENT:  ELSE
	        RAISE NOTICE 'CUSTOMER INFORMATION ALREADY PRESENT';
2023-01-11 12:29:05.012 GMT [13384] ERROR:  syntax error at or near "success" at character 1
2023-01-11 12:29:05.012 GMT [13384] STATEMENT:  success = 0;
2023-01-11 12:29:05.012 GMT [13384] ERROR:  syntax error at or near "IF" at character 5
2023-01-11 12:29:05.012 GMT [13384] STATEMENT:  END IF;
2023-01-11 12:29:05.012 GMT [13384] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-11 12:29:05.012 GMT [13384] STATEMENT:  RETURN success;
2023-01-11 12:29:05.012 GMT [13384] WARNING:  there is no transaction in progress
2023-01-11 12:29:05.012 GMT [13384] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	-- Allows a user to fetch their respective customer id
	CREATE OR REPLACE FUNCTION unauthenticated.get_customer_id(first_name TEXT, last_name TEXT, email_address TEXT)
	RETURNS INT AS $$" at character 1
2023-01-11 12:29:05.012 GMT [13384] STATEMENT:  $$ LANGUAGE plpgsql;
	
	-- Allows a user to fetch their respective customer id
	CREATE OR REPLACE FUNCTION unauthenticated.get_customer_id(first_name TEXT, last_name TEXT, email_address TEXT)
	RETURNS INT AS $$
	DECLARE customer_id INT;
2023-01-11 12:29:05.013 GMT [13384] ERROR:  syntax error at or near "SELECT" at character 11
2023-01-11 12:29:05.013 GMT [13384] STATEMENT:  BEGIN
	    SELECT id INTO customer_id FROM customer WHERE first_name = first_name AND last_name = last_name AND email_address = email_address;
2023-01-11 12:29:05.013 GMT [13384] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-11 12:29:05.013 GMT [13384] STATEMENT:  RETURN customer_id;
2023-01-11 12:29:05.013 GMT [13384] WARNING:  there is no transaction in progress
2023-01-11 12:29:05.013 GMT [13384] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION unauthenticated.create_online_account_details(username TEXT, password TEXT, first_name TEXT, last_name TEXT, email_address TEXT, question_choice_ids INT[], question_answers TEXT[])
	RETURNS INT AS $$" at character 1
2023-01-11 12:29:05.013 GMT [13384] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION unauthenticated.create_online_account_details(username TEXT, password TEXT, first_name TEXT, last_name TEXT, email_address TEXT, question_choice_ids INT[], question_answers TEXT[])
	RETURNS INT AS $$
	DECLARE success INT;
2023-01-11 12:29:05.013 GMT [13384] ERROR:  syntax error at or near "INT" at character 21
2023-01-11 12:29:05.013 GMT [13384] STATEMENT:  DECLARE customer_id INT;
2023-01-11 12:29:05.013 GMT [13384] ERROR:  syntax error at or near "INT" at character 20
2023-01-11 12:29:05.013 GMT [13384] STATEMENT:  DECLARE account_id INT;
2023-01-11 12:29:05.014 GMT [13384] ERROR:  syntax error at or near "INT" at character 27
2023-01-11 12:29:05.014 GMT [13384] STATEMENT:  DECLARE online_account_id INT;
2023-01-11 12:29:05.014 GMT [13384] ERROR:  syntax error at or near "INT" at character 28
2023-01-11 12:29:05.014 GMT [13384] STATEMENT:  DECLARE question_choice_id INT;
2023-01-11 12:29:05.015 GMT [13384] ERROR:  syntax error at or near "IF" at character 11
2023-01-11 12:29:05.015 GMT [13384] STATEMENT:  BEGIN
	    IF NOT EXISTS (SELECT FROM user_login WHERE username = username) THEN
	        customer_id = unauthenticated.get_customer_id(first_name, last_name, email_address);
2023-01-11 12:29:05.015 GMT [13384] ERROR:  syntax error at or near "INTO" at character 191
2023-01-11 12:29:05.015 GMT [13384] STATEMENT:  INSERT INTO online_account (date_opened, sort_code, customer_id)
	        VALUES ((SELECT now()), (SELECT num FROM GENERATE_SERIES(1, 6) AS s(num) LIMIT 1), customer_id)
	        RETURNING id INTO account_id;
2023-01-11 12:29:05.016 GMT [13384] ERROR:  syntax error at or near "INTO" at character 106
2023-01-11 12:29:05.016 GMT [13384] STATEMENT:  INSERT INTO user_login (account_id, username)
	        VALUES (account_id, username)
	        RETURNING id INTO online_account_id;
2023-01-11 12:29:05.016 GMT [13384] ERROR:  syntax error at or near "FOR" at character 1
2023-01-11 12:29:05.016 GMT [13384] STATEMENT:  FOR i IN 0..2 LOOP
	            
	            INSERT INTO user_login_security_question (question_choice_id, login_id)
	            VALUES (question_choice_ids[i], online_account_id)
	            RETURNING id INTO question_choice_id;
2023-01-11 12:29:05.017 GMT [13384] ERROR:  column "answer" of relation "security_question_answer" does not exist at character 39
2023-01-11 12:29:05.017 GMT [13384] STATEMENT:  INSERT INTO security_question_answer (answer, question_id)
	            VALUES (question_answers[i], question_choice_id);
2023-01-11 12:29:05.018 GMT [13384] ERROR:  syntax error at or near "LOOP" at character 5
2023-01-11 12:29:05.018 GMT [13384] STATEMENT:  END LOOP;
2023-01-11 12:29:05.018 GMT [13384] ERROR:  syntax error at or near "success" at character 1
2023-01-11 12:29:05.018 GMT [13384] STATEMENT:  success = 1;
2023-01-11 12:29:05.018 GMT [13384] ERROR:  syntax error at or near "ELSE" at character 1
2023-01-11 12:29:05.018 GMT [13384] STATEMENT:  ELSE
	        RAISE NOTICE 'USERNAME ALREADY TAKEN';
2023-01-11 12:29:05.019 GMT [13384] ERROR:  syntax error at or near "success" at character 1
2023-01-11 12:29:05.019 GMT [13384] STATEMENT:  success = 0;
2023-01-11 12:29:05.019 GMT [13384] ERROR:  prepared statement "format" does not exist
2023-01-11 12:29:05.019 GMT [13384] STATEMENT:  EXECUTE format(
	        'CREATE ROLE %I WITH LOGIN PASSWORD %L', username, password
	    );
2023-01-11 12:29:05.019 GMT [13384] ERROR:  prepared statement "format" does not exist
2023-01-11 12:29:05.019 GMT [13384] STATEMENT:  EXECUTE format(
	        'SET ROLE %I', username
	    );
2023-01-11 12:29:05.019 GMT [13384] ERROR:  prepared statement "format" does not exist
2023-01-11 12:29:05.019 GMT [13384] STATEMENT:  EXECUTE format(
	        'GRANT USAGE ON SCHEMA client TO %I', username
	    );
2023-01-11 12:29:05.020 GMT [13384] ERROR:  prepared statement "format" does not exist
2023-01-11 12:29:05.020 GMT [13384] STATEMENT:  EXECUTE format(
	        'GRANT ALL ON ALL TABLES IN SCHEMA client TO %I', username
	    );
2023-01-11 12:29:05.020 GMT [13384] ERROR:  prepared statement "format" does not exist
2023-01-11 12:29:05.020 GMT [13384] STATEMENT:  EXECUTE format(
	        'REVOKE ALL ON ALL TABLES IN SCHEMA public TO %I', username
	    );
2023-01-11 12:29:05.020 GMT [13384] ERROR:  syntax error at or near "IF" at character 5
2023-01-11 12:29:05.020 GMT [13384] STATEMENT:  END IF;
2023-01-11 12:29:05.020 GMT [13384] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-11 12:29:05.020 GMT [13384] STATEMENT:  RETURN success;
2023-01-11 12:29:05.020 GMT [13384] WARNING:  there is no transaction in progress
2023-01-11 12:29:05.021 GMT [13384] ERROR:  unterminated dollar-quoted string at or near "$$ LANGUAGE plpgsql;
	
	
	-- sample data for customers
	INSERT INTO customer (first_name, last_name, date_of_birth, phone_number, email_address, address_street, address_city, address_county, address_postcode)
	VALUES ('John', 'Smith', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('Jane', 'Doe', '1990-01-01', '01234567890', 'test@gmail.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Bloggs', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('John', 'Bloggs', '1990-01-01', '01234567890', 'hello@yahoo.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('Jane', 'Bloggs', '1990-01-01', '01234567890', 'test@outlook.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Doe', '1990-01-01', '01234567890', 'hello@outlook.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('John', 'Doe', '1990-01-01', '01234567890', 'mybankemail@icloud.com', '1 My Bank Street', 'My Bank City', 'My Bank County', 'MB1 1NK'),
	('Jane', 'Smith', '1990-01-01', '01234567890', 'bankemail@outlook.com', '1 Bank Street', 'Bank City', 'Bank County', 'BA1 1NK'),
	('Joe', 'Smith', '1990-01-01', '01234567890', 'example@icloud.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX');
	
	-- sample data for online account
	INSERT INTO online_account (date_opened, sort_code, customer_id)
	VALUES ('2020-01-01', '123456', 1),
	('2019-01-01', '123456', 2),
	('2018-01-01', '123456', 3),
	('2017-01-01', '123456', 4),
	('2016-01-01', '123456', 5),
	('2017-02-03', '123456', 6),
	('2018-02-04', '123456', 7),
	('2020-01-01', '123456', 8),
	('2020-01-01', '123456', 9);
	
	-- sample data for user login
	INSERT INTO user_login (account_id, username)
	VALUES (1, 'johnsmith'),
	(2, 'janedoe'),
	(3, 'joebloggs'),
	(4, 'johnbloggs'),
	(5, 'janebloggs'),
	(6, 'joedoe'),
	(7, 'johndoe'),
	(8, 'joesmith'),
	(9, 'janesmith');
	
	-- sample data for security question option
	INSERT INTO security_question_option (question_description)
	VALUES ('What is your favourite colour?'),
	('What is your favourite food?'),
	('What is your favourite animal?'),
	('What is your favourite sport?'),
	('What is your favourite movie?'),
	('What is your favourite book?'),
	('What is your favourite song?'),
	('What is your favourite band?'),
	('What is your favourite game?'),
	('What is your favourite TV show?');
	
	--sample data for user login security question
	INSERT INTO user_login_security_question (question_choice_id, login_id)
	VALUES (1, 1),
	(2, 2),
	(3, 3),
	(4, 4),
	(5, 5),
	(6, 6),
	(7, 7),
	(8, 8),
	(9, 9);
	
	-- sample data for security question answer
	INSERT INTO security_question_answer (question_answer, question_id)
	VALUES ('Red', 1),
	('Blue', 2),
	('Green', 3),
	('Yellow', 4),
	('Orange', 5),
	('Purple', 6),
	('Pink', 7),
	('Black', 8),
	('White', 9);
	
	-- sample data for savings account
	INSERT INTO savings_account (current_balance, interest_rate, account_id)
	VALUES (2000.00, 2.05, 1),
	(1000.00, 2.05, 2),
	(5000.00, 2.05, 3),
	(10000.00, 2.05, 4),
	(20000.00, 2.05, 5),
	(50000.00, 2.05, 6),
	(100000.00, 2.05, 7),
	(200000.00, 2.05, 8);
	
	-- sample data for credit account
	INSERT INTO credit_account (outstanding_balance, credit_limit, interest_rate, account_id)
	VALUES (55.43, 2000.00, 4.22, 1),
	(100.00, 1000.00, 4.22, 2),
	(200.00, 5000.00, 4.22, 3),
	(300.00, 10000.00, 4.22, 4),
	(400.00, 20000.00, 4.22, 5),
	(500.00, 50000.00, 4.22, 6),
	(600.00, 100000.00, 4.22, 7),
	(700.00, 200000.00, 4.22, 8);
	
	-- sample data for debit account
	INSERT INTO debit_account (current_balance, interest_rate, account_id)
	VALUES (3465.43, 0.05, 1),
	(1000.00, 0.05, 1),
	(5000.00, 0.05, 2),
	(10000.00, 0.05, 3),
	(20000.00, 0.05, 4),
	(50000.00, 0.05, 5),
	(100000.00, 0.05, 6),
	(200000.00, 0.05, 9);
	
	-- sample data for loan
	INSERT INTO loan (loan_end_date, loan_amount, loan_type, account_id)
	VALUES ('2024-01-01', 10000, 'vehicle', 8),
	('2023-03-04', 300000, 'mortgage', 8),
	('2035-03-03', 400000, 'mortgage', 1),
	('2025-04-05', 25000, 'vehicle', 1),
	('2026-05-05', 34000, 'vehicle', 1),
	('2023-06-07', 500000, 'mortgage', 2),
	('2026-04-04', 60000, 'vehicle', 2),
	('2024-03-03', 70000, 'vehicle', 2),
	('2023-02-02', 800000, 'mortgage', 3),
	('2022-01-01', 90000, 'vehicle', 3),
	('2021-01-01', 100000, 'vehicle', 3),
	('2020-01-01', 110000, 'mortgage', 4),
	('2020-01-01', 12000, 'vehicle', 4),
	('2020-01-01', 13000, 'vehicle', 4),
	('2020-01-01', 140000, 'mortgage', 5),
	('2020-01-01', 15000, 'vehicle', 5),
	('2020-01-01', 16000, 'vehicle', 5),
	('2020-01-01', 170000, 'mortgage', 6),
	('2020-01-01', 18000, 'vehicle', 6),
	('2020-01-01', 19000, 'vehicle', 6),
	('2020-01-01', 200000, 'mortgage', 7),
	('2020-01-01', 21000, 'vehicle', 7),
	('2020-01-01', 22000, 'vehicle', 7);
	
	CREATE SCHEMA IF NOT EXISTS staff;
	
	SET search_path TO public, staff;" at character 1
2023-01-11 12:29:05.021 GMT [13384] STATEMENT:  $$ LANGUAGE plpgsql;
	
	
	-- sample data for customers
	INSERT INTO customer (first_name, last_name, date_of_birth, phone_number, email_address, address_street, address_city, address_county, address_postcode)
	VALUES ('John', 'Smith', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('Jane', 'Doe', '1990-01-01', '01234567890', 'test@gmail.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Bloggs', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('John', 'Bloggs', '1990-01-01', '01234567890', 'hello@yahoo.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('Jane', 'Bloggs', '1990-01-01', '01234567890', 'test@outlook.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Doe', '1990-01-01', '01234567890', 'hello@outlook.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('John', 'Doe', '1990-01-01', '01234567890', 'mybankemail@icloud.com', '1 My Bank Street', 'My Bank City', 'My Bank County', 'MB1 1NK'),
	('Jane', 'Smith', '1990-01-01', '01234567890', 'bankemail@outlook.com', '1 Bank Street', 'Bank City', 'Bank County', 'BA1 1NK'),
	('Joe', 'Smith', '1990-01-01', '01234567890', 'example@icloud.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX');
	
	-- sample data for online account
	INSERT INTO online_account (date_opened, sort_code, customer_id)
	VALUES ('2020-01-01', '123456', 1),
	('2019-01-01', '123456', 2),
	('2018-01-01', '123456', 3),
	('2017-01-01', '123456', 4),
	('2016-01-01', '123456', 5),
	('2017-02-03', '123456', 6),
	('2018-02-04', '123456', 7),
	('2020-01-01', '123456', 8),
	('2020-01-01', '123456', 9);
	
	-- sample data for user login
	INSERT INTO user_login (account_id, username)
	VALUES (1, 'johnsmith'),
	(2, 'janedoe'),
	(3, 'joebloggs'),
	(4, 'johnbloggs'),
	(5, 'janebloggs'),
	(6, 'joedoe'),
	(7, 'johndoe'),
	(8, 'joesmith'),
	(9, 'janesmith');
	
	-- sample data for security question option
	INSERT INTO security_question_option (question_description)
	VALUES ('What is your favourite colour?'),
	('What is your favourite food?'),
	('What is your favourite animal?'),
	('What is your favourite sport?'),
	('What is your favourite movie?'),
	('What is your favourite book?'),
	('What is your favourite song?'),
	('What is your favourite band?'),
	('What is your favourite game?'),
	('What is your favourite TV show?');
	
	--sample data for user login security question
	INSERT INTO user_login_security_question (question_choice_id, login_id)
	VALUES (1, 1),
	(2, 2),
	(3, 3),
	(4, 4),
	(5, 5),
	(6, 6),
	(7, 7),
	(8, 8),
	(9, 9);
	
	-- sample data for security question answer
	INSERT INTO security_question_answer (question_answer, question_id)
	VALUES ('Red', 1),
	('Blue', 2),
	('Green', 3),
	('Yellow', 4),
	('Orange', 5),
	('Purple', 6),
	('Pink', 7),
	('Black', 8),
	('White', 9);
	
	-- sample data for savings account
	INSERT INTO savings_account (current_balance, interest_rate, account_id)
	VALUES (2000.00, 2.05, 1),
	(1000.00, 2.05, 2),
	(5000.00, 2.05, 3),
	(10000.00, 2.05, 4),
	(20000.00, 2.05, 5),
	(50000.00, 2.05, 6),
	(100000.00, 2.05, 7),
	(200000.00, 2.05, 8);
	
	-- sample data for credit account
	INSERT INTO credit_account (outstanding_balance, credit_limit, interest_rate, account_id)
	VALUES (55.43, 2000.00, 4.22, 1),
	(100.00, 1000.00, 4.22, 2),
	(200.00, 5000.00, 4.22, 3),
	(300.00, 10000.00, 4.22, 4),
	(400.00, 20000.00, 4.22, 5),
	(500.00, 50000.00, 4.22, 6),
	(600.00, 100000.00, 4.22, 7),
	(700.00, 200000.00, 4.22, 8);
	
	-- sample data for debit account
	INSERT INTO debit_account (current_balance, interest_rate, account_id)
	VALUES (3465.43, 0.05, 1),
	(1000.00, 0.05, 1),
	(5000.00, 0.05, 2),
	(10000.00, 0.05, 3),
	(20000.00, 0.05, 4),
	(50000.00, 0.05, 5),
	(100000.00, 0.05, 6),
	(200000.00, 0.05, 9);
	
	-- sample data for loan
	INSERT INTO loan (loan_end_date, loan_amount, loan_type, account_id)
	VALUES ('2024-01-01', 10000, 'vehicle', 8),
	('2023-03-04', 300000, 'mortgage', 8),
	('2035-03-03', 400000, 'mortgage', 1),
	('2025-04-05', 25000, 'vehicle', 1),
	('2026-05-05', 34000, 'vehicle', 1),
	('2023-06-07', 500000, 'mortgage', 2),
	('2026-04-04', 60000, 'vehicle', 2),
	('2024-03-03', 70000, 'vehicle', 2),
	('2023-02-02', 800000, 'mortgage', 3),
	('2022-01-01', 90000, 'vehicle', 3),
	('2021-01-01', 100000, 'vehicle', 3),
	('2020-01-01', 110000, 'mortgage', 4),
	('2020-01-01', 12000, 'vehicle', 4),
	('2020-01-01', 13000, 'vehicle', 4),
	('2020-01-01', 140000, 'mortgage', 5),
	('2020-01-01', 15000, 'vehicle', 5),
	('2020-01-01', 16000, 'vehicle', 5),
	('2020-01-01', 170000, 'mortgage', 6),
	('2020-01-01', 18000, 'vehicle', 6),
	('2020-01-01', 19000, 'vehicle', 6),
	('2020-01-01', 200000, 'mortgage', 7),
	('2020-01-01', 21000, 'vehicle', 7),
	('2020-01-01', 22000, 'vehicle', 7);
	
	CREATE SCHEMA IF NOT EXISTS staff;
	
	SET search_path TO public, staff;
2023-01-11 12:30:19.053 GMT [13347] LOG:  received fast shutdown request
2023-01-11 12:30:19.054 GMT [13347] LOG:  aborting any active transactions
2023-01-11 12:30:19.062 GMT [13347] LOG:  background worker "logical replication launcher" (PID 13354) exited with exit code 1
2023-01-11 12:30:19.062 GMT [13349] LOG:  shutting down
2023-01-11 12:30:19.111 GMT [13347] LOG:  database system is shut down
2023-01-11 12:30:21.935 GMT [13717] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-11 12:30:21.935 GMT [13717] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-11 12:30:21.937 GMT [13717] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-11 12:30:21.942 GMT [13718] LOG:  database system was shut down at 2023-01-11 12:30:21 GMT
2023-01-11 12:30:21.948 GMT [13717] LOG:  database system is ready to accept connections
2023-01-11 12:30:22.927 GMT [13743] ERROR:  syntax error at or near "DECLARE" at character 727
2023-01-11 12:30:22.927 GMT [13743] STATEMENT:  CREATE OR REPLACE FUNCTION client.get_customer_id(username TEXT, password TEXT)
	RETURNS INTEGER AS $$
	DECLARE customer_id INTEGER;
	BEGIN
	    SELECT online_account_details.customer_id FROM client_online_account_details AS online_account_details
	    INNER JOIN client.view_login ON online_account_details.id = client.view_login.id
	    WHERE client.view_login.username = username AND hashtext(client.view_login.password) = password;
	END;
	
	CREATE OR REPLACE FUNCTION client.update_personal_information(first_name TEXT, last_name TEXT, date_of_birth DATE, phone_number TEXT, email_address TEXT, address_street TEXT, address_city TEXT, address_county TEXT, address_postcode TEXT, username TEXT, password TEXT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-11 12:30:22.927 GMT [13743] ERROR:  syntax error at or near "UPDATE" at character 11
2023-01-11 12:30:22.927 GMT [13743] STATEMENT:  BEGIN
	    UPDATE customer SET first_name = first_name, last_name = last_name, date_of_birth = date_of_birth, phone_number = phone_number, email_address = email_address, address_street = address_street, address_city = address_city, address_county = address_county, address_postcode = address_postcode
	    WHERE id = (SELECT * FROM get_customer_id(username, password));
2023-01-11 12:30:22.928 GMT [13743] ERROR:  syntax error at or near "passed" at character 1
2023-01-11 12:30:22.928 GMT [13743] STATEMENT:  passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-11 12:30:22.928 GMT [13743] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-11 12:30:22.928 GMT [13743] STATEMENT:  RETURN passed;
2023-01-11 12:30:22.928 GMT [13743] WARNING:  there is no transaction in progress
2023-01-11 12:30:22.928 GMT [13743] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.update_login_information(username TEXT, password TEXT)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-11 12:30:22.928 GMT [13743] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.update_login_information(username TEXT, password TEXT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-11 12:30:22.928 GMT [13743] ERROR:  syntax error at or near "UPDATE" at character 11
2023-01-11 12:30:22.928 GMT [13743] STATEMENT:  BEGIN
	    UPDATE user_login SET username = username
	    WHERE id = (SELECT id FROM client.view_login);
2023-01-11 12:30:22.928 GMT [13743] ERROR:  syntax error at or near "passed" at character 1
2023-01-11 12:30:22.928 GMT [13743] STATEMENT:  passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-11 12:30:22.929 GMT [13743] ERROR:  prepared statement "format" does not exist
2023-01-11 12:30:22.929 GMT [13743] STATEMENT:  EXECUTE format('ALTER USER %I WITH PASSWORD %L', username, password);
2023-01-11 12:30:22.929 GMT [13743] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-11 12:30:22.929 GMT [13743] STATEMENT:  RETURN passed;
2023-01-11 12:30:22.929 GMT [13743] WARNING:  there is no transaction in progress
2023-01-11 12:30:22.929 GMT [13743] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.close_online_account()
	RETURNS BOOLEAN AS $$" at character 1
2023-01-11 12:30:22.929 GMT [13743] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.close_online_account()
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-11 12:30:22.929 GMT [13743] ERROR:  syntax error at or near "EXECUTE" at character 11
2023-01-11 12:30:22.929 GMT [13743] STATEMENT:  BEGIN
	    EXECUTE format('DROP USER %I', (SELECT username FROM client.view_login));
2023-01-11 12:30:22.929 GMT [13743] ERROR:  syntax error at or near "passed" at character 1
2023-01-11 12:30:22.929 GMT [13743] STATEMENT:  passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-11 12:30:22.930 GMT [13743] ERROR:  syntax error at or near "passed" at character 1
2023-01-11 12:30:22.930 GMT [13743] STATEMENT:  passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-11 12:30:22.933 GMT [13743] ERROR:  cannot delete from view "client_online_account_details"
2023-01-11 12:30:22.933 GMT [13743] DETAIL:  Views that do not select from a single table or view are not automatically updatable.
2023-01-11 12:30:22.933 GMT [13743] HINT:  To enable deleting from the view, provide an INSTEAD OF DELETE trigger or an unconditional ON DELETE DO INSTEAD rule.
2023-01-11 12:30:22.933 GMT [13743] STATEMENT:  DELETE FROM client_online_account_details WHERE id = (SELECT id FROM client.view_login);
2023-01-11 12:30:22.933 GMT [13743] ERROR:  syntax error at or near "passed" at character 1
2023-01-11 12:30:22.933 GMT [13743] STATEMENT:  passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-11 12:30:22.933 GMT [13743] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-11 12:30:22.933 GMT [13743] STATEMENT:  RETURN passed;
2023-01-11 12:30:22.933 GMT [13743] WARNING:  there is no transaction in progress
2023-01-11 12:30:22.934 GMT [13743] ERROR:  syntax error at or near "DECLARE" at character 1185
2023-01-11 12:30:22.934 GMT [13743] STATEMENT:  CREATE OR REPLACE FUNCTION client.open_debit_account()
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	BEGIN
	    INSERT INTO debit_account (account_id, current_balance, interest_rate) VALUES ((SELECT id FROM client.view_login), 0, 0.01);
	    passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
	    RETURN passed;
	END;
	
	
	CREATE SCHEMA IF NOT EXISTS unauthenticated;
	SET search_path TO unauthenticated, public;
	
	CREATE OR REPLACE VIEW unauthenticated.unauthenticated_personal_information AS
	SELECT id, hashtext(first_name) AS first_name, hashtext(last_name) AS last_name, hashtext(email_address) AS email_address
	FROM customer;
	
	CREATE OR REPLACE VIEW unauthenticated.unauthenticated_customer AS
	SELECT * FROM customer;
	
	CREATE OR REPLACE VIEW unauthenticated.unauthenticated_login AS
	SELECT hashtext(username) AS username FROM user_login;
	
	
	
	-- Allows a user to insert personal information into the online banking system
	CREATE OR REPLACE FUNCTION unauthenticated.create_personal_info(first_name TEXT, last_name TEXT, date_of_birth DATE, phone_number TEXT, email_address TEXT, address_street TEXT, address_city TEXT, address_county TEXT, address_postcode TEXT)
	RETURNS INT AS $$
	DECLARE success INT;
2023-01-11 12:30:22.934 GMT [13743] ERROR:  syntax error at or near "IF" at character 11
2023-01-11 12:30:22.934 GMT [13743] STATEMENT:  BEGIN
	    IF NOT EXISTS (SELECT FROM unauthenticated_personal_information WHERE hashtext(first_name) = first_name AND hashtext(last_name) = last_name AND hashtext(email_address) = email_address) THEN
	        INSERT INTO customer
	        VALUES (first_name, last_name, date_of_birth, phone_number, email_address, address_street, address_city, address_county, address_postcode);
2023-01-11 12:30:22.935 GMT [13743] ERROR:  syntax error at or near "success" at character 1
2023-01-11 12:30:22.935 GMT [13743] STATEMENT:  success = 1;
2023-01-11 12:30:22.935 GMT [13743] ERROR:  syntax error at or near "ELSE" at character 1
2023-01-11 12:30:22.935 GMT [13743] STATEMENT:  ELSE
	        RAISE NOTICE 'CUSTOMER INFORMATION ALREADY PRESENT';
2023-01-11 12:30:22.935 GMT [13743] ERROR:  syntax error at or near "success" at character 1
2023-01-11 12:30:22.935 GMT [13743] STATEMENT:  success = 0;
2023-01-11 12:30:22.935 GMT [13743] ERROR:  syntax error at or near "IF" at character 5
2023-01-11 12:30:22.935 GMT [13743] STATEMENT:  END IF;
2023-01-11 12:30:22.936 GMT [13743] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-11 12:30:22.936 GMT [13743] STATEMENT:  RETURN success;
2023-01-11 12:30:22.936 GMT [13743] WARNING:  there is no transaction in progress
2023-01-11 12:30:22.937 GMT [13743] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	-- Allows a user to fetch their respective customer id
	CREATE OR REPLACE FUNCTION unauthenticated.get_customer_id(first_name TEXT, last_name TEXT, email_address TEXT)
	RETURNS INT AS $$" at character 1
2023-01-11 12:30:22.937 GMT [13743] STATEMENT:  $$ LANGUAGE plpgsql;
	
	-- Allows a user to fetch their respective customer id
	CREATE OR REPLACE FUNCTION unauthenticated.get_customer_id(first_name TEXT, last_name TEXT, email_address TEXT)
	RETURNS INT AS $$
	DECLARE customer_id INT;
2023-01-11 12:30:22.937 GMT [13743] ERROR:  syntax error at or near "SELECT" at character 11
2023-01-11 12:30:22.937 GMT [13743] STATEMENT:  BEGIN
	    SELECT id INTO customer_id FROM customer WHERE first_name = first_name AND last_name = last_name AND email_address = email_address;
2023-01-11 12:30:22.937 GMT [13743] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-11 12:30:22.937 GMT [13743] STATEMENT:  RETURN customer_id;
2023-01-11 12:30:22.937 GMT [13743] WARNING:  there is no transaction in progress
2023-01-11 12:30:22.938 GMT [13743] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION unauthenticated.create_online_account_details(username TEXT, password TEXT, first_name TEXT, last_name TEXT, email_address TEXT, question_choice_ids INT[], question_answers TEXT[])
	RETURNS INT AS $$" at character 1
2023-01-11 12:30:22.938 GMT [13743] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION unauthenticated.create_online_account_details(username TEXT, password TEXT, first_name TEXT, last_name TEXT, email_address TEXT, question_choice_ids INT[], question_answers TEXT[])
	RETURNS INT AS $$
	DECLARE success INT;
2023-01-11 12:30:22.938 GMT [13743] ERROR:  syntax error at or near "INT" at character 21
2023-01-11 12:30:22.938 GMT [13743] STATEMENT:  DECLARE customer_id INT;
2023-01-11 12:30:22.938 GMT [13743] ERROR:  syntax error at or near "INT" at character 20
2023-01-11 12:30:22.938 GMT [13743] STATEMENT:  DECLARE account_id INT;
2023-01-11 12:30:22.938 GMT [13743] ERROR:  syntax error at or near "INT" at character 27
2023-01-11 12:30:22.938 GMT [13743] STATEMENT:  DECLARE online_account_id INT;
2023-01-11 12:30:22.939 GMT [13743] ERROR:  syntax error at or near "INT" at character 28
2023-01-11 12:30:22.939 GMT [13743] STATEMENT:  DECLARE question_choice_id INT;
2023-01-11 12:30:22.939 GMT [13743] ERROR:  syntax error at or near "IF" at character 11
2023-01-11 12:30:22.939 GMT [13743] STATEMENT:  BEGIN
	    IF NOT EXISTS (SELECT FROM user_login WHERE username = username) THEN
	        customer_id = unauthenticated.get_customer_id(first_name, last_name, email_address);
2023-01-11 12:30:22.939 GMT [13743] ERROR:  syntax error at or near "INTO" at character 191
2023-01-11 12:30:22.939 GMT [13743] STATEMENT:  INSERT INTO online_account (date_opened, sort_code, customer_id)
	        VALUES ((SELECT now()), (SELECT num FROM GENERATE_SERIES(1, 6) AS s(num) LIMIT 1), customer_id)
	        RETURNING id INTO account_id;
2023-01-11 12:30:22.940 GMT [13743] ERROR:  syntax error at or near "INTO" at character 106
2023-01-11 12:30:22.940 GMT [13743] STATEMENT:  INSERT INTO user_login (account_id, username)
	        VALUES (account_id, username)
	        RETURNING id INTO online_account_id;
2023-01-11 12:30:22.940 GMT [13743] ERROR:  syntax error at or near "FOR" at character 1
2023-01-11 12:30:22.940 GMT [13743] STATEMENT:  FOR i IN 0..2 LOOP
	            
	            INSERT INTO user_login_security_question (question_choice_id, login_id)
	            VALUES (question_choice_ids[i], online_account_id)
	            RETURNING id INTO question_choice_id;
2023-01-11 12:30:22.940 GMT [13743] ERROR:  column "answer" of relation "security_question_answer" does not exist at character 39
2023-01-11 12:30:22.940 GMT [13743] STATEMENT:  INSERT INTO security_question_answer (answer, question_id)
	            VALUES (question_answers[i], question_choice_id);
2023-01-11 12:30:22.941 GMT [13743] ERROR:  syntax error at or near "LOOP" at character 5
2023-01-11 12:30:22.941 GMT [13743] STATEMENT:  END LOOP;
2023-01-11 12:30:22.941 GMT [13743] ERROR:  syntax error at or near "success" at character 1
2023-01-11 12:30:22.941 GMT [13743] STATEMENT:  success = 1;
2023-01-11 12:30:22.941 GMT [13743] ERROR:  syntax error at or near "ELSE" at character 1
2023-01-11 12:30:22.941 GMT [13743] STATEMENT:  ELSE
	        RAISE NOTICE 'USERNAME ALREADY TAKEN';
2023-01-11 12:30:22.941 GMT [13743] ERROR:  syntax error at or near "success" at character 1
2023-01-11 12:30:22.941 GMT [13743] STATEMENT:  success = 0;
2023-01-11 12:30:22.941 GMT [13743] ERROR:  prepared statement "format" does not exist
2023-01-11 12:30:22.941 GMT [13743] STATEMENT:  EXECUTE format(
	        'CREATE ROLE %I WITH LOGIN PASSWORD %L', username, password
	    );
2023-01-11 12:30:22.941 GMT [13743] ERROR:  prepared statement "format" does not exist
2023-01-11 12:30:22.941 GMT [13743] STATEMENT:  EXECUTE format(
	        'SET ROLE %I', username
	    );
2023-01-11 12:30:22.942 GMT [13743] ERROR:  prepared statement "format" does not exist
2023-01-11 12:30:22.942 GMT [13743] STATEMENT:  EXECUTE format(
	        'GRANT USAGE ON SCHEMA client TO %I', username
	    );
2023-01-11 12:30:22.942 GMT [13743] ERROR:  prepared statement "format" does not exist
2023-01-11 12:30:22.942 GMT [13743] STATEMENT:  EXECUTE format(
	        'GRANT ALL ON ALL TABLES IN SCHEMA client TO %I', username
	    );
2023-01-11 12:30:22.942 GMT [13743] ERROR:  prepared statement "format" does not exist
2023-01-11 12:30:22.942 GMT [13743] STATEMENT:  EXECUTE format(
	        'REVOKE ALL ON ALL TABLES IN SCHEMA public TO %I', username
	    );
2023-01-11 12:30:22.942 GMT [13743] ERROR:  syntax error at or near "IF" at character 5
2023-01-11 12:30:22.942 GMT [13743] STATEMENT:  END IF;
2023-01-11 12:30:22.942 GMT [13743] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-11 12:30:22.942 GMT [13743] STATEMENT:  RETURN success;
2023-01-11 12:30:22.942 GMT [13743] WARNING:  there is no transaction in progress
2023-01-11 12:30:22.942 GMT [13743] ERROR:  unterminated dollar-quoted string at or near "$$ LANGUAGE plpgsql;
	
	
	-- sample data for customers
	INSERT INTO customer (first_name, last_name, date_of_birth, phone_number, email_address, address_street, address_city, address_county, address_postcode)
	VALUES ('John', 'Smith', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('Jane', 'Doe', '1990-01-01', '01234567890', 'test@gmail.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Bloggs', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('John', 'Bloggs', '1990-01-01', '01234567890', 'hello@yahoo.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('Jane', 'Bloggs', '1990-01-01', '01234567890', 'test@outlook.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Doe', '1990-01-01', '01234567890', 'hello@outlook.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('John', 'Doe', '1990-01-01', '01234567890', 'mybankemail@icloud.com', '1 My Bank Street', 'My Bank City', 'My Bank County', 'MB1 1NK'),
	('Jane', 'Smith', '1990-01-01', '01234567890', 'bankemail@outlook.com', '1 Bank Street', 'Bank City', 'Bank County', 'BA1 1NK'),
	('Joe', 'Smith', '1990-01-01', '01234567890', 'example@icloud.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX');
	
	-- sample data for online account
	INSERT INTO online_account (date_opened, sort_code, customer_id)
	VALUES ('2020-01-01', '123456', 1),
	('2019-01-01', '123456', 2),
	('2018-01-01', '123456', 3),
	('2017-01-01', '123456', 4),
	('2016-01-01', '123456', 5),
	('2017-02-03', '123456', 6),
	('2018-02-04', '123456', 7),
	('2020-01-01', '123456', 8),
	('2020-01-01', '123456', 9);
	
	-- sample data for user login
	INSERT INTO user_login (account_id, username)
	VALUES (1, 'johnsmith'),
	(2, 'janedoe'),
	(3, 'joebloggs'),
	(4, 'johnbloggs'),
	(5, 'janebloggs'),
	(6, 'joedoe'),
	(7, 'johndoe'),
	(8, 'joesmith'),
	(9, 'janesmith');
	
	-- sample data for security question option
	INSERT INTO security_question_option (question_description)
	VALUES ('What is your favourite colour?'),
	('What is your favourite food?'),
	('What is your favourite animal?'),
	('What is your favourite sport?'),
	('What is your favourite movie?'),
	('What is your favourite book?'),
	('What is your favourite song?'),
	('What is your favourite band?'),
	('What is your favourite game?'),
	('What is your favourite TV show?');
	
	--sample data for user login security question
	INSERT INTO user_login_security_question (question_choice_id, login_id)
	VALUES (1, 1),
	(2, 2),
	(3, 3),
	(4, 4),
	(5, 5),
	(6, 6),
	(7, 7),
	(8, 8),
	(9, 9);
	
	-- sample data for security question answer
	INSERT INTO security_question_answer (question_answer, question_id)
	VALUES ('Red', 1),
	('Blue', 2),
	('Green', 3),
	('Yellow', 4),
	('Orange', 5),
	('Purple', 6),
	('Pink', 7),
	('Black', 8),
	('White', 9);
	
	-- sample data for savings account
	INSERT INTO savings_account (current_balance, interest_rate, account_id)
	VALUES (2000.00, 2.05, 1),
	(1000.00, 2.05, 2),
	(5000.00, 2.05, 3),
	(10000.00, 2.05, 4),
	(20000.00, 2.05, 5),
	(50000.00, 2.05, 6),
	(100000.00, 2.05, 7),
	(200000.00, 2.05, 8);
	
	-- sample data for credit account
	INSERT INTO credit_account (outstanding_balance, credit_limit, interest_rate, account_id)
	VALUES (55.43, 2000.00, 4.22, 1),
	(100.00, 1000.00, 4.22, 2),
	(200.00, 5000.00, 4.22, 3),
	(300.00, 10000.00, 4.22, 4),
	(400.00, 20000.00, 4.22, 5),
	(500.00, 50000.00, 4.22, 6),
	(600.00, 100000.00, 4.22, 7),
	(700.00, 200000.00, 4.22, 8);
	
	-- sample data for debit account
	INSERT INTO debit_account (current_balance, interest_rate, account_id)
	VALUES (3465.43, 0.05, 1),
	(1000.00, 0.05, 1),
	(5000.00, 0.05, 2),
	(10000.00, 0.05, 3),
	(20000.00, 0.05, 4),
	(50000.00, 0.05, 5),
	(100000.00, 0.05, 6),
	(200000.00, 0.05, 9);
	
	-- sample data for loan
	INSERT INTO loan (loan_end_date, loan_amount, loan_type, account_id)
	VALUES ('2024-01-01', 10000, 'vehicle', 8),
	('2023-03-04', 300000, 'mortgage', 8),
	('2035-03-03', 400000, 'mortgage', 1),
	('2025-04-05', 25000, 'vehicle', 1),
	('2026-05-05', 34000, 'vehicle', 1),
	('2023-06-07', 500000, 'mortgage', 2),
	('2026-04-04', 60000, 'vehicle', 2),
	('2024-03-03', 70000, 'vehicle', 2),
	('2023-02-02', 800000, 'mortgage', 3),
	('2022-01-01', 90000, 'vehicle', 3),
	('2021-01-01', 100000, 'vehicle', 3),
	('2020-01-01', 110000, 'mortgage', 4),
	('2020-01-01', 12000, 'vehicle', 4),
	('2020-01-01', 13000, 'vehicle', 4),
	('2020-01-01', 140000, 'mortgage', 5),
	('2020-01-01', 15000, 'vehicle', 5),
	('2020-01-01', 16000, 'vehicle', 5),
	('2020-01-01', 170000, 'mortgage', 6),
	('2020-01-01', 18000, 'vehicle', 6),
	('2020-01-01', 19000, 'vehicle', 6),
	('2020-01-01', 200000, 'mortgage', 7),
	('2020-01-01', 21000, 'vehicle', 7),
	('2020-01-01', 22000, 'vehicle', 7);
	
	CREATE SCHEMA IF NOT EXISTS staff;
	
	SET search_path TO public, staff;" at character 1
2023-01-11 12:30:22.942 GMT [13743] STATEMENT:  $$ LANGUAGE plpgsql;
	
	
	-- sample data for customers
	INSERT INTO customer (first_name, last_name, date_of_birth, phone_number, email_address, address_street, address_city, address_county, address_postcode)
	VALUES ('John', 'Smith', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('Jane', 'Doe', '1990-01-01', '01234567890', 'test@gmail.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Bloggs', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('John', 'Bloggs', '1990-01-01', '01234567890', 'hello@yahoo.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('Jane', 'Bloggs', '1990-01-01', '01234567890', 'test@outlook.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Doe', '1990-01-01', '01234567890', 'hello@outlook.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('John', 'Doe', '1990-01-01', '01234567890', 'mybankemail@icloud.com', '1 My Bank Street', 'My Bank City', 'My Bank County', 'MB1 1NK'),
	('Jane', 'Smith', '1990-01-01', '01234567890', 'bankemail@outlook.com', '1 Bank Street', 'Bank City', 'Bank County', 'BA1 1NK'),
	('Joe', 'Smith', '1990-01-01', '01234567890', 'example@icloud.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX');
	
	-- sample data for online account
	INSERT INTO online_account (date_opened, sort_code, customer_id)
	VALUES ('2020-01-01', '123456', 1),
	('2019-01-01', '123456', 2),
	('2018-01-01', '123456', 3),
	('2017-01-01', '123456', 4),
	('2016-01-01', '123456', 5),
	('2017-02-03', '123456', 6),
	('2018-02-04', '123456', 7),
	('2020-01-01', '123456', 8),
	('2020-01-01', '123456', 9);
	
	-- sample data for user login
	INSERT INTO user_login (account_id, username)
	VALUES (1, 'johnsmith'),
	(2, 'janedoe'),
	(3, 'joebloggs'),
	(4, 'johnbloggs'),
	(5, 'janebloggs'),
	(6, 'joedoe'),
	(7, 'johndoe'),
	(8, 'joesmith'),
	(9, 'janesmith');
	
	-- sample data for security question option
	INSERT INTO security_question_option (question_description)
	VALUES ('What is your favourite colour?'),
	('What is your favourite food?'),
	('What is your favourite animal?'),
	('What is your favourite sport?'),
	('What is your favourite movie?'),
	('What is your favourite book?'),
	('What is your favourite song?'),
	('What is your favourite band?'),
	('What is your favourite game?'),
	('What is your favourite TV show?');
	
	--sample data for user login security question
	INSERT INTO user_login_security_question (question_choice_id, login_id)
	VALUES (1, 1),
	(2, 2),
	(3, 3),
	(4, 4),
	(5, 5),
	(6, 6),
	(7, 7),
	(8, 8),
	(9, 9);
	
	-- sample data for security question answer
	INSERT INTO security_question_answer (question_answer, question_id)
	VALUES ('Red', 1),
	('Blue', 2),
	('Green', 3),
	('Yellow', 4),
	('Orange', 5),
	('Purple', 6),
	('Pink', 7),
	('Black', 8),
	('White', 9);
	
	-- sample data for savings account
	INSERT INTO savings_account (current_balance, interest_rate, account_id)
	VALUES (2000.00, 2.05, 1),
	(1000.00, 2.05, 2),
	(5000.00, 2.05, 3),
	(10000.00, 2.05, 4),
	(20000.00, 2.05, 5),
	(50000.00, 2.05, 6),
	(100000.00, 2.05, 7),
	(200000.00, 2.05, 8);
	
	-- sample data for credit account
	INSERT INTO credit_account (outstanding_balance, credit_limit, interest_rate, account_id)
	VALUES (55.43, 2000.00, 4.22, 1),
	(100.00, 1000.00, 4.22, 2),
	(200.00, 5000.00, 4.22, 3),
	(300.00, 10000.00, 4.22, 4),
	(400.00, 20000.00, 4.22, 5),
	(500.00, 50000.00, 4.22, 6),
	(600.00, 100000.00, 4.22, 7),
	(700.00, 200000.00, 4.22, 8);
	
	-- sample data for debit account
	INSERT INTO debit_account (current_balance, interest_rate, account_id)
	VALUES (3465.43, 0.05, 1),
	(1000.00, 0.05, 1),
	(5000.00, 0.05, 2),
	(10000.00, 0.05, 3),
	(20000.00, 0.05, 4),
	(50000.00, 0.05, 5),
	(100000.00, 0.05, 6),
	(200000.00, 0.05, 9);
	
	-- sample data for loan
	INSERT INTO loan (loan_end_date, loan_amount, loan_type, account_id)
	VALUES ('2024-01-01', 10000, 'vehicle', 8),
	('2023-03-04', 300000, 'mortgage', 8),
	('2035-03-03', 400000, 'mortgage', 1),
	('2025-04-05', 25000, 'vehicle', 1),
	('2026-05-05', 34000, 'vehicle', 1),
	('2023-06-07', 500000, 'mortgage', 2),
	('2026-04-04', 60000, 'vehicle', 2),
	('2024-03-03', 70000, 'vehicle', 2),
	('2023-02-02', 800000, 'mortgage', 3),
	('2022-01-01', 90000, 'vehicle', 3),
	('2021-01-01', 100000, 'vehicle', 3),
	('2020-01-01', 110000, 'mortgage', 4),
	('2020-01-01', 12000, 'vehicle', 4),
	('2020-01-01', 13000, 'vehicle', 4),
	('2020-01-01', 140000, 'mortgage', 5),
	('2020-01-01', 15000, 'vehicle', 5),
	('2020-01-01', 16000, 'vehicle', 5),
	('2020-01-01', 170000, 'mortgage', 6),
	('2020-01-01', 18000, 'vehicle', 6),
	('2020-01-01', 19000, 'vehicle', 6),
	('2020-01-01', 200000, 'mortgage', 7),
	('2020-01-01', 21000, 'vehicle', 7),
	('2020-01-01', 22000, 'vehicle', 7);
	
	CREATE SCHEMA IF NOT EXISTS staff;
	
	SET search_path TO public, staff;
2023-01-11 12:30:50.089 GMT [13717] LOG:  received fast shutdown request
2023-01-11 12:30:50.091 GMT [13717] LOG:  aborting any active transactions
2023-01-11 12:30:50.096 GMT [13717] LOG:  background worker "logical replication launcher" (PID 13724) exited with exit code 1
2023-01-11 12:30:50.097 GMT [13719] LOG:  shutting down
2023-01-11 12:30:50.148 GMT [13717] LOG:  database system is shut down
2023-01-11 12:30:53.711 GMT [13939] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-11 12:30:53.712 GMT [13939] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-11 12:30:53.713 GMT [13939] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-11 12:30:53.726 GMT [13940] LOG:  database system was shut down at 2023-01-11 12:30:53 GMT
2023-01-11 12:30:53.734 GMT [13939] LOG:  database system is ready to accept connections
2023-01-11 12:30:54.684 GMT [13968] ERROR:  syntax error at or near "DECLARE" at character 685
2023-01-11 12:30:54.684 GMT [13968] STATEMENT:  CREATE OR REPLACE FUNCTION client.close_online_account()
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	BEGIN
	
	    EXECUTE format('DROP USER %I', (SELECT username FROM client.view_login));
	    passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
	
	    DELETE FROM user_login WHERE id = (SELECT id FROM client.view_login);
	    passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
	
	    DELETE FROM client_online_account_details WHERE id = (SELECT id FROM client.view_login);
	    passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
	
	    RETURN passed;
	
	    SET ROLE unauthenticated;
	
	END;
	
	CREATE OR REPLACE FUNCTION client.open_debit_account()
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-11 12:30:54.685 GMT [13968] ERROR:  syntax error at or near "INSERT" at character 11
2023-01-11 12:30:54.685 GMT [13968] STATEMENT:  BEGIN
	    INSERT INTO debit_account (account_id, current_balance, interest_rate) VALUES ((SELECT id FROM client.view_login), 0, 0.01);
2023-01-11 12:30:54.686 GMT [13968] ERROR:  syntax error at or near "passed" at character 1
2023-01-11 12:30:54.686 GMT [13968] STATEMENT:  passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-11 12:30:54.687 GMT [13968] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-11 12:30:54.687 GMT [13968] STATEMENT:  RETURN passed;
2023-01-11 12:30:54.687 GMT [13968] WARNING:  there is no transaction in progress
2023-01-11 12:33:21.053 GMT [13939] LOG:  received fast shutdown request
2023-01-11 12:33:21.054 GMT [13939] LOG:  aborting any active transactions
2023-01-11 12:33:21.059 GMT [13939] LOG:  background worker "logical replication launcher" (PID 13946) exited with exit code 1
2023-01-11 12:33:21.060 GMT [13941] LOG:  shutting down
2023-01-11 12:33:21.117 GMT [13939] LOG:  database system is shut down
2023-01-11 12:33:23.466 GMT [14533] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-11 12:33:23.466 GMT [14533] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-11 12:33:23.468 GMT [14533] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-11 12:33:23.473 GMT [14534] LOG:  database system was shut down at 2023-01-11 12:33:23 GMT
2023-01-11 12:33:23.479 GMT [14533] LOG:  database system is ready to accept connections
2023-01-11 12:37:18.427 GMT [14533] LOG:  received fast shutdown request
2023-01-11 12:37:18.431 GMT [14533] LOG:  aborting any active transactions
2023-01-11 12:37:18.437 GMT [14533] LOG:  background worker "logical replication launcher" (PID 14540) exited with exit code 1
2023-01-11 12:37:18.438 GMT [14535] LOG:  shutting down
2023-01-11 12:37:18.497 GMT [14533] LOG:  database system is shut down
2023-01-11 12:37:20.839 GMT [15415] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-11 12:37:20.839 GMT [15415] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-11 12:37:20.840 GMT [15415] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-11 12:37:20.845 GMT [15416] LOG:  database system was shut down at 2023-01-11 12:37:20 GMT
2023-01-11 12:37:20.851 GMT [15415] LOG:  database system is ready to accept connections
2023-01-11 12:38:21.578 GMT [15415] LOG:  received fast shutdown request
2023-01-11 12:38:21.582 GMT [15415] LOG:  aborting any active transactions
2023-01-11 12:38:21.587 GMT [15415] LOG:  background worker "logical replication launcher" (PID 15422) exited with exit code 1
2023-01-11 12:38:21.589 GMT [15417] LOG:  shutting down
2023-01-11 12:38:21.641 GMT [15415] LOG:  database system is shut down
2023-01-11 12:38:22.872 GMT [15799] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-11 12:38:22.872 GMT [15799] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-11 12:38:22.874 GMT [15799] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-11 12:38:22.879 GMT [15800] LOG:  database system was shut down at 2023-01-11 12:38:22 GMT
2023-01-11 12:38:22.885 GMT [15799] LOG:  database system is ready to accept connections
2023-01-11 12:38:48.346 GMT [15799] LOG:  received fast shutdown request
2023-01-11 12:38:48.348 GMT [15799] LOG:  aborting any active transactions
2023-01-11 12:38:48.353 GMT [15799] LOG:  background worker "logical replication launcher" (PID 15806) exited with exit code 1
2023-01-11 12:38:48.353 GMT [15801] LOG:  shutting down
2023-01-11 12:38:48.408 GMT [15799] LOG:  database system is shut down
2023-01-11 12:38:49.725 GMT [15985] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-11 12:38:49.726 GMT [15985] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-11 12:38:49.728 GMT [15985] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-11 12:38:49.733 GMT [15986] LOG:  database system was shut down at 2023-01-11 12:38:49 GMT
2023-01-11 12:38:49.739 GMT [15985] LOG:  database system is ready to accept connections
2023-01-11 12:39:51.943 GMT [15985] LOG:  received fast shutdown request
2023-01-11 12:39:51.945 GMT [15985] LOG:  aborting any active transactions
2023-01-11 12:39:51.950 GMT [15985] LOG:  background worker "logical replication launcher" (PID 15992) exited with exit code 1
2023-01-11 12:39:51.953 GMT [15987] LOG:  shutting down
2023-01-11 12:39:52.007 GMT [15985] LOG:  database system is shut down
2023-01-11 12:39:53.325 GMT [16295] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-11 12:39:53.326 GMT [16295] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-11 12:39:53.327 GMT [16295] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-11 12:39:53.332 GMT [16296] LOG:  database system was shut down at 2023-01-11 12:39:53 GMT
2023-01-11 12:39:53.342 GMT [16295] LOG:  database system is ready to accept connections
2023-01-11 12:39:54.213 GMT [16328] ERROR:  column reference "username" is ambiguous at character 235
2023-01-11 12:39:54.213 GMT [16328] DETAIL:  It could refer to either a PL/pgSQL variable or a table column.
2023-01-11 12:39:54.213 GMT [16328] QUERY:  SELECT online_account_details.customer_id FROM client.client_online_account_details AS online_account_details
	    INNER JOIN client.view_login ON online_account_details.id = client.view_login.id
	    WHERE client.view_login.username = username AND md5(client.view_login.password) = password
2023-01-11 12:39:54.213 GMT [16328] CONTEXT:  PL/pgSQL function client.get_customer_id(text,text) line 4 at SQL statement
2023-01-11 12:39:54.213 GMT [16328] STATEMENT:  SELECT * FROM client.get_customer_id('johnsmith', 'b29af57c2b3bba21e9df0cece40952c6');
2023-01-11 12:41:14.422 GMT [16295] LOG:  received fast shutdown request
2023-01-11 12:41:14.424 GMT [16295] LOG:  aborting any active transactions
2023-01-11 12:41:14.427 GMT [16295] LOG:  background worker "logical replication launcher" (PID 16302) exited with exit code 1
2023-01-11 12:41:14.430 GMT [16297] LOG:  shutting down
2023-01-11 12:41:14.483 GMT [16295] LOG:  database system is shut down
2023-01-11 12:41:15.783 GMT [16669] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-11 12:41:15.784 GMT [16669] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-11 12:41:15.786 GMT [16669] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-11 12:41:15.790 GMT [16670] LOG:  database system was shut down at 2023-01-11 12:41:15 GMT
2023-01-11 12:41:15.797 GMT [16669] LOG:  database system is ready to accept connections
2023-01-11 12:41:16.745 GMT [16705] ERROR:  column "password" does not exist at character 245
2023-01-11 12:41:16.745 GMT [16705] QUERY:  SELECT online_account_details.customer_id FROM client.client_online_account_details AS online_account_details
	    INNER JOIN client.view_login ON online_account_details.id = client.view_login.id
	    WHERE client.view_login.username = uname AND password = passwd
2023-01-11 12:41:16.745 GMT [16705] CONTEXT:  PL/pgSQL function client.get_customer_id(text,text) line 4 at SQL statement
2023-01-11 12:41:16.745 GMT [16705] STATEMENT:  SELECT * FROM client.get_customer_id('johnsmith', 'b29af57c2b3bba21e9df0cece40952c6');
2023-01-11 12:41:36.428 GMT [16669] LOG:  received fast shutdown request
2023-01-11 12:41:36.429 GMT [16669] LOG:  aborting any active transactions
2023-01-11 12:41:36.432 GMT [16669] LOG:  background worker "logical replication launcher" (PID 16676) exited with exit code 1
2023-01-11 12:41:36.436 GMT [16671] LOG:  shutting down
2023-01-11 12:41:36.496 GMT [16669] LOG:  database system is shut down
2023-01-11 12:41:37.718 GMT [16839] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-11 12:41:37.718 GMT [16839] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-11 12:41:37.720 GMT [16839] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-11 12:41:37.725 GMT [16840] LOG:  database system was shut down at 2023-01-11 12:41:37 GMT
2023-01-11 12:41:37.731 GMT [16839] LOG:  database system is ready to accept connections
2023-01-11 12:41:38.657 GMT [16869] ERROR:  column view_login.password does not exist at character 245
2023-01-11 12:41:38.657 GMT [16869] QUERY:  SELECT online_account_details.customer_id FROM client.client_online_account_details AS online_account_details
	    INNER JOIN client.view_login ON online_account_details.id = client.view_login.id
	    WHERE client.view_login.username = uname AND client.view_login.password = passwd
2023-01-11 12:41:38.657 GMT [16869] CONTEXT:  PL/pgSQL function client.get_customer_id(text,text) line 4 at SQL statement
2023-01-11 12:41:38.657 GMT [16869] STATEMENT:  SELECT * FROM client.get_customer_id('johnsmith', 'b29af57c2b3bba21e9df0cece40952c6');
2023-01-11 12:42:03.852 GMT [16839] LOG:  received fast shutdown request
2023-01-11 12:42:03.855 GMT [16839] LOG:  aborting any active transactions
2023-01-11 12:42:03.860 GMT [16839] LOG:  background worker "logical replication launcher" (PID 16846) exited with exit code 1
2023-01-11 12:42:03.861 GMT [16841] LOG:  shutting down
2023-01-11 12:42:03.919 GMT [16839] LOG:  database system is shut down
2023-01-11 12:42:05.235 GMT [17024] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-11 12:42:05.235 GMT [17024] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-11 12:42:05.237 GMT [17024] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-11 12:42:05.242 GMT [17025] LOG:  database system was shut down at 2023-01-11 12:42:04 GMT
2023-01-11 12:42:05.249 GMT [17024] LOG:  database system is ready to accept connections
2023-01-11 12:42:06.173 GMT [17063] ERROR:  query has no destination for result data
2023-01-11 12:42:06.173 GMT [17063] HINT:  If you want to discard the results of a SELECT, use PERFORM instead.
2023-01-11 12:42:06.173 GMT [17063] CONTEXT:  PL/pgSQL function client.get_customer_id(text,text) line 4 at SQL statement
2023-01-11 12:42:06.173 GMT [17063] STATEMENT:  SELECT * FROM client.get_customer_id('johnsmith', 'b29af57c2b3bba21e9df0cece40952c6');
2023-01-11 12:43:20.110 GMT [17024] LOG:  received fast shutdown request
2023-01-11 12:43:20.112 GMT [17024] LOG:  aborting any active transactions
2023-01-11 12:43:20.117 GMT [17024] LOG:  background worker "logical replication launcher" (PID 17031) exited with exit code 1
2023-01-11 12:43:20.117 GMT [17026] LOG:  shutting down
2023-01-11 12:43:20.170 GMT [17024] LOG:  database system is shut down
2023-01-11 12:43:25.066 GMT [17368] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-11 12:43:25.067 GMT [17368] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-11 12:43:25.068 GMT [17368] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-11 12:43:25.072 GMT [17369] LOG:  database system was shut down at 2023-01-11 12:43:24 GMT
2023-01-11 12:43:25.078 GMT [17368] LOG:  database system is ready to accept connections
2023-01-11 12:43:25.974 GMT [17397] ERROR:  syntax error at or near "PERFORM" at character 1
2023-01-11 12:43:25.974 GMT [17397] STATEMENT:  PERFORM * FROM client.get_customer_id('johnsmith', 'b29af57c2b3bba21e9df0cece40952c6');
2023-01-11 12:43:41.927 GMT [17368] LOG:  received fast shutdown request
2023-01-11 12:43:41.929 GMT [17368] LOG:  aborting any active transactions
2023-01-11 12:43:41.932 GMT [17368] LOG:  background worker "logical replication launcher" (PID 17375) exited with exit code 1
2023-01-11 12:43:41.936 GMT [17370] LOG:  shutting down
2023-01-11 12:43:41.989 GMT [17368] LOG:  database system is shut down
2023-01-11 12:43:43.914 GMT [17566] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-11 12:43:43.914 GMT [17566] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-11 12:43:43.916 GMT [17566] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-11 12:43:43.921 GMT [17573] LOG:  database system was shut down at 2023-01-11 12:43:43 GMT
2023-01-11 12:43:43.927 GMT [17566] LOG:  database system is ready to accept connections
2023-01-11 12:43:44.838 GMT [17600] ERROR:  query has no destination for result data
2023-01-11 12:43:44.838 GMT [17600] HINT:  If you want to discard the results of a SELECT, use PERFORM instead.
2023-01-11 12:43:44.838 GMT [17600] CONTEXT:  PL/pgSQL function client.get_customer_id(text,text) line 4 at SQL statement
2023-01-11 12:43:44.838 GMT [17600] STATEMENT:  SELECT * FROM client.get_customer_id('johnsmith', 'b29af57c2b3bba21e9df0cece40952c6');
2023-01-11 12:44:42.456 GMT [17566] LOG:  received fast shutdown request
2023-01-11 12:44:42.458 GMT [17566] LOG:  aborting any active transactions
2023-01-11 12:44:42.462 GMT [17566] LOG:  background worker "logical replication launcher" (PID 17581) exited with exit code 1
2023-01-11 12:44:42.463 GMT [17576] LOG:  shutting down
2023-01-11 12:44:42.525 GMT [17566] LOG:  database system is shut down
2023-01-11 12:44:43.843 GMT [17846] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-11 12:44:43.843 GMT [17846] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-11 12:44:43.846 GMT [17846] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-11 12:44:43.851 GMT [17847] LOG:  database system was shut down at 2023-01-11 12:44:43 GMT
2023-01-11 12:44:43.857 GMT [17846] LOG:  database system is ready to accept connections
2023-01-12 08:57:02.340 GMT [17846] LOG:  received fast shutdown request
2023-01-12 08:57:02.351 GMT [17846] LOG:  aborting any active transactions
2023-01-12 08:57:02.394 GMT [17846] LOG:  background worker "logical replication launcher" (PID 17853) exited with exit code 1
2023-01-12 08:57:02.398 GMT [17848] LOG:  shutting down
2023-01-12 08:57:02.549 GMT [17846] LOG:  database system is shut down
2023-01-12 08:57:08.404 GMT [45638] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-12 08:57:08.404 GMT [45638] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-12 08:57:08.406 GMT [45638] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-12 08:57:08.410 GMT [45639] LOG:  database system was shut down at 2023-01-12 08:57:08 GMT
2023-01-12 08:57:08.420 GMT [45638] LOG:  database system is ready to accept connections
2023-01-12 08:57:09.152 GMT [45667] ERROR:  syntax error at or near "INSERT" at character 248
2023-01-12 08:57:09.152 GMT [45667] STATEMENT:  CREATE OR REPLACE FUNCTION client.update_password(account_identifier INT, new_password TEXT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	BEGIN
	    UPDATE user_login SET password = md5(new_password)
	    WHERE account_id = account_identifier
	
	    INSERT INTO management_log (account_id, action, date) VALUES (account_identifier, 'Updated password', CURRENT_DATE);
	    passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
	    RETURN passed;
	END;
	$$ LANGUAGE plpgsql;
2023-01-12 08:57:09.156 GMT [45667] ERROR:  syntax error at or near "DECLARE" at character 811
2023-01-12 08:57:09.156 GMT [45667] STATEMENT:  CREATE OR REPLACE FUNCTION client.open_savings_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE savings_account_id INT;
	BEGIN
	    INSERT INTO savings_account (account_id, current_balance, interest_rate) VALUES (account_id, 0, 0.01) RETURNING id INTO savings_account_id;
	    INSERT INTO savings_statement (starting_date, end_date, amount, account_id) VALUES (CURRENT_DATE, CURRENT_DATE, 0, savings_account_id);
	    INSERT INTO management_log (account_id, action, date) VALUES (account_id, 'Opened savings account', CURRENT_DATE);
	    passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
	    RETURN passed;
	END;
	
	CREATE OR REPLACE FUNCTION client.open_loan(account_id INT, loan_amount INT, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-12 08:57:09.156 GMT [45667] ERROR:  syntax error at or near "INT" at character 17
2023-01-12 08:57:09.156 GMT [45667] STATEMENT:  DECLARE loan_id INT;
2023-01-12 08:57:09.156 GMT [45667] ERROR:  syntax error at or near "INSERT" at character 11
2023-01-12 08:57:09.156 GMT [45667] STATEMENT:  BEGIN
	    INSERT INTO loan (account_id, loan_amount, loan_end_date, loan_type, loan_interest_rate) VALUES (account_id, loan_amount, loan_end_date, loan_type, loan_interest_rate) RETURNING id INTO loan_id;
2023-01-12 08:57:09.157 GMT [45667] ERROR:  column "end_date" of relation "loan_statement" does not exist at character 44
2023-01-12 08:57:09.157 GMT [45667] STATEMENT:  INSERT INTO loan_statement (starting_date, end_date, amount, account_id) VALUES (CURRENT_DATE, CURRENT_DATE, 0, loan_id);
2023-01-12 08:57:09.157 GMT [45667] ERROR:  column "loan_id" does not exist at character 68
2023-01-12 08:57:09.157 GMT [45667] HINT:  There is a column named "loan_id" in table "loan_application", but it cannot be referenced from this part of the query.
2023-01-12 08:57:09.157 GMT [45667] STATEMENT:  INSERT INTO loan_application (loan_id, application_status) VALUES (loan_id, 'PENDING');
2023-01-12 08:57:09.157 GMT [45667] ERROR:  column "action" of relation "management_log" does not exist at character 41
2023-01-12 08:57:09.157 GMT [45667] STATEMENT:  INSERT INTO management_log (account_id, action, date) VALUES (account_id, 'Opened loan', CURRENT_DATE);
2023-01-12 08:57:09.158 GMT [45667] ERROR:  syntax error at or near "passed" at character 1
2023-01-12 08:57:09.158 GMT [45667] STATEMENT:  passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-12 08:57:09.158 GMT [45667] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-12 08:57:09.158 GMT [45667] STATEMENT:  RETURN passed;
2023-01-12 08:57:09.159 GMT [45667] WARNING:  there is no transaction in progress
2023-01-12 08:57:09.160 GMT [45667] ERROR:  syntax error at or near ")" at character 205
2023-01-12 08:57:09.160 GMT [45667] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_debit_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, overdraft_limit NUMERIC, overdraft_usage NUMERIC, interest_rate) AS $$
	BEGIN
	    RETURN QUERY
	        SELECT debit_account.id, debit_account.current_balance, debit_account.interest_rate, debit_overdraft.overdraft_limit, debit_overdraft.overdraft_usage, debit_overdraft.interest_rate
	        FROM debit_account
	        INNER JOIN debit_overdraft ON debit_account.id = debit_overdraft.account_id
	        WHERE debit_account.account_id = account_id;
	    SELECT client.
	END;
	$$ LANGUAGE plpgsql;
2023-01-12 08:57:09.160 GMT [45667] ERROR:  syntax error at or near "CREATE" at character 58
2023-01-12 08:57:09.160 GMT [45667] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_credit_accounts()
	CREATE SCHEMA IF NOT EXISTS unauthenticated;
2023-01-12 08:57:09.161 GMT [45667] ERROR:  schema "unauthenticated" does not exist
2023-01-12 08:57:09.161 GMT [45667] STATEMENT:  CREATE OR REPLACE VIEW unauthenticated.unauthenticated_personal_information AS
	SELECT id, md5(first_name) AS first_name, md5(last_name) AS last_name, md5(email_address) AS email_address
	FROM customer;
2023-01-12 08:57:09.162 GMT [45667] ERROR:  schema "unauthenticated" does not exist
2023-01-12 08:57:09.162 GMT [45667] STATEMENT:  CREATE OR REPLACE VIEW unauthenticated.unauthenticated_login AS
	SELECT md5(username) AS username FROM user_login;
2023-01-12 08:57:09.162 GMT [45667] ERROR:  schema "unauthenticated" does not exist
2023-01-12 08:57:09.162 GMT [45667] STATEMENT:  CREATE OR REPLACE FUNCTION unauthenticated.create_personal_info(first_name TEXT, last_name TEXT, date_of_birth DATE, phone_number TEXT, email_address TEXT, address_street TEXT, address_city TEXT, address_county TEXT, address_postcode TEXT)
	RETURNS INT AS $$
	DECLARE customer_id INT;
	BEGIN
	    IF NOT EXISTS (SELECT FROM unauthenticated.unauthenticated_personal_information WHERE md5(first_name) = first_name AND md5(last_name) = last_name AND md5(email_address) = email_address) THEN
	        INSERT INTO customer
	        VALUES (first_name, last_name, date_of_birth, phone_number, email_address, address_street, address_city, address_county, address_postcode)
	        RETURNING id INTO customer_id;
	
	        INSERT INTO management_log (log_description, log_date) VALUES ('New customer created', now());
	    ELSE
	        RAISE NOTICE 'CUSTOMER INFORMATION ALREADY PRESENT';
	        SELECT id INTO customer_id FROM unauthenticated.unauthenticated_personal_information WHERE md5(first_name) = first_name AND md5(last_name) = last_name AND md5(email_address) = email_address;
	    END IF;
	    RETURN customer_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-12 08:57:09.163 GMT [45667] ERROR:  schema "unauthenticated" does not exist
2023-01-12 08:57:09.163 GMT [45667] STATEMENT:  CREATE OR REPLACE FUNCTION unauthenticated.create_online_account_details(customer_id INT, first_name TEXT, last_name TEXT, email_address TEXT, question_choice_ids INT[], question_answers TEXT[])
	RETURNS INT AS $$
	DECLARE account_id INT;
	DECLARE online_account_id INT;
	DECLARE question_choice_id INT;
	BEGIN
	    IF NOT EXISTS (SELECT FROM user_login WHERE username = username) THEN
	        INSERT INTO online_account (date_opened, sort_code, customer_id)
	        VALUES ((SELECT now()), (SELECT num FROM GENERATE_SERIES(1, 6) AS s(num) LIMIT 1), customer_id)
	        RETURNING id INTO account_id;
	
	        INSERT INTO user_login (account_id, username, password)
	        VALUES (account_id, username, md5(password))
	        RETURNING id INTO online_account_id;
	
	        FOR i IN 0..2 LOOP
	            
	            INSERT INTO user_login_security_question (question_choice_id, login_id)
	            VALUES (question_choice_ids[i], online_account_id)
	            RETURNING id INTO question_choice_id;
	
	            INSERT INTO security_question_answer (answer, question_id)
	            VALUES (question_answers[i], question_choice_id);
	
	        END LOOP;
	
	
	        INSERT INTO authentication_log (log_description, log_date, account_id) VALUES ('New online account created', now(), account_id);
	
	        RETURN account_id;
	    ELSE
	        RAISE NOTICE 'USERNAME ALREADY TAKEN';
	        RETURN NULL;
	
	    END IF;
	    RETURN success;
	END;
	$$ LANGUAGE plpgsql;
2023-01-12 08:58:34.257 GMT [45638] LOG:  received fast shutdown request
2023-01-12 08:58:34.259 GMT [45638] LOG:  aborting any active transactions
2023-01-12 08:58:34.264 GMT [45638] LOG:  background worker "logical replication launcher" (PID 45645) exited with exit code 1
2023-01-12 08:58:34.264 GMT [45640] LOG:  shutting down
2023-01-12 08:58:34.306 GMT [45638] LOG:  database system is shut down
2023-01-12 08:58:35.375 GMT [46031] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-12 08:58:35.376 GMT [46031] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-12 08:58:35.377 GMT [46031] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-12 08:58:35.382 GMT [46032] LOG:  database system was shut down at 2023-01-12 08:58:35 GMT
2023-01-12 08:58:35.387 GMT [46031] LOG:  database system is ready to accept connections
2023-01-12 08:58:36.110 GMT [46060] ERROR:  syntax error at or near ")" at character 205
2023-01-12 08:58:36.110 GMT [46060] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_debit_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, overdraft_limit NUMERIC, overdraft_usage NUMERIC, interest_rate) AS $$
	BEGIN
	    RETURN QUERY
	        SELECT debit_account.id, debit_account.current_balance, debit_account.interest_rate, debit_overdraft.overdraft_limit, debit_overdraft.overdraft_usage, debit_overdraft.interest_rate
	        FROM debit_account
	        INNER JOIN debit_overdraft ON debit_account.id = debit_overdraft.account_id
	        WHERE debit_account.account_id = account_id;
	    SELECT client.
	END;
	$$ LANGUAGE plpgsql;
2023-01-12 08:58:36.111 GMT [46060] ERROR:  syntax error at or near "CREATE" at character 58
2023-01-12 08:58:36.111 GMT [46060] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_credit_accounts()
	CREATE SCHEMA IF NOT EXISTS unauthenticated;
2023-01-12 08:58:36.113 GMT [46060] ERROR:  schema "unauthenticated" does not exist
2023-01-12 08:58:36.113 GMT [46060] STATEMENT:  CREATE OR REPLACE VIEW unauthenticated.unauthenticated_personal_information AS
	SELECT id, md5(first_name) AS first_name, md5(last_name) AS last_name, md5(email_address) AS email_address
	FROM customer;
2023-01-12 08:58:36.114 GMT [46060] ERROR:  schema "unauthenticated" does not exist
2023-01-12 08:58:36.114 GMT [46060] STATEMENT:  CREATE OR REPLACE VIEW unauthenticated.unauthenticated_login AS
	SELECT md5(username) AS username FROM user_login;
2023-01-12 08:58:36.114 GMT [46060] ERROR:  schema "unauthenticated" does not exist
2023-01-12 08:58:36.114 GMT [46060] STATEMENT:  CREATE OR REPLACE FUNCTION unauthenticated.create_personal_info(first_name TEXT, last_name TEXT, date_of_birth DATE, phone_number TEXT, email_address TEXT, address_street TEXT, address_city TEXT, address_county TEXT, address_postcode TEXT)
	RETURNS INT AS $$
	DECLARE customer_id INT;
	BEGIN
	    IF NOT EXISTS (SELECT FROM unauthenticated.unauthenticated_personal_information WHERE md5(first_name) = first_name AND md5(last_name) = last_name AND md5(email_address) = email_address) THEN
	        INSERT INTO customer
	        VALUES (first_name, last_name, date_of_birth, phone_number, email_address, address_street, address_city, address_county, address_postcode)
	        RETURNING id INTO customer_id;
	
	        INSERT INTO management_log (log_description, log_date) VALUES ('New customer created', now());
	    ELSE
	        RAISE NOTICE 'CUSTOMER INFORMATION ALREADY PRESENT';
	        SELECT id INTO customer_id FROM unauthenticated.unauthenticated_personal_information WHERE md5(first_name) = first_name AND md5(last_name) = last_name AND md5(email_address) = email_address;
	    END IF;
	    RETURN customer_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-12 08:58:36.115 GMT [46060] ERROR:  schema "unauthenticated" does not exist
2023-01-12 08:58:36.115 GMT [46060] STATEMENT:  CREATE OR REPLACE FUNCTION unauthenticated.create_online_account_details(customer_id INT, first_name TEXT, last_name TEXT, email_address TEXT, question_choice_ids INT[], question_answers TEXT[])
	RETURNS INT AS $$
	DECLARE account_id INT;
	DECLARE online_account_id INT;
	DECLARE question_choice_id INT;
	BEGIN
	    IF NOT EXISTS (SELECT FROM user_login WHERE username = username) THEN
	        INSERT INTO online_account (date_opened, sort_code, customer_id)
	        VALUES ((SELECT now()), (SELECT num FROM GENERATE_SERIES(1, 6) AS s(num) LIMIT 1), customer_id)
	        RETURNING id INTO account_id;
	
	        INSERT INTO user_login (account_id, username, password)
	        VALUES (account_id, username, md5(password))
	        RETURNING id INTO online_account_id;
	
	        FOR i IN 0..2 LOOP
	            
	            INSERT INTO user_login_security_question (question_choice_id, login_id)
	            VALUES (question_choice_ids[i], online_account_id)
	            RETURNING id INTO question_choice_id;
	
	            INSERT INTO security_question_answer (answer, question_id)
	            VALUES (question_answers[i], question_choice_id);
	
	        END LOOP;
	
	
	        INSERT INTO authentication_log (log_description, log_date, account_id) VALUES ('New online account created', now(), account_id);
	
	        RETURN account_id;
	    ELSE
	        RAISE NOTICE 'USERNAME ALREADY TAKEN';
	        RETURN NULL;
	
	    END IF;
	    RETURN success;
	END;
	$$ LANGUAGE plpgsql;
2023-01-12 10:06:08.629 GMT [46031] LOG:  received SIGHUP, reloading configuration files
2023-01-12 10:06:08.662 GMT [46031] LOG:  received smart shutdown request
2023-01-12 10:06:08.759 GMT [46031] LOG:  background worker "logical replication launcher" (PID 46038) exited with exit code 1
2023-01-12 10:06:08.760 GMT [46033] LOG:  shutting down
2023-01-12 10:06:08.836 GMT [46031] LOG:  database system is shut down
2023-01-12 18:20:53.832 GMT [15045] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-12 18:20:53.832 GMT [15045] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-12 18:20:53.834 GMT [15045] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-12 18:20:53.837 GMT [15046] LOG:  database system was shut down at 2023-01-12 18:20:53 GMT
2023-01-12 18:20:53.845 GMT [15045] LOG:  database system is ready to accept connections
2023-01-12 18:20:54.470 GMT [15087] ERROR:  schema "client" does not exist
2023-01-12 18:20:54.470 GMT [15087] STATEMENT:  CREATE TABLE IF NOT EXISTS savings_account (
	    current_balance NUMERIC(15, 2),
	    interest_rate NUMERIC(5,2)
	) INHERITS (client.account);
2023-01-12 18:20:54.470 GMT [15087] ERROR:  schema "client" does not exist
2023-01-12 18:20:54.470 GMT [15087] STATEMENT:  CREATE TABLE IF NOT EXISTS credit_account (
	    outstanding_balance NUMERIC(15, 2),
	    credit_limit NUMERIC(15, 2),
	    interest_rate NUMERIC(5,2)
	) INHERITS (client.account);
2023-01-12 18:20:54.470 GMT [15087] ERROR:  schema "client" does not exist
2023-01-12 18:20:54.470 GMT [15087] STATEMENT:  CREATE TABLE IF NOT EXISTS debit_account (
	    current_balance NUMERIC(15, 2),
	    interest_rate NUMERIC(5,2)
	) INHERITS (client.account);
2023-01-12 18:20:54.479 GMT [15087] ERROR:  relation "savings_account" does not exist
2023-01-12 18:20:54.479 GMT [15087] STATEMENT:  CREATE TABLE IF NOT EXISTS savings_statement (
	    id SERIAL PRIMARY KEY,
	    starting_date DATE,
	    end_date DATE,
	    amount INT,
	    account_number INT REFERENCES savings_account(account_number)
	);
2023-01-12 18:20:54.484 GMT [15087] ERROR:  relation "credit_account" does not exist
2023-01-12 18:20:54.484 GMT [15087] STATEMENT:  CREATE TABLE IF NOT EXISTS credit_account_application (
	    id SERIAL PRIMARY KEY,
	    application_status VARCHAR,
	    account_number INT REFERENCES credit_account(account_number)
	);
2023-01-12 18:20:54.486 GMT [15087] ERROR:  relation "credit_account" does not exist
2023-01-12 18:20:54.486 GMT [15087] STATEMENT:  CREATE TABLE IF NOT EXISTS credit_statement (
	    id SERIAL PRIMARY KEY,
	    starting_date DATE,
	    end_date DATE,
	    amount INT,
	    minimum_payment INT,
	    minimum_payment_due_date DATE,
	    account_number INT REFERENCES credit_account(account_number)
	);
2023-01-12 18:20:54.489 GMT [15087] ERROR:  relation "debit_account" does not exist
2023-01-12 18:20:54.489 GMT [15087] STATEMENT:  CREATE TABLE IF NOT EXISTS debit_statement (
	    id SERIAL PRIMARY KEY,
	    starting_date DATE,
	    end_date DATE,
	    amount INT,
	    account_number INT REFERENCES debit_account(account_number)
	);
2023-01-12 18:20:54.492 GMT [15087] ERROR:  relation "debit_account" does not exist
2023-01-12 18:20:54.492 GMT [15087] STATEMENT:  CREATE TABLE IF NOT EXISTS debit_overdraft (
	    id SERIAL PRIMARY KEY,
	    overdraft_usage NUMERIC(15, 2),
	    overdraft_limit NUMERIC(15, 2),
	    interest_rate NUMERIC(5,2),
	    account_number INT REFERENCES debit_account(account_number)
	);
2023-01-12 18:20:54.498 GMT [15087] ERROR:  relation "savings_statement" does not exist
2023-01-12 18:20:54.498 GMT [15087] STATEMENT:  CREATE TABLE IF NOT EXISTS transaction (
	    id SERIAL PRIMARY KEY,
	    origin_account_id INT,
	    dest_account_id INT,
	    amount NUMERIC(15, 2),
	    date DATE,
	    savings_statement_id INT REFERENCES savings_statement(id),
	    credit_statement_id INT REFERENCES credit_statement(id),
	    debit_statement_id INT REFERENCES debit_statement(id)
	);
2023-01-12 18:21:25.261 GMT [15045] LOG:  received fast shutdown request
2023-01-12 18:21:25.262 GMT [15045] LOG:  aborting any active transactions
2023-01-12 18:21:25.267 GMT [15045] LOG:  background worker "logical replication launcher" (PID 15052) exited with exit code 1
2023-01-12 18:21:25.270 GMT [15047] LOG:  shutting down
2023-01-12 18:21:25.309 GMT [15045] LOG:  database system is shut down
2023-01-12 18:21:26.427 GMT [15255] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-12 18:21:26.428 GMT [15255] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-12 18:21:26.431 GMT [15255] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-12 18:21:26.438 GMT [15256] LOG:  database system was shut down at 2023-01-12 18:21:26 GMT
2023-01-12 18:21:26.446 GMT [15255] LOG:  database system is ready to accept connections
2023-01-12 18:21:27.100 GMT [15284] ERROR:  there is no unique constraint matching given keys for referenced table "savings_account"
2023-01-12 18:21:27.100 GMT [15284] STATEMENT:  CREATE TABLE IF NOT EXISTS savings_statement (
	    id SERIAL PRIMARY KEY,
	    starting_date DATE,
	    end_date DATE,
	    amount INT,
	    account_number INT REFERENCES savings_account(account_number)
	);
2023-01-12 18:21:27.109 GMT [15284] ERROR:  there is no unique constraint matching given keys for referenced table "credit_account"
2023-01-12 18:21:27.109 GMT [15284] STATEMENT:  CREATE TABLE IF NOT EXISTS credit_account_application (
	    id SERIAL PRIMARY KEY,
	    application_status VARCHAR,
	    account_number INT REFERENCES credit_account(account_number)
	);
2023-01-12 18:21:27.113 GMT [15284] ERROR:  there is no unique constraint matching given keys for referenced table "credit_account"
2023-01-12 18:21:27.113 GMT [15284] STATEMENT:  CREATE TABLE IF NOT EXISTS credit_statement (
	    id SERIAL PRIMARY KEY,
	    starting_date DATE,
	    end_date DATE,
	    amount INT,
	    minimum_payment INT,
	    minimum_payment_due_date DATE,
	    account_number INT REFERENCES credit_account(account_number)
	);
2023-01-12 18:21:27.120 GMT [15284] ERROR:  there is no unique constraint matching given keys for referenced table "debit_account"
2023-01-12 18:21:27.120 GMT [15284] STATEMENT:  CREATE TABLE IF NOT EXISTS debit_statement (
	    id SERIAL PRIMARY KEY,
	    starting_date DATE,
	    end_date DATE,
	    amount INT,
	    account_number INT REFERENCES debit_account(account_number)
	);
2023-01-12 18:21:27.123 GMT [15284] ERROR:  there is no unique constraint matching given keys for referenced table "debit_account"
2023-01-12 18:21:27.123 GMT [15284] STATEMENT:  CREATE TABLE IF NOT EXISTS debit_overdraft (
	    id SERIAL PRIMARY KEY,
	    overdraft_usage NUMERIC(15, 2),
	    overdraft_limit NUMERIC(15, 2),
	    interest_rate NUMERIC(5,2),
	    account_number INT REFERENCES debit_account(account_number)
	);
2023-01-12 18:21:27.127 GMT [15284] ERROR:  relation "savings_statement" does not exist
2023-01-12 18:21:27.127 GMT [15284] STATEMENT:  CREATE TABLE IF NOT EXISTS transaction (
	    id SERIAL PRIMARY KEY,
	    origin_account_id INT,
	    dest_account_id INT,
	    amount NUMERIC(15, 2),
	    date DATE,
	    savings_statement_id INT REFERENCES savings_statement(id),
	    credit_statement_id INT REFERENCES credit_statement(id),
	    debit_statement_id INT REFERENCES debit_statement(id)
	);
2023-01-12 18:28:57.894 GMT [15255] LOG:  received fast shutdown request
2023-01-12 18:28:57.895 GMT [15255] LOG:  aborting any active transactions
2023-01-12 18:28:57.900 GMT [15255] LOG:  background worker "logical replication launcher" (PID 15262) exited with exit code 1
2023-01-12 18:28:57.901 GMT [15257] LOG:  shutting down
2023-01-12 18:28:57.916 GMT [15255] LOG:  database system is shut down
2023-01-12 18:28:59.323 GMT [16652] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-12 18:28:59.323 GMT [16652] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-12 18:28:59.325 GMT [16652] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-12 18:28:59.331 GMT [16653] LOG:  database system was shut down at 2023-01-12 18:28:59 GMT
2023-01-12 18:28:59.339 GMT [16652] LOG:  database system is ready to accept connections
2023-01-12 18:29:00.015 GMT [16684] ERROR:  column "savings_account_number" referenced in foreign key constraint does not exist
2023-01-12 18:29:00.015 GMT [16684] STATEMENT:  CREATE TABLE IF NOT EXISTS savings_statement (
	    id SERIAL PRIMARY KEY,
	    starting_date DATE,
	    end_date DATE,
	    amount INT,
	    account_number INT REFERENCES savings_account(savings_account_number)
	);
2023-01-12 18:29:00.022 GMT [16684] ERROR:  there is no unique constraint matching given keys for referenced table "credit_account"
2023-01-12 18:29:00.022 GMT [16684] STATEMENT:  CREATE TABLE IF NOT EXISTS credit_account_application (
	    id SERIAL PRIMARY KEY,
	    application_status VARCHAR,
	    account_number INT REFERENCES credit_account(account_number)
	);
2023-01-12 18:29:00.025 GMT [16684] ERROR:  there is no unique constraint matching given keys for referenced table "credit_account"
2023-01-12 18:29:00.025 GMT [16684] STATEMENT:  CREATE TABLE IF NOT EXISTS credit_statement (
	    id SERIAL PRIMARY KEY,
	    starting_date DATE,
	    end_date DATE,
	    amount INT,
	    minimum_payment INT,
	    minimum_payment_due_date DATE,
	    account_number INT REFERENCES credit_account(account_number)
	);
2023-01-12 18:29:00.029 GMT [16684] ERROR:  there is no unique constraint matching given keys for referenced table "debit_account"
2023-01-12 18:29:00.029 GMT [16684] STATEMENT:  CREATE TABLE IF NOT EXISTS debit_statement (
	    id SERIAL PRIMARY KEY,
	    starting_date DATE,
	    end_date DATE,
	    amount INT,
	    account_number INT REFERENCES debit_account(account_number)
	);
2023-01-12 18:29:00.032 GMT [16684] ERROR:  there is no unique constraint matching given keys for referenced table "debit_account"
2023-01-12 18:29:00.032 GMT [16684] STATEMENT:  CREATE TABLE IF NOT EXISTS debit_overdraft (
	    id SERIAL PRIMARY KEY,
	    overdraft_usage NUMERIC(15, 2),
	    overdraft_limit NUMERIC(15, 2),
	    interest_rate NUMERIC(5,2),
	    account_number INT REFERENCES debit_account(account_number)
	);
2023-01-12 18:29:00.037 GMT [16684] ERROR:  relation "savings_statement" does not exist
2023-01-12 18:29:00.037 GMT [16684] STATEMENT:  CREATE TABLE IF NOT EXISTS transaction (
	    id SERIAL PRIMARY KEY,
	    origin_account_id INT,
	    dest_account_id INT,
	    amount NUMERIC(15, 2),
	    date DATE,
	    savings_statement_id INT REFERENCES savings_statement(id),
	    credit_statement_id INT REFERENCES credit_statement(id),
	    debit_statement_id INT REFERENCES debit_statement(id)
	);
2023-01-12 18:33:26.875 GMT [16652] LOG:  received fast shutdown request
2023-01-12 18:33:26.877 GMT [16652] LOG:  aborting any active transactions
2023-01-12 18:33:26.883 GMT [16652] LOG:  background worker "logical replication launcher" (PID 16659) exited with exit code 1
2023-01-12 18:33:26.885 GMT [16654] LOG:  shutting down
2023-01-12 18:33:26.925 GMT [16652] LOG:  database system is shut down
2023-01-12 18:33:28.126 GMT [17473] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-12 18:33:28.127 GMT [17473] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-12 18:33:28.128 GMT [17473] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-12 18:33:28.133 GMT [17474] LOG:  database system was shut down at 2023-01-12 18:33:27 GMT
2023-01-12 18:33:28.138 GMT [17473] LOG:  database system is ready to accept connections
2023-01-12 18:33:28.788 GMT [17499] ERROR:  column "savings_account_number" referenced in foreign key constraint does not exist
2023-01-12 18:33:28.788 GMT [17499] STATEMENT:  CREATE TABLE IF NOT EXISTS savings_statement (
	    id SERIAL PRIMARY KEY,
	    starting_date DATE,
	    end_date DATE,
	    amount INT,
	    account_number INT REFERENCES savings_account(savings_account_number)
	);
2023-01-12 18:33:28.794 GMT [17499] ERROR:  there is no unique constraint matching given keys for referenced table "credit_account"
2023-01-12 18:33:28.794 GMT [17499] STATEMENT:  CREATE TABLE IF NOT EXISTS credit_account_application (
	    id SERIAL PRIMARY KEY,
	    application_status VARCHAR,
	    account_number INT REFERENCES credit_account(account_number)
	);
2023-01-12 18:33:28.801 GMT [17499] ERROR:  there is no unique constraint matching given keys for referenced table "credit_account"
2023-01-12 18:33:28.801 GMT [17499] STATEMENT:  CREATE TABLE IF NOT EXISTS credit_statement (
	    id SERIAL PRIMARY KEY,
	    starting_date DATE,
	    end_date DATE,
	    amount INT,
	    minimum_payment INT,
	    minimum_payment_due_date DATE,
	    account_number INT REFERENCES credit_account(account_number)
	);
2023-01-12 18:33:28.805 GMT [17499] ERROR:  there is no unique constraint matching given keys for referenced table "debit_account"
2023-01-12 18:33:28.805 GMT [17499] STATEMENT:  CREATE TABLE IF NOT EXISTS debit_statement (
	    id SERIAL PRIMARY KEY,
	    starting_date DATE,
	    end_date DATE,
	    amount INT,
	    account_number INT REFERENCES debit_account(account_number)
	);
2023-01-12 18:33:28.809 GMT [17499] ERROR:  there is no unique constraint matching given keys for referenced table "debit_account"
2023-01-12 18:33:28.809 GMT [17499] STATEMENT:  CREATE TABLE IF NOT EXISTS debit_overdraft (
	    id SERIAL PRIMARY KEY,
	    overdraft_usage NUMERIC(15, 2),
	    overdraft_limit NUMERIC(15, 2),
	    interest_rate NUMERIC(5,2),
	    account_number INT REFERENCES debit_account(account_number)
	);
2023-01-12 18:33:28.814 GMT [17499] ERROR:  relation "savings_statement" does not exist
2023-01-12 18:33:28.814 GMT [17499] STATEMENT:  CREATE TABLE IF NOT EXISTS transaction (
	    id SERIAL PRIMARY KEY,
	    origin_account_id INT,
	    dest_account_id INT,
	    amount NUMERIC(15, 2),
	    date DATE,
	    savings_statement_id INT REFERENCES savings_statement(id),
	    credit_statement_id INT REFERENCES credit_statement(id),
	    debit_statement_id INT REFERENCES debit_statement(id)
	);
2023-01-12 18:33:46.093 GMT [17473] LOG:  received fast shutdown request
2023-01-12 18:33:46.096 GMT [17473] LOG:  aborting any active transactions
2023-01-12 18:33:46.101 GMT [17473] LOG:  background worker "logical replication launcher" (PID 17480) exited with exit code 1
2023-01-12 18:33:46.101 GMT [17475] LOG:  shutting down
2023-01-12 18:33:46.147 GMT [17473] LOG:  database system is shut down
2023-01-12 18:33:47.204 GMT [17633] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-12 18:33:47.204 GMT [17633] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-12 18:33:47.206 GMT [17633] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-12 18:33:47.210 GMT [17634] LOG:  database system was shut down at 2023-01-12 18:33:46 GMT
2023-01-12 18:33:47.216 GMT [17633] LOG:  database system is ready to accept connections
2023-01-12 18:33:47.842 GMT [17659] ERROR:  there is no unique constraint matching given keys for referenced table "credit_account"
2023-01-12 18:33:47.842 GMT [17659] STATEMENT:  CREATE TABLE IF NOT EXISTS credit_account_application (
	    id SERIAL PRIMARY KEY,
	    application_status VARCHAR,
	    account_number INT REFERENCES credit_account(account_number)
	);
2023-01-12 18:33:47.845 GMT [17659] ERROR:  there is no unique constraint matching given keys for referenced table "credit_account"
2023-01-12 18:33:47.845 GMT [17659] STATEMENT:  CREATE TABLE IF NOT EXISTS credit_statement (
	    id SERIAL PRIMARY KEY,
	    starting_date DATE,
	    end_date DATE,
	    amount INT,
	    minimum_payment INT,
	    minimum_payment_due_date DATE,
	    account_number INT REFERENCES credit_account(account_number)
	);
2023-01-12 18:33:47.849 GMT [17659] ERROR:  there is no unique constraint matching given keys for referenced table "debit_account"
2023-01-12 18:33:47.849 GMT [17659] STATEMENT:  CREATE TABLE IF NOT EXISTS debit_statement (
	    id SERIAL PRIMARY KEY,
	    starting_date DATE,
	    end_date DATE,
	    amount INT,
	    account_number INT REFERENCES debit_account(account_number)
	);
2023-01-12 18:33:47.854 GMT [17659] ERROR:  there is no unique constraint matching given keys for referenced table "debit_account"
2023-01-12 18:33:47.854 GMT [17659] STATEMENT:  CREATE TABLE IF NOT EXISTS debit_overdraft (
	    id SERIAL PRIMARY KEY,
	    overdraft_usage NUMERIC(15, 2),
	    overdraft_limit NUMERIC(15, 2),
	    interest_rate NUMERIC(5,2),
	    account_number INT REFERENCES debit_account(account_number)
	);
2023-01-12 18:33:47.857 GMT [17659] ERROR:  relation "credit_statement" does not exist
2023-01-12 18:33:47.857 GMT [17659] STATEMENT:  CREATE TABLE IF NOT EXISTS transaction (
	    id SERIAL PRIMARY KEY,
	    origin_account_id INT,
	    dest_account_id INT,
	    amount NUMERIC(15, 2),
	    date DATE,
	    savings_statement_id INT REFERENCES savings_statement(id),
	    credit_statement_id INT REFERENCES credit_statement(id),
	    debit_statement_id INT REFERENCES debit_statement(id)
	);
2023-01-12 18:34:15.858 GMT [17633] LOG:  received fast shutdown request
2023-01-12 18:34:15.861 GMT [17633] LOG:  aborting any active transactions
2023-01-12 18:34:15.864 GMT [17633] LOG:  background worker "logical replication launcher" (PID 17640) exited with exit code 1
2023-01-12 18:34:15.867 GMT [17635] LOG:  shutting down
2023-01-12 18:34:15.909 GMT [17633] LOG:  database system is shut down
2023-01-12 18:34:17.033 GMT [17834] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-12 18:34:17.034 GMT [17834] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-12 18:34:17.035 GMT [17834] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-12 18:34:17.040 GMT [17835] LOG:  database system was shut down at 2023-01-12 18:34:16 GMT
2023-01-12 18:34:17.046 GMT [17834] LOG:  database system is ready to accept connections
2023-01-12 18:34:17.663 GMT [17860] ERROR:  syntax error at or near "(" at character 165
2023-01-12 18:34:17.663 GMT [17860] STATEMENT:  CREATE TABLE IF NOT EXISTS credit_account (
	    outstanding_balance NUMERIC(15, 2),
	    credit_limit NUMERIC(15, 2),
	    interest_rate NUMERIC(5,2)
	    PRIMARY KEY (account_number)
	) INHERITS (account);
2023-01-12 18:34:17.688 GMT [17860] ERROR:  relation "credit_account" does not exist
2023-01-12 18:34:17.688 GMT [17860] STATEMENT:  CREATE TABLE IF NOT EXISTS credit_account_application (
	    id SERIAL PRIMARY KEY,
	    application_status VARCHAR,
	    account_number INT REFERENCES credit_account(account_number)
	);
2023-01-12 18:34:17.692 GMT [17860] ERROR:  relation "credit_account" does not exist
2023-01-12 18:34:17.692 GMT [17860] STATEMENT:  CREATE TABLE IF NOT EXISTS credit_statement (
	    id SERIAL PRIMARY KEY,
	    starting_date DATE,
	    end_date DATE,
	    amount INT,
	    minimum_payment INT,
	    minimum_payment_due_date DATE,
	    account_number INT REFERENCES credit_account(account_number)
	);
2023-01-12 18:34:17.707 GMT [17860] ERROR:  relation "credit_statement" does not exist
2023-01-12 18:34:17.707 GMT [17860] STATEMENT:  CREATE TABLE IF NOT EXISTS transaction (
	    id SERIAL PRIMARY KEY,
	    origin_account_id INT,
	    dest_account_id INT,
	    amount NUMERIC(15, 2),
	    date DATE,
	    savings_statement_id INT REFERENCES savings_statement(id),
	    credit_statement_id INT REFERENCES credit_statement(id),
	    debit_statement_id INT REFERENCES debit_statement(id)
	);
2023-01-12 18:35:34.055 GMT [17834] LOG:  received fast shutdown request
2023-01-12 18:35:34.057 GMT [17834] LOG:  aborting any active transactions
2023-01-12 18:35:34.061 GMT [17834] LOG:  background worker "logical replication launcher" (PID 17841) exited with exit code 1
2023-01-12 18:35:34.061 GMT [17836] LOG:  shutting down
2023-01-12 18:35:34.103 GMT [17834] LOG:  database system is shut down
2023-01-12 18:35:35.239 GMT [18151] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-12 18:35:35.239 GMT [18151] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-12 18:35:35.240 GMT [18151] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-12 18:35:35.251 GMT [18155] LOG:  database system was shut down at 2023-01-12 18:35:35 GMT
2023-01-12 18:35:35.257 GMT [18151] LOG:  database system is ready to accept connections
2023-01-12 18:36:32.280 GMT [18151] LOG:  received fast shutdown request
2023-01-12 18:36:32.281 GMT [18151] LOG:  aborting any active transactions
2023-01-12 18:36:32.287 GMT [18151] LOG:  background worker "logical replication launcher" (PID 18161) exited with exit code 1
2023-01-12 18:36:32.287 GMT [18156] LOG:  shutting down
2023-01-12 18:36:32.322 GMT [18151] LOG:  database system is shut down
2023-01-12 18:36:33.392 GMT [18463] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-12 18:36:33.392 GMT [18463] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-12 18:36:33.394 GMT [18463] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-12 18:36:33.397 GMT [18464] LOG:  database system was shut down at 2023-01-12 18:36:33 GMT
2023-01-12 18:36:33.401 GMT [18463] LOG:  database system is ready to accept connections
2023-01-12 18:36:55.656 GMT [18463] LOG:  received fast shutdown request
2023-01-12 18:36:55.657 GMT [18463] LOG:  aborting any active transactions
2023-01-12 18:36:55.662 GMT [18463] LOG:  background worker "logical replication launcher" (PID 18470) exited with exit code 1
2023-01-12 18:36:55.663 GMT [18465] LOG:  shutting down
2023-01-12 18:36:55.701 GMT [18463] LOG:  database system is shut down
2023-01-12 18:36:56.767 GMT [18634] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-12 18:36:56.767 GMT [18634] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-12 18:36:56.768 GMT [18634] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-12 18:36:56.773 GMT [18635] LOG:  database system was shut down at 2023-01-12 18:36:56 GMT
2023-01-12 18:36:56.778 GMT [18634] LOG:  database system is ready to accept connections
2023-01-12 18:42:08.442 GMT [18634] LOG:  received fast shutdown request
2023-01-12 18:42:08.445 GMT [18634] LOG:  aborting any active transactions
2023-01-12 18:42:08.453 GMT [18634] LOG:  background worker "logical replication launcher" (PID 18641) exited with exit code 1
2023-01-12 18:42:08.473 GMT [18636] LOG:  shutting down
2023-01-12 18:42:08.483 GMT [18634] LOG:  database system is shut down
2023-01-12 18:42:09.662 GMT [19597] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-12 18:42:09.663 GMT [19597] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-12 18:42:09.664 GMT [19597] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-12 18:42:09.668 GMT [19598] LOG:  database system was shut down at 2023-01-12 18:42:09 GMT
2023-01-12 18:42:09.673 GMT [19597] LOG:  database system is ready to accept connections
2023-01-12 18:42:39.151 GMT [19597] LOG:  received fast shutdown request
2023-01-12 18:42:39.152 GMT [19597] LOG:  aborting any active transactions
2023-01-12 18:42:39.154 GMT [19597] LOG:  background worker "logical replication launcher" (PID 19604) exited with exit code 1
2023-01-12 18:42:39.158 GMT [19599] LOG:  shutting down
2023-01-12 18:42:39.194 GMT [19597] LOG:  database system is shut down
2023-01-12 18:42:40.292 GMT [19793] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-12 18:42:40.292 GMT [19793] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-12 18:42:40.294 GMT [19793] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-12 18:42:40.299 GMT [19794] LOG:  database system was shut down at 2023-01-12 18:42:40 GMT
2023-01-12 18:42:40.305 GMT [19793] LOG:  database system is ready to accept connections
2023-01-12 18:43:40.355 GMT [19793] LOG:  received fast shutdown request
2023-01-12 18:43:40.356 GMT [19793] LOG:  aborting any active transactions
2023-01-12 18:43:40.361 GMT [19793] LOG:  background worker "logical replication launcher" (PID 19800) exited with exit code 1
2023-01-12 18:43:40.361 GMT [19795] LOG:  shutting down
2023-01-12 18:43:40.398 GMT [19793] LOG:  database system is shut down
2023-01-12 18:43:41.524 GMT [20101] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-12 18:43:41.525 GMT [20101] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-12 18:43:41.526 GMT [20101] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-12 18:43:41.531 GMT [20102] LOG:  database system was shut down at 2023-01-12 18:43:41 GMT
2023-01-12 18:43:41.537 GMT [20101] LOG:  database system is ready to accept connections
2023-01-12 20:31:24.645 GMT [20101] LOG:  received fast shutdown request
2023-01-12 20:31:24.647 GMT [20101] LOG:  aborting any active transactions
2023-01-12 20:31:24.651 GMT [20101] LOG:  background worker "logical replication launcher" (PID 20108) exited with exit code 1
2023-01-12 20:31:24.656 GMT [20103] LOG:  shutting down
2023-01-12 20:31:24.671 GMT [20101] LOG:  database system is shut down
2023-01-12 20:31:28.964 GMT [37044] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-12 20:31:28.964 GMT [37044] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-12 20:31:28.966 GMT [37044] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-12 20:31:28.970 GMT [37045] LOG:  database system was shut down at 2023-01-12 20:31:28 GMT
2023-01-12 20:31:28.977 GMT [37044] LOG:  database system is ready to accept connections
2023-01-12 20:31:29.724 GMT [37073] ERROR:  new row for relation "savings_account" violates check constraint "account_number_8_digits"
2023-01-12 20:31:29.724 GMT [37073] DETAIL:  Failing row contains (1, null, 1000.00, 0.50).
2023-01-12 20:31:29.724 GMT [37073] STATEMENT:  INSERT INTO savings_account (account_number, current_balance, interest_rate) VALUES (1, 1000, 0.5);
2023-01-13 07:55:22.982 GMT [37044] LOG:  received fast shutdown request
2023-01-13 07:55:22.989 GMT [37044] LOG:  aborting any active transactions
2023-01-13 07:55:23.007 GMT [37044] LOG:  background worker "logical replication launcher" (PID 37051) exited with exit code 1
2023-01-13 07:55:23.010 GMT [37046] LOG:  shutting down
2023-01-13 07:55:23.082 GMT [37044] LOG:  database system is shut down
2023-01-13 07:55:42.473 GMT [60160] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-13 07:55:42.474 GMT [60160] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-13 07:55:42.476 GMT [60160] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-13 07:55:42.481 GMT [60161] LOG:  database system was shut down at 2023-01-13 07:55:42 GMT
2023-01-13 07:55:42.489 GMT [60160] LOG:  database system is ready to accept connections
2023-01-13 07:55:43.465 GMT [60186] ERROR:  syntax error at or near "DECLARE" at character 4670
2023-01-13 07:55:43.465 GMT [60186] STATEMENT:  CREATE OR REPLACE FUNCTION get_next_account_number()
	RETURNS INT AS $$
	DECLARE next_account_number INT;
	BEGIN
	    SELECT MAX(account_number) INTO next_account_number FROM debit_account;
	    IF next_account_number IS NULL THEN
	        next_account_number = 10000000;
	    ELSE
	        next_account_number = next_account_number + 1;
	    END IF;
	    RETURN next_account_number;
	END;
	
	CREATE SCHEMA IF NOT EXISTS staff;
	SET search_path TO public, staff, client;
	
	CREATE OR REPLACE VIEW 
	
	CREATE SCHEMA IF NOT EXISTS client;
	SET search_path TO public, client;
	
	
	CREATE OR REPLACE VIEW client.accounts AS
	    SELECT account_number, account_id FROM account;
	
	CREATE OR REPLACE VIEW client.debit_accounts AS
	    SELECT account.account_id, account.account_number, debit_account.current_balance, debit_account.interest_rate, debit_overdraft.overdraft_limit, debit_overdraft.overdraft_usage, debit_overdraft.interest_rate
	    FROM account
	    INNER JOIN debit_account ON account.account_number = debit_account.account_number
	    INNER JOIN debit_overdraft ON account.account_number = debit_overdraft.account_number;
	
	CREATE OR REPLACE VIEW client.debit_accounts_statements AS
	    SELECT debit_accounts.account_id, debit_accounts.account_number, debit_statement.id, debit_statement.starting_date, debit_statement.end_date, debit_statement.amount
	    FROM debit_accounts
	    INNER JOIN debit_statement ON debit_accounts.account_number = debit_statement.account_number;
	
	CREATE OR REPLACE VIEW client.debit_accounts_statement AS
	    SELECT debit_accounts_statements.account_id, debit_accounts_statements.account_number, debit_accounts_statements.id, debit_accounts_statements.starting_date, debit_accounts_statements.end_date, debit_accounts_statements.amount, transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date
	    FROM debit_accounts_statements
	    INNER JOIN transaction ON debit_accounts_statements.id = transaction.debit_statement_id;
	
	CREATE OR REPLACE VIEW client.credit_accounts AS
	    SELECT account.account_id, account.account_number, credit_account.outstanding_balance, credit_account.credit_limit, credit_account.interest_rate, credit_account_application.application_status
	    FROM account
	    INNER JOIN credit_account ON account.account_number = credit_account.account_number
	    INNER JOIN credit_account_application ON account.account_number = credit_account_application.account_number;
	
	CREATE OR REPLACE VIEW client.credit_accounts_statements AS
	    SELECT credit_accounts.account_id, credit_accounts.account_number, credit_statement.id, credit_statement.starting_date, credit_statement.end_date, credit_statement.amount, credit_statement.minimum_payment, credit_statement.minimum_payment_due_date
	    FROM credit_accounts
	    INNER JOIN credit_statement ON credit_accounts.account_number = credit_statement.account_number;
	
	CREATE OR REPLACE VIEW client.credit_accounts_statement AS
	    SELECT credit_accounts_statements.account_id, credit_accounts_statements.account_number, credit_accounts_statements.id, credit_accounts_statements.starting_date, credit_accounts_statements.end_date, credit_accounts_statements.amount, credit_accounts_statements.minimum_payment, credit_accounts_statements.minimum_payment_due_date, transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date
	    FROM credit_accounts_statements
	    INNER JOIN transaction ON credit_accounts_statements.id = transaction.credit_statement_id;
	
	CREATE OR REPLACE VIEW client.savings_accounts AS
	    SELECT account.account_id, account.account_number, savings_account.current_balance, savings_account.interest_rate
	    FROM account
	    INNER JOIN savings_account ON account.account_number = savings_account.account_number;
	
	CREATE OR REPLACE VIEW client.savings_accounts_statements AS
	    SELECT savings_accounts.account_id, savings_accounts.account_number, savings_statement.id, savings_statement.starting_date, savings_statement.end_date, savings_statement.amount
	    FROM savings_accounts
	    INNER JOIN savings_statement ON savings_accounts.account_number = savings_statement.account_number;
	
	CREATE OR REPLACE VIEW client.loans AS
	    SELECT loan.account_id, loan.id, loan.amount, loan.interest_rate, loan.term, loan_application.application_status
	    FROM loan
	    INNER JOIN loan_application ON loan.id = loan_application.account_id;
	
	CREATE OR REPLACE FUNCTION client.update_personal_information(first_name TEXT, last_name TEXT, date_of_birth DATE, phone_number TEXT, email_address TEXT, address_street TEXT, address_city TEXT, address_county TEXT, address_postcode TEXT, account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-13 07:55:43.468 GMT [60186] ERROR:  syntax error at or near "UPDATE" at character 11
2023-01-13 07:55:43.468 GMT [60186] STATEMENT:  BEGIN
	    UPDATE customer SET first_name = first_name, last_name = last_name, date_of_birth = date_of_birth, phone_number = phone_number, email_address = email_address, address_street = address_street, address_city = address_city, address_county = address_county, address_postcode = address_postcode
	    WHERE id = (SELECT customer_id FROM online_account WHERE id = account_id);
2023-01-13 07:55:43.471 GMT [60186] ERROR:  column "action" of relation "management_log" does not exist at character 41
2023-01-13 07:55:43.471 GMT [60186] STATEMENT:  INSERT INTO management_log (account_id, action, date) VALUES (account_id, 'Updated personal information', CURRENT_DATE);
2023-01-13 07:55:43.473 GMT [60186] ERROR:  syntax error at or near "passed" at character 1
2023-01-13 07:55:43.473 GMT [60186] STATEMENT:  passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-13 07:55:43.474 GMT [60186] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 07:55:43.474 GMT [60186] STATEMENT:  RETURN passed;
2023-01-13 07:55:43.475 GMT [60186] WARNING:  there is no transaction in progress
2023-01-13 07:55:43.478 GMT [60186] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.update_password(account_identifier INT, new_password TEXT)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-13 07:55:43.478 GMT [60186] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.update_password(account_identifier INT, new_password TEXT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-13 07:55:43.481 GMT [60186] ERROR:  syntax error at or near "UPDATE" at character 11
2023-01-13 07:55:43.481 GMT [60186] STATEMENT:  BEGIN
	    UPDATE user_login SET password = md5(new_password)
	    WHERE account_id = account_identifier;
2023-01-13 07:55:43.482 GMT [60186] ERROR:  column "action" of relation "management_log" does not exist at character 41
2023-01-13 07:55:43.482 GMT [60186] STATEMENT:  INSERT INTO management_log (account_id, action, date) VALUES (account_identifier, 'Updated password', CURRENT_DATE);
2023-01-13 07:55:43.483 GMT [60186] ERROR:  syntax error at or near "passed" at character 1
2023-01-13 07:55:43.483 GMT [60186] STATEMENT:  passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-13 07:55:43.483 GMT [60186] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 07:55:43.483 GMT [60186] STATEMENT:  RETURN passed;
2023-01-13 07:55:43.484 GMT [60186] WARNING:  there is no transaction in progress
2023-01-13 07:55:43.484 GMT [60186] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.update_email(account_identifier INT, new_email TEXT)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-13 07:55:43.484 GMT [60186] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.update_email(account_identifier INT, new_email TEXT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-13 07:55:43.484 GMT [60186] ERROR:  syntax error at or near "UPDATE" at character 11
2023-01-13 07:55:43.484 GMT [60186] STATEMENT:  BEGIN
	    UPDATE user_login SET email = new_email
	    WHERE account_id = account_identifier;
2023-01-13 07:55:43.484 GMT [60186] ERROR:  column "action" of relation "management_log" does not exist at character 41
2023-01-13 07:55:43.484 GMT [60186] STATEMENT:  INSERT INTO management_log (account_id, action, date) VALUES (account_identifier, 'Updated email', CURRENT_DATE);
2023-01-13 07:55:43.485 GMT [60186] ERROR:  syntax error at or near "passed" at character 1
2023-01-13 07:55:43.485 GMT [60186] STATEMENT:  passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-13 07:55:43.485 GMT [60186] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 07:55:43.485 GMT [60186] STATEMENT:  RETURN passed;
2023-01-13 07:55:43.485 GMT [60186] WARNING:  there is no transaction in progress
2023-01-13 07:55:43.486 GMT [60186] ERROR:  schema "client" does not exist
2023-01-13 07:55:43.486 GMT [60186] STATEMENT:  CREATE OR REPLACE FUNCTION client.open_debit_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE debit_account_number INT;
	DECLARE next_account_number INT;
	BEGIN
	
	    SELECT get_next_account_number() INTO next_account_number;
	
	    INSERT INTO debit_account (account_number, account_id, current_balance, interest_rate) VALUES (next_account_number ,account_id, 0, 0.01) RETURNING id INTO debit_account_number;
	    INSERT INTO debit_statement (starting_date, end_date, amount, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, debit_account_id);
	    INSERT INTO debit_overdraft (overdraft_usage, overdraft_limit, interest_rate, account_id) VALUES (0, 0, 0.01, debit_account_id);
	    INSERT INTO management_log (account_id, action, date) VALUES (account_id, 'Opened debit account', CURRENT_DATE);
	    passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
	    RETURN passed;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 07:55:43.486 GMT [60186] ERROR:  schema "client" does not exist
2023-01-13 07:55:43.486 GMT [60186] STATEMENT:  CREATE OR REPLACE FUNCTION client.open_credit_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE credit_account_number INT;
	DECLARE next_account_number INT;
	BEGIN
	
	    SELECT get_next_account_number() INTO next_account_number;
	
	    INSERT INTO credit_account (account_number, outstanding_balance, credit_limit, interest_rate, account_id) VALUES (next_account_number ,0, 0, 24.9, account_id) RETURNING id INTO credit_account_id;
	    INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_id) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_id);
	    INSERT INTO credit_account_application (credit_account_id, application_status) VALUES (credit_account_id, 'PENDING');
	    INSERT INTO management_log (account_id, action, date) VALUES (account_id, 'Opened credit account', CURRENT_DATE);
	END
	$$ LANGUAGE plpgsql;
2023-01-13 07:55:43.487 GMT [60186] ERROR:  schema "client" does not exist
2023-01-13 07:55:43.487 GMT [60186] STATEMENT:  CREATE OR REPLACE FUNCTION client.open_savings_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE savings_account_id INT;
	DECLARE next_account_number INT;
	BEGIN
	
	    SELECT get_next_account_number() INTO next_account_number;
	
	    INSERT INTO savings_account (account_number, account_id, current_balance, interest_rate) VALUES (next_account_number ,account_id, 0, 0.01) RETURNING id INTO savings_account_id;
	    INSERT INTO savings_statement (starting_date, end_date, amount, account_id) VALUES (CURRENT_DATE, CURRENT_DATE, 0, savings_account_id);
	    INSERT INTO management_log (account_id, action, date) VALUES (account_id, 'Opened savings account', CURRENT_DATE);
	    INSERT INTO external_account (account_id, external_account_number) VALUES (savings_account_id, '12345678');
	    passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
	    RETURN passed;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 07:55:43.488 GMT [60186] ERROR:  schema "client" does not exist
2023-01-13 07:55:43.488 GMT [60186] STATEMENT:  CREATE OR REPLACE FUNCTION client.open_loan(account_id INT, loan_amount INT, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE loan_id INT;
	BEGIN
	    INSERT INTO loan (account_id, loan_amount, loan_end_date, loan_type, loan_interest_rate) VALUES (account_id, loan_amount, loan_end_date, loan_type, loan_interest_rate) RETURNING id INTO loan_id;
	    INSERT INTO loan_statement (starting_date, end_date, amount, account_id) VALUES (CURRENT_DATE, CURRENT_DATE, 0, loan_id);
	    INSERT INTO loan_application (loan_id, application_status) VALUES (loan_id, 'PENDING');
	    INSERT INTO management_log (account_id, action, date) VALUES (account_id, 'Opened loan', CURRENT_DATE);
	    passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
	    RETURN passed;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 07:55:43.488 GMT [60186] ERROR:  syntax error at or near "INSERT" at character 657
2023-01-13 07:55:43.488 GMT [60186] STATEMENT:  CREATE OR REPLACE FUNCTION client.get_account_type(account_number INT)
	RETURNS TEXT AS $$
	DECLARE account_type TEXT;
	BEGIN
	    SELECT CASE WHEN EXISTS (SELECT * FROM debit_account WHERE account_number = account_number) THEN 'DEBIT'
	                WHEN EXISTS (SELECT * FROM credit_account WHERE account_number = account_number) THEN 'CREDIT'
	                WHEN EXISTS (SELECT * FROM savings_account WHERE account_number = account_number) THEN 'SAVINGS'
	                ELSE 'UNKNOWN' END INTO account_type;
	    RETURN account_type;
	END;
	
	CREATE OR REPLACE FUNCTION client.view_accounts(account_id INT)
	RETURNS TABLE (account_number INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, action, date) VALUES (account_id, 'Viewed accounts', CURRENT_DATE);
	    RETURN QUERY
	        SELECT account.*, COALESCE(debit_accounts.current_balance, credit_accounts.outstanding_balance, savings_accounts.current_balance, loans.loan_amount) AS balance,
	        COALESCE(debit_accounts.interest_rate, credit_accounts.interest_rate, savings_accounts.interest_rate, loans.loan_interest_rate) AS interest_rate,
	        get_account_type(account.account_number) AS account_type
	END;
2023-01-13 07:55:43.489 GMT [60186] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, overdraft_limit NUMERIC, overdraft_usage NUMERIC, interest_rate, external_account_number INT) AS $$" at character 1
2023-01-13 07:55:43.489 GMT [60186] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, overdraft_limit NUMERIC, overdraft_usage NUMERIC, interest_rate, external_account_number INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, action, date) VALUES (account_id, 'Viewed debit accounts', CURRENT_DATE);
2023-01-13 07:55:43.489 GMT [60186] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 07:55:43.489 GMT [60186] STATEMENT:  RETURN QUERY
	        SELECT * FROM client.debit_accounts WHERE account_id = account_id;
2023-01-13 07:55:43.490 GMT [60186] WARNING:  there is no transaction in progress
2023-01-13 07:55:43.490 GMT [60186] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_accounts(account_id INT)
	RETURNS TABLE (id INT, outstanding_balance NUMERIC, credit_limit NUMERIC, interest_rate NUMERIC, application_status TEXT) AS $$" at character 1
2023-01-13 07:55:43.490 GMT [60186] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_accounts(account_id INT)
	RETURNS TABLE (id INT, outstanding_balance NUMERIC, credit_limit NUMERIC, interest_rate NUMERIC, application_status TEXT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, action, date) VALUES (account_id, 'Viewed credit accounts', CURRENT_DATE);
2023-01-13 07:55:43.490 GMT [60186] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 07:55:43.490 GMT [60186] STATEMENT:  RETURN QUERY
	        SELECT * FROM client.credit_accounts WHERE account_id = account_id;
2023-01-13 07:55:43.490 GMT [60186] WARNING:  there is no transaction in progress
2023-01-13 07:55:43.490 GMT [60186] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_savings_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, external_account_number INT) AS $$" at character 1
2023-01-13 07:55:43.490 GMT [60186] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_savings_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, external_account_number INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, action, date) VALUES (account_id, 'Viewed savings accounts', CURRENT_DATE);
2023-01-13 07:55:43.491 GMT [60186] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 07:55:43.491 GMT [60186] STATEMENT:  RETURN QUERY
	        SELECT * FROM client.savings_accounts WHERE account_id = account_id;
2023-01-13 07:55:43.491 GMT [60186] WARNING:  there is no transaction in progress
2023-01-13 07:55:43.492 GMT [60186] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_loans(account_id INT)
	RETURNS TABLE (id INT, loan_amount NUMERIC, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC, application_status TEXT) AS $$" at character 1
2023-01-13 07:55:43.492 GMT [60186] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_loans(account_id INT)
	RETURNS TABLE (id INT, loan_amount NUMERIC, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC, application_status TEXT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, action, date) VALUES (account_id, 'Viewed loans', CURRENT_DATE);
2023-01-13 07:55:43.492 GMT [60186] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 07:55:43.492 GMT [60186] STATEMENT:  RETURN QUERY
	        SELECT * FROM client.loans WHERE account_id = account_id;
2023-01-13 07:55:43.492 GMT [60186] WARNING:  there is no transaction in progress
2023-01-13 07:55:43.492 GMT [60186] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_savings_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-13 07:55:43.492 GMT [60186] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_savings_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, action, date) VALUES (account_id, 'Viewed savings statements', CURRENT_DATE);
2023-01-13 07:55:43.492 GMT [60186] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 07:55:43.492 GMT [60186] STATEMENT:  RETURN QUERY
	        SELECT savings_accounts_statements.account_id, savings_accounts_statements.account_number, savings_accounts_statements.starting_date, savings_accounts_statements.end_date, savings_accounts_statements.amount
	        FROM client.savings_accounts_statements
	        WHERE savings_accounts_statements.account_number = account_number
	        AND savings_accounts_statements.account_id = account_id;
2023-01-13 07:55:43.493 GMT [60186] WARNING:  there is no transaction in progress
2023-01-13 07:55:43.493 GMT [60186] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-13 07:55:43.493 GMT [60186] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, action, date) VALUES (account_id, 'Viewed debit statements', CURRENT_DATE);
2023-01-13 07:55:43.493 GMT [60186] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 07:55:43.493 GMT [60186] STATEMENT:  RETURN QUERY
	        SELECT debit_accounts_statements.account_id, debit_accounts_statements.account_number, debit_accounts_statements.starting_date, debit_accounts_statements.end_date, debit_accounts_statements.amount
	        FROM client.debit_accounts_statements
	        WHERE debit_accounts_statements.account_number = account_number
	        AND debit_accounts_statements.account_id = account_id;
2023-01-13 07:55:43.493 GMT [60186] WARNING:  there is no transaction in progress
2023-01-13 07:55:43.494 GMT [60186] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-13 07:55:43.494 GMT [60186] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, action, date) VALUES (account_id, 'Viewed credit statements', CURRENT_DATE);
2023-01-13 07:55:43.494 GMT [60186] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 07:55:43.494 GMT [60186] STATEMENT:  RETURN QUERY
	        SELECT credit_accounts_statements.account_id, credit_accounts_statements.account_number, credit_accounts_statements.starting_date, credit_accounts_statements.end_date, credit_accounts_statements.amount
	        FROM client.credit_accounts_statements
	        WHERE credit_accounts_statements.account_number = account_number
	        AND credit_accounts_statements.account_id = account_id;
2023-01-13 07:55:43.495 GMT [60186] WARNING:  there is no transaction in progress
2023-01-13 07:55:43.495 GMT [60186] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-13 07:55:43.495 GMT [60186] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, action, date) VALUES (account_id, 'Viewed debit statement', CURRENT_DATE);
2023-01-13 07:55:43.495 GMT [60186] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 07:55:43.495 GMT [60186] STATEMENT:  RETURN QUERY
	        SELECT debit_accounts_statement.account_id, debit_accounts_statement.account_number, debit_accounts_statement.starting_date, debit_accounts_statement.end_date, debit_accounts_statement.amount
	        FROM client.debit_accounts_statement
	        WHERE debit_accounts_statement.account_id = account_id
	        AND debit_accounts_statement.account_number = account_number
	        AND debit_accounts_statement.statement_id = statement_id;
2023-01-13 07:55:43.496 GMT [60186] WARNING:  there is no transaction in progress
2023-01-13 07:55:43.497 GMT [60186] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-13 07:55:43.497 GMT [60186] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, action, date) VALUES (account_id, 'Viewed credit statement', CURRENT_DATE);
2023-01-13 07:55:43.498 GMT [60186] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 07:55:43.498 GMT [60186] STATEMENT:  RETURN QUERY
	        SELECT credit_accounts_statement.account_id, credit_accounts_statement.account_number, credit_accounts_statement.starting_date, credit_accounts_statement.end_date, credit_accounts_statement.amount
	        FROM client.credit_accounts_statement
	        WHERE credit_accounts_statement.account_id = account_id
	        AND credit_accounts_statement.account_number = account_number
	        AND credit_accounts_statement.statement_id = statement_id;
2023-01-13 07:55:43.499 GMT [60186] WARNING:  there is no transaction in progress
2023-01-13 07:55:43.500 GMT [60186] ERROR:  syntax error at or near "DECLARE" at character 1777
2023-01-13 07:55:43.500 GMT [60186] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_savings_statement(account_id INT, savings_account_id INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, action, date) VALUES (account_id, 'Viewed savings statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT savings_accounts_statement.account_id, savings_accounts_statement.account_number, savings_accounts_statement.starting_date, savings_accounts_statement.end_date, savings_accounts_statement.amount
	        FROM client.savings_accounts_statement
	        WHERE savings_accounts_statement.account_id = account_id
	        AND savings_accounts_statement.account_number = savings_account_id
	        AND savings_accounts_statement.statement_id = statement_id;
	END;
	
	CREATE SCHEMA IF NOT EXISTS unauthenticated;
	SET search_path TO unauthenticated, public;
	
	-- Allows an unauthenticated user to match hashes to hashes of personal information contained in the customer table
	CREATE OR REPLACE VIEW unauthenticated.unauthenticated_personal_information AS
	SELECT id, md5(first_name) AS first_name, md5(last_name) AS last_name, md5(email_address) AS email_address
	FROM customer;
	
	-- Allows an unauthenticated user to view hashes of usernames contained in the user_login table
	CREATE OR REPLACE VIEW unauthenticated.unauthenticated_login AS
	SELECT md5(username) AS username FROM user_login;
	
	-- Allows a user to insert personal information into the online banking system
	CREATE OR REPLACE FUNCTION unauthenticated.create_personal_info(first_name TEXT, last_name TEXT, date_of_birth DATE, phone_number TEXT, email_address TEXT, address_street TEXT, address_city TEXT, address_county TEXT, address_postcode TEXT)
	RETURNS INT AS $$
	DECLARE customer_id INT;
2023-01-13 07:55:43.500 GMT [60186] ERROR:  syntax error at or near "IF" at character 11
2023-01-13 07:55:43.500 GMT [60186] STATEMENT:  BEGIN
	    IF NOT EXISTS (SELECT FROM unauthenticated.unauthenticated_personal_information WHERE md5(first_name) = first_name AND md5(last_name) = last_name AND md5(email_address) = email_address) THEN
	        INSERT INTO customer
	        VALUES (first_name, last_name, date_of_birth, phone_number, email_address, address_street, address_city, address_county, address_postcode)
	        RETURNING id INTO customer_id;
2023-01-13 07:55:43.507 GMT [60186] ERROR:  syntax error at or near "ELSE" at character 1
2023-01-13 07:55:43.507 GMT [60186] STATEMENT:  ELSE
	        RAISE NOTICE 'CUSTOMER INFORMATION ALREADY PRESENT';
2023-01-13 07:55:43.508 GMT [60186] ERROR:  relation "unauthenticated.unauthenticated_personal_information" does not exist at character 33
2023-01-13 07:55:43.508 GMT [60186] STATEMENT:  SELECT id INTO customer_id FROM unauthenticated.unauthenticated_personal_information WHERE md5(first_name) = first_name AND md5(last_name) = last_name AND md5(email_address) = email_address;
2023-01-13 07:55:43.508 GMT [60186] ERROR:  syntax error at or near "IF" at character 5
2023-01-13 07:55:43.508 GMT [60186] STATEMENT:  END IF;
2023-01-13 07:55:43.509 GMT [60186] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 07:55:43.509 GMT [60186] STATEMENT:  RETURN customer_id;
2023-01-13 07:55:43.509 GMT [60186] WARNING:  there is no transaction in progress
2023-01-13 07:55:43.509 GMT [60186] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	-- Allows an unauthenticated user to create an online account
	CREATE OR REPLACE FUNCTION unauthenticated.create_online_account_details(customer_id INT, first_name TEXT, last_name TEXT, email_address TEXT, question_choice_ids INT[], question_answers TEXT[])
	RETURNS INT AS $$" at character 1
2023-01-13 07:55:43.509 GMT [60186] STATEMENT:  $$ LANGUAGE plpgsql;
	
	-- Allows an unauthenticated user to create an online account
	CREATE OR REPLACE FUNCTION unauthenticated.create_online_account_details(customer_id INT, first_name TEXT, last_name TEXT, email_address TEXT, question_choice_ids INT[], question_answers TEXT[])
	RETURNS INT AS $$
	DECLARE account_id INT;
2023-01-13 07:55:43.510 GMT [60186] ERROR:  syntax error at or near "INT" at character 27
2023-01-13 07:55:43.510 GMT [60186] STATEMENT:  DECLARE online_account_id INT;
2023-01-13 07:55:43.511 GMT [60186] ERROR:  syntax error at or near "INT" at character 28
2023-01-13 07:55:43.511 GMT [60186] STATEMENT:  DECLARE question_choice_id INT;
2023-01-13 07:55:43.511 GMT [60186] ERROR:  syntax error at or near "IF" at character 11
2023-01-13 07:55:43.511 GMT [60186] STATEMENT:  BEGIN
	    IF NOT EXISTS (SELECT FROM user_login WHERE username = username) THEN
	        INSERT INTO online_account (date_opened, sort_code, customer_id)
	        VALUES ((SELECT now()), (SELECT num FROM GENERATE_SERIES(1, 6) AS s(num) LIMIT 1), customer_id)
	        RETURNING id INTO account_id;
2023-01-13 07:55:43.512 GMT [60186] ERROR:  syntax error at or near "INTO" at character 131
2023-01-13 07:55:43.512 GMT [60186] STATEMENT:  INSERT INTO user_login (account_id, username, password)
	        VALUES (account_id, username, md5(password))
	        RETURNING id INTO online_account_id;
2023-01-13 07:55:43.512 GMT [60186] ERROR:  syntax error at or near "FOR" at character 1
2023-01-13 07:55:43.512 GMT [60186] STATEMENT:  FOR i IN 0..2 LOOP
	            
	            INSERT INTO user_login_security_question (question_choice_id, login_id)
	            VALUES (question_choice_ids[i], online_account_id)
	            RETURNING id INTO question_choice_id;
2023-01-13 07:55:43.513 GMT [60186] ERROR:  column "answer" of relation "security_question_answer" does not exist at character 39
2023-01-13 07:55:43.513 GMT [60186] STATEMENT:  INSERT INTO security_question_answer (answer, question_id)
	            VALUES (question_answers[i], question_choice_id);
2023-01-13 07:55:43.513 GMT [60186] ERROR:  syntax error at or near "LOOP" at character 5
2023-01-13 07:55:43.513 GMT [60186] STATEMENT:  END LOOP;
2023-01-13 07:55:43.513 GMT [60186] ERROR:  column "account_id" does not exist at character 117
2023-01-13 07:55:43.513 GMT [60186] HINT:  There is a column named "account_id" in table "authentication_log", but it cannot be referenced from this part of the query.
2023-01-13 07:55:43.513 GMT [60186] STATEMENT:  INSERT INTO authentication_log (log_description, log_date, account_id) VALUES ('New online account created', now(), account_id);
2023-01-13 07:55:43.514 GMT [60186] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 07:55:43.514 GMT [60186] STATEMENT:  RETURN account_id;
2023-01-13 07:55:43.514 GMT [60186] ERROR:  syntax error at or near "ELSE" at character 1
2023-01-13 07:55:43.514 GMT [60186] STATEMENT:  ELSE
	        RAISE NOTICE 'USERNAME ALREADY TAKEN';
2023-01-13 07:55:43.514 GMT [60186] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 07:55:43.514 GMT [60186] STATEMENT:  RETURN NULL;
2023-01-13 07:55:43.514 GMT [60186] ERROR:  syntax error at or near "IF" at character 5
2023-01-13 07:55:43.514 GMT [60186] STATEMENT:  END IF;
2023-01-13 07:55:43.515 GMT [60186] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 07:55:43.515 GMT [60186] STATEMENT:  RETURN success;
2023-01-13 07:55:43.515 GMT [60186] WARNING:  there is no transaction in progress
2023-01-13 07:55:43.515 GMT [60186] ERROR:  unterminated dollar-quoted string at or near "$$ LANGUAGE plpgsql;
	
	
	
	
	
	-- sample data for customers
	INSERT INTO customer (first_name, last_name, date_of_birth, phone_number, email_address, address_street, address_city, address_county, address_postcode)
	VALUES ('John', 'Smith', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('Jane', 'Doe', '1990-01-01', '01234567890', 'test@gmail.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Bloggs', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('John', 'Bloggs', '1990-01-01', '01234567890', 'hello@yahoo.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('Jane', 'Bloggs', '1990-01-01', '01234567890', 'test@outlook.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Doe', '1990-01-01', '01234567890', 'hello@outlook.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('John', 'Doe', '1990-01-01', '01234567890', 'mybankemail@icloud.com', '1 My Bank Street', 'My Bank City', 'My Bank County', 'MB1 1NK'),
	('Jane', 'Smith', '1990-01-01', '01234567890', 'bankemail@outlook.com', '1 Bank Street', 'Bank City', 'Bank County', 'BA1 1NK'),
	('Joe', 'Smith', '1990-01-01', '01234567890', 'example@icloud.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX');
	
	-- sample data for online account
	INSERT INTO online_account (date_opened, sort_code, customer_id)
	VALUES ('2020-01-01', '123456', 1),
	('2019-01-01', '126485', 2),
	('2018-01-01', '128475', 3),
	('2017-01-01', '129476', 4),
	('2016-01-01', '120386', 5),
	('2017-02-03', '127385', 6),
	('2018-02-04', '128256', 7),
	('2020-01-01', '129386', 8),
	('2020-01-01', '120386', 9);
	
	-- sample data for user login
	INSERT INTO user_login (account_id, username, password)
	VALUES (1, 'johnsmith', 'b29af57c2b3bba21e9df0cece40952c6'),
	(2, 'janedoe', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(3, 'joebloggs', 'b29af57c2b3bba21e9df0cece40952c6'),
	(4, 'johnbloggs', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(5, 'janebloggs', 'b29af57c2b3bba21e9df0cece40952c6'),
	(6, 'joedoe', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(7, 'johndoe', 'b29af57c2b3bba21e9df0cece40952c6'),
	(8, 'joesmith', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(9, 'janesmith', 'b29af57c2b3bba21e9df0cece40952c6');
	
	-- sample data for security question option
	INSERT INTO security_question_option (question_description)
	VALUES ('What is your favourite colour?'),
	('What is your favourite food?'),
	('What is your favourite animal?'),
	('What is your favourite sport?'),
	('What is your favourite movie?'),
	('What is your favourite book?'),
	('What is your favourite song?'),
	('What is your favourite band?'),
	('What is your favourite game?'),
	('What is your favourite TV show?');
	
	--sample data for user login security question
	INSERT INTO user_login_security_question (question_choice_id, login_id)
	VALUES (1, 1),
	(2, 2),
	(3, 3),
	(4, 4),
	(5, 5),
	(6, 6),
	(7, 7),
	(8, 8),
	(9, 9);
	
	-- sample data for security question answer
	INSERT INTO security_question_answer (question_answer, question_id)
	VALUES ('Red', 1),
	('Blue', 2),
	('Green', 3),
	('Yellow', 4),
	('Orange', 5),
	('Purple', 6),
	('Pink', 7),
	('Black', 8),
	('White', 9);
	
	INSERT INTO savings_account (account_number, account_id, current_balance, interest_rate)
	VALUES ('12345678', 1, 2000.00, 2.05);
	
	-- -- sample data for savings account
	-- INSERT INTO savings_account (current_balance, interest_rate, account_id)
	-- VALUES (2000.00, 2.05, 1),
	-- (1000.00, 2.05, 2),
	-- (5000.00, 2.05, 3),
	-- (10000.00, 2.05, 4),
	-- (20000.00, 2.05, 5),
	-- (50000.00, 2.05, 6),
	-- (100000.00, 2.05, 7),
	-- (200000.00, 2.05, 8);
	
	-- -- sample data for credit account
	-- INSERT INTO credit_account (outstanding_balance, credit_limit, interest_rate, account_id)
	-- VALUES (55.43, 2000.00, 4.22, 1),
	-- (100.00, 1000.00, 4.22, 2),
	-- (200.00, 5000.00, 4.22, 3),
	-- (300.00, 10000.00, 4.22, 4),
	-- (400.00, 20000.00, 4.22, 5),
	-- (500.00, 50000.00, 4.22, 6),
	-- (600.00, 100000.00, 4.22, 7),
	-- (700.00, 200000.00, 4.22, 8);
	
	-- -- sample data for debit account
	-- INSERT INTO debit_account (current_balance, interest_rate, account_id)
	-- VALUES (3465.43, 0.05, 1),
	-- (1000.00, 0.05, 1),
	-- (5000.00, 0.05, 2),
	-- (10000.00, 0.05, 3),
	-- (20000.00, 0.05, 4),
	-- (50000.00, 0.05, 5),
	-- (100000.00, 0.05, 6),
	-- (200000.00, 0.05, 9);
	
	-- -- sample data for loan
	-- INSERT INTO loan (loan_end_date, loan_amount, loan_type, account_id)
	-- VALUES ('2024-01-01', 10000, 'vehicle', 8),
	-- ('2023-03-04', 300000, 'mortgage', 8),
	-- ('2035-03-03', 400000, 'mortgage', 1),
	-- ('2025-04-05', 25000, 'vehicle', 1),
	-- ('2026-05-05', 34000, 'vehicle', 1),
	-- ('2023-06-07', 500000, 'mortgage', 2),
	-- ('2026-04-04', 60000, 'vehicle', 2),
	-- ('2024-03-03', 70000, 'vehicle', 2),
	-- ('2023-02-02', 800000, 'mortgage', 3),
	-- ('2022-01-01', 90000, 'vehicle', 3),
	-- ('2021-01-01', 100000, 'vehicle', 3),
	-- ('2020-01-01', 110000, 'mortgage', 4),
	-- ('2020-01-01', 12000, 'vehicle', 4),
	-- ('2020-01-01', 13000, 'vehicle', 4),
	-- ('2020-01-01', 140000, 'mortgage', 5),
	-- ('2020-01-01', 15000, 'vehicle', 5),
	-- ('2020-01-01', 16000, 'vehicle', 5),
	-- ('2020-01-01', 170000, 'mortgage', 6),
	-- ('2020-01-01', 18000, 'vehicle', 6),
	-- ('2020-01-01', 19000, 'vehicle', 6),
	-- ('2020-01-01', 200000, 'mortgage', 7),
	-- ('2020-01-01', 21000, 'vehicle', 7),
	-- ('2020-01-01', 22000, 'vehicle', 7);
	
	-- CREATE SCHEMA IF NOT EXISTS staff;
	
	-- SET search_path TO public, staff;" at character 1
2023-01-13 07:55:43.515 GMT [60186] STATEMENT:  $$ LANGUAGE plpgsql;
	
	
	
	
	
	-- sample data for customers
	INSERT INTO customer (first_name, last_name, date_of_birth, phone_number, email_address, address_street, address_city, address_county, address_postcode)
	VALUES ('John', 'Smith', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('Jane', 'Doe', '1990-01-01', '01234567890', 'test@gmail.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Bloggs', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('John', 'Bloggs', '1990-01-01', '01234567890', 'hello@yahoo.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('Jane', 'Bloggs', '1990-01-01', '01234567890', 'test@outlook.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Doe', '1990-01-01', '01234567890', 'hello@outlook.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('John', 'Doe', '1990-01-01', '01234567890', 'mybankemail@icloud.com', '1 My Bank Street', 'My Bank City', 'My Bank County', 'MB1 1NK'),
	('Jane', 'Smith', '1990-01-01', '01234567890', 'bankemail@outlook.com', '1 Bank Street', 'Bank City', 'Bank County', 'BA1 1NK'),
	('Joe', 'Smith', '1990-01-01', '01234567890', 'example@icloud.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX');
	
	-- sample data for online account
	INSERT INTO online_account (date_opened, sort_code, customer_id)
	VALUES ('2020-01-01', '123456', 1),
	('2019-01-01', '126485', 2),
	('2018-01-01', '128475', 3),
	('2017-01-01', '129476', 4),
	('2016-01-01', '120386', 5),
	('2017-02-03', '127385', 6),
	('2018-02-04', '128256', 7),
	('2020-01-01', '129386', 8),
	('2020-01-01', '120386', 9);
	
	-- sample data for user login
	INSERT INTO user_login (account_id, username, password)
	VALUES (1, 'johnsmith', 'b29af57c2b3bba21e9df0cece40952c6'),
	(2, 'janedoe', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(3, 'joebloggs', 'b29af57c2b3bba21e9df0cece40952c6'),
	(4, 'johnbloggs', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(5, 'janebloggs', 'b29af57c2b3bba21e9df0cece40952c6'),
	(6, 'joedoe', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(7, 'johndoe', 'b29af57c2b3bba21e9df0cece40952c6'),
	(8, 'joesmith', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(9, 'janesmith', 'b29af57c2b3bba21e9df0cece40952c6');
	
	-- sample data for security question option
	INSERT INTO security_question_option (question_description)
	VALUES ('What is your favourite colour?'),
	('What is your favourite food?'),
	('What is your favourite animal?'),
	('What is your favourite sport?'),
	('What is your favourite movie?'),
	('What is your favourite book?'),
	('What is your favourite song?'),
	('What is your favourite band?'),
	('What is your favourite game?'),
	('What is your favourite TV show?');
	
	--sample data for user login security question
	INSERT INTO user_login_security_question (question_choice_id, login_id)
	VALUES (1, 1),
	(2, 2),
	(3, 3),
	(4, 4),
	(5, 5),
	(6, 6),
	(7, 7),
	(8, 8),
	(9, 9);
	
	-- sample data for security question answer
	INSERT INTO security_question_answer (question_answer, question_id)
	VALUES ('Red', 1),
	('Blue', 2),
	('Green', 3),
	('Yellow', 4),
	('Orange', 5),
	('Purple', 6),
	('Pink', 7),
	('Black', 8),
	('White', 9);
	
	INSERT INTO savings_account (account_number, account_id, current_balance, interest_rate)
	VALUES ('12345678', 1, 2000.00, 2.05);
	
	-- -- sample data for savings account
	-- INSERT INTO savings_account (current_balance, interest_rate, account_id)
	-- VALUES (2000.00, 2.05, 1),
	-- (1000.00, 2.05, 2),
	-- (5000.00, 2.05, 3),
	-- (10000.00, 2.05, 4),
	-- (20000.00, 2.05, 5),
	-- (50000.00, 2.05, 6),
	-- (100000.00, 2.05, 7),
	-- (200000.00, 2.05, 8);
	
	-- -- sample data for credit account
	-- INSERT INTO credit_account (outstanding_balance, credit_limit, interest_rate, account_id)
	-- VALUES (55.43, 2000.00, 4.22, 1),
	-- (100.00, 1000.00, 4.22, 2),
	-- (200.00, 5000.00, 4.22, 3),
	-- (300.00, 10000.00, 4.22, 4),
	-- (400.00, 20000.00, 4.22, 5),
	-- (500.00, 50000.00, 4.22, 6),
	-- (600.00, 100000.00, 4.22, 7),
	-- (700.00, 200000.00, 4.22, 8);
	
	-- -- sample data for debit account
	-- INSERT INTO debit_account (current_balance, interest_rate, account_id)
	-- VALUES (3465.43, 0.05, 1),
	-- (1000.00, 0.05, 1),
	-- (5000.00, 0.05, 2),
	-- (10000.00, 0.05, 3),
	-- (20000.00, 0.05, 4),
	-- (50000.00, 0.05, 5),
	-- (100000.00, 0.05, 6),
	-- (200000.00, 0.05, 9);
	
	-- -- sample data for loan
	-- INSERT INTO loan (loan_end_date, loan_amount, loan_type, account_id)
	-- VALUES ('2024-01-01', 10000, 'vehicle', 8),
	-- ('2023-03-04', 300000, 'mortgage', 8),
	-- ('2035-03-03', 400000, 'mortgage', 1),
	-- ('2025-04-05', 25000, 'vehicle', 1),
	-- ('2026-05-05', 34000, 'vehicle', 1),
	-- ('2023-06-07', 500000, 'mortgage', 2),
	-- ('2026-04-04', 60000, 'vehicle', 2),
	-- ('2024-03-03', 70000, 'vehicle', 2),
	-- ('2023-02-02', 800000, 'mortgage', 3),
	-- ('2022-01-01', 90000, 'vehicle', 3),
	-- ('2021-01-01', 100000, 'vehicle', 3),
	-- ('2020-01-01', 110000, 'mortgage', 4),
	-- ('2020-01-01', 12000, 'vehicle', 4),
	-- ('2020-01-01', 13000, 'vehicle', 4),
	-- ('2020-01-01', 140000, 'mortgage', 5),
	-- ('2020-01-01', 15000, 'vehicle', 5),
	-- ('2020-01-01', 16000, 'vehicle', 5),
	-- ('2020-01-01', 170000, 'mortgage', 6),
	-- ('2020-01-01', 18000, 'vehicle', 6),
	-- ('2020-01-01', 19000, 'vehicle', 6),
	-- ('2020-01-01', 200000, 'mortgage', 7),
	-- ('2020-01-01', 21000, 'vehicle', 7),
	-- ('2020-01-01', 22000, 'vehicle', 7);
	
	-- CREATE SCHEMA IF NOT EXISTS staff;
	
	-- SET search_path TO public, staff;
2023-01-13 07:59:31.099 GMT [60160] LOG:  received fast shutdown request
2023-01-13 07:59:31.101 GMT [60160] LOG:  aborting any active transactions
2023-01-13 07:59:31.110 GMT [60160] LOG:  background worker "logical replication launcher" (PID 60167) exited with exit code 1
2023-01-13 07:59:31.112 GMT [60162] LOG:  shutting down
2023-01-13 07:59:31.177 GMT [60160] LOG:  database system is shut down
2023-01-13 07:59:35.786 GMT [61006] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-13 07:59:35.786 GMT [61006] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-13 07:59:35.788 GMT [61006] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-13 07:59:35.795 GMT [61007] LOG:  database system was shut down at 2023-01-13 07:59:35 GMT
2023-01-13 07:59:35.802 GMT [61006] LOG:  database system is ready to accept connections
2023-01-13 07:59:36.685 GMT [61032] ERROR:  syntax error at or near "DECLARE" at character 4778
2023-01-13 07:59:36.685 GMT [61032] STATEMENT:  CREATE OR REPLACE FUNCTION get_next_account_number()
	RETURNS INT AS $$
	DECLARE next_account_number INT;
	BEGIN
	    SELECT MAX(account_number) INTO next_account_number FROM debit_account;
	    IF next_account_number IS NULL THEN
	        next_account_number = 10000000;
	    ELSE
	        next_account_number = next_account_number + 1;
	    END IF;
	    RETURN next_account_number;
	END;
	
	CREATE SCHEMA IF NOT EXISTS staff;
	SET search_path TO public, staff, client;
	
	CREATE OR REPLACE VIEW 
	
	CREATE SCHEMA IF NOT EXISTS client;
	SET search_path TO public, client;
	
	
	CREATE OR REPLACE VIEW client.accounts AS
	    SELECT account_number, account_id FROM account;
	
	CREATE OR REPLACE VIEW client.debit_accounts AS
	    SELECT account.account_id, account.account_number, debit_account.current_balance, debit_account.interest_rate, debit_overdraft.overdraft_limit, debit_overdraft.overdraft_usage, debit_overdraft.interest_rate
	    FROM account
	    INNER JOIN debit_account ON account.account_number = debit_account.account_number
	    INNER JOIN debit_overdraft ON account.account_number = debit_overdraft.account_number;
	
	CREATE OR REPLACE VIEW client.debit_accounts_statements AS
	    SELECT debit_accounts.account_id, debit_accounts.account_number, debit_statement.id, debit_statement.starting_date, debit_statement.end_date, debit_statement.amount
	    FROM debit_accounts
	    INNER JOIN debit_statement ON debit_accounts.account_number = debit_statement.account_number;
	
	CREATE OR REPLACE VIEW client.debit_accounts_statement AS
	    SELECT debit_accounts_statements.account_id, debit_accounts_statements.account_number, debit_accounts_statements.id, debit_accounts_statements.starting_date, debit_accounts_statements.end_date, debit_accounts_statements.amount, translog_description.origin_account_id, translog_description.dest_account_id, translog_description.amount, translog_description.date
	    FROM debit_accounts_statements
	    INNER JOIN translog_description ON debit_accounts_statements.id = translog_description.debit_statement_id;
	
	CREATE OR REPLACE VIEW client.credit_accounts AS
	    SELECT account.account_id, account.account_number, credit_account.outstanding_balance, credit_account.credit_limit, credit_account.interest_rate, credit_account_application.application_status
	    FROM account
	    INNER JOIN credit_account ON account.account_number = credit_account.account_number
	    INNER JOIN credit_account_application ON account.account_number = credit_account_application.account_number;
	
	CREATE OR REPLACE VIEW client.credit_accounts_statements AS
	    SELECT credit_accounts.account_id, credit_accounts.account_number, credit_statement.id, credit_statement.starting_date, credit_statement.end_date, credit_statement.amount, credit_statement.minimum_payment, credit_statement.minimum_payment_due_date
	    FROM credit_accounts
	    INNER JOIN credit_statement ON credit_accounts.account_number = credit_statement.account_number;
	
	CREATE OR REPLACE VIEW client.credit_accounts_statement AS
	    SELECT credit_accounts_statements.account_id, credit_accounts_statements.account_number, credit_accounts_statements.id, credit_accounts_statements.starting_date, credit_accounts_statements.end_date, credit_accounts_statements.amount, credit_accounts_statements.minimum_payment, credit_accounts_statements.minimum_payment_due_date, translog_description.origin_account_id, translog_description.dest_account_id, translog_description.amount, translog_description.date
	    FROM credit_accounts_statements
	    INNER JOIN translog_description ON credit_accounts_statements.id = translog_description.credit_statement_id;
	
	CREATE OR REPLACE VIEW client.savings_accounts AS
	    SELECT account.account_id, account.account_number, savings_account.current_balance, savings_account.interest_rate
	    FROM account
	    INNER JOIN savings_account ON account.account_number = savings_account.account_number;
	
	CREATE OR REPLACE VIEW client.savings_accounts_statements AS
	    SELECT savings_accounts.account_id, savings_accounts.account_number, savings_statement.id, savings_statement.starting_date, savings_statement.end_date, savings_statement.amount
	    FROM savings_accounts
	    INNER JOIN savings_statement ON savings_accounts.account_number = savings_statement.account_number;
	
	CREATE OR REPLACE VIEW client.loans AS
	    SELECT loan.account_id, loan.id, loan.amount, loan.interest_rate, loan.term, loan_application.application_status
	    FROM loan
	    INNER JOIN loan_application ON loan.id = loan_application.account_id;
	
	CREATE OR REPLACE FUNCTION client.update_personal_information(first_name TEXT, last_name TEXT, date_of_birth DATE, phone_number TEXT, email_address TEXT, address_street TEXT, address_city TEXT, address_county TEXT, address_postcode TEXT, account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-13 07:59:36.685 GMT [61032] ERROR:  syntax error at or near "UPDATE" at character 11
2023-01-13 07:59:36.685 GMT [61032] STATEMENT:  BEGIN
	    UPDATE customer SET first_name = first_name, last_name = last_name, date_of_birth = date_of_birth, phone_number = phone_number, email_address = email_address, address_street = address_street, address_city = address_city, address_county = address_county, address_postcode = address_postcode
	    WHERE id = (SELECT customer_id FROM online_account WHERE id = account_id);
2023-01-13 07:59:36.686 GMT [61032] ERROR:  column "date" of relation "management_log" does not exist at character 58
2023-01-13 07:59:36.686 GMT [61032] STATEMENT:  INSERT INTO management_log (account_id, log_description, date) VALUES (account_id, 'Updated personal information', CURRENT_DATE);
2023-01-13 07:59:36.686 GMT [61032] ERROR:  syntax error at or near "passed" at character 1
2023-01-13 07:59:36.686 GMT [61032] STATEMENT:  passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-13 07:59:36.686 GMT [61032] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 07:59:36.686 GMT [61032] STATEMENT:  RETURN passed;
2023-01-13 07:59:36.686 GMT [61032] WARNING:  there is no transaction in progress
2023-01-13 07:59:36.687 GMT [61032] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.update_password(account_identifier INT, new_password TEXT)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-13 07:59:36.687 GMT [61032] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.update_password(account_identifier INT, new_password TEXT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-13 07:59:36.687 GMT [61032] ERROR:  syntax error at or near "UPDATE" at character 11
2023-01-13 07:59:36.687 GMT [61032] STATEMENT:  BEGIN
	    UPDATE user_login SET password = md5(new_password)
	    WHERE account_id = account_identifier;
2023-01-13 07:59:36.687 GMT [61032] ERROR:  column "date" of relation "management_log" does not exist at character 58
2023-01-13 07:59:36.687 GMT [61032] STATEMENT:  INSERT INTO management_log (account_id, log_description, date) VALUES (account_identifier, 'Updated password', CURRENT_DATE);
2023-01-13 07:59:36.687 GMT [61032] ERROR:  syntax error at or near "passed" at character 1
2023-01-13 07:59:36.687 GMT [61032] STATEMENT:  passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-13 07:59:36.687 GMT [61032] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 07:59:36.687 GMT [61032] STATEMENT:  RETURN passed;
2023-01-13 07:59:36.687 GMT [61032] WARNING:  there is no transaction in progress
2023-01-13 07:59:36.687 GMT [61032] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.update_email(account_identifier INT, new_email TEXT)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-13 07:59:36.687 GMT [61032] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.update_email(account_identifier INT, new_email TEXT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-13 07:59:36.687 GMT [61032] ERROR:  syntax error at or near "UPDATE" at character 11
2023-01-13 07:59:36.687 GMT [61032] STATEMENT:  BEGIN
	    UPDATE user_login SET email = new_email
	    WHERE account_id = account_identifier;
2023-01-13 07:59:36.687 GMT [61032] ERROR:  column "date" of relation "management_log" does not exist at character 58
2023-01-13 07:59:36.687 GMT [61032] STATEMENT:  INSERT INTO management_log (account_id, log_description, date) VALUES (account_identifier, 'Updated email', CURRENT_DATE);
2023-01-13 07:59:36.687 GMT [61032] ERROR:  syntax error at or near "passed" at character 1
2023-01-13 07:59:36.687 GMT [61032] STATEMENT:  passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-13 07:59:36.687 GMT [61032] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 07:59:36.687 GMT [61032] STATEMENT:  RETURN passed;
2023-01-13 07:59:36.688 GMT [61032] WARNING:  there is no transaction in progress
2023-01-13 07:59:36.688 GMT [61032] ERROR:  schema "client" does not exist
2023-01-13 07:59:36.688 GMT [61032] STATEMENT:  CREATE OR REPLACE FUNCTION client.open_debit_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE debit_account_number INT;
	DECLARE next_account_number INT;
	BEGIN
	
	    SELECT get_next_account_number() INTO next_account_number;
	
	    INSERT INTO debit_account (account_number, account_id, current_balance, interest_rate) VALUES (next_account_number ,account_id, 0, 0.01) RETURNING id INTO debit_account_number;
	    INSERT INTO debit_statement (starting_date, end_date, amount, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, debit_account_id);
	    INSERT INTO debit_overdraft (overdraft_usage, overdraft_limit, interest_rate, account_id) VALUES (0, 0, 0.01, debit_account_id);
	    INSERT INTO management_log (account_id, log_description, date) VALUES (account_id, 'Opened debit account', CURRENT_DATE);
	    passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
	    RETURN passed;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 07:59:36.688 GMT [61032] ERROR:  schema "client" does not exist
2023-01-13 07:59:36.688 GMT [61032] STATEMENT:  CREATE OR REPLACE FUNCTION client.open_credit_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE credit_account_number INT;
	DECLARE next_account_number INT;
	BEGIN
	
	    SELECT get_next_account_number() INTO next_account_number;
	
	    INSERT INTO credit_account (account_number, outstanding_balance, credit_limit, interest_rate, account_id) VALUES (next_account_number ,0, 0, 24.9, account_id) RETURNING id INTO credit_account_id;
	    INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_id) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_id);
	    INSERT INTO credit_account_application (credit_account_id, application_status) VALUES (credit_account_id, 'PENDING');
	    INSERT INTO management_log (account_id, log_description, date) VALUES (account_id, 'Opened credit account', CURRENT_DATE);
	END
	$$ LANGUAGE plpgsql;
2023-01-13 07:59:36.688 GMT [61032] ERROR:  schema "client" does not exist
2023-01-13 07:59:36.688 GMT [61032] STATEMENT:  CREATE OR REPLACE FUNCTION client.open_savings_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE savings_account_id INT;
	DECLARE next_account_number INT;
	BEGIN
	
	    SELECT get_next_account_number() INTO next_account_number;
	
	    INSERT INTO savings_account (account_number, account_id, current_balance, interest_rate) VALUES (next_account_number ,account_id, 0, 0.01) RETURNING id INTO savings_account_id;
	    INSERT INTO savings_statement (starting_date, end_date, amount, account_id) VALUES (CURRENT_DATE, CURRENT_DATE, 0, savings_account_id);
	    INSERT INTO management_log (account_id, log_description, date) VALUES (account_id, 'Opened savings account', CURRENT_DATE);
	    INSERT INTO external_account (account_id, external_account_number) VALUES (savings_account_id, '12345678');
	    passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
	    RETURN passed;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 07:59:36.688 GMT [61032] ERROR:  schema "client" does not exist
2023-01-13 07:59:36.688 GMT [61032] STATEMENT:  CREATE OR REPLACE FUNCTION client.open_loan(account_id INT, loan_amount INT, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE loan_id INT;
	BEGIN
	    INSERT INTO loan (account_id, loan_amount, loan_end_date, loan_type, loan_interest_rate) VALUES (account_id, loan_amount, loan_end_date, loan_type, loan_interest_rate) RETURNING id INTO loan_id;
	    INSERT INTO loan_statement (starting_date, end_date, amount, account_id) VALUES (CURRENT_DATE, CURRENT_DATE, 0, loan_id);
	    INSERT INTO loan_application (loan_id, application_status) VALUES (loan_id, 'PENDING');
	    INSERT INTO management_log (account_id, log_description, date) VALUES (account_id, 'Opened loan', CURRENT_DATE);
	    passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
	    RETURN passed;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 07:59:36.688 GMT [61032] ERROR:  syntax error at or near "INSERT" at character 657
2023-01-13 07:59:36.688 GMT [61032] STATEMENT:  CREATE OR REPLACE FUNCTION client.get_account_type(account_number INT)
	RETURNS TEXT AS $$
	DECLARE account_type TEXT;
	BEGIN
	    SELECT CASE WHEN EXISTS (SELECT * FROM debit_account WHERE account_number = account_number) THEN 'DEBIT'
	                WHEN EXISTS (SELECT * FROM credit_account WHERE account_number = account_number) THEN 'CREDIT'
	                WHEN EXISTS (SELECT * FROM savings_account WHERE account_number = account_number) THEN 'SAVINGS'
	                ELSE 'UNKNOWN' END INTO account_type;
	    RETURN account_type;
	END;
	
	CREATE OR REPLACE FUNCTION client.view_accounts(account_id INT)
	RETURNS TABLE (account_number INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, date) VALUES (account_id, 'Viewed accounts', CURRENT_DATE);
	    RETURN QUERY
	        SELECT account.*, COALESCE(debit_accounts.current_balance, credit_accounts.outstanding_balance, savings_accounts.current_balance, loans.loan_amount) AS balance,
	        COALESCE(debit_accounts.interest_rate, credit_accounts.interest_rate, savings_accounts.interest_rate, loans.loan_interest_rate) AS interest_rate,
	        get_account_type(account.account_number) AS account_type
	END;
2023-01-13 07:59:36.688 GMT [61032] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, overdraft_limit NUMERIC, overdraft_usage NUMERIC, interest_rate, external_account_number INT) AS $$" at character 1
2023-01-13 07:59:36.688 GMT [61032] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, overdraft_limit NUMERIC, overdraft_usage NUMERIC, interest_rate, external_account_number INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, date) VALUES (account_id, 'Viewed debit accounts', CURRENT_DATE);
2023-01-13 07:59:36.688 GMT [61032] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 07:59:36.688 GMT [61032] STATEMENT:  RETURN QUERY
	        SELECT * FROM client.debit_accounts WHERE account_id = account_id;
2023-01-13 07:59:36.688 GMT [61032] WARNING:  there is no transaction in progress
2023-01-13 07:59:36.688 GMT [61032] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_accounts(account_id INT)
	RETURNS TABLE (id INT, outstanding_balance NUMERIC, credit_limit NUMERIC, interest_rate NUMERIC, application_status TEXT) AS $$" at character 1
2023-01-13 07:59:36.688 GMT [61032] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_accounts(account_id INT)
	RETURNS TABLE (id INT, outstanding_balance NUMERIC, credit_limit NUMERIC, interest_rate NUMERIC, application_status TEXT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, date) VALUES (account_id, 'Viewed credit accounts', CURRENT_DATE);
2023-01-13 07:59:36.688 GMT [61032] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 07:59:36.688 GMT [61032] STATEMENT:  RETURN QUERY
	        SELECT * FROM client.credit_accounts WHERE account_id = account_id;
2023-01-13 07:59:36.688 GMT [61032] WARNING:  there is no transaction in progress
2023-01-13 07:59:36.689 GMT [61032] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_savings_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, external_account_number INT) AS $$" at character 1
2023-01-13 07:59:36.689 GMT [61032] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_savings_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, external_account_number INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, date) VALUES (account_id, 'Viewed savings accounts', CURRENT_DATE);
2023-01-13 07:59:36.689 GMT [61032] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 07:59:36.689 GMT [61032] STATEMENT:  RETURN QUERY
	        SELECT * FROM client.savings_accounts WHERE account_id = account_id;
2023-01-13 07:59:36.689 GMT [61032] WARNING:  there is no transaction in progress
2023-01-13 07:59:36.689 GMT [61032] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_loans(account_id INT)
	RETURNS TABLE (id INT, loan_amount NUMERIC, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC, application_status TEXT) AS $$" at character 1
2023-01-13 07:59:36.689 GMT [61032] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_loans(account_id INT)
	RETURNS TABLE (id INT, loan_amount NUMERIC, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC, application_status TEXT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, date) VALUES (account_id, 'Viewed loans', CURRENT_DATE);
2023-01-13 07:59:36.689 GMT [61032] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 07:59:36.689 GMT [61032] STATEMENT:  RETURN QUERY
	        SELECT * FROM client.loans WHERE account_id = account_id;
2023-01-13 07:59:36.689 GMT [61032] WARNING:  there is no transaction in progress
2023-01-13 07:59:36.689 GMT [61032] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_savings_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-13 07:59:36.689 GMT [61032] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_savings_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, date) VALUES (account_id, 'Viewed savings statements', CURRENT_DATE);
2023-01-13 07:59:36.689 GMT [61032] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 07:59:36.689 GMT [61032] STATEMENT:  RETURN QUERY
	        SELECT savings_accounts_statements.account_id, savings_accounts_statements.account_number, savings_accounts_statements.starting_date, savings_accounts_statements.end_date, savings_accounts_statements.amount
	        FROM client.savings_accounts_statements
	        WHERE savings_accounts_statements.account_number = account_number
	        AND savings_accounts_statements.account_id = account_id;
2023-01-13 07:59:36.689 GMT [61032] WARNING:  there is no transaction in progress
2023-01-13 07:59:36.689 GMT [61032] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-13 07:59:36.689 GMT [61032] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, date) VALUES (account_id, 'Viewed debit statements', CURRENT_DATE);
2023-01-13 07:59:36.689 GMT [61032] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 07:59:36.689 GMT [61032] STATEMENT:  RETURN QUERY
	        SELECT debit_accounts_statements.account_id, debit_accounts_statements.account_number, debit_accounts_statements.starting_date, debit_accounts_statements.end_date, debit_accounts_statements.amount
	        FROM client.debit_accounts_statements
	        WHERE debit_accounts_statements.account_number = account_number
	        AND debit_accounts_statements.account_id = account_id;
2023-01-13 07:59:36.690 GMT [61032] WARNING:  there is no transaction in progress
2023-01-13 07:59:36.690 GMT [61032] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-13 07:59:36.690 GMT [61032] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, date) VALUES (account_id, 'Viewed credit statements', CURRENT_DATE);
2023-01-13 07:59:36.690 GMT [61032] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 07:59:36.690 GMT [61032] STATEMENT:  RETURN QUERY
	        SELECT credit_accounts_statements.account_id, credit_accounts_statements.account_number, credit_accounts_statements.starting_date, credit_accounts_statements.end_date, credit_accounts_statements.amount
	        FROM client.credit_accounts_statements
	        WHERE credit_accounts_statements.account_number = account_number
	        AND credit_accounts_statements.account_id = account_id;
2023-01-13 07:59:36.690 GMT [61032] WARNING:  there is no transaction in progress
2023-01-13 07:59:36.691 GMT [61032] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-13 07:59:36.691 GMT [61032] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, date) VALUES (account_id, 'Viewed debit statement', CURRENT_DATE);
2023-01-13 07:59:36.691 GMT [61032] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 07:59:36.691 GMT [61032] STATEMENT:  RETURN QUERY
	        SELECT debit_accounts_statement.account_id, debit_accounts_statement.account_number, debit_accounts_statement.starting_date, debit_accounts_statement.end_date, debit_accounts_statement.amount
	        FROM client.debit_accounts_statement
	        WHERE debit_accounts_statement.account_id = account_id
	        AND debit_accounts_statement.account_number = account_number
	        AND debit_accounts_statement.statement_id = statement_id;
2023-01-13 07:59:36.691 GMT [61032] WARNING:  there is no transaction in progress
2023-01-13 07:59:36.691 GMT [61032] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-13 07:59:36.691 GMT [61032] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, date) VALUES (account_id, 'Viewed credit statement', CURRENT_DATE);
2023-01-13 07:59:36.691 GMT [61032] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 07:59:36.691 GMT [61032] STATEMENT:  RETURN QUERY
	        SELECT credit_accounts_statement.account_id, credit_accounts_statement.account_number, credit_accounts_statement.starting_date, credit_accounts_statement.end_date, credit_accounts_statement.amount
	        FROM client.credit_accounts_statement
	        WHERE credit_accounts_statement.account_id = account_id
	        AND credit_accounts_statement.account_number = account_number
	        AND credit_accounts_statement.statement_id = statement_id;
2023-01-13 07:59:36.692 GMT [61032] WARNING:  there is no transaction in progress
2023-01-13 07:59:36.692 GMT [61032] ERROR:  syntax error at or near "DECLARE" at character 1786
2023-01-13 07:59:36.692 GMT [61032] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_savings_statement(account_id INT, savings_account_id INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, date) VALUES (account_id, 'Viewed savings statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT savings_accounts_statement.account_id, savings_accounts_statement.account_number, savings_accounts_statement.starting_date, savings_accounts_statement.end_date, savings_accounts_statement.amount
	        FROM client.savings_accounts_statement
	        WHERE savings_accounts_statement.account_id = account_id
	        AND savings_accounts_statement.account_number = savings_account_id
	        AND savings_accounts_statement.statement_id = statement_id;
	END;
	
	CREATE SCHEMA IF NOT EXISTS unauthenticated;
	SET search_path TO unauthenticated, public;
	
	-- Allows an unauthenticated user to match hashes to hashes of personal information contained in the customer table
	CREATE OR REPLACE VIEW unauthenticated.unauthenticated_personal_information AS
	SELECT id, md5(first_name) AS first_name, md5(last_name) AS last_name, md5(email_address) AS email_address
	FROM customer;
	
	-- Allows an unauthenticated user to view hashes of usernames contained in the user_login table
	CREATE OR REPLACE VIEW unauthenticated.unauthenticated_login AS
	SELECT md5(username) AS username FROM user_login;
	
	-- Allows a user to insert personal information into the online banking system
	CREATE OR REPLACE FUNCTION unauthenticated.create_personal_info(first_name TEXT, last_name TEXT, date_of_birth DATE, phone_number TEXT, email_address TEXT, address_street TEXT, address_city TEXT, address_county TEXT, address_postcode TEXT)
	RETURNS INT AS $$
	DECLARE customer_id INT;
2023-01-13 07:59:36.692 GMT [61032] ERROR:  syntax error at or near "IF" at character 11
2023-01-13 07:59:36.692 GMT [61032] STATEMENT:  BEGIN
	    IF NOT EXISTS (SELECT FROM unauthenticated.unauthenticated_personal_information WHERE md5(first_name) = first_name AND md5(last_name) = last_name AND md5(email_address) = email_address) THEN
	        INSERT INTO customer
	        VALUES (first_name, last_name, date_of_birth, phone_number, email_address, address_street, address_city, address_county, address_postcode)
	        RETURNING id INTO customer_id;
2023-01-13 07:59:36.694 GMT [61032] ERROR:  syntax error at or near "ELSE" at character 1
2023-01-13 07:59:36.694 GMT [61032] STATEMENT:  ELSE
	        RAISE NOTICE 'CUSTOMER INFORMATION ALREADY PRESENT';
2023-01-13 07:59:36.694 GMT [61032] ERROR:  relation "unauthenticated.unauthenticated_personal_information" does not exist at character 33
2023-01-13 07:59:36.694 GMT [61032] STATEMENT:  SELECT id INTO customer_id FROM unauthenticated.unauthenticated_personal_information WHERE md5(first_name) = first_name AND md5(last_name) = last_name AND md5(email_address) = email_address;
2023-01-13 07:59:36.694 GMT [61032] ERROR:  syntax error at or near "IF" at character 5
2023-01-13 07:59:36.694 GMT [61032] STATEMENT:  END IF;
2023-01-13 07:59:36.694 GMT [61032] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 07:59:36.694 GMT [61032] STATEMENT:  RETURN customer_id;
2023-01-13 07:59:36.695 GMT [61032] WARNING:  there is no transaction in progress
2023-01-13 07:59:36.695 GMT [61032] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	-- Allows an unauthenticated user to create an online account
	CREATE OR REPLACE FUNCTION unauthenticated.create_online_account_details(customer_id INT, first_name TEXT, last_name TEXT, email_address TEXT, question_choice_ids INT[], question_answers TEXT[])
	RETURNS INT AS $$" at character 1
2023-01-13 07:59:36.695 GMT [61032] STATEMENT:  $$ LANGUAGE plpgsql;
	
	-- Allows an unauthenticated user to create an online account
	CREATE OR REPLACE FUNCTION unauthenticated.create_online_account_details(customer_id INT, first_name TEXT, last_name TEXT, email_address TEXT, question_choice_ids INT[], question_answers TEXT[])
	RETURNS INT AS $$
	DECLARE account_id INT;
2023-01-13 07:59:36.695 GMT [61032] ERROR:  syntax error at or near "INT" at character 27
2023-01-13 07:59:36.695 GMT [61032] STATEMENT:  DECLARE online_account_id INT;
2023-01-13 07:59:36.695 GMT [61032] ERROR:  syntax error at or near "INT" at character 28
2023-01-13 07:59:36.695 GMT [61032] STATEMENT:  DECLARE question_choice_id INT;
2023-01-13 07:59:36.695 GMT [61032] ERROR:  syntax error at or near "IF" at character 11
2023-01-13 07:59:36.695 GMT [61032] STATEMENT:  BEGIN
	    IF NOT EXISTS (SELECT FROM user_login WHERE username = username) THEN
	        INSERT INTO online_account (date_opened, sort_code, customer_id)
	        VALUES ((SELECT now()), (SELECT num FROM GENERATE_SERIES(1, 6) AS s(num) LIMIT 1), customer_id)
	        RETURNING id INTO account_id;
2023-01-13 07:59:36.695 GMT [61032] ERROR:  syntax error at or near "INTO" at character 131
2023-01-13 07:59:36.695 GMT [61032] STATEMENT:  INSERT INTO user_login (account_id, username, password)
	        VALUES (account_id, username, md5(password))
	        RETURNING id INTO online_account_id;
2023-01-13 07:59:36.695 GMT [61032] ERROR:  syntax error at or near "FOR" at character 1
2023-01-13 07:59:36.695 GMT [61032] STATEMENT:  FOR i IN 0..2 LOOP
	            
	            INSERT INTO user_login_security_question (question_choice_id, login_id)
	            VALUES (question_choice_ids[i], online_account_id)
	            RETURNING id INTO question_choice_id;
2023-01-13 07:59:36.696 GMT [61032] ERROR:  column "answer" of relation "security_question_answer" does not exist at character 39
2023-01-13 07:59:36.696 GMT [61032] STATEMENT:  INSERT INTO security_question_answer (answer, question_id)
	            VALUES (question_answers[i], question_choice_id);
2023-01-13 07:59:36.696 GMT [61032] ERROR:  syntax error at or near "LOOP" at character 5
2023-01-13 07:59:36.696 GMT [61032] STATEMENT:  END LOOP;
2023-01-13 07:59:36.696 GMT [61032] ERROR:  column "account_id" does not exist at character 117
2023-01-13 07:59:36.696 GMT [61032] HINT:  There is a column named "account_id" in table "authentication_log", but it cannot be referenced from this part of the query.
2023-01-13 07:59:36.696 GMT [61032] STATEMENT:  INSERT INTO authentication_log (log_description, log_date, account_id) VALUES ('New online account created', now(), account_id);
2023-01-13 07:59:36.697 GMT [61032] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 07:59:36.697 GMT [61032] STATEMENT:  RETURN account_id;
2023-01-13 07:59:36.697 GMT [61032] ERROR:  syntax error at or near "ELSE" at character 1
2023-01-13 07:59:36.697 GMT [61032] STATEMENT:  ELSE
	        RAISE NOTICE 'USERNAME ALREADY TAKEN';
2023-01-13 07:59:36.697 GMT [61032] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 07:59:36.697 GMT [61032] STATEMENT:  RETURN NULL;
2023-01-13 07:59:36.698 GMT [61032] ERROR:  syntax error at or near "IF" at character 5
2023-01-13 07:59:36.698 GMT [61032] STATEMENT:  END IF;
2023-01-13 07:59:36.698 GMT [61032] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 07:59:36.698 GMT [61032] STATEMENT:  RETURN success;
2023-01-13 07:59:36.699 GMT [61032] WARNING:  there is no transaction in progress
2023-01-13 07:59:36.700 GMT [61032] ERROR:  unterminated dollar-quoted string at or near "$$ LANGUAGE plpgsql;
	
	
	
	
	
	-- sample data for customers
	INSERT INTO customer (first_name, last_name, date_of_birth, phone_number, email_address, address_street, address_city, address_county, address_postcode)
	VALUES ('John', 'Smith', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('Jane', 'Doe', '1990-01-01', '01234567890', 'test@gmail.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Bloggs', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('John', 'Bloggs', '1990-01-01', '01234567890', 'hello@yahoo.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('Jane', 'Bloggs', '1990-01-01', '01234567890', 'test@outlook.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Doe', '1990-01-01', '01234567890', 'hello@outlook.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('John', 'Doe', '1990-01-01', '01234567890', 'mybankemail@icloud.com', '1 My Bank Street', 'My Bank City', 'My Bank County', 'MB1 1NK'),
	('Jane', 'Smith', '1990-01-01', '01234567890', 'bankemail@outlook.com', '1 Bank Street', 'Bank City', 'Bank County', 'BA1 1NK'),
	('Joe', 'Smith', '1990-01-01', '01234567890', 'example@icloud.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX');
	
	-- sample data for online account
	INSERT INTO online_account (date_opened, sort_code, customer_id)
	VALUES ('2020-01-01', '123456', 1),
	('2019-01-01', '126485', 2),
	('2018-01-01', '128475', 3),
	('2017-01-01', '129476', 4),
	('2016-01-01', '120386', 5),
	('2017-02-03', '127385', 6),
	('2018-02-04', '128256', 7),
	('2020-01-01', '129386', 8),
	('2020-01-01', '120386', 9);
	
	-- sample data for user login
	INSERT INTO user_login (account_id, username, password)
	VALUES (1, 'johnsmith', 'b29af57c2b3bba21e9df0cece40952c6'),
	(2, 'janedoe', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(3, 'joebloggs', 'b29af57c2b3bba21e9df0cece40952c6'),
	(4, 'johnbloggs', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(5, 'janebloggs', 'b29af57c2b3bba21e9df0cece40952c6'),
	(6, 'joedoe', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(7, 'johndoe', 'b29af57c2b3bba21e9df0cece40952c6'),
	(8, 'joesmith', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(9, 'janesmith', 'b29af57c2b3bba21e9df0cece40952c6');
	
	-- sample data for security question option
	INSERT INTO security_question_option (question_description)
	VALUES ('What is your favourite colour?'),
	('What is your favourite food?'),
	('What is your favourite animal?'),
	('What is your favourite sport?'),
	('What is your favourite movie?'),
	('What is your favourite book?'),
	('What is your favourite song?'),
	('What is your favourite band?'),
	('What is your favourite game?'),
	('What is your favourite TV show?');
	
	--sample data for user login security question
	INSERT INTO user_login_security_question (question_choice_id, login_id)
	VALUES (1, 1),
	(2, 2),
	(3, 3),
	(4, 4),
	(5, 5),
	(6, 6),
	(7, 7),
	(8, 8),
	(9, 9);
	
	-- sample data for security question answer
	INSERT INTO security_question_answer (question_answer, question_id)
	VALUES ('Red', 1),
	('Blue', 2),
	('Green', 3),
	('Yellow', 4),
	('Orange', 5),
	('Purple', 6),
	('Pink', 7),
	('Black', 8),
	('White', 9);
	
	INSERT INTO savings_account (account_number, account_id, current_balance, interest_rate)
	VALUES ('12345678', 1, 2000.00, 2.05);
	
	-- -- sample data for savings account
	-- INSERT INTO savings_account (current_balance, interest_rate, account_id)
	-- VALUES (2000.00, 2.05, 1),
	-- (1000.00, 2.05, 2),
	-- (5000.00, 2.05, 3),
	-- (10000.00, 2.05, 4),
	-- (20000.00, 2.05, 5),
	-- (50000.00, 2.05, 6),
	-- (100000.00, 2.05, 7),
	-- (200000.00, 2.05, 8);
	
	-- -- sample data for credit account
	-- INSERT INTO credit_account (outstanding_balance, credit_limit, interest_rate, account_id)
	-- VALUES (55.43, 2000.00, 4.22, 1),
	-- (100.00, 1000.00, 4.22, 2),
	-- (200.00, 5000.00, 4.22, 3),
	-- (300.00, 10000.00, 4.22, 4),
	-- (400.00, 20000.00, 4.22, 5),
	-- (500.00, 50000.00, 4.22, 6),
	-- (600.00, 100000.00, 4.22, 7),
	-- (700.00, 200000.00, 4.22, 8);
	
	-- -- sample data for debit account
	-- INSERT INTO debit_account (current_balance, interest_rate, account_id)
	-- VALUES (3465.43, 0.05, 1),
	-- (1000.00, 0.05, 1),
	-- (5000.00, 0.05, 2),
	-- (10000.00, 0.05, 3),
	-- (20000.00, 0.05, 4),
	-- (50000.00, 0.05, 5),
	-- (100000.00, 0.05, 6),
	-- (200000.00, 0.05, 9);
	
	-- -- sample data for loan
	-- INSERT INTO loan (loan_end_date, loan_amount, loan_type, account_id)
	-- VALUES ('2024-01-01', 10000, 'vehicle', 8),
	-- ('2023-03-04', 300000, 'mortgage', 8),
	-- ('2035-03-03', 400000, 'mortgage', 1),
	-- ('2025-04-05', 25000, 'vehicle', 1),
	-- ('2026-05-05', 34000, 'vehicle', 1),
	-- ('2023-06-07', 500000, 'mortgage', 2),
	-- ('2026-04-04', 60000, 'vehicle', 2),
	-- ('2024-03-03', 70000, 'vehicle', 2),
	-- ('2023-02-02', 800000, 'mortgage', 3),
	-- ('2022-01-01', 90000, 'vehicle', 3),
	-- ('2021-01-01', 100000, 'vehicle', 3),
	-- ('2020-01-01', 110000, 'mortgage', 4),
	-- ('2020-01-01', 12000, 'vehicle', 4),
	-- ('2020-01-01', 13000, 'vehicle', 4),
	-- ('2020-01-01', 140000, 'mortgage', 5),
	-- ('2020-01-01', 15000, 'vehicle', 5),
	-- ('2020-01-01', 16000, 'vehicle', 5),
	-- ('2020-01-01', 170000, 'mortgage', 6),
	-- ('2020-01-01', 18000, 'vehicle', 6),
	-- ('2020-01-01', 19000, 'vehicle', 6),
	-- ('2020-01-01', 200000, 'mortgage', 7),
	-- ('2020-01-01', 21000, 'vehicle', 7),
	-- ('2020-01-01', 22000, 'vehicle', 7);
	
	-- CREATE SCHEMA IF NOT EXISTS staff;
	
	-- SET search_path TO public, staff;" at character 1
2023-01-13 07:59:36.700 GMT [61032] STATEMENT:  $$ LANGUAGE plpgsql;
	
	
	
	
	
	-- sample data for customers
	INSERT INTO customer (first_name, last_name, date_of_birth, phone_number, email_address, address_street, address_city, address_county, address_postcode)
	VALUES ('John', 'Smith', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('Jane', 'Doe', '1990-01-01', '01234567890', 'test@gmail.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Bloggs', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('John', 'Bloggs', '1990-01-01', '01234567890', 'hello@yahoo.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('Jane', 'Bloggs', '1990-01-01', '01234567890', 'test@outlook.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Doe', '1990-01-01', '01234567890', 'hello@outlook.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('John', 'Doe', '1990-01-01', '01234567890', 'mybankemail@icloud.com', '1 My Bank Street', 'My Bank City', 'My Bank County', 'MB1 1NK'),
	('Jane', 'Smith', '1990-01-01', '01234567890', 'bankemail@outlook.com', '1 Bank Street', 'Bank City', 'Bank County', 'BA1 1NK'),
	('Joe', 'Smith', '1990-01-01', '01234567890', 'example@icloud.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX');
	
	-- sample data for online account
	INSERT INTO online_account (date_opened, sort_code, customer_id)
	VALUES ('2020-01-01', '123456', 1),
	('2019-01-01', '126485', 2),
	('2018-01-01', '128475', 3),
	('2017-01-01', '129476', 4),
	('2016-01-01', '120386', 5),
	('2017-02-03', '127385', 6),
	('2018-02-04', '128256', 7),
	('2020-01-01', '129386', 8),
	('2020-01-01', '120386', 9);
	
	-- sample data for user login
	INSERT INTO user_login (account_id, username, password)
	VALUES (1, 'johnsmith', 'b29af57c2b3bba21e9df0cece40952c6'),
	(2, 'janedoe', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(3, 'joebloggs', 'b29af57c2b3bba21e9df0cece40952c6'),
	(4, 'johnbloggs', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(5, 'janebloggs', 'b29af57c2b3bba21e9df0cece40952c6'),
	(6, 'joedoe', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(7, 'johndoe', 'b29af57c2b3bba21e9df0cece40952c6'),
	(8, 'joesmith', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(9, 'janesmith', 'b29af57c2b3bba21e9df0cece40952c6');
	
	-- sample data for security question option
	INSERT INTO security_question_option (question_description)
	VALUES ('What is your favourite colour?'),
	('What is your favourite food?'),
	('What is your favourite animal?'),
	('What is your favourite sport?'),
	('What is your favourite movie?'),
	('What is your favourite book?'),
	('What is your favourite song?'),
	('What is your favourite band?'),
	('What is your favourite game?'),
	('What is your favourite TV show?');
	
	--sample data for user login security question
	INSERT INTO user_login_security_question (question_choice_id, login_id)
	VALUES (1, 1),
	(2, 2),
	(3, 3),
	(4, 4),
	(5, 5),
	(6, 6),
	(7, 7),
	(8, 8),
	(9, 9);
	
	-- sample data for security question answer
	INSERT INTO security_question_answer (question_answer, question_id)
	VALUES ('Red', 1),
	('Blue', 2),
	('Green', 3),
	('Yellow', 4),
	('Orange', 5),
	('Purple', 6),
	('Pink', 7),
	('Black', 8),
	('White', 9);
	
	INSERT INTO savings_account (account_number, account_id, current_balance, interest_rate)
	VALUES ('12345678', 1, 2000.00, 2.05);
	
	-- -- sample data for savings account
	-- INSERT INTO savings_account (current_balance, interest_rate, account_id)
	-- VALUES (2000.00, 2.05, 1),
	-- (1000.00, 2.05, 2),
	-- (5000.00, 2.05, 3),
	-- (10000.00, 2.05, 4),
	-- (20000.00, 2.05, 5),
	-- (50000.00, 2.05, 6),
	-- (100000.00, 2.05, 7),
	-- (200000.00, 2.05, 8);
	
	-- -- sample data for credit account
	-- INSERT INTO credit_account (outstanding_balance, credit_limit, interest_rate, account_id)
	-- VALUES (55.43, 2000.00, 4.22, 1),
	-- (100.00, 1000.00, 4.22, 2),
	-- (200.00, 5000.00, 4.22, 3),
	-- (300.00, 10000.00, 4.22, 4),
	-- (400.00, 20000.00, 4.22, 5),
	-- (500.00, 50000.00, 4.22, 6),
	-- (600.00, 100000.00, 4.22, 7),
	-- (700.00, 200000.00, 4.22, 8);
	
	-- -- sample data for debit account
	-- INSERT INTO debit_account (current_balance, interest_rate, account_id)
	-- VALUES (3465.43, 0.05, 1),
	-- (1000.00, 0.05, 1),
	-- (5000.00, 0.05, 2),
	-- (10000.00, 0.05, 3),
	-- (20000.00, 0.05, 4),
	-- (50000.00, 0.05, 5),
	-- (100000.00, 0.05, 6),
	-- (200000.00, 0.05, 9);
	
	-- -- sample data for loan
	-- INSERT INTO loan (loan_end_date, loan_amount, loan_type, account_id)
	-- VALUES ('2024-01-01', 10000, 'vehicle', 8),
	-- ('2023-03-04', 300000, 'mortgage', 8),
	-- ('2035-03-03', 400000, 'mortgage', 1),
	-- ('2025-04-05', 25000, 'vehicle', 1),
	-- ('2026-05-05', 34000, 'vehicle', 1),
	-- ('2023-06-07', 500000, 'mortgage', 2),
	-- ('2026-04-04', 60000, 'vehicle', 2),
	-- ('2024-03-03', 70000, 'vehicle', 2),
	-- ('2023-02-02', 800000, 'mortgage', 3),
	-- ('2022-01-01', 90000, 'vehicle', 3),
	-- ('2021-01-01', 100000, 'vehicle', 3),
	-- ('2020-01-01', 110000, 'mortgage', 4),
	-- ('2020-01-01', 12000, 'vehicle', 4),
	-- ('2020-01-01', 13000, 'vehicle', 4),
	-- ('2020-01-01', 140000, 'mortgage', 5),
	-- ('2020-01-01', 15000, 'vehicle', 5),
	-- ('2020-01-01', 16000, 'vehicle', 5),
	-- ('2020-01-01', 170000, 'mortgage', 6),
	-- ('2020-01-01', 18000, 'vehicle', 6),
	-- ('2020-01-01', 19000, 'vehicle', 6),
	-- ('2020-01-01', 200000, 'mortgage', 7),
	-- ('2020-01-01', 21000, 'vehicle', 7),
	-- ('2020-01-01', 22000, 'vehicle', 7);
	
	-- CREATE SCHEMA IF NOT EXISTS staff;
	
	-- SET search_path TO public, staff;
2023-01-13 08:01:14.903 GMT [61006] LOG:  received fast shutdown request
2023-01-13 08:01:14.906 GMT [61006] LOG:  aborting any active transactions
2023-01-13 08:01:14.913 GMT [61006] LOG:  background worker "logical replication launcher" (PID 61013) exited with exit code 1
2023-01-13 08:01:14.914 GMT [61008] LOG:  shutting down
2023-01-13 08:01:14.960 GMT [61006] LOG:  database system is shut down
2023-01-13 08:01:16.389 GMT [61415] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-13 08:01:16.390 GMT [61415] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-13 08:01:16.392 GMT [61415] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-13 08:01:16.397 GMT [61416] LOG:  database system was shut down at 2023-01-13 08:01:16 GMT
2023-01-13 08:01:16.403 GMT [61415] LOG:  database system is ready to accept connections
2023-01-13 08:01:17.302 GMT [61451] ERROR:  syntax error at or near "DECLARE" at character 4670
2023-01-13 08:01:17.302 GMT [61451] STATEMENT:  CREATE OR REPLACE FUNCTION get_next_account_number()
	RETURNS INT AS $$
	DECLARE next_account_number INT;
	BEGIN
	    SELECT MAX(account_number) INTO next_account_number FROM debit_account;
	    IF next_account_number IS NULL THEN
	        next_account_number = 10000000;
	    ELSE
	        next_account_number = next_account_number + 1;
	    END IF;
	    RETURN next_account_number;
	END;
	
	CREATE SCHEMA IF NOT EXISTS staff;
	SET search_path TO public, staff, client;
	
	CREATE OR REPLACE VIEW 
	
	CREATE SCHEMA IF NOT EXISTS client;
	SET search_path TO public, client;
	
	
	CREATE OR REPLACE VIEW client.accounts AS
	    SELECT account_number, account_id FROM account;
	
	CREATE OR REPLACE VIEW client.debit_accounts AS
	    SELECT account.account_id, account.account_number, debit_account.current_balance, debit_account.interest_rate, debit_overdraft.overdraft_limit, debit_overdraft.overdraft_usage, debit_overdraft.interest_rate
	    FROM account
	    INNER JOIN debit_account ON account.account_number = debit_account.account_number
	    INNER JOIN debit_overdraft ON account.account_number = debit_overdraft.account_number;
	
	CREATE OR REPLACE VIEW client.debit_accounts_statements AS
	    SELECT debit_accounts.account_id, debit_accounts.account_number, debit_statement.id, debit_statement.starting_date, debit_statement.end_date, debit_statement.amount
	    FROM debit_accounts
	    INNER JOIN debit_statement ON debit_accounts.account_number = debit_statement.account_number;
	
	CREATE OR REPLACE VIEW client.debit_accounts_statement AS
	    SELECT debit_accounts_statements.account_id, debit_accounts_statements.account_number, debit_accounts_statements.id, debit_accounts_statements.starting_date, debit_accounts_statements.end_date, debit_accounts_statements.amount, transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date
	    FROM debit_accounts_statements
	    INNER JOIN transaction ON debit_accounts_statements.id = transaction.debit_statement_id;
	
	CREATE OR REPLACE VIEW client.credit_accounts AS
	    SELECT account.account_id, account.account_number, credit_account.outstanding_balance, credit_account.credit_limit, credit_account.interest_rate, credit_account_application.application_status
	    FROM account
	    INNER JOIN credit_account ON account.account_number = credit_account.account_number
	    INNER JOIN credit_account_application ON account.account_number = credit_account_application.account_number;
	
	CREATE OR REPLACE VIEW client.credit_accounts_statements AS
	    SELECT credit_accounts.account_id, credit_accounts.account_number, credit_statement.id, credit_statement.starting_date, credit_statement.end_date, credit_statement.amount, credit_statement.minimum_payment, credit_statement.minimum_payment_due_date
	    FROM credit_accounts
	    INNER JOIN credit_statement ON credit_accounts.account_number = credit_statement.account_number;
	
	CREATE OR REPLACE VIEW client.credit_accounts_statement AS
	    SELECT credit_accounts_statements.account_id, credit_accounts_statements.account_number, credit_accounts_statements.id, credit_accounts_statements.starting_date, credit_accounts_statements.end_date, credit_accounts_statements.amount, credit_accounts_statements.minimum_payment, credit_accounts_statements.minimum_payment_due_date, transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date
	    FROM credit_accounts_statements
	    INNER JOIN transaction ON credit_accounts_statements.id = transaction.credit_statement_id;
	
	CREATE OR REPLACE VIEW client.savings_accounts AS
	    SELECT account.account_id, account.account_number, savings_account.current_balance, savings_account.interest_rate
	    FROM account
	    INNER JOIN savings_account ON account.account_number = savings_account.account_number;
	
	CREATE OR REPLACE VIEW client.savings_accounts_statements AS
	    SELECT savings_accounts.account_id, savings_accounts.account_number, savings_statement.id, savings_statement.starting_date, savings_statement.end_date, savings_statement.amount
	    FROM savings_accounts
	    INNER JOIN savings_statement ON savings_accounts.account_number = savings_statement.account_number;
	
	CREATE OR REPLACE VIEW client.loans AS
	    SELECT loan.account_id, loan.id, loan.amount, loan.interest_rate, loan.term, loan_application.application_status
	    FROM loan
	    INNER JOIN loan_application ON loan.id = loan_application.account_id;
	
	CREATE OR REPLACE FUNCTION client.update_personal_information(first_name TEXT, last_name TEXT, date_of_birth DATE, phone_number TEXT, email_address TEXT, address_street TEXT, address_city TEXT, address_county TEXT, address_postcode TEXT, account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-13 08:01:17.303 GMT [61451] ERROR:  syntax error at or near "UPDATE" at character 11
2023-01-13 08:01:17.303 GMT [61451] STATEMENT:  BEGIN
	    UPDATE customer SET first_name = first_name, last_name = last_name, date_of_birth = date_of_birth, phone_number = phone_number, email_address = email_address, address_street = address_street, address_city = address_city, address_county = address_county, address_postcode = address_postcode
	    WHERE id = (SELECT customer_id FROM online_account WHERE id = account_id);
2023-01-13 08:01:17.304 GMT [61451] ERROR:  column "date" of relation "management_log" does not exist at character 58
2023-01-13 08:01:17.304 GMT [61451] STATEMENT:  INSERT INTO management_log (account_id, log_description, date) VALUES (account_id, 'Updated personal information', CURRENT_DATE);
2023-01-13 08:01:17.306 GMT [61451] ERROR:  syntax error at or near "passed" at character 1
2023-01-13 08:01:17.306 GMT [61451] STATEMENT:  passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-13 08:01:17.307 GMT [61451] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:01:17.307 GMT [61451] STATEMENT:  RETURN passed;
2023-01-13 08:01:17.310 GMT [61451] WARNING:  there is no transaction in progress
2023-01-13 08:01:17.314 GMT [61451] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.update_password(account_identifier INT, new_password TEXT)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-13 08:01:17.314 GMT [61451] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.update_password(account_identifier INT, new_password TEXT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-13 08:01:17.315 GMT [61451] ERROR:  syntax error at or near "UPDATE" at character 11
2023-01-13 08:01:17.315 GMT [61451] STATEMENT:  BEGIN
	    UPDATE user_login SET password = md5(new_password)
	    WHERE account_id = account_identifier;
2023-01-13 08:01:17.315 GMT [61451] ERROR:  column "date" of relation "management_log" does not exist at character 58
2023-01-13 08:01:17.315 GMT [61451] STATEMENT:  INSERT INTO management_log (account_id, log_description, date) VALUES (account_identifier, 'Updated password', CURRENT_DATE);
2023-01-13 08:01:17.316 GMT [61451] ERROR:  syntax error at or near "passed" at character 1
2023-01-13 08:01:17.316 GMT [61451] STATEMENT:  passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-13 08:01:17.316 GMT [61451] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:01:17.316 GMT [61451] STATEMENT:  RETURN passed;
2023-01-13 08:01:17.317 GMT [61451] WARNING:  there is no transaction in progress
2023-01-13 08:01:17.317 GMT [61451] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.update_email(account_identifier INT, new_email TEXT)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-13 08:01:17.317 GMT [61451] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.update_email(account_identifier INT, new_email TEXT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-13 08:01:17.317 GMT [61451] ERROR:  syntax error at or near "UPDATE" at character 11
2023-01-13 08:01:17.317 GMT [61451] STATEMENT:  BEGIN
	    UPDATE user_login SET email = new_email
	    WHERE account_id = account_identifier;
2023-01-13 08:01:17.318 GMT [61451] ERROR:  column "date" of relation "management_log" does not exist at character 58
2023-01-13 08:01:17.318 GMT [61451] STATEMENT:  INSERT INTO management_log (account_id, log_description, date) VALUES (account_identifier, 'Updated email', CURRENT_DATE);
2023-01-13 08:01:17.319 GMT [61451] ERROR:  syntax error at or near "passed" at character 1
2023-01-13 08:01:17.319 GMT [61451] STATEMENT:  passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-13 08:01:17.320 GMT [61451] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:01:17.320 GMT [61451] STATEMENT:  RETURN passed;
2023-01-13 08:01:17.320 GMT [61451] WARNING:  there is no transaction in progress
2023-01-13 08:01:17.321 GMT [61451] ERROR:  schema "client" does not exist
2023-01-13 08:01:17.321 GMT [61451] STATEMENT:  CREATE OR REPLACE FUNCTION client.open_debit_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE debit_account_number INT;
	DECLARE next_account_number INT;
	BEGIN
	
	    SELECT get_next_account_number() INTO next_account_number;
	
	    INSERT INTO debit_account (account_number, account_id, current_balance, interest_rate) VALUES (next_account_number ,account_id, 0, 0.01) RETURNING id INTO debit_account_number;
	    INSERT INTO debit_statement (starting_date, end_date, amount, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, debit_account_id);
	    INSERT INTO debit_overdraft (overdraft_usage, overdraft_limit, interest_rate, account_id) VALUES (0, 0, 0.01, debit_account_id);
	    INSERT INTO management_log (account_id, log_description, date) VALUES (account_id, 'Opened debit account', CURRENT_DATE);
	    passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
	    RETURN passed;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:01:17.322 GMT [61451] ERROR:  schema "client" does not exist
2023-01-13 08:01:17.322 GMT [61451] STATEMENT:  CREATE OR REPLACE FUNCTION client.open_credit_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE credit_account_number INT;
	DECLARE next_account_number INT;
	BEGIN
	
	    SELECT get_next_account_number() INTO next_account_number;
	
	    INSERT INTO credit_account (account_number, outstanding_balance, credit_limit, interest_rate, account_id) VALUES (next_account_number ,0, 0, 24.9, account_id) RETURNING id INTO credit_account_id;
	    INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_id) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_id);
	    INSERT INTO credit_account_application (credit_account_id, application_status) VALUES (credit_account_id, 'PENDING');
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened credit account', CURRENT_DATE);
	END
	$$ LANGUAGE plpgsql;
2023-01-13 08:01:17.322 GMT [61451] ERROR:  schema "client" does not exist
2023-01-13 08:01:17.322 GMT [61451] STATEMENT:  CREATE OR REPLACE FUNCTION client.open_savings_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE savings_account_id INT;
	DECLARE next_account_number INT;
	BEGIN
	
	    SELECT get_next_account_number() INTO next_account_number;
	
	    INSERT INTO savings_account (account_number, account_id, current_balance, interest_rate) VALUES (next_account_number ,account_id, 0, 0.01) RETURNING id INTO savings_account_id;
	    INSERT INTO savings_statement (starting_date, end_date, amount, account_id) VALUES (CURRENT_DATE, CURRENT_DATE, 0, savings_account_id);
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened savings account', CURRENT_DATE);
	    INSERT INTO external_account (account_id, external_account_number) VALUES (savings_account_id, '12345678');
	    passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
	    RETURN passed;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:01:17.323 GMT [61451] ERROR:  schema "client" does not exist
2023-01-13 08:01:17.323 GMT [61451] STATEMENT:  CREATE OR REPLACE FUNCTION client.open_loan(account_id INT, loan_amount INT, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE loan_id INT;
	BEGIN
	    INSERT INTO loan (account_id, loan_amount, loan_end_date, loan_type, loan_interest_rate) VALUES (account_id, loan_amount, loan_end_date, loan_type, loan_interest_rate) RETURNING id INTO loan_id;
	    INSERT INTO loan_statement (starting_date, end_date, amount, account_id) VALUES (CURRENT_DATE, CURRENT_DATE, 0, loan_id);
	    INSERT INTO loan_application (loan_id, application_status) VALUES (loan_id, 'PENDING');
	    INSERT INTO management_log (account_id, log_description, date) VALUES (account_id, 'Opened loan', CURRENT_DATE);
	    passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
	    RETURN passed;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:01:17.323 GMT [61451] ERROR:  syntax error at or near "INSERT" at character 657
2023-01-13 08:01:17.323 GMT [61451] STATEMENT:  CREATE OR REPLACE FUNCTION client.get_account_type(account_number INT)
	RETURNS TEXT AS $$
	DECLARE account_type TEXT;
	BEGIN
	    SELECT CASE WHEN EXISTS (SELECT * FROM debit_account WHERE account_number = account_number) THEN 'DEBIT'
	                WHEN EXISTS (SELECT * FROM credit_account WHERE account_number = account_number) THEN 'CREDIT'
	                WHEN EXISTS (SELECT * FROM savings_account WHERE account_number = account_number) THEN 'SAVINGS'
	                ELSE 'UNKNOWN' END INTO account_type;
	    RETURN account_type;
	END;
	
	CREATE OR REPLACE FUNCTION client.view_accounts(account_id INT)
	RETURNS TABLE (account_number INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, date) VALUES (account_id, 'Viewed accounts', CURRENT_DATE);
	    RETURN QUERY
	        SELECT account.*, COALESCE(debit_accounts.current_balance, credit_accounts.outstanding_balance, savings_accounts.current_balance, loans.loan_amount) AS balance,
	        COALESCE(debit_accounts.interest_rate, credit_accounts.interest_rate, savings_accounts.interest_rate, loans.loan_interest_rate) AS interest_rate,
	        get_account_type(account.account_number) AS account_type
	END;
2023-01-13 08:01:17.323 GMT [61451] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, overdraft_limit NUMERIC, overdraft_usage NUMERIC, interest_rate, external_account_number INT) AS $$" at character 1
2023-01-13 08:01:17.323 GMT [61451] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, overdraft_limit NUMERIC, overdraft_usage NUMERIC, interest_rate, external_account_number INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, date) VALUES (account_id, 'Viewed debit accounts', CURRENT_DATE);
2023-01-13 08:01:17.324 GMT [61451] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:01:17.324 GMT [61451] STATEMENT:  RETURN QUERY
	        SELECT * FROM client.debit_accounts WHERE account_id = account_id;
2023-01-13 08:01:17.324 GMT [61451] WARNING:  there is no transaction in progress
2023-01-13 08:01:17.325 GMT [61451] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_accounts(account_id INT)
	RETURNS TABLE (id INT, outstanding_balance NUMERIC, credit_limit NUMERIC, interest_rate NUMERIC, application_status TEXT) AS $$" at character 1
2023-01-13 08:01:17.325 GMT [61451] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_accounts(account_id INT)
	RETURNS TABLE (id INT, outstanding_balance NUMERIC, credit_limit NUMERIC, interest_rate NUMERIC, application_status TEXT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, date) VALUES (account_id, 'Viewed credit accounts', CURRENT_DATE);
2023-01-13 08:01:17.325 GMT [61451] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:01:17.325 GMT [61451] STATEMENT:  RETURN QUERY
	        SELECT * FROM client.credit_accounts WHERE account_id = account_id;
2023-01-13 08:01:17.326 GMT [61451] WARNING:  there is no transaction in progress
2023-01-13 08:01:17.326 GMT [61451] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_savings_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, external_account_number INT) AS $$" at character 1
2023-01-13 08:01:17.326 GMT [61451] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_savings_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, external_account_number INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, date) VALUES (account_id, 'Viewed savings accounts', CURRENT_DATE);
2023-01-13 08:01:17.327 GMT [61451] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:01:17.327 GMT [61451] STATEMENT:  RETURN QUERY
	        SELECT * FROM client.savings_accounts WHERE account_id = account_id;
2023-01-13 08:01:17.327 GMT [61451] WARNING:  there is no transaction in progress
2023-01-13 08:01:17.327 GMT [61451] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_loans(account_id INT)
	RETURNS TABLE (id INT, loan_amount NUMERIC, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC, application_status TEXT) AS $$" at character 1
2023-01-13 08:01:17.327 GMT [61451] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_loans(account_id INT)
	RETURNS TABLE (id INT, loan_amount NUMERIC, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC, application_status TEXT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, date) VALUES (account_id, 'Viewed loans', CURRENT_DATE);
2023-01-13 08:01:17.327 GMT [61451] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:01:17.327 GMT [61451] STATEMENT:  RETURN QUERY
	        SELECT * FROM client.loans WHERE account_id = account_id;
2023-01-13 08:01:17.328 GMT [61451] WARNING:  there is no transaction in progress
2023-01-13 08:01:17.328 GMT [61451] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_savings_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-13 08:01:17.328 GMT [61451] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_savings_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, date) VALUES (account_id, 'Viewed savings statements', CURRENT_DATE);
2023-01-13 08:01:17.328 GMT [61451] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:01:17.328 GMT [61451] STATEMENT:  RETURN QUERY
	        SELECT savings_accounts_statements.account_id, savings_accounts_statements.account_number, savings_accounts_statements.starting_date, savings_accounts_statements.end_date, savings_accounts_statements.amount
	        FROM client.savings_accounts_statements
	        WHERE savings_accounts_statements.account_number = account_number
	        AND savings_accounts_statements.account_id = account_id;
2023-01-13 08:01:17.328 GMT [61451] WARNING:  there is no transaction in progress
2023-01-13 08:01:17.329 GMT [61451] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-13 08:01:17.329 GMT [61451] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, date) VALUES (account_id, 'Viewed debit statements', CURRENT_DATE);
2023-01-13 08:01:17.329 GMT [61451] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:01:17.329 GMT [61451] STATEMENT:  RETURN QUERY
	        SELECT debit_accounts_statements.account_id, debit_accounts_statements.account_number, debit_accounts_statements.starting_date, debit_accounts_statements.end_date, debit_accounts_statements.amount
	        FROM client.debit_accounts_statements
	        WHERE debit_accounts_statements.account_number = account_number
	        AND debit_accounts_statements.account_id = account_id;
2023-01-13 08:01:17.329 GMT [61451] WARNING:  there is no transaction in progress
2023-01-13 08:01:17.329 GMT [61451] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-13 08:01:17.329 GMT [61451] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, date) VALUES (account_id, 'Viewed credit statements', CURRENT_DATE);
2023-01-13 08:01:17.329 GMT [61451] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:01:17.329 GMT [61451] STATEMENT:  RETURN QUERY
	        SELECT credit_accounts_statements.account_id, credit_accounts_statements.account_number, credit_accounts_statements.starting_date, credit_accounts_statements.end_date, credit_accounts_statements.amount
	        FROM client.credit_accounts_statements
	        WHERE credit_accounts_statements.account_number = account_number
	        AND credit_accounts_statements.account_id = account_id;
2023-01-13 08:01:17.330 GMT [61451] WARNING:  there is no transaction in progress
2023-01-13 08:01:17.330 GMT [61451] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-13 08:01:17.330 GMT [61451] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, date) VALUES (account_id, 'Viewed debit statement', CURRENT_DATE);
2023-01-13 08:01:17.331 GMT [61451] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:01:17.331 GMT [61451] STATEMENT:  RETURN QUERY
	        SELECT debit_accounts_statement.account_id, debit_accounts_statement.account_number, debit_accounts_statement.starting_date, debit_accounts_statement.end_date, debit_accounts_statement.amount
	        FROM client.debit_accounts_statement
	        WHERE debit_accounts_statement.account_id = account_id
	        AND debit_accounts_statement.account_number = account_number
	        AND debit_accounts_statement.statement_id = statement_id;
2023-01-13 08:01:17.331 GMT [61451] WARNING:  there is no transaction in progress
2023-01-13 08:01:17.331 GMT [61451] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-13 08:01:17.331 GMT [61451] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, date) VALUES (account_id, 'Viewed credit statement', CURRENT_DATE);
2023-01-13 08:01:17.331 GMT [61451] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:01:17.331 GMT [61451] STATEMENT:  RETURN QUERY
	        SELECT credit_accounts_statement.account_id, credit_accounts_statement.account_number, credit_accounts_statement.starting_date, credit_accounts_statement.end_date, credit_accounts_statement.amount
	        FROM client.credit_accounts_statement
	        WHERE credit_accounts_statement.account_id = account_id
	        AND credit_accounts_statement.account_number = account_number
	        AND credit_accounts_statement.statement_id = statement_id;
2023-01-13 08:01:17.331 GMT [61451] WARNING:  there is no transaction in progress
2023-01-13 08:01:17.332 GMT [61451] ERROR:  syntax error at or near "DECLARE" at character 1786
2023-01-13 08:01:17.332 GMT [61451] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_savings_statement(account_id INT, savings_account_id INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, date) VALUES (account_id, 'Viewed savings statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT savings_accounts_statement.account_id, savings_accounts_statement.account_number, savings_accounts_statement.starting_date, savings_accounts_statement.end_date, savings_accounts_statement.amount
	        FROM client.savings_accounts_statement
	        WHERE savings_accounts_statement.account_id = account_id
	        AND savings_accounts_statement.account_number = savings_account_id
	        AND savings_accounts_statement.statement_id = statement_id;
	END;
	
	CREATE SCHEMA IF NOT EXISTS unauthenticated;
	SET search_path TO unauthenticated, public;
	
	-- Allows an unauthenticated user to match hashes to hashes of personal information contained in the customer table
	CREATE OR REPLACE VIEW unauthenticated.unauthenticated_personal_information AS
	SELECT id, md5(first_name) AS first_name, md5(last_name) AS last_name, md5(email_address) AS email_address
	FROM customer;
	
	-- Allows an unauthenticated user to view hashes of usernames contained in the user_login table
	CREATE OR REPLACE VIEW unauthenticated.unauthenticated_login AS
	SELECT md5(username) AS username FROM user_login;
	
	-- Allows a user to insert personal information into the online banking system
	CREATE OR REPLACE FUNCTION unauthenticated.create_personal_info(first_name TEXT, last_name TEXT, date_of_birth DATE, phone_number TEXT, email_address TEXT, address_street TEXT, address_city TEXT, address_county TEXT, address_postcode TEXT)
	RETURNS INT AS $$
	DECLARE customer_id INT;
2023-01-13 08:01:17.332 GMT [61451] ERROR:  syntax error at or near "IF" at character 11
2023-01-13 08:01:17.332 GMT [61451] STATEMENT:  BEGIN
	    IF NOT EXISTS (SELECT FROM unauthenticated.unauthenticated_personal_information WHERE md5(first_name) = first_name AND md5(last_name) = last_name AND md5(email_address) = email_address) THEN
	        INSERT INTO customer
	        VALUES (first_name, last_name, date_of_birth, phone_number, email_address, address_street, address_city, address_county, address_postcode)
	        RETURNING id INTO customer_id;
2023-01-13 08:01:17.333 GMT [61451] ERROR:  syntax error at or near "ELSE" at character 1
2023-01-13 08:01:17.333 GMT [61451] STATEMENT:  ELSE
	        RAISE NOTICE 'CUSTOMER INFORMATION ALREADY PRESENT';
2023-01-13 08:01:17.334 GMT [61451] ERROR:  relation "unauthenticated.unauthenticated_personal_information" does not exist at character 33
2023-01-13 08:01:17.334 GMT [61451] STATEMENT:  SELECT id INTO customer_id FROM unauthenticated.unauthenticated_personal_information WHERE md5(first_name) = first_name AND md5(last_name) = last_name AND md5(email_address) = email_address;
2023-01-13 08:01:17.334 GMT [61451] ERROR:  syntax error at or near "IF" at character 5
2023-01-13 08:01:17.334 GMT [61451] STATEMENT:  END IF;
2023-01-13 08:01:17.334 GMT [61451] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:01:17.334 GMT [61451] STATEMENT:  RETURN customer_id;
2023-01-13 08:01:17.334 GMT [61451] WARNING:  there is no transaction in progress
2023-01-13 08:01:17.334 GMT [61451] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	-- Allows an unauthenticated user to create an online account
	CREATE OR REPLACE FUNCTION unauthenticated.create_online_account_details(customer_id INT, first_name TEXT, last_name TEXT, email_address TEXT, question_choice_ids INT[], question_answers TEXT[])
	RETURNS INT AS $$" at character 1
2023-01-13 08:01:17.334 GMT [61451] STATEMENT:  $$ LANGUAGE plpgsql;
	
	-- Allows an unauthenticated user to create an online account
	CREATE OR REPLACE FUNCTION unauthenticated.create_online_account_details(customer_id INT, first_name TEXT, last_name TEXT, email_address TEXT, question_choice_ids INT[], question_answers TEXT[])
	RETURNS INT AS $$
	DECLARE account_id INT;
2023-01-13 08:01:17.334 GMT [61451] ERROR:  syntax error at or near "INT" at character 27
2023-01-13 08:01:17.334 GMT [61451] STATEMENT:  DECLARE online_account_id INT;
2023-01-13 08:01:17.335 GMT [61451] ERROR:  syntax error at or near "INT" at character 28
2023-01-13 08:01:17.335 GMT [61451] STATEMENT:  DECLARE question_choice_id INT;
2023-01-13 08:01:17.335 GMT [61451] ERROR:  syntax error at or near "IF" at character 11
2023-01-13 08:01:17.335 GMT [61451] STATEMENT:  BEGIN
	    IF NOT EXISTS (SELECT FROM user_login WHERE username = username) THEN
	        INSERT INTO online_account (date_opened, sort_code, customer_id)
	        VALUES ((SELECT now()), (SELECT num FROM GENERATE_SERIES(1, 6) AS s(num) LIMIT 1), customer_id)
	        RETURNING id INTO account_id;
2023-01-13 08:01:17.335 GMT [61451] ERROR:  syntax error at or near "INTO" at character 131
2023-01-13 08:01:17.335 GMT [61451] STATEMENT:  INSERT INTO user_login (account_id, username, password)
	        VALUES (account_id, username, md5(password))
	        RETURNING id INTO online_account_id;
2023-01-13 08:01:17.335 GMT [61451] ERROR:  syntax error at or near "FOR" at character 1
2023-01-13 08:01:17.335 GMT [61451] STATEMENT:  FOR i IN 0..2 LOOP
	            
	            INSERT INTO user_login_security_question (question_choice_id, login_id)
	            VALUES (question_choice_ids[i], online_account_id)
	            RETURNING id INTO question_choice_id;
2023-01-13 08:01:17.335 GMT [61451] ERROR:  column "answer" of relation "security_question_answer" does not exist at character 39
2023-01-13 08:01:17.335 GMT [61451] STATEMENT:  INSERT INTO security_question_answer (answer, question_id)
	            VALUES (question_answers[i], question_choice_id);
2023-01-13 08:01:17.336 GMT [61451] ERROR:  syntax error at or near "LOOP" at character 5
2023-01-13 08:01:17.336 GMT [61451] STATEMENT:  END LOOP;
2023-01-13 08:01:17.336 GMT [61451] ERROR:  column "account_id" does not exist at character 117
2023-01-13 08:01:17.336 GMT [61451] HINT:  There is a column named "account_id" in table "authentication_log", but it cannot be referenced from this part of the query.
2023-01-13 08:01:17.336 GMT [61451] STATEMENT:  INSERT INTO authentication_log (log_description, log_date, account_id) VALUES ('New online account created', now(), account_id);
2023-01-13 08:01:17.336 GMT [61451] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:01:17.336 GMT [61451] STATEMENT:  RETURN account_id;
2023-01-13 08:01:17.336 GMT [61451] ERROR:  syntax error at or near "ELSE" at character 1
2023-01-13 08:01:17.336 GMT [61451] STATEMENT:  ELSE
	        RAISE NOTICE 'USERNAME ALREADY TAKEN';
2023-01-13 08:01:17.337 GMT [61451] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:01:17.337 GMT [61451] STATEMENT:  RETURN NULL;
2023-01-13 08:01:17.338 GMT [61451] ERROR:  syntax error at or near "IF" at character 5
2023-01-13 08:01:17.338 GMT [61451] STATEMENT:  END IF;
2023-01-13 08:01:17.338 GMT [61451] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:01:17.338 GMT [61451] STATEMENT:  RETURN success;
2023-01-13 08:01:17.338 GMT [61451] WARNING:  there is no transaction in progress
2023-01-13 08:01:17.339 GMT [61451] ERROR:  unterminated dollar-quoted string at or near "$$ LANGUAGE plpgsql;
	
	
	
	
	
	-- sample data for customers
	INSERT INTO customer (first_name, last_name, date_of_birth, phone_number, email_address, address_street, address_city, address_county, address_postcode)
	VALUES ('John', 'Smith', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('Jane', 'Doe', '1990-01-01', '01234567890', 'test@gmail.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Bloggs', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('John', 'Bloggs', '1990-01-01', '01234567890', 'hello@yahoo.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('Jane', 'Bloggs', '1990-01-01', '01234567890', 'test@outlook.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Doe', '1990-01-01', '01234567890', 'hello@outlook.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('John', 'Doe', '1990-01-01', '01234567890', 'mybankemail@icloud.com', '1 My Bank Street', 'My Bank City', 'My Bank County', 'MB1 1NK'),
	('Jane', 'Smith', '1990-01-01', '01234567890', 'bankemail@outlook.com', '1 Bank Street', 'Bank City', 'Bank County', 'BA1 1NK'),
	('Joe', 'Smith', '1990-01-01', '01234567890', 'example@icloud.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX');
	
	-- sample data for online account
	INSERT INTO online_account (date_opened, sort_code, customer_id)
	VALUES ('2020-01-01', '123456', 1),
	('2019-01-01', '126485', 2),
	('2018-01-01', '128475', 3),
	('2017-01-01', '129476', 4),
	('2016-01-01', '120386', 5),
	('2017-02-03', '127385', 6),
	('2018-02-04', '128256', 7),
	('2020-01-01', '129386', 8),
	('2020-01-01', '120386', 9);
	
	-- sample data for user login
	INSERT INTO user_login (account_id, username, password)
	VALUES (1, 'johnsmith', 'b29af57c2b3bba21e9df0cece40952c6'),
	(2, 'janedoe', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(3, 'joebloggs', 'b29af57c2b3bba21e9df0cece40952c6'),
	(4, 'johnbloggs', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(5, 'janebloggs', 'b29af57c2b3bba21e9df0cece40952c6'),
	(6, 'joedoe', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(7, 'johndoe', 'b29af57c2b3bba21e9df0cece40952c6'),
	(8, 'joesmith', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(9, 'janesmith', 'b29af57c2b3bba21e9df0cece40952c6');
	
	-- sample data for security question option
	INSERT INTO security_question_option (question_description)
	VALUES ('What is your favourite colour?'),
	('What is your favourite food?'),
	('What is your favourite animal?'),
	('What is your favourite sport?'),
	('What is your favourite movie?'),
	('What is your favourite book?'),
	('What is your favourite song?'),
	('What is your favourite band?'),
	('What is your favourite game?'),
	('What is your favourite TV show?');
	
	--sample data for user login security question
	INSERT INTO user_login_security_question (question_choice_id, login_id)
	VALUES (1, 1),
	(2, 2),
	(3, 3),
	(4, 4),
	(5, 5),
	(6, 6),
	(7, 7),
	(8, 8),
	(9, 9);
	
	-- sample data for security question answer
	INSERT INTO security_question_answer (question_answer, question_id)
	VALUES ('Red', 1),
	('Blue', 2),
	('Green', 3),
	('Yellow', 4),
	('Orange', 5),
	('Purple', 6),
	('Pink', 7),
	('Black', 8),
	('White', 9);
	
	INSERT INTO savings_account (account_number, account_id, current_balance, interest_rate)
	VALUES ('12345678', 1, 2000.00, 2.05);
	
	-- -- sample data for savings account
	-- INSERT INTO savings_account (current_balance, interest_rate, account_id)
	-- VALUES (2000.00, 2.05, 1),
	-- (1000.00, 2.05, 2),
	-- (5000.00, 2.05, 3),
	-- (10000.00, 2.05, 4),
	-- (20000.00, 2.05, 5),
	-- (50000.00, 2.05, 6),
	-- (100000.00, 2.05, 7),
	-- (200000.00, 2.05, 8);
	
	-- -- sample data for credit account
	-- INSERT INTO credit_account (outstanding_balance, credit_limit, interest_rate, account_id)
	-- VALUES (55.43, 2000.00, 4.22, 1),
	-- (100.00, 1000.00, 4.22, 2),
	-- (200.00, 5000.00, 4.22, 3),
	-- (300.00, 10000.00, 4.22, 4),
	-- (400.00, 20000.00, 4.22, 5),
	-- (500.00, 50000.00, 4.22, 6),
	-- (600.00, 100000.00, 4.22, 7),
	-- (700.00, 200000.00, 4.22, 8);
	
	-- -- sample data for debit account
	-- INSERT INTO debit_account (current_balance, interest_rate, account_id)
	-- VALUES (3465.43, 0.05, 1),
	-- (1000.00, 0.05, 1),
	-- (5000.00, 0.05, 2),
	-- (10000.00, 0.05, 3),
	-- (20000.00, 0.05, 4),
	-- (50000.00, 0.05, 5),
	-- (100000.00, 0.05, 6),
	-- (200000.00, 0.05, 9);
	
	-- -- sample data for loan
	-- INSERT INTO loan (loan_end_date, loan_amount, loan_type, account_id)
	-- VALUES ('2024-01-01', 10000, 'vehicle', 8),
	-- ('2023-03-04', 300000, 'mortgage', 8),
	-- ('2035-03-03', 400000, 'mortgage', 1),
	-- ('2025-04-05', 25000, 'vehicle', 1),
	-- ('2026-05-05', 34000, 'vehicle', 1),
	-- ('2023-06-07', 500000, 'mortgage', 2),
	-- ('2026-04-04', 60000, 'vehicle', 2),
	-- ('2024-03-03', 70000, 'vehicle', 2),
	-- ('2023-02-02', 800000, 'mortgage', 3),
	-- ('2022-01-01', 90000, 'vehicle', 3),
	-- ('2021-01-01', 100000, 'vehicle', 3),
	-- ('2020-01-01', 110000, 'mortgage', 4),
	-- ('2020-01-01', 12000, 'vehicle', 4),
	-- ('2020-01-01', 13000, 'vehicle', 4),
	-- ('2020-01-01', 140000, 'mortgage', 5),
	-- ('2020-01-01', 15000, 'vehicle', 5),
	-- ('2020-01-01', 16000, 'vehicle', 5),
	-- ('2020-01-01', 170000, 'mortgage', 6),
	-- ('2020-01-01', 18000, 'vehicle', 6),
	-- ('2020-01-01', 19000, 'vehicle', 6),
	-- ('2020-01-01', 200000, 'mortgage', 7),
	-- ('2020-01-01', 21000, 'vehicle', 7),
	-- ('2020-01-01', 22000, 'vehicle', 7);
	
	-- CREATE SCHEMA IF NOT EXISTS staff;
	
	-- SET search_path TO public, staff;" at character 1
2023-01-13 08:01:17.339 GMT [61451] STATEMENT:  $$ LANGUAGE plpgsql;
	
	
	
	
	
	-- sample data for customers
	INSERT INTO customer (first_name, last_name, date_of_birth, phone_number, email_address, address_street, address_city, address_county, address_postcode)
	VALUES ('John', 'Smith', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('Jane', 'Doe', '1990-01-01', '01234567890', 'test@gmail.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Bloggs', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('John', 'Bloggs', '1990-01-01', '01234567890', 'hello@yahoo.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('Jane', 'Bloggs', '1990-01-01', '01234567890', 'test@outlook.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Doe', '1990-01-01', '01234567890', 'hello@outlook.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('John', 'Doe', '1990-01-01', '01234567890', 'mybankemail@icloud.com', '1 My Bank Street', 'My Bank City', 'My Bank County', 'MB1 1NK'),
	('Jane', 'Smith', '1990-01-01', '01234567890', 'bankemail@outlook.com', '1 Bank Street', 'Bank City', 'Bank County', 'BA1 1NK'),
	('Joe', 'Smith', '1990-01-01', '01234567890', 'example@icloud.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX');
	
	-- sample data for online account
	INSERT INTO online_account (date_opened, sort_code, customer_id)
	VALUES ('2020-01-01', '123456', 1),
	('2019-01-01', '126485', 2),
	('2018-01-01', '128475', 3),
	('2017-01-01', '129476', 4),
	('2016-01-01', '120386', 5),
	('2017-02-03', '127385', 6),
	('2018-02-04', '128256', 7),
	('2020-01-01', '129386', 8),
	('2020-01-01', '120386', 9);
	
	-- sample data for user login
	INSERT INTO user_login (account_id, username, password)
	VALUES (1, 'johnsmith', 'b29af57c2b3bba21e9df0cece40952c6'),
	(2, 'janedoe', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(3, 'joebloggs', 'b29af57c2b3bba21e9df0cece40952c6'),
	(4, 'johnbloggs', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(5, 'janebloggs', 'b29af57c2b3bba21e9df0cece40952c6'),
	(6, 'joedoe', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(7, 'johndoe', 'b29af57c2b3bba21e9df0cece40952c6'),
	(8, 'joesmith', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(9, 'janesmith', 'b29af57c2b3bba21e9df0cece40952c6');
	
	-- sample data for security question option
	INSERT INTO security_question_option (question_description)
	VALUES ('What is your favourite colour?'),
	('What is your favourite food?'),
	('What is your favourite animal?'),
	('What is your favourite sport?'),
	('What is your favourite movie?'),
	('What is your favourite book?'),
	('What is your favourite song?'),
	('What is your favourite band?'),
	('What is your favourite game?'),
	('What is your favourite TV show?');
	
	--sample data for user login security question
	INSERT INTO user_login_security_question (question_choice_id, login_id)
	VALUES (1, 1),
	(2, 2),
	(3, 3),
	(4, 4),
	(5, 5),
	(6, 6),
	(7, 7),
	(8, 8),
	(9, 9);
	
	-- sample data for security question answer
	INSERT INTO security_question_answer (question_answer, question_id)
	VALUES ('Red', 1),
	('Blue', 2),
	('Green', 3),
	('Yellow', 4),
	('Orange', 5),
	('Purple', 6),
	('Pink', 7),
	('Black', 8),
	('White', 9);
	
	INSERT INTO savings_account (account_number, account_id, current_balance, interest_rate)
	VALUES ('12345678', 1, 2000.00, 2.05);
	
	-- -- sample data for savings account
	-- INSERT INTO savings_account (current_balance, interest_rate, account_id)
	-- VALUES (2000.00, 2.05, 1),
	-- (1000.00, 2.05, 2),
	-- (5000.00, 2.05, 3),
	-- (10000.00, 2.05, 4),
	-- (20000.00, 2.05, 5),
	-- (50000.00, 2.05, 6),
	-- (100000.00, 2.05, 7),
	-- (200000.00, 2.05, 8);
	
	-- -- sample data for credit account
	-- INSERT INTO credit_account (outstanding_balance, credit_limit, interest_rate, account_id)
	-- VALUES (55.43, 2000.00, 4.22, 1),
	-- (100.00, 1000.00, 4.22, 2),
	-- (200.00, 5000.00, 4.22, 3),
	-- (300.00, 10000.00, 4.22, 4),
	-- (400.00, 20000.00, 4.22, 5),
	-- (500.00, 50000.00, 4.22, 6),
	-- (600.00, 100000.00, 4.22, 7),
	-- (700.00, 200000.00, 4.22, 8);
	
	-- -- sample data for debit account
	-- INSERT INTO debit_account (current_balance, interest_rate, account_id)
	-- VALUES (3465.43, 0.05, 1),
	-- (1000.00, 0.05, 1),
	-- (5000.00, 0.05, 2),
	-- (10000.00, 0.05, 3),
	-- (20000.00, 0.05, 4),
	-- (50000.00, 0.05, 5),
	-- (100000.00, 0.05, 6),
	-- (200000.00, 0.05, 9);
	
	-- -- sample data for loan
	-- INSERT INTO loan (loan_end_date, loan_amount, loan_type, account_id)
	-- VALUES ('2024-01-01', 10000, 'vehicle', 8),
	-- ('2023-03-04', 300000, 'mortgage', 8),
	-- ('2035-03-03', 400000, 'mortgage', 1),
	-- ('2025-04-05', 25000, 'vehicle', 1),
	-- ('2026-05-05', 34000, 'vehicle', 1),
	-- ('2023-06-07', 500000, 'mortgage', 2),
	-- ('2026-04-04', 60000, 'vehicle', 2),
	-- ('2024-03-03', 70000, 'vehicle', 2),
	-- ('2023-02-02', 800000, 'mortgage', 3),
	-- ('2022-01-01', 90000, 'vehicle', 3),
	-- ('2021-01-01', 100000, 'vehicle', 3),
	-- ('2020-01-01', 110000, 'mortgage', 4),
	-- ('2020-01-01', 12000, 'vehicle', 4),
	-- ('2020-01-01', 13000, 'vehicle', 4),
	-- ('2020-01-01', 140000, 'mortgage', 5),
	-- ('2020-01-01', 15000, 'vehicle', 5),
	-- ('2020-01-01', 16000, 'vehicle', 5),
	-- ('2020-01-01', 170000, 'mortgage', 6),
	-- ('2020-01-01', 18000, 'vehicle', 6),
	-- ('2020-01-01', 19000, 'vehicle', 6),
	-- ('2020-01-01', 200000, 'mortgage', 7),
	-- ('2020-01-01', 21000, 'vehicle', 7),
	-- ('2020-01-01', 22000, 'vehicle', 7);
	
	-- CREATE SCHEMA IF NOT EXISTS staff;
	
	-- SET search_path TO public, staff;
2023-01-13 08:02:53.163 GMT [61415] LOG:  received fast shutdown request
2023-01-13 08:02:53.165 GMT [61415] LOG:  aborting any active transactions
2023-01-13 08:02:53.169 GMT [61415] LOG:  background worker "logical replication launcher" (PID 61422) exited with exit code 1
2023-01-13 08:02:53.173 GMT [61417] LOG:  shutting down
2023-01-13 08:02:53.223 GMT [61415] LOG:  database system is shut down
2023-01-13 08:02:54.849 GMT [61827] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-13 08:02:54.849 GMT [61827] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-13 08:02:54.851 GMT [61827] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-13 08:02:54.858 GMT [61828] LOG:  database system was shut down at 2023-01-13 08:02:54 GMT
2023-01-13 08:02:54.863 GMT [61827] LOG:  database system is ready to accept connections
2023-01-13 08:02:55.735 GMT [61866] ERROR:  syntax error at or near "DECLARE" at character 4670
2023-01-13 08:02:55.735 GMT [61866] STATEMENT:  CREATE OR REPLACE FUNCTION get_next_account_number()
	RETURNS INT AS $$
	DECLARE next_account_number INT;
	BEGIN
	    SELECT MAX(account_number) INTO next_account_number FROM debit_account;
	    IF next_account_number IS NULL THEN
	        next_account_number = 10000000;
	    ELSE
	        next_account_number = next_account_number + 1;
	    END IF;
	    RETURN next_account_number;
	END;
	
	CREATE SCHEMA IF NOT EXISTS staff;
	SET search_path TO public, staff, client;
	
	CREATE OR REPLACE VIEW 
	
	CREATE SCHEMA IF NOT EXISTS client;
	SET search_path TO public, client;
	
	
	CREATE OR REPLACE VIEW client.accounts AS
	    SELECT account_number, account_id FROM account;
	
	CREATE OR REPLACE VIEW client.debit_accounts AS
	    SELECT account.account_id, account.account_number, debit_account.current_balance, debit_account.interest_rate, debit_overdraft.overdraft_limit, debit_overdraft.overdraft_usage, debit_overdraft.interest_rate
	    FROM account
	    INNER JOIN debit_account ON account.account_number = debit_account.account_number
	    INNER JOIN debit_overdraft ON account.account_number = debit_overdraft.account_number;
	
	CREATE OR REPLACE VIEW client.debit_accounts_statements AS
	    SELECT debit_accounts.account_id, debit_accounts.account_number, debit_statement.id, debit_statement.starting_date, debit_statement.end_date, debit_statement.amount
	    FROM debit_accounts
	    INNER JOIN debit_statement ON debit_accounts.account_number = debit_statement.account_number;
	
	CREATE OR REPLACE VIEW client.debit_accounts_statement AS
	    SELECT debit_accounts_statements.account_id, debit_accounts_statements.account_number, debit_accounts_statements.id, debit_accounts_statements.starting_date, debit_accounts_statements.end_date, debit_accounts_statements.amount, transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date
	    FROM debit_accounts_statements
	    INNER JOIN transaction ON debit_accounts_statements.id = transaction.debit_statement_id;
	
	CREATE OR REPLACE VIEW client.credit_accounts AS
	    SELECT account.account_id, account.account_number, credit_account.outstanding_balance, credit_account.credit_limit, credit_account.interest_rate, credit_account_application.application_status
	    FROM account
	    INNER JOIN credit_account ON account.account_number = credit_account.account_number
	    INNER JOIN credit_account_application ON account.account_number = credit_account_application.account_number;
	
	CREATE OR REPLACE VIEW client.credit_accounts_statements AS
	    SELECT credit_accounts.account_id, credit_accounts.account_number, credit_statement.id, credit_statement.starting_date, credit_statement.end_date, credit_statement.amount, credit_statement.minimum_payment, credit_statement.minimum_payment_due_date
	    FROM credit_accounts
	    INNER JOIN credit_statement ON credit_accounts.account_number = credit_statement.account_number;
	
	CREATE OR REPLACE VIEW client.credit_accounts_statement AS
	    SELECT credit_accounts_statements.account_id, credit_accounts_statements.account_number, credit_accounts_statements.id, credit_accounts_statements.starting_date, credit_accounts_statements.end_date, credit_accounts_statements.amount, credit_accounts_statements.minimum_payment, credit_accounts_statements.minimum_payment_due_date, transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date
	    FROM credit_accounts_statements
	    INNER JOIN transaction ON credit_accounts_statements.id = transaction.credit_statement_id;
	
	CREATE OR REPLACE VIEW client.savings_accounts AS
	    SELECT account.account_id, account.account_number, savings_account.current_balance, savings_account.interest_rate
	    FROM account
	    INNER JOIN savings_account ON account.account_number = savings_account.account_number;
	
	CREATE OR REPLACE VIEW client.savings_accounts_statements AS
	    SELECT savings_accounts.account_id, savings_accounts.account_number, savings_statement.id, savings_statement.starting_date, savings_statement.end_date, savings_statement.amount
	    FROM savings_accounts
	    INNER JOIN savings_statement ON savings_accounts.account_number = savings_statement.account_number;
	
	CREATE OR REPLACE VIEW client.loans AS
	    SELECT loan.account_id, loan.id, loan.amount, loan.interest_rate, loan.term, loan_application.application_status
	    FROM loan
	    INNER JOIN loan_application ON loan.id = loan_application.account_id;
	
	CREATE OR REPLACE FUNCTION client.update_personal_information(first_name TEXT, last_name TEXT, date_of_birth DATE, phone_number TEXT, email_address TEXT, address_street TEXT, address_city TEXT, address_county TEXT, address_postcode TEXT, account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-13 08:02:55.735 GMT [61866] ERROR:  syntax error at or near "UPDATE" at character 11
2023-01-13 08:02:55.735 GMT [61866] STATEMENT:  BEGIN
	    UPDATE customer SET first_name = first_name, last_name = last_name, date_of_birth = date_of_birth, phone_number = phone_number, email_address = email_address, address_street = address_street, address_city = address_city, address_county = address_county, address_postcode = address_postcode
	    WHERE id = (SELECT customer_id FROM online_account WHERE id = account_id);
2023-01-13 08:02:55.736 GMT [61866] ERROR:  column "account_id" does not exist at character 76
2023-01-13 08:02:55.736 GMT [61866] HINT:  There is a column named "account_id" in table "management_log", but it cannot be referenced from this part of the query.
2023-01-13 08:02:55.736 GMT [61866] STATEMENT:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Updated personal information', CURRENT_DATE);
2023-01-13 08:02:55.736 GMT [61866] ERROR:  syntax error at or near "passed" at character 1
2023-01-13 08:02:55.736 GMT [61866] STATEMENT:  passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-13 08:02:55.737 GMT [61866] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:02:55.737 GMT [61866] STATEMENT:  RETURN passed;
2023-01-13 08:02:55.738 GMT [61866] WARNING:  there is no transaction in progress
2023-01-13 08:02:55.742 GMT [61866] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.update_password(account_identifier INT, new_password TEXT)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-13 08:02:55.742 GMT [61866] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.update_password(account_identifier INT, new_password TEXT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-13 08:02:55.742 GMT [61866] ERROR:  syntax error at or near "UPDATE" at character 11
2023-01-13 08:02:55.742 GMT [61866] STATEMENT:  BEGIN
	    UPDATE user_login SET password = md5(new_password)
	    WHERE account_id = account_identifier;
2023-01-13 08:02:55.742 GMT [61866] ERROR:  column "account_identifier" does not exist at character 76
2023-01-13 08:02:55.742 GMT [61866] STATEMENT:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Updated password', CURRENT_DATE);
2023-01-13 08:02:55.742 GMT [61866] ERROR:  syntax error at or near "passed" at character 1
2023-01-13 08:02:55.742 GMT [61866] STATEMENT:  passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-13 08:02:55.742 GMT [61866] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:02:55.742 GMT [61866] STATEMENT:  RETURN passed;
2023-01-13 08:02:55.742 GMT [61866] WARNING:  there is no transaction in progress
2023-01-13 08:02:55.742 GMT [61866] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.update_email(account_identifier INT, new_email TEXT)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-13 08:02:55.742 GMT [61866] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.update_email(account_identifier INT, new_email TEXT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-13 08:02:55.743 GMT [61866] ERROR:  syntax error at or near "UPDATE" at character 11
2023-01-13 08:02:55.743 GMT [61866] STATEMENT:  BEGIN
	    UPDATE user_login SET email = new_email
	    WHERE account_id = account_identifier;
2023-01-13 08:02:55.743 GMT [61866] ERROR:  column "account_identifier" does not exist at character 76
2023-01-13 08:02:55.743 GMT [61866] STATEMENT:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Updated email', CURRENT_DATE);
2023-01-13 08:02:55.743 GMT [61866] ERROR:  syntax error at or near "passed" at character 1
2023-01-13 08:02:55.743 GMT [61866] STATEMENT:  passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-13 08:02:55.743 GMT [61866] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:02:55.743 GMT [61866] STATEMENT:  RETURN passed;
2023-01-13 08:02:55.743 GMT [61866] WARNING:  there is no transaction in progress
2023-01-13 08:02:55.744 GMT [61866] ERROR:  schema "client" does not exist
2023-01-13 08:02:55.744 GMT [61866] STATEMENT:  CREATE OR REPLACE FUNCTION client.open_debit_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE debit_account_number INT;
	DECLARE next_account_number INT;
	BEGIN
	
	    SELECT get_next_account_number() INTO next_account_number;
	
	    INSERT INTO debit_account (account_number, account_id, current_balance, interest_rate) VALUES (next_account_number ,account_id, 0, 0.01) RETURNING id INTO debit_account_number;
	    INSERT INTO debit_statement (starting_date, end_date, amount, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, debit_account_id);
	    INSERT INTO debit_overdraft (overdraft_usage, overdraft_limit, interest_rate, account_id) VALUES (0, 0, 0.01, debit_account_id);
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened debit account', CURRENT_DATE);
	    passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
	    RETURN passed;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:02:55.744 GMT [61866] ERROR:  schema "client" does not exist
2023-01-13 08:02:55.744 GMT [61866] STATEMENT:  CREATE OR REPLACE FUNCTION client.open_credit_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE credit_account_number INT;
	DECLARE next_account_number INT;
	BEGIN
	
	    SELECT get_next_account_number() INTO next_account_number;
	
	    INSERT INTO credit_account (account_number, outstanding_balance, credit_limit, interest_rate, account_id) VALUES (next_account_number ,0, 0, 24.9, account_id) RETURNING id INTO credit_account_id;
	    INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_id) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_id);
	    INSERT INTO credit_account_application (credit_account_id, application_status) VALUES (credit_account_id, 'PENDING');
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened credit account', CURRENT_DATE);
	END
	$$ LANGUAGE plpgsql;
2023-01-13 08:02:55.745 GMT [61866] ERROR:  schema "client" does not exist
2023-01-13 08:02:55.745 GMT [61866] STATEMENT:  CREATE OR REPLACE FUNCTION client.open_savings_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE savings_account_id INT;
	DECLARE next_account_number INT;
	BEGIN
	
	    SELECT get_next_account_number() INTO next_account_number;
	
	    INSERT INTO savings_account (account_number, account_id, current_balance, interest_rate) VALUES (next_account_number ,account_id, 0, 0.01) RETURNING id INTO savings_account_id;
	    INSERT INTO savings_statement (starting_date, end_date, amount, account_id) VALUES (CURRENT_DATE, CURRENT_DATE, 0, savings_account_id);
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened savings account', CURRENT_DATE);
	    INSERT INTO external_account (account_id, external_account_number) VALUES (savings_account_id, '12345678');
	    passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
	    RETURN passed;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:02:55.746 GMT [61866] ERROR:  schema "client" does not exist
2023-01-13 08:02:55.746 GMT [61866] STATEMENT:  CREATE OR REPLACE FUNCTION client.open_loan(account_id INT, loan_amount INT, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE loan_id INT;
	BEGIN
	    INSERT INTO loan (account_id, loan_amount, loan_end_date, loan_type, loan_interest_rate) VALUES (account_id, loan_amount, loan_end_date, loan_type, loan_interest_rate) RETURNING id INTO loan_id;
	    INSERT INTO loan_statement (starting_date, end_date, amount, account_id) VALUES (CURRENT_DATE, CURRENT_DATE, 0, loan_id);
	    INSERT INTO loan_application (loan_id, application_status) VALUES (loan_id, 'PENDING');
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened loan', CURRENT_DATE);
	    passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
	    RETURN passed;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:02:55.746 GMT [61866] ERROR:  syntax error at or near "INSERT" at character 657
2023-01-13 08:02:55.746 GMT [61866] STATEMENT:  CREATE OR REPLACE FUNCTION client.get_account_type(account_number INT)
	RETURNS TEXT AS $$
	DECLARE account_type TEXT;
	BEGIN
	    SELECT CASE WHEN EXISTS (SELECT * FROM debit_account WHERE account_number = account_number) THEN 'DEBIT'
	                WHEN EXISTS (SELECT * FROM credit_account WHERE account_number = account_number) THEN 'CREDIT'
	                WHEN EXISTS (SELECT * FROM savings_account WHERE account_number = account_number) THEN 'SAVINGS'
	                ELSE 'UNKNOWN' END INTO account_type;
	    RETURN account_type;
	END;
	
	CREATE OR REPLACE FUNCTION client.view_accounts(account_id INT)
	RETURNS TABLE (account_number INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed accounts', CURRENT_DATE);
	    RETURN QUERY
	        SELECT account.*, COALESCE(debit_accounts.current_balance, credit_accounts.outstanding_balance, savings_accounts.current_balance, loans.loan_amount) AS balance,
	        COALESCE(debit_accounts.interest_rate, credit_accounts.interest_rate, savings_accounts.interest_rate, loans.loan_interest_rate) AS interest_rate,
	        get_account_type(account.account_number) AS account_type
	END;
2023-01-13 08:02:55.746 GMT [61866] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, overdraft_limit NUMERIC, overdraft_usage NUMERIC, interest_rate, external_account_number INT) AS $$" at character 1
2023-01-13 08:02:55.746 GMT [61866] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, overdraft_limit NUMERIC, overdraft_usage NUMERIC, interest_rate, external_account_number INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed debit accounts', CURRENT_DATE);
2023-01-13 08:02:55.746 GMT [61866] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:02:55.746 GMT [61866] STATEMENT:  RETURN QUERY
	        SELECT * FROM client.debit_accounts WHERE account_id = account_id;
2023-01-13 08:02:55.747 GMT [61866] WARNING:  there is no transaction in progress
2023-01-13 08:02:55.747 GMT [61866] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_accounts(account_id INT)
	RETURNS TABLE (id INT, outstanding_balance NUMERIC, credit_limit NUMERIC, interest_rate NUMERIC, application_status TEXT) AS $$" at character 1
2023-01-13 08:02:55.747 GMT [61866] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_accounts(account_id INT)
	RETURNS TABLE (id INT, outstanding_balance NUMERIC, credit_limit NUMERIC, interest_rate NUMERIC, application_status TEXT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit accounts', CURRENT_DATE);
2023-01-13 08:02:55.747 GMT [61866] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:02:55.747 GMT [61866] STATEMENT:  RETURN QUERY
	        SELECT * FROM client.credit_accounts WHERE account_id = account_id;
2023-01-13 08:02:55.747 GMT [61866] WARNING:  there is no transaction in progress
2023-01-13 08:02:55.747 GMT [61866] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_savings_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, external_account_number INT) AS $$" at character 1
2023-01-13 08:02:55.747 GMT [61866] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_savings_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, external_account_number INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings accounts', CURRENT_DATE);
2023-01-13 08:02:55.747 GMT [61866] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:02:55.747 GMT [61866] STATEMENT:  RETURN QUERY
	        SELECT * FROM client.savings_accounts WHERE account_id = account_id;
2023-01-13 08:02:55.747 GMT [61866] WARNING:  there is no transaction in progress
2023-01-13 08:02:55.747 GMT [61866] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_loans(account_id INT)
	RETURNS TABLE (id INT, loan_amount NUMERIC, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC, application_status TEXT) AS $$" at character 1
2023-01-13 08:02:55.747 GMT [61866] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_loans(account_id INT)
	RETURNS TABLE (id INT, loan_amount NUMERIC, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC, application_status TEXT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed loans', CURRENT_DATE);
2023-01-13 08:02:55.748 GMT [61866] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:02:55.748 GMT [61866] STATEMENT:  RETURN QUERY
	        SELECT * FROM client.loans WHERE account_id = account_id;
2023-01-13 08:02:55.748 GMT [61866] WARNING:  there is no transaction in progress
2023-01-13 08:02:55.748 GMT [61866] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_savings_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-13 08:02:55.748 GMT [61866] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_savings_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statements', CURRENT_DATE);
2023-01-13 08:02:55.748 GMT [61866] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:02:55.748 GMT [61866] STATEMENT:  RETURN QUERY
	        SELECT savings_accounts_statements.account_id, savings_accounts_statements.account_number, savings_accounts_statements.starting_date, savings_accounts_statements.end_date, savings_accounts_statements.amount
	        FROM client.savings_accounts_statements
	        WHERE savings_accounts_statements.account_number = account_number
	        AND savings_accounts_statements.account_id = account_id;
2023-01-13 08:02:55.748 GMT [61866] WARNING:  there is no transaction in progress
2023-01-13 08:02:55.748 GMT [61866] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-13 08:02:55.748 GMT [61866] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed debit statements', CURRENT_DATE);
2023-01-13 08:02:55.749 GMT [61866] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:02:55.749 GMT [61866] STATEMENT:  RETURN QUERY
	        SELECT debit_accounts_statements.account_id, debit_accounts_statements.account_number, debit_accounts_statements.starting_date, debit_accounts_statements.end_date, debit_accounts_statements.amount
	        FROM client.debit_accounts_statements
	        WHERE debit_accounts_statements.account_number = account_number
	        AND debit_accounts_statements.account_id = account_id;
2023-01-13 08:02:55.749 GMT [61866] WARNING:  there is no transaction in progress
2023-01-13 08:02:55.749 GMT [61866] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-13 08:02:55.749 GMT [61866] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statements', CURRENT_DATE);
2023-01-13 08:02:55.749 GMT [61866] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:02:55.749 GMT [61866] STATEMENT:  RETURN QUERY
	        SELECT credit_accounts_statements.account_id, credit_accounts_statements.account_number, credit_accounts_statements.starting_date, credit_accounts_statements.end_date, credit_accounts_statements.amount
	        FROM client.credit_accounts_statements
	        WHERE credit_accounts_statements.account_number = account_number
	        AND credit_accounts_statements.account_id = account_id;
2023-01-13 08:02:55.749 GMT [61866] WARNING:  there is no transaction in progress
2023-01-13 08:02:55.749 GMT [61866] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-13 08:02:55.749 GMT [61866] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed debit statement', CURRENT_DATE);
2023-01-13 08:02:55.750 GMT [61866] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:02:55.750 GMT [61866] STATEMENT:  RETURN QUERY
	        SELECT debit_accounts_statement.account_id, debit_accounts_statement.account_number, debit_accounts_statement.starting_date, debit_accounts_statement.end_date, debit_accounts_statement.amount
	        FROM client.debit_accounts_statement
	        WHERE debit_accounts_statement.account_id = account_id
	        AND debit_accounts_statement.account_number = account_number
	        AND debit_accounts_statement.statement_id = statement_id;
2023-01-13 08:02:55.750 GMT [61866] WARNING:  there is no transaction in progress
2023-01-13 08:02:55.750 GMT [61866] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-13 08:02:55.750 GMT [61866] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statement', CURRENT_DATE);
2023-01-13 08:02:55.751 GMT [61866] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:02:55.751 GMT [61866] STATEMENT:  RETURN QUERY
	        SELECT credit_accounts_statement.account_id, credit_accounts_statement.account_number, credit_accounts_statement.starting_date, credit_accounts_statement.end_date, credit_accounts_statement.amount
	        FROM client.credit_accounts_statement
	        WHERE credit_accounts_statement.account_id = account_id
	        AND credit_accounts_statement.account_number = account_number
	        AND credit_accounts_statement.statement_id = statement_id;
2023-01-13 08:02:55.751 GMT [61866] WARNING:  there is no transaction in progress
2023-01-13 08:02:55.751 GMT [61866] ERROR:  syntax error at or near "DECLARE" at character 1790
2023-01-13 08:02:55.751 GMT [61866] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_savings_statement(account_id INT, savings_account_id INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT savings_accounts_statement.account_id, savings_accounts_statement.account_number, savings_accounts_statement.starting_date, savings_accounts_statement.end_date, savings_accounts_statement.amount
	        FROM client.savings_accounts_statement
	        WHERE savings_accounts_statement.account_id = account_id
	        AND savings_accounts_statement.account_number = savings_account_id
	        AND savings_accounts_statement.statement_id = statement_id;
	END;
	
	CREATE SCHEMA IF NOT EXISTS unauthenticated;
	SET search_path TO unauthenticated, public;
	
	-- Allows an unauthenticated user to match hashes to hashes of personal information contained in the customer table
	CREATE OR REPLACE VIEW unauthenticated.unauthenticated_personal_information AS
	SELECT id, md5(first_name) AS first_name, md5(last_name) AS last_name, md5(email_address) AS email_address
	FROM customer;
	
	-- Allows an unauthenticated user to view hashes of usernames contained in the user_login table
	CREATE OR REPLACE VIEW unauthenticated.unauthenticated_login AS
	SELECT md5(username) AS username FROM user_login;
	
	-- Allows a user to insert personal information into the online banking system
	CREATE OR REPLACE FUNCTION unauthenticated.create_personal_info(first_name TEXT, last_name TEXT, date_of_birth DATE, phone_number TEXT, email_address TEXT, address_street TEXT, address_city TEXT, address_county TEXT, address_postcode TEXT)
	RETURNS INT AS $$
	DECLARE customer_id INT;
2023-01-13 08:02:55.751 GMT [61866] ERROR:  syntax error at or near "IF" at character 11
2023-01-13 08:02:55.751 GMT [61866] STATEMENT:  BEGIN
	    IF NOT EXISTS (SELECT FROM unauthenticated.unauthenticated_personal_information WHERE md5(first_name) = first_name AND md5(last_name) = last_name AND md5(email_address) = email_address) THEN
	        INSERT INTO customer
	        VALUES (first_name, last_name, date_of_birth, phone_number, email_address, address_street, address_city, address_county, address_postcode)
	        RETURNING id INTO customer_id;
2023-01-13 08:02:55.753 GMT [61866] ERROR:  syntax error at or near "ELSE" at character 1
2023-01-13 08:02:55.753 GMT [61866] STATEMENT:  ELSE
	        RAISE NOTICE 'CUSTOMER INFORMATION ALREADY PRESENT';
2023-01-13 08:02:55.753 GMT [61866] ERROR:  relation "unauthenticated.unauthenticated_personal_information" does not exist at character 33
2023-01-13 08:02:55.753 GMT [61866] STATEMENT:  SELECT id INTO customer_id FROM unauthenticated.unauthenticated_personal_information WHERE md5(first_name) = first_name AND md5(last_name) = last_name AND md5(email_address) = email_address;
2023-01-13 08:02:55.753 GMT [61866] ERROR:  syntax error at or near "IF" at character 5
2023-01-13 08:02:55.753 GMT [61866] STATEMENT:  END IF;
2023-01-13 08:02:55.753 GMT [61866] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:02:55.753 GMT [61866] STATEMENT:  RETURN customer_id;
2023-01-13 08:02:55.754 GMT [61866] WARNING:  there is no transaction in progress
2023-01-13 08:02:55.754 GMT [61866] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	-- Allows an unauthenticated user to create an online account
	CREATE OR REPLACE FUNCTION unauthenticated.create_online_account_details(customer_id INT, first_name TEXT, last_name TEXT, email_address TEXT, question_choice_ids INT[], question_answers TEXT[])
	RETURNS INT AS $$" at character 1
2023-01-13 08:02:55.754 GMT [61866] STATEMENT:  $$ LANGUAGE plpgsql;
	
	-- Allows an unauthenticated user to create an online account
	CREATE OR REPLACE FUNCTION unauthenticated.create_online_account_details(customer_id INT, first_name TEXT, last_name TEXT, email_address TEXT, question_choice_ids INT[], question_answers TEXT[])
	RETURNS INT AS $$
	DECLARE account_id INT;
2023-01-13 08:02:55.754 GMT [61866] ERROR:  syntax error at or near "INT" at character 27
2023-01-13 08:02:55.754 GMT [61866] STATEMENT:  DECLARE online_account_id INT;
2023-01-13 08:02:55.754 GMT [61866] ERROR:  syntax error at or near "INT" at character 28
2023-01-13 08:02:55.754 GMT [61866] STATEMENT:  DECLARE question_choice_id INT;
2023-01-13 08:02:55.754 GMT [61866] ERROR:  syntax error at or near "IF" at character 11
2023-01-13 08:02:55.754 GMT [61866] STATEMENT:  BEGIN
	    IF NOT EXISTS (SELECT FROM user_login WHERE username = username) THEN
	        INSERT INTO online_account (date_opened, sort_code, customer_id)
	        VALUES ((SELECT now()), (SELECT num FROM GENERATE_SERIES(1, 6) AS s(num) LIMIT 1), customer_id)
	        RETURNING id INTO account_id;
2023-01-13 08:02:55.754 GMT [61866] ERROR:  syntax error at or near "INTO" at character 131
2023-01-13 08:02:55.754 GMT [61866] STATEMENT:  INSERT INTO user_login (account_id, username, password)
	        VALUES (account_id, username, md5(password))
	        RETURNING id INTO online_account_id;
2023-01-13 08:02:55.754 GMT [61866] ERROR:  syntax error at or near "FOR" at character 1
2023-01-13 08:02:55.754 GMT [61866] STATEMENT:  FOR i IN 0..2 LOOP
	            
	            INSERT INTO user_login_security_question (question_choice_id, login_id)
	            VALUES (question_choice_ids[i], online_account_id)
	            RETURNING id INTO question_choice_id;
2023-01-13 08:02:55.755 GMT [61866] ERROR:  column "answer" of relation "security_question_answer" does not exist at character 39
2023-01-13 08:02:55.755 GMT [61866] STATEMENT:  INSERT INTO security_question_answer (answer, question_id)
	            VALUES (question_answers[i], question_choice_id);
2023-01-13 08:02:55.755 GMT [61866] ERROR:  syntax error at or near "LOOP" at character 5
2023-01-13 08:02:55.755 GMT [61866] STATEMENT:  END LOOP;
2023-01-13 08:02:55.755 GMT [61866] ERROR:  column "account_id" does not exist at character 117
2023-01-13 08:02:55.755 GMT [61866] HINT:  There is a column named "account_id" in table "authentication_log", but it cannot be referenced from this part of the query.
2023-01-13 08:02:55.755 GMT [61866] STATEMENT:  INSERT INTO authentication_log (log_description, log_date, account_id) VALUES ('New online account created', now(), account_id);
2023-01-13 08:02:55.755 GMT [61866] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:02:55.755 GMT [61866] STATEMENT:  RETURN account_id;
2023-01-13 08:02:55.755 GMT [61866] ERROR:  syntax error at or near "ELSE" at character 1
2023-01-13 08:02:55.755 GMT [61866] STATEMENT:  ELSE
	        RAISE NOTICE 'USERNAME ALREADY TAKEN';
2023-01-13 08:02:55.756 GMT [61866] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:02:55.756 GMT [61866] STATEMENT:  RETURN NULL;
2023-01-13 08:02:55.756 GMT [61866] ERROR:  syntax error at or near "IF" at character 5
2023-01-13 08:02:55.756 GMT [61866] STATEMENT:  END IF;
2023-01-13 08:02:55.756 GMT [61866] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:02:55.756 GMT [61866] STATEMENT:  RETURN success;
2023-01-13 08:02:55.757 GMT [61866] WARNING:  there is no transaction in progress
2023-01-13 08:02:55.757 GMT [61866] ERROR:  unterminated dollar-quoted string at or near "$$ LANGUAGE plpgsql;
	
	
	
	
	
	-- sample data for customers
	INSERT INTO customer (first_name, last_name, date_of_birth, phone_number, email_address, address_street, address_city, address_county, address_postcode)
	VALUES ('John', 'Smith', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('Jane', 'Doe', '1990-01-01', '01234567890', 'test@gmail.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Bloggs', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('John', 'Bloggs', '1990-01-01', '01234567890', 'hello@yahoo.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('Jane', 'Bloggs', '1990-01-01', '01234567890', 'test@outlook.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Doe', '1990-01-01', '01234567890', 'hello@outlook.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('John', 'Doe', '1990-01-01', '01234567890', 'mybankemail@icloud.com', '1 My Bank Street', 'My Bank City', 'My Bank County', 'MB1 1NK'),
	('Jane', 'Smith', '1990-01-01', '01234567890', 'bankemail@outlook.com', '1 Bank Street', 'Bank City', 'Bank County', 'BA1 1NK'),
	('Joe', 'Smith', '1990-01-01', '01234567890', 'example@icloud.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX');
	
	-- sample data for online account
	INSERT INTO online_account (date_opened, sort_code, customer_id)
	VALUES ('2020-01-01', '123456', 1),
	('2019-01-01', '126485', 2),
	('2018-01-01', '128475', 3),
	('2017-01-01', '129476', 4),
	('2016-01-01', '120386', 5),
	('2017-02-03', '127385', 6),
	('2018-02-04', '128256', 7),
	('2020-01-01', '129386', 8),
	('2020-01-01', '120386', 9);
	
	-- sample data for user login
	INSERT INTO user_login (account_id, username, password)
	VALUES (1, 'johnsmith', 'b29af57c2b3bba21e9df0cece40952c6'),
	(2, 'janedoe', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(3, 'joebloggs', 'b29af57c2b3bba21e9df0cece40952c6'),
	(4, 'johnbloggs', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(5, 'janebloggs', 'b29af57c2b3bba21e9df0cece40952c6'),
	(6, 'joedoe', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(7, 'johndoe', 'b29af57c2b3bba21e9df0cece40952c6'),
	(8, 'joesmith', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(9, 'janesmith', 'b29af57c2b3bba21e9df0cece40952c6');
	
	-- sample data for security question option
	INSERT INTO security_question_option (question_description)
	VALUES ('What is your favourite colour?'),
	('What is your favourite food?'),
	('What is your favourite animal?'),
	('What is your favourite sport?'),
	('What is your favourite movie?'),
	('What is your favourite book?'),
	('What is your favourite song?'),
	('What is your favourite band?'),
	('What is your favourite game?'),
	('What is your favourite TV show?');
	
	--sample data for user login security question
	INSERT INTO user_login_security_question (question_choice_id, login_id)
	VALUES (1, 1),
	(2, 2),
	(3, 3),
	(4, 4),
	(5, 5),
	(6, 6),
	(7, 7),
	(8, 8),
	(9, 9);
	
	-- sample data for security question answer
	INSERT INTO security_question_answer (question_answer, question_id)
	VALUES ('Red', 1),
	('Blue', 2),
	('Green', 3),
	('Yellow', 4),
	('Orange', 5),
	('Purple', 6),
	('Pink', 7),
	('Black', 8),
	('White', 9);
	
	INSERT INTO savings_account (account_number, account_id, current_balance, interest_rate)
	VALUES ('12345678', 1, 2000.00, 2.05);
	
	-- -- sample data for savings account
	-- INSERT INTO savings_account (current_balance, interest_rate, account_id)
	-- VALUES (2000.00, 2.05, 1),
	-- (1000.00, 2.05, 2),
	-- (5000.00, 2.05, 3),
	-- (10000.00, 2.05, 4),
	-- (20000.00, 2.05, 5),
	-- (50000.00, 2.05, 6),
	-- (100000.00, 2.05, 7),
	-- (200000.00, 2.05, 8);
	
	-- -- sample data for credit account
	-- INSERT INTO credit_account (outstanding_balance, credit_limit, interest_rate, account_id)
	-- VALUES (55.43, 2000.00, 4.22, 1),
	-- (100.00, 1000.00, 4.22, 2),
	-- (200.00, 5000.00, 4.22, 3),
	-- (300.00, 10000.00, 4.22, 4),
	-- (400.00, 20000.00, 4.22, 5),
	-- (500.00, 50000.00, 4.22, 6),
	-- (600.00, 100000.00, 4.22, 7),
	-- (700.00, 200000.00, 4.22, 8);
	
	-- -- sample data for debit account
	-- INSERT INTO debit_account (current_balance, interest_rate, account_id)
	-- VALUES (3465.43, 0.05, 1),
	-- (1000.00, 0.05, 1),
	-- (5000.00, 0.05, 2),
	-- (10000.00, 0.05, 3),
	-- (20000.00, 0.05, 4),
	-- (50000.00, 0.05, 5),
	-- (100000.00, 0.05, 6),
	-- (200000.00, 0.05, 9);
	
	-- -- sample data for loan
	-- INSERT INTO loan (loan_end_date, loan_amount, loan_type, account_id)
	-- VALUES ('2024-01-01', 10000, 'vehicle', 8),
	-- ('2023-03-04', 300000, 'mortgage', 8),
	-- ('2035-03-03', 400000, 'mortgage', 1),
	-- ('2025-04-05', 25000, 'vehicle', 1),
	-- ('2026-05-05', 34000, 'vehicle', 1),
	-- ('2023-06-07', 500000, 'mortgage', 2),
	-- ('2026-04-04', 60000, 'vehicle', 2),
	-- ('2024-03-03', 70000, 'vehicle', 2),
	-- ('2023-02-02', 800000, 'mortgage', 3),
	-- ('2022-01-01', 90000, 'vehicle', 3),
	-- ('2021-01-01', 100000, 'vehicle', 3),
	-- ('2020-01-01', 110000, 'mortgage', 4),
	-- ('2020-01-01', 12000, 'vehicle', 4),
	-- ('2020-01-01', 13000, 'vehicle', 4),
	-- ('2020-01-01', 140000, 'mortgage', 5),
	-- ('2020-01-01', 15000, 'vehicle', 5),
	-- ('2020-01-01', 16000, 'vehicle', 5),
	-- ('2020-01-01', 170000, 'mortgage', 6),
	-- ('2020-01-01', 18000, 'vehicle', 6),
	-- ('2020-01-01', 19000, 'vehicle', 6),
	-- ('2020-01-01', 200000, 'mortgage', 7),
	-- ('2020-01-01', 21000, 'vehicle', 7),
	-- ('2020-01-01', 22000, 'vehicle', 7);
	
	-- CREATE SCHEMA IF NOT EXISTS staff;
	
	-- SET search_path TO public, staff;" at character 1
2023-01-13 08:02:55.757 GMT [61866] STATEMENT:  $$ LANGUAGE plpgsql;
	
	
	
	
	
	-- sample data for customers
	INSERT INTO customer (first_name, last_name, date_of_birth, phone_number, email_address, address_street, address_city, address_county, address_postcode)
	VALUES ('John', 'Smith', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('Jane', 'Doe', '1990-01-01', '01234567890', 'test@gmail.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Bloggs', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('John', 'Bloggs', '1990-01-01', '01234567890', 'hello@yahoo.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('Jane', 'Bloggs', '1990-01-01', '01234567890', 'test@outlook.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Doe', '1990-01-01', '01234567890', 'hello@outlook.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('John', 'Doe', '1990-01-01', '01234567890', 'mybankemail@icloud.com', '1 My Bank Street', 'My Bank City', 'My Bank County', 'MB1 1NK'),
	('Jane', 'Smith', '1990-01-01', '01234567890', 'bankemail@outlook.com', '1 Bank Street', 'Bank City', 'Bank County', 'BA1 1NK'),
	('Joe', 'Smith', '1990-01-01', '01234567890', 'example@icloud.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX');
	
	-- sample data for online account
	INSERT INTO online_account (date_opened, sort_code, customer_id)
	VALUES ('2020-01-01', '123456', 1),
	('2019-01-01', '126485', 2),
	('2018-01-01', '128475', 3),
	('2017-01-01', '129476', 4),
	('2016-01-01', '120386', 5),
	('2017-02-03', '127385', 6),
	('2018-02-04', '128256', 7),
	('2020-01-01', '129386', 8),
	('2020-01-01', '120386', 9);
	
	-- sample data for user login
	INSERT INTO user_login (account_id, username, password)
	VALUES (1, 'johnsmith', 'b29af57c2b3bba21e9df0cece40952c6'),
	(2, 'janedoe', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(3, 'joebloggs', 'b29af57c2b3bba21e9df0cece40952c6'),
	(4, 'johnbloggs', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(5, 'janebloggs', 'b29af57c2b3bba21e9df0cece40952c6'),
	(6, 'joedoe', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(7, 'johndoe', 'b29af57c2b3bba21e9df0cece40952c6'),
	(8, 'joesmith', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(9, 'janesmith', 'b29af57c2b3bba21e9df0cece40952c6');
	
	-- sample data for security question option
	INSERT INTO security_question_option (question_description)
	VALUES ('What is your favourite colour?'),
	('What is your favourite food?'),
	('What is your favourite animal?'),
	('What is your favourite sport?'),
	('What is your favourite movie?'),
	('What is your favourite book?'),
	('What is your favourite song?'),
	('What is your favourite band?'),
	('What is your favourite game?'),
	('What is your favourite TV show?');
	
	--sample data for user login security question
	INSERT INTO user_login_security_question (question_choice_id, login_id)
	VALUES (1, 1),
	(2, 2),
	(3, 3),
	(4, 4),
	(5, 5),
	(6, 6),
	(7, 7),
	(8, 8),
	(9, 9);
	
	-- sample data for security question answer
	INSERT INTO security_question_answer (question_answer, question_id)
	VALUES ('Red', 1),
	('Blue', 2),
	('Green', 3),
	('Yellow', 4),
	('Orange', 5),
	('Purple', 6),
	('Pink', 7),
	('Black', 8),
	('White', 9);
	
	INSERT INTO savings_account (account_number, account_id, current_balance, interest_rate)
	VALUES ('12345678', 1, 2000.00, 2.05);
	
	-- -- sample data for savings account
	-- INSERT INTO savings_account (current_balance, interest_rate, account_id)
	-- VALUES (2000.00, 2.05, 1),
	-- (1000.00, 2.05, 2),
	-- (5000.00, 2.05, 3),
	-- (10000.00, 2.05, 4),
	-- (20000.00, 2.05, 5),
	-- (50000.00, 2.05, 6),
	-- (100000.00, 2.05, 7),
	-- (200000.00, 2.05, 8);
	
	-- -- sample data for credit account
	-- INSERT INTO credit_account (outstanding_balance, credit_limit, interest_rate, account_id)
	-- VALUES (55.43, 2000.00, 4.22, 1),
	-- (100.00, 1000.00, 4.22, 2),
	-- (200.00, 5000.00, 4.22, 3),
	-- (300.00, 10000.00, 4.22, 4),
	-- (400.00, 20000.00, 4.22, 5),
	-- (500.00, 50000.00, 4.22, 6),
	-- (600.00, 100000.00, 4.22, 7),
	-- (700.00, 200000.00, 4.22, 8);
	
	-- -- sample data for debit account
	-- INSERT INTO debit_account (current_balance, interest_rate, account_id)
	-- VALUES (3465.43, 0.05, 1),
	-- (1000.00, 0.05, 1),
	-- (5000.00, 0.05, 2),
	-- (10000.00, 0.05, 3),
	-- (20000.00, 0.05, 4),
	-- (50000.00, 0.05, 5),
	-- (100000.00, 0.05, 6),
	-- (200000.00, 0.05, 9);
	
	-- -- sample data for loan
	-- INSERT INTO loan (loan_end_date, loan_amount, loan_type, account_id)
	-- VALUES ('2024-01-01', 10000, 'vehicle', 8),
	-- ('2023-03-04', 300000, 'mortgage', 8),
	-- ('2035-03-03', 400000, 'mortgage', 1),
	-- ('2025-04-05', 25000, 'vehicle', 1),
	-- ('2026-05-05', 34000, 'vehicle', 1),
	-- ('2023-06-07', 500000, 'mortgage', 2),
	-- ('2026-04-04', 60000, 'vehicle', 2),
	-- ('2024-03-03', 70000, 'vehicle', 2),
	-- ('2023-02-02', 800000, 'mortgage', 3),
	-- ('2022-01-01', 90000, 'vehicle', 3),
	-- ('2021-01-01', 100000, 'vehicle', 3),
	-- ('2020-01-01', 110000, 'mortgage', 4),
	-- ('2020-01-01', 12000, 'vehicle', 4),
	-- ('2020-01-01', 13000, 'vehicle', 4),
	-- ('2020-01-01', 140000, 'mortgage', 5),
	-- ('2020-01-01', 15000, 'vehicle', 5),
	-- ('2020-01-01', 16000, 'vehicle', 5),
	-- ('2020-01-01', 170000, 'mortgage', 6),
	-- ('2020-01-01', 18000, 'vehicle', 6),
	-- ('2020-01-01', 19000, 'vehicle', 6),
	-- ('2020-01-01', 200000, 'mortgage', 7),
	-- ('2020-01-01', 21000, 'vehicle', 7),
	-- ('2020-01-01', 22000, 'vehicle', 7);
	
	-- CREATE SCHEMA IF NOT EXISTS staff;
	
	-- SET search_path TO public, staff;
2023-01-13 08:04:41.495 GMT [61827] LOG:  received fast shutdown request
2023-01-13 08:04:41.498 GMT [61827] LOG:  aborting any active transactions
2023-01-13 08:04:41.504 GMT [61827] LOG:  background worker "logical replication launcher" (PID 61834) exited with exit code 1
2023-01-13 08:04:41.505 GMT [61829] LOG:  shutting down
2023-01-13 08:04:41.568 GMT [61827] LOG:  database system is shut down
2023-01-13 08:04:43.211 GMT [62262] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-13 08:04:43.211 GMT [62262] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-13 08:04:43.213 GMT [62262] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-13 08:04:43.218 GMT [62263] LOG:  database system was shut down at 2023-01-13 08:04:42 GMT
2023-01-13 08:04:43.224 GMT [62262] LOG:  database system is ready to accept connections
2023-01-13 08:04:44.165 GMT [62298] ERROR:  syntax error at or near "DECLARE" at character 4686
2023-01-13 08:04:44.165 GMT [62298] STATEMENT:  CREATE OR REPLACE FUNCTION get_next_account_number()
	RETURNS INT AS $$
	DECLARE next_account_number INT;
	BEGIN
	    SELECT MAX(account_number) INTO next_account_number FROM debit_account;
	    IF next_account_number IS NULL THEN
	        next_account_number = 10000000;
	    ELSE
	        next_account_number = next_account_number + 1;
	    END IF;
	    RETURN next_account_number;
	END;
	
	CREATE SCHEMA IF NOT EXISTS staff;
	SET search_path TO public, staff, client;
	
	CREATE OR REPLACE VIEW 
	
	CREATE SCHEMA IF NOT EXISTS client;
	SET search_path TO public, client;
	
	
	CREATE OR REPLACE VIEW client.accounts AS
	    SELECT account_number, account_id FROM account;
	
	CREATE OR REPLACE VIEW client.debit_accounts AS
	    SELECT account.account_id, account.account_number, debit_account.current_balance, debit_account.interest_rate, debit_overdraft.overdraft_limit, debit_overdraft.overdraft_usage, debit_overdraft.interest_rate
	    FROM account
	    INNER JOIN debit_account ON account.account_number = debit_account.account_number
	    INNER JOIN debit_overdraft ON account.account_number = debit_overdraft.account_number;
	
	CREATE OR REPLACE VIEW client.debit_accounts_statements AS
	    SELECT debit_accounts.account_id, debit_accounts.account_number, debit_statement.id, debit_statement.starting_date, debit_statement.end_date, debit_statement.amount
	    FROM debit_accounts
	    INNER JOIN debit_statement ON debit_accounts.account_number = debit_statement.account_number;
	
	CREATE OR REPLACE VIEW client.debit_accounts_statement AS
	    SELECT debit_accounts_statements.account_id, debit_accounts_statements.account_number, debit_accounts_statements.id, debit_accounts_statements.starting_date, debit_accounts_statements.end_date, debit_accounts_statements.amount, transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date
	    FROM debit_accounts_statements
	    INNER JOIN transaction ON debit_accounts_statements.id = transaction.debit_statement_id;
	
	CREATE OR REPLACE VIEW client.credit_accounts AS
	    SELECT account.account_id, account.account_number, credit_account.outstanding_balance, credit_account.credit_limit, credit_account.interest_rate, credit_account_application.application_status
	    FROM account
	    INNER JOIN credit_account ON account.account_number = credit_account.account_number
	    INNER JOIN credit_account_application ON account.account_number = credit_account_application.account_number;
	
	CREATE OR REPLACE VIEW client.credit_accounts_statements AS
	    SELECT credit_accounts.account_id, credit_accounts.account_number, credit_statement.id, credit_statement.starting_date, credit_statement.end_date, credit_statement.amount, credit_statement.minimum_payment, credit_statement.minimum_payment_due_date
	    FROM credit_accounts
	    INNER JOIN credit_statement ON credit_accounts.account_number = credit_statement.account_number;
	
	CREATE OR REPLACE VIEW client.credit_accounts_statement AS
	    SELECT credit_accounts_statements.account_id, credit_accounts_statements.account_number, credit_accounts_statements.id, credit_accounts_statements.starting_date, credit_accounts_statements.end_date, credit_accounts_statements.amount, credit_accounts_statements.minimum_payment, credit_accounts_statements.minimum_payment_due_date, transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date
	    FROM credit_accounts_statements
	    INNER JOIN transaction ON credit_accounts_statements.id = transaction.credit_statement_id;
	
	CREATE OR REPLACE VIEW client.savings_accounts AS
	    SELECT account.account_id, account.account_number, savings_account.current_balance, savings_account.interest_rate
	    FROM account
	    INNER JOIN savings_account ON account.account_number = savings_account.account_number;
	
	CREATE OR REPLACE VIEW client.savings_accounts_statements AS
	    SELECT savings_accounts.account_id, savings_accounts.account_number, savings_statement.id, savings_statement.starting_date, savings_statement.end_date, savings_statement.amount
	    FROM savings_accounts
	    INNER JOIN savings_statement ON savings_accounts.account_number = savings_statement.account_number;
	
	CREATE OR REPLACE VIEW client.loans AS
	    SELECT loan.account_id, loan.id, loan.amount, loan.interest_rate, loan.term, loan_application.application_status
	    FROM loan
	    INNER JOIN loan_application ON loan.id = loan_application.account_id;
	
	CREATE OR REPLACE FUNCTION client.update_personal_information(account_id INT, first_name TEXT, last_name TEXT, date_of_birth DATE, phone_number TEXT, email_address TEXT, address_street TEXT, address_city TEXT, address_county TEXT, address_postcode TEXT, account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-13 08:04:44.168 GMT [62298] ERROR:  syntax error at or near "UPDATE" at character 11
2023-01-13 08:04:44.168 GMT [62298] STATEMENT:  BEGIN
	    UPDATE customer SET first_name = first_name, last_name = last_name, date_of_birth = date_of_birth, phone_number = phone_number, email_address = email_address, address_street = address_street, address_city = address_city, address_county = address_county, address_postcode = address_postcode
	    WHERE id = (SELECT customer_id FROM online_account WHERE id = account_id);
2023-01-13 08:04:44.168 GMT [62298] ERROR:  column "account_id" does not exist at character 76
2023-01-13 08:04:44.168 GMT [62298] HINT:  There is a column named "account_id" in table "management_log", but it cannot be referenced from this part of the query.
2023-01-13 08:04:44.168 GMT [62298] STATEMENT:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Updated personal information', CURRENT_DATE);
2023-01-13 08:04:44.169 GMT [62298] ERROR:  syntax error at or near "passed" at character 1
2023-01-13 08:04:44.169 GMT [62298] STATEMENT:  passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-13 08:04:44.170 GMT [62298] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:04:44.170 GMT [62298] STATEMENT:  RETURN passed;
2023-01-13 08:04:44.170 GMT [62298] WARNING:  there is no transaction in progress
2023-01-13 08:04:44.170 GMT [62298] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.update_password(account_identifier INT, new_password TEXT)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-13 08:04:44.170 GMT [62298] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.update_password(account_identifier INT, new_password TEXT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-13 08:04:44.171 GMT [62298] ERROR:  syntax error at or near "UPDATE" at character 11
2023-01-13 08:04:44.171 GMT [62298] STATEMENT:  BEGIN
	    UPDATE user_login SET password = md5(new_password)
	    WHERE account_id = account_identifier;
2023-01-13 08:04:44.171 GMT [62298] ERROR:  column "account_identifier" does not exist at character 76
2023-01-13 08:04:44.171 GMT [62298] STATEMENT:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Updated password', CURRENT_DATE);
2023-01-13 08:04:44.171 GMT [62298] ERROR:  syntax error at or near "passed" at character 1
2023-01-13 08:04:44.171 GMT [62298] STATEMENT:  passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-13 08:04:44.171 GMT [62298] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:04:44.171 GMT [62298] STATEMENT:  RETURN passed;
2023-01-13 08:04:44.171 GMT [62298] WARNING:  there is no transaction in progress
2023-01-13 08:04:44.172 GMT [62298] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.update_email(account_identifier INT, new_email TEXT)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-13 08:04:44.172 GMT [62298] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.update_email(account_identifier INT, new_email TEXT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-13 08:04:44.172 GMT [62298] ERROR:  syntax error at or near "UPDATE" at character 11
2023-01-13 08:04:44.172 GMT [62298] STATEMENT:  BEGIN
	    UPDATE user_login SET email = new_email
	    WHERE account_id = account_identifier;
2023-01-13 08:04:44.172 GMT [62298] ERROR:  column "account_identifier" does not exist at character 76
2023-01-13 08:04:44.172 GMT [62298] STATEMENT:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Updated email', CURRENT_DATE);
2023-01-13 08:04:44.173 GMT [62298] ERROR:  syntax error at or near "passed" at character 1
2023-01-13 08:04:44.173 GMT [62298] STATEMENT:  passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-13 08:04:44.173 GMT [62298] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:04:44.173 GMT [62298] STATEMENT:  RETURN passed;
2023-01-13 08:04:44.173 GMT [62298] WARNING:  there is no transaction in progress
2023-01-13 08:04:44.174 GMT [62298] ERROR:  schema "client" does not exist
2023-01-13 08:04:44.174 GMT [62298] STATEMENT:  CREATE OR REPLACE FUNCTION client.open_debit_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE debit_account_number INT;
	DECLARE next_account_number INT;
	BEGIN
	
	    SELECT get_next_account_number() INTO next_account_number;
	
	    INSERT INTO debit_account (account_number, account_id, current_balance, interest_rate) VALUES (next_account_number ,account_id, 0, 0.01) RETURNING id INTO debit_account_number;
	    INSERT INTO debit_statement (starting_date, end_date, amount, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, debit_account_id);
	    INSERT INTO debit_overdraft (overdraft_usage, overdraft_limit, interest_rate, account_id) VALUES (0, 0, 0.01, debit_account_id);
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened debit account', CURRENT_DATE);
	    passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
	    RETURN passed;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:04:44.174 GMT [62298] ERROR:  schema "client" does not exist
2023-01-13 08:04:44.174 GMT [62298] STATEMENT:  CREATE OR REPLACE FUNCTION client.open_credit_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE credit_account_number INT;
	DECLARE next_account_number INT;
	BEGIN
	
	    SELECT get_next_account_number() INTO next_account_number;
	
	    INSERT INTO credit_account (account_number, outstanding_balance, credit_limit, interest_rate, account_id) VALUES (next_account_number ,0, 0, 24.9, account_id) RETURNING id INTO credit_account_id;
	    INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_id) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_id);
	    INSERT INTO credit_account_application (credit_account_id, application_status) VALUES (credit_account_id, 'PENDING');
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened credit account', CURRENT_DATE);
	END
	$$ LANGUAGE plpgsql;
2023-01-13 08:04:44.174 GMT [62298] ERROR:  schema "client" does not exist
2023-01-13 08:04:44.174 GMT [62298] STATEMENT:  CREATE OR REPLACE FUNCTION client.open_savings_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE savings_account_id INT;
	DECLARE next_account_number INT;
	BEGIN
	
	    SELECT get_next_account_number() INTO next_account_number;
	
	    INSERT INTO savings_account (account_number, account_id, current_balance, interest_rate) VALUES (next_account_number ,account_id, 0, 0.01) RETURNING id INTO savings_account_id;
	    INSERT INTO savings_statement (starting_date, end_date, amount, account_id) VALUES (CURRENT_DATE, CURRENT_DATE, 0, savings_account_id);
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened savings account', CURRENT_DATE);
	    INSERT INTO external_account (account_id, external_account_number) VALUES (savings_account_id, '12345678');
	    passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
	    RETURN passed;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:04:44.175 GMT [62298] ERROR:  schema "client" does not exist
2023-01-13 08:04:44.175 GMT [62298] STATEMENT:  CREATE OR REPLACE FUNCTION client.open_loan(account_id INT, loan_amount INT, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE loan_id INT;
	BEGIN
	    INSERT INTO loan (account_id, loan_amount, loan_end_date, loan_type, loan_interest_rate) VALUES (account_id, loan_amount, loan_end_date, loan_type, loan_interest_rate) RETURNING id INTO loan_id;
	    INSERT INTO loan_statement (starting_date, end_date, amount, account_id) VALUES (CURRENT_DATE, CURRENT_DATE, 0, loan_id);
	    INSERT INTO loan_application (loan_id, application_status) VALUES (loan_id, 'PENDING');
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened loan', CURRENT_DATE);
	    passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
	    RETURN passed;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:04:44.175 GMT [62298] ERROR:  syntax error at or near "INSERT" at character 657
2023-01-13 08:04:44.175 GMT [62298] STATEMENT:  CREATE OR REPLACE FUNCTION client.get_account_type(account_number INT)
	RETURNS TEXT AS $$
	DECLARE account_type TEXT;
	BEGIN
	    SELECT CASE WHEN EXISTS (SELECT * FROM debit_account WHERE account_number = account_number) THEN 'DEBIT'
	                WHEN EXISTS (SELECT * FROM credit_account WHERE account_number = account_number) THEN 'CREDIT'
	                WHEN EXISTS (SELECT * FROM savings_account WHERE account_number = account_number) THEN 'SAVINGS'
	                ELSE 'UNKNOWN' END INTO account_type;
	    RETURN account_type;
	END;
	
	CREATE OR REPLACE FUNCTION client.view_accounts(account_id INT)
	RETURNS TABLE (account_number INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed accounts', CURRENT_DATE);
	    RETURN QUERY
	        SELECT account.*, COALESCE(debit_accounts.current_balance, credit_accounts.outstanding_balance, savings_accounts.current_balance, loans.loan_amount) AS balance,
	        COALESCE(debit_accounts.interest_rate, credit_accounts.interest_rate, savings_accounts.interest_rate, loans.loan_interest_rate) AS interest_rate,
	        get_account_type(account.account_number) AS account_type
	END;
2023-01-13 08:04:44.175 GMT [62298] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, overdraft_limit NUMERIC, overdraft_usage NUMERIC, interest_rate, external_account_number INT) AS $$" at character 1
2023-01-13 08:04:44.175 GMT [62298] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, overdraft_limit NUMERIC, overdraft_usage NUMERIC, interest_rate, external_account_number INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed debit accounts', CURRENT_DATE);
2023-01-13 08:04:44.175 GMT [62298] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:04:44.175 GMT [62298] STATEMENT:  RETURN QUERY
	        SELECT * FROM client.debit_accounts WHERE account_id = account_id;
2023-01-13 08:04:44.176 GMT [62298] WARNING:  there is no transaction in progress
2023-01-13 08:04:44.176 GMT [62298] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_accounts(account_id INT)
	RETURNS TABLE (id INT, outstanding_balance NUMERIC, credit_limit NUMERIC, interest_rate NUMERIC, application_status TEXT) AS $$" at character 1
2023-01-13 08:04:44.176 GMT [62298] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_accounts(account_id INT)
	RETURNS TABLE (id INT, outstanding_balance NUMERIC, credit_limit NUMERIC, interest_rate NUMERIC, application_status TEXT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit accounts', CURRENT_DATE);
2023-01-13 08:04:44.176 GMT [62298] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:04:44.176 GMT [62298] STATEMENT:  RETURN QUERY
	        SELECT * FROM client.credit_accounts WHERE account_id = account_id;
2023-01-13 08:04:44.176 GMT [62298] WARNING:  there is no transaction in progress
2023-01-13 08:04:44.176 GMT [62298] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_savings_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, external_account_number INT) AS $$" at character 1
2023-01-13 08:04:44.176 GMT [62298] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_savings_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, external_account_number INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings accounts', CURRENT_DATE);
2023-01-13 08:04:44.177 GMT [62298] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:04:44.177 GMT [62298] STATEMENT:  RETURN QUERY
	        SELECT * FROM client.savings_accounts WHERE account_id = account_id;
2023-01-13 08:04:44.178 GMT [62298] WARNING:  there is no transaction in progress
2023-01-13 08:04:44.178 GMT [62298] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_loans(account_id INT)
	RETURNS TABLE (id INT, loan_amount NUMERIC, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC, application_status TEXT) AS $$" at character 1
2023-01-13 08:04:44.178 GMT [62298] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_loans(account_id INT)
	RETURNS TABLE (id INT, loan_amount NUMERIC, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC, application_status TEXT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed loans', CURRENT_DATE);
2023-01-13 08:04:44.178 GMT [62298] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:04:44.178 GMT [62298] STATEMENT:  RETURN QUERY
	        SELECT * FROM client.loans WHERE account_id = account_id;
2023-01-13 08:04:44.178 GMT [62298] WARNING:  there is no transaction in progress
2023-01-13 08:04:44.178 GMT [62298] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_savings_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-13 08:04:44.178 GMT [62298] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_savings_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statements', CURRENT_DATE);
2023-01-13 08:04:44.179 GMT [62298] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:04:44.179 GMT [62298] STATEMENT:  RETURN QUERY
	        SELECT savings_accounts_statements.account_id, savings_accounts_statements.account_number, savings_accounts_statements.starting_date, savings_accounts_statements.end_date, savings_accounts_statements.amount
	        FROM client.savings_accounts_statements
	        WHERE savings_accounts_statements.account_number = account_number
	        AND savings_accounts_statements.account_id = account_id;
2023-01-13 08:04:44.179 GMT [62298] WARNING:  there is no transaction in progress
2023-01-13 08:04:44.179 GMT [62298] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-13 08:04:44.179 GMT [62298] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed debit statements', CURRENT_DATE);
2023-01-13 08:04:44.181 GMT [62298] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:04:44.181 GMT [62298] STATEMENT:  RETURN QUERY
	        SELECT debit_accounts_statements.account_id, debit_accounts_statements.account_number, debit_accounts_statements.starting_date, debit_accounts_statements.end_date, debit_accounts_statements.amount
	        FROM client.debit_accounts_statements
	        WHERE debit_accounts_statements.account_number = account_number
	        AND debit_accounts_statements.account_id = account_id;
2023-01-13 08:04:44.185 GMT [62298] WARNING:  there is no transaction in progress
2023-01-13 08:04:44.185 GMT [62298] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-13 08:04:44.185 GMT [62298] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statements', CURRENT_DATE);
2023-01-13 08:04:44.186 GMT [62298] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:04:44.186 GMT [62298] STATEMENT:  RETURN QUERY
	        SELECT credit_accounts_statements.account_id, credit_accounts_statements.account_number, credit_accounts_statements.starting_date, credit_accounts_statements.end_date, credit_accounts_statements.amount
	        FROM client.credit_accounts_statements
	        WHERE credit_accounts_statements.account_number = account_number
	        AND credit_accounts_statements.account_id = account_id;
2023-01-13 08:04:44.186 GMT [62298] WARNING:  there is no transaction in progress
2023-01-13 08:04:44.187 GMT [62298] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-13 08:04:44.187 GMT [62298] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed debit statement', CURRENT_DATE);
2023-01-13 08:04:44.187 GMT [62298] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:04:44.187 GMT [62298] STATEMENT:  RETURN QUERY
	        SELECT debit_accounts_statement.account_id, debit_accounts_statement.account_number, debit_accounts_statement.starting_date, debit_accounts_statement.end_date, debit_accounts_statement.amount
	        FROM client.debit_accounts_statement
	        WHERE debit_accounts_statement.account_id = account_id
	        AND debit_accounts_statement.account_number = account_number
	        AND debit_accounts_statement.statement_id = statement_id;
2023-01-13 08:04:44.188 GMT [62298] WARNING:  there is no transaction in progress
2023-01-13 08:04:44.188 GMT [62298] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-13 08:04:44.188 GMT [62298] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statement', CURRENT_DATE);
2023-01-13 08:04:44.188 GMT [62298] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:04:44.188 GMT [62298] STATEMENT:  RETURN QUERY
	        SELECT credit_accounts_statement.account_id, credit_accounts_statement.account_number, credit_accounts_statement.starting_date, credit_accounts_statement.end_date, credit_accounts_statement.amount
	        FROM client.credit_accounts_statement
	        WHERE credit_accounts_statement.account_id = account_id
	        AND credit_accounts_statement.account_number = account_number
	        AND credit_accounts_statement.statement_id = statement_id;
2023-01-13 08:04:44.189 GMT [62298] WARNING:  there is no transaction in progress
2023-01-13 08:04:44.189 GMT [62298] ERROR:  syntax error at or near "DECLARE" at character 1790
2023-01-13 08:04:44.189 GMT [62298] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_savings_statement(account_id INT, savings_account_id INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT savings_accounts_statement.account_id, savings_accounts_statement.account_number, savings_accounts_statement.starting_date, savings_accounts_statement.end_date, savings_accounts_statement.amount
	        FROM client.savings_accounts_statement
	        WHERE savings_accounts_statement.account_id = account_id
	        AND savings_accounts_statement.account_number = savings_account_id
	        AND savings_accounts_statement.statement_id = statement_id;
	END;
	
	CREATE SCHEMA IF NOT EXISTS unauthenticated;
	SET search_path TO unauthenticated, public;
	
	-- Allows an unauthenticated user to match hashes to hashes of personal information contained in the customer table
	CREATE OR REPLACE VIEW unauthenticated.unauthenticated_personal_information AS
	SELECT id, md5(first_name) AS first_name, md5(last_name) AS last_name, md5(email_address) AS email_address
	FROM customer;
	
	-- Allows an unauthenticated user to view hashes of usernames contained in the user_login table
	CREATE OR REPLACE VIEW unauthenticated.unauthenticated_login AS
	SELECT md5(username) AS username FROM user_login;
	
	-- Allows a user to insert personal information into the online banking system
	CREATE OR REPLACE FUNCTION unauthenticated.create_personal_info(first_name TEXT, last_name TEXT, date_of_birth DATE, phone_number TEXT, email_address TEXT, address_street TEXT, address_city TEXT, address_county TEXT, address_postcode TEXT)
	RETURNS INT AS $$
	DECLARE customer_id INT;
2023-01-13 08:04:44.190 GMT [62298] ERROR:  syntax error at or near "IF" at character 11
2023-01-13 08:04:44.190 GMT [62298] STATEMENT:  BEGIN
	    IF NOT EXISTS (SELECT FROM unauthenticated.unauthenticated_personal_information WHERE md5(first_name) = first_name AND md5(last_name) = last_name AND md5(email_address) = email_address) THEN
	        INSERT INTO customer
	        VALUES (first_name, last_name, date_of_birth, phone_number, email_address, address_street, address_city, address_county, address_postcode)
	        RETURNING id INTO customer_id;
2023-01-13 08:04:44.195 GMT [62298] ERROR:  syntax error at or near "ELSE" at character 1
2023-01-13 08:04:44.195 GMT [62298] STATEMENT:  ELSE
	        RAISE NOTICE 'CUSTOMER INFORMATION ALREADY PRESENT';
2023-01-13 08:04:44.195 GMT [62298] ERROR:  relation "unauthenticated.unauthenticated_personal_information" does not exist at character 33
2023-01-13 08:04:44.195 GMT [62298] STATEMENT:  SELECT id INTO customer_id FROM unauthenticated.unauthenticated_personal_information WHERE md5(first_name) = first_name AND md5(last_name) = last_name AND md5(email_address) = email_address;
2023-01-13 08:04:44.196 GMT [62298] ERROR:  syntax error at or near "IF" at character 5
2023-01-13 08:04:44.196 GMT [62298] STATEMENT:  END IF;
2023-01-13 08:04:44.196 GMT [62298] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:04:44.196 GMT [62298] STATEMENT:  RETURN customer_id;
2023-01-13 08:04:44.197 GMT [62298] WARNING:  there is no transaction in progress
2023-01-13 08:04:44.197 GMT [62298] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	-- Allows an unauthenticated user to create an online account
	CREATE OR REPLACE FUNCTION unauthenticated.create_online_account_details(customer_id INT, first_name TEXT, last_name TEXT, email_address TEXT, question_choice_ids INT[], question_answers TEXT[])
	RETURNS INT AS $$" at character 1
2023-01-13 08:04:44.197 GMT [62298] STATEMENT:  $$ LANGUAGE plpgsql;
	
	-- Allows an unauthenticated user to create an online account
	CREATE OR REPLACE FUNCTION unauthenticated.create_online_account_details(customer_id INT, first_name TEXT, last_name TEXT, email_address TEXT, question_choice_ids INT[], question_answers TEXT[])
	RETURNS INT AS $$
	DECLARE account_id INT;
2023-01-13 08:04:44.197 GMT [62298] ERROR:  syntax error at or near "INT" at character 27
2023-01-13 08:04:44.197 GMT [62298] STATEMENT:  DECLARE online_account_id INT;
2023-01-13 08:04:44.198 GMT [62298] ERROR:  syntax error at or near "INT" at character 28
2023-01-13 08:04:44.198 GMT [62298] STATEMENT:  DECLARE question_choice_id INT;
2023-01-13 08:04:44.198 GMT [62298] ERROR:  syntax error at or near "IF" at character 11
2023-01-13 08:04:44.198 GMT [62298] STATEMENT:  BEGIN
	    IF NOT EXISTS (SELECT FROM user_login WHERE username = username) THEN
	        INSERT INTO online_account (date_opened, sort_code, customer_id)
	        VALUES ((SELECT now()), (SELECT num FROM GENERATE_SERIES(1, 6) AS s(num) LIMIT 1), customer_id)
	        RETURNING id INTO account_id;
2023-01-13 08:04:44.198 GMT [62298] ERROR:  syntax error at or near "INTO" at character 131
2023-01-13 08:04:44.198 GMT [62298] STATEMENT:  INSERT INTO user_login (account_id, username, password)
	        VALUES (account_id, username, md5(password))
	        RETURNING id INTO online_account_id;
2023-01-13 08:04:44.199 GMT [62298] ERROR:  syntax error at or near "FOR" at character 1
2023-01-13 08:04:44.199 GMT [62298] STATEMENT:  FOR i IN 0..2 LOOP
	            
	            INSERT INTO user_login_security_question (question_choice_id, login_id)
	            VALUES (question_choice_ids[i], online_account_id)
	            RETURNING id INTO question_choice_id;
2023-01-13 08:04:44.199 GMT [62298] ERROR:  column "answer" of relation "security_question_answer" does not exist at character 39
2023-01-13 08:04:44.199 GMT [62298] STATEMENT:  INSERT INTO security_question_answer (answer, question_id)
	            VALUES (question_answers[i], question_choice_id);
2023-01-13 08:04:44.200 GMT [62298] ERROR:  syntax error at or near "LOOP" at character 5
2023-01-13 08:04:44.200 GMT [62298] STATEMENT:  END LOOP;
2023-01-13 08:04:44.200 GMT [62298] ERROR:  column "account_id" does not exist at character 117
2023-01-13 08:04:44.200 GMT [62298] HINT:  There is a column named "account_id" in table "authentication_log", but it cannot be referenced from this part of the query.
2023-01-13 08:04:44.200 GMT [62298] STATEMENT:  INSERT INTO authentication_log (log_description, log_date, account_id) VALUES ('New online account created', now(), account_id);
2023-01-13 08:04:44.201 GMT [62298] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:04:44.201 GMT [62298] STATEMENT:  RETURN account_id;
2023-01-13 08:04:44.201 GMT [62298] ERROR:  syntax error at or near "ELSE" at character 1
2023-01-13 08:04:44.201 GMT [62298] STATEMENT:  ELSE
	        RAISE NOTICE 'USERNAME ALREADY TAKEN';
2023-01-13 08:04:44.201 GMT [62298] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:04:44.201 GMT [62298] STATEMENT:  RETURN NULL;
2023-01-13 08:04:44.201 GMT [62298] ERROR:  syntax error at or near "IF" at character 5
2023-01-13 08:04:44.201 GMT [62298] STATEMENT:  END IF;
2023-01-13 08:04:44.202 GMT [62298] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:04:44.202 GMT [62298] STATEMENT:  RETURN success;
2023-01-13 08:04:44.202 GMT [62298] WARNING:  there is no transaction in progress
2023-01-13 08:04:44.202 GMT [62298] ERROR:  unterminated dollar-quoted string at or near "$$ LANGUAGE plpgsql;
	
	
	
	
	
	-- sample data for customers
	INSERT INTO customer (first_name, last_name, date_of_birth, phone_number, email_address, address_street, address_city, address_county, address_postcode)
	VALUES ('John', 'Smith', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('Jane', 'Doe', '1990-01-01', '01234567890', 'test@gmail.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Bloggs', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('John', 'Bloggs', '1990-01-01', '01234567890', 'hello@yahoo.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('Jane', 'Bloggs', '1990-01-01', '01234567890', 'test@outlook.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Doe', '1990-01-01', '01234567890', 'hello@outlook.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('John', 'Doe', '1990-01-01', '01234567890', 'mybankemail@icloud.com', '1 My Bank Street', 'My Bank City', 'My Bank County', 'MB1 1NK'),
	('Jane', 'Smith', '1990-01-01', '01234567890', 'bankemail@outlook.com', '1 Bank Street', 'Bank City', 'Bank County', 'BA1 1NK'),
	('Joe', 'Smith', '1990-01-01', '01234567890', 'example@icloud.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX');
	
	-- sample data for online account
	INSERT INTO online_account (date_opened, sort_code, customer_id)
	VALUES ('2020-01-01', '123456', 1),
	('2019-01-01', '126485', 2),
	('2018-01-01', '128475', 3),
	('2017-01-01', '129476', 4),
	('2016-01-01', '120386', 5),
	('2017-02-03', '127385', 6),
	('2018-02-04', '128256', 7),
	('2020-01-01', '129386', 8),
	('2020-01-01', '120386', 9);
	
	-- sample data for user login
	INSERT INTO user_login (account_id, username, password)
	VALUES (1, 'johnsmith', 'b29af57c2b3bba21e9df0cece40952c6'),
	(2, 'janedoe', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(3, 'joebloggs', 'b29af57c2b3bba21e9df0cece40952c6'),
	(4, 'johnbloggs', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(5, 'janebloggs', 'b29af57c2b3bba21e9df0cece40952c6'),
	(6, 'joedoe', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(7, 'johndoe', 'b29af57c2b3bba21e9df0cece40952c6'),
	(8, 'joesmith', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(9, 'janesmith', 'b29af57c2b3bba21e9df0cece40952c6');
	
	-- sample data for security question option
	INSERT INTO security_question_option (question_description)
	VALUES ('What is your favourite colour?'),
	('What is your favourite food?'),
	('What is your favourite animal?'),
	('What is your favourite sport?'),
	('What is your favourite movie?'),
	('What is your favourite book?'),
	('What is your favourite song?'),
	('What is your favourite band?'),
	('What is your favourite game?'),
	('What is your favourite TV show?');
	
	--sample data for user login security question
	INSERT INTO user_login_security_question (question_choice_id, login_id)
	VALUES (1, 1),
	(2, 2),
	(3, 3),
	(4, 4),
	(5, 5),
	(6, 6),
	(7, 7),
	(8, 8),
	(9, 9);
	
	-- sample data for security question answer
	INSERT INTO security_question_answer (question_answer, question_id)
	VALUES ('Red', 1),
	('Blue', 2),
	('Green', 3),
	('Yellow', 4),
	('Orange', 5),
	('Purple', 6),
	('Pink', 7),
	('Black', 8),
	('White', 9);
	
	INSERT INTO savings_account (account_number, account_id, current_balance, interest_rate)
	VALUES ('12345678', 1, 2000.00, 2.05);
	
	-- -- sample data for savings account
	-- INSERT INTO savings_account (current_balance, interest_rate, account_id)
	-- VALUES (2000.00, 2.05, 1),
	-- (1000.00, 2.05, 2),
	-- (5000.00, 2.05, 3),
	-- (10000.00, 2.05, 4),
	-- (20000.00, 2.05, 5),
	-- (50000.00, 2.05, 6),
	-- (100000.00, 2.05, 7),
	-- (200000.00, 2.05, 8);
	
	-- -- sample data for credit account
	-- INSERT INTO credit_account (outstanding_balance, credit_limit, interest_rate, account_id)
	-- VALUES (55.43, 2000.00, 4.22, 1),
	-- (100.00, 1000.00, 4.22, 2),
	-- (200.00, 5000.00, 4.22, 3),
	-- (300.00, 10000.00, 4.22, 4),
	-- (400.00, 20000.00, 4.22, 5),
	-- (500.00, 50000.00, 4.22, 6),
	-- (600.00, 100000.00, 4.22, 7),
	-- (700.00, 200000.00, 4.22, 8);
	
	-- -- sample data for debit account
	-- INSERT INTO debit_account (current_balance, interest_rate, account_id)
	-- VALUES (3465.43, 0.05, 1),
	-- (1000.00, 0.05, 1),
	-- (5000.00, 0.05, 2),
	-- (10000.00, 0.05, 3),
	-- (20000.00, 0.05, 4),
	-- (50000.00, 0.05, 5),
	-- (100000.00, 0.05, 6),
	-- (200000.00, 0.05, 9);
	
	-- -- sample data for loan
	-- INSERT INTO loan (loan_end_date, loan_amount, loan_type, account_id)
	-- VALUES ('2024-01-01', 10000, 'vehicle', 8),
	-- ('2023-03-04', 300000, 'mortgage', 8),
	-- ('2035-03-03', 400000, 'mortgage', 1),
	-- ('2025-04-05', 25000, 'vehicle', 1),
	-- ('2026-05-05', 34000, 'vehicle', 1),
	-- ('2023-06-07', 500000, 'mortgage', 2),
	-- ('2026-04-04', 60000, 'vehicle', 2),
	-- ('2024-03-03', 70000, 'vehicle', 2),
	-- ('2023-02-02', 800000, 'mortgage', 3),
	-- ('2022-01-01', 90000, 'vehicle', 3),
	-- ('2021-01-01', 100000, 'vehicle', 3),
	-- ('2020-01-01', 110000, 'mortgage', 4),
	-- ('2020-01-01', 12000, 'vehicle', 4),
	-- ('2020-01-01', 13000, 'vehicle', 4),
	-- ('2020-01-01', 140000, 'mortgage', 5),
	-- ('2020-01-01', 15000, 'vehicle', 5),
	-- ('2020-01-01', 16000, 'vehicle', 5),
	-- ('2020-01-01', 170000, 'mortgage', 6),
	-- ('2020-01-01', 18000, 'vehicle', 6),
	-- ('2020-01-01', 19000, 'vehicle', 6),
	-- ('2020-01-01', 200000, 'mortgage', 7),
	-- ('2020-01-01', 21000, 'vehicle', 7),
	-- ('2020-01-01', 22000, 'vehicle', 7);
	
	-- CREATE SCHEMA IF NOT EXISTS staff;
	
	-- SET search_path TO public, staff;" at character 1
2023-01-13 08:04:44.202 GMT [62298] STATEMENT:  $$ LANGUAGE plpgsql;
	
	
	
	
	
	-- sample data for customers
	INSERT INTO customer (first_name, last_name, date_of_birth, phone_number, email_address, address_street, address_city, address_county, address_postcode)
	VALUES ('John', 'Smith', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('Jane', 'Doe', '1990-01-01', '01234567890', 'test@gmail.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Bloggs', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('John', 'Bloggs', '1990-01-01', '01234567890', 'hello@yahoo.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('Jane', 'Bloggs', '1990-01-01', '01234567890', 'test@outlook.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Doe', '1990-01-01', '01234567890', 'hello@outlook.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('John', 'Doe', '1990-01-01', '01234567890', 'mybankemail@icloud.com', '1 My Bank Street', 'My Bank City', 'My Bank County', 'MB1 1NK'),
	('Jane', 'Smith', '1990-01-01', '01234567890', 'bankemail@outlook.com', '1 Bank Street', 'Bank City', 'Bank County', 'BA1 1NK'),
	('Joe', 'Smith', '1990-01-01', '01234567890', 'example@icloud.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX');
	
	-- sample data for online account
	INSERT INTO online_account (date_opened, sort_code, customer_id)
	VALUES ('2020-01-01', '123456', 1),
	('2019-01-01', '126485', 2),
	('2018-01-01', '128475', 3),
	('2017-01-01', '129476', 4),
	('2016-01-01', '120386', 5),
	('2017-02-03', '127385', 6),
	('2018-02-04', '128256', 7),
	('2020-01-01', '129386', 8),
	('2020-01-01', '120386', 9);
	
	-- sample data for user login
	INSERT INTO user_login (account_id, username, password)
	VALUES (1, 'johnsmith', 'b29af57c2b3bba21e9df0cece40952c6'),
	(2, 'janedoe', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(3, 'joebloggs', 'b29af57c2b3bba21e9df0cece40952c6'),
	(4, 'johnbloggs', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(5, 'janebloggs', 'b29af57c2b3bba21e9df0cece40952c6'),
	(6, 'joedoe', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(7, 'johndoe', 'b29af57c2b3bba21e9df0cece40952c6'),
	(8, 'joesmith', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(9, 'janesmith', 'b29af57c2b3bba21e9df0cece40952c6');
	
	-- sample data for security question option
	INSERT INTO security_question_option (question_description)
	VALUES ('What is your favourite colour?'),
	('What is your favourite food?'),
	('What is your favourite animal?'),
	('What is your favourite sport?'),
	('What is your favourite movie?'),
	('What is your favourite book?'),
	('What is your favourite song?'),
	('What is your favourite band?'),
	('What is your favourite game?'),
	('What is your favourite TV show?');
	
	--sample data for user login security question
	INSERT INTO user_login_security_question (question_choice_id, login_id)
	VALUES (1, 1),
	(2, 2),
	(3, 3),
	(4, 4),
	(5, 5),
	(6, 6),
	(7, 7),
	(8, 8),
	(9, 9);
	
	-- sample data for security question answer
	INSERT INTO security_question_answer (question_answer, question_id)
	VALUES ('Red', 1),
	('Blue', 2),
	('Green', 3),
	('Yellow', 4),
	('Orange', 5),
	('Purple', 6),
	('Pink', 7),
	('Black', 8),
	('White', 9);
	
	INSERT INTO savings_account (account_number, account_id, current_balance, interest_rate)
	VALUES ('12345678', 1, 2000.00, 2.05);
	
	-- -- sample data for savings account
	-- INSERT INTO savings_account (current_balance, interest_rate, account_id)
	-- VALUES (2000.00, 2.05, 1),
	-- (1000.00, 2.05, 2),
	-- (5000.00, 2.05, 3),
	-- (10000.00, 2.05, 4),
	-- (20000.00, 2.05, 5),
	-- (50000.00, 2.05, 6),
	-- (100000.00, 2.05, 7),
	-- (200000.00, 2.05, 8);
	
	-- -- sample data for credit account
	-- INSERT INTO credit_account (outstanding_balance, credit_limit, interest_rate, account_id)
	-- VALUES (55.43, 2000.00, 4.22, 1),
	-- (100.00, 1000.00, 4.22, 2),
	-- (200.00, 5000.00, 4.22, 3),
	-- (300.00, 10000.00, 4.22, 4),
	-- (400.00, 20000.00, 4.22, 5),
	-- (500.00, 50000.00, 4.22, 6),
	-- (600.00, 100000.00, 4.22, 7),
	-- (700.00, 200000.00, 4.22, 8);
	
	-- -- sample data for debit account
	-- INSERT INTO debit_account (current_balance, interest_rate, account_id)
	-- VALUES (3465.43, 0.05, 1),
	-- (1000.00, 0.05, 1),
	-- (5000.00, 0.05, 2),
	-- (10000.00, 0.05, 3),
	-- (20000.00, 0.05, 4),
	-- (50000.00, 0.05, 5),
	-- (100000.00, 0.05, 6),
	-- (200000.00, 0.05, 9);
	
	-- -- sample data for loan
	-- INSERT INTO loan (loan_end_date, loan_amount, loan_type, account_id)
	-- VALUES ('2024-01-01', 10000, 'vehicle', 8),
	-- ('2023-03-04', 300000, 'mortgage', 8),
	-- ('2035-03-03', 400000, 'mortgage', 1),
	-- ('2025-04-05', 25000, 'vehicle', 1),
	-- ('2026-05-05', 34000, 'vehicle', 1),
	-- ('2023-06-07', 500000, 'mortgage', 2),
	-- ('2026-04-04', 60000, 'vehicle', 2),
	-- ('2024-03-03', 70000, 'vehicle', 2),
	-- ('2023-02-02', 800000, 'mortgage', 3),
	-- ('2022-01-01', 90000, 'vehicle', 3),
	-- ('2021-01-01', 100000, 'vehicle', 3),
	-- ('2020-01-01', 110000, 'mortgage', 4),
	-- ('2020-01-01', 12000, 'vehicle', 4),
	-- ('2020-01-01', 13000, 'vehicle', 4),
	-- ('2020-01-01', 140000, 'mortgage', 5),
	-- ('2020-01-01', 15000, 'vehicle', 5),
	-- ('2020-01-01', 16000, 'vehicle', 5),
	-- ('2020-01-01', 170000, 'mortgage', 6),
	-- ('2020-01-01', 18000, 'vehicle', 6),
	-- ('2020-01-01', 19000, 'vehicle', 6),
	-- ('2020-01-01', 200000, 'mortgage', 7),
	-- ('2020-01-01', 21000, 'vehicle', 7),
	-- ('2020-01-01', 22000, 'vehicle', 7);
	
	-- CREATE SCHEMA IF NOT EXISTS staff;
	
	-- SET search_path TO public, staff;
2023-01-13 08:05:12.321 GMT [62262] LOG:  received fast shutdown request
2023-01-13 08:05:12.323 GMT [62262] LOG:  aborting any active transactions
2023-01-13 08:05:12.328 GMT [62262] LOG:  background worker "logical replication launcher" (PID 62269) exited with exit code 1
2023-01-13 08:05:12.330 GMT [62264] LOG:  shutting down
2023-01-13 08:05:12.391 GMT [62262] LOG:  database system is shut down
2023-01-13 08:05:13.915 GMT [62466] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-13 08:05:13.916 GMT [62466] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-13 08:05:13.918 GMT [62466] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-13 08:05:13.923 GMT [62467] LOG:  database system was shut down at 2023-01-13 08:05:13 GMT
2023-01-13 08:05:13.930 GMT [62466] LOG:  database system is ready to accept connections
2023-01-13 08:05:14.771 GMT [62502] ERROR:  syntax error at or near "DECLARE" at character 4694
2023-01-13 08:05:14.771 GMT [62502] STATEMENT:  CREATE OR REPLACE FUNCTION get_next_account_number()
	RETURNS INT AS $$
	DECLARE next_account_number INT;
	BEGIN
	    SELECT MAX(account_number) INTO next_account_number FROM debit_account;
	    IF next_account_number IS NULL THEN
	        next_account_number = 10000000;
	    ELSE
	        next_account_number = next_account_number + 1;
	    END IF;
	    RETURN next_account_number;
	END;
	
	CREATE SCHEMA IF NOT EXISTS staff;
	SET search_path TO public, staff, client;
	
	CREATE OR REPLACE VIEW 
	
	CREATE SCHEMA IF NOT EXISTS client;
	SET search_path TO public, client;
	
	
	CREATE OR REPLACE VIEW client.accounts AS
	    SELECT account_number, account_id FROM account;
	
	CREATE OR REPLACE VIEW client.debit_accounts AS
	    SELECT account.account_id, account.account_number, debit_account.current_balance, debit_account.interest_rate, debit_overdraft.overdraft_limit, debit_overdraft.overdraft_usage, debit_overdraft.interest_rate
	    FROM account
	    INNER JOIN debit_account ON account.account_number = debit_account.account_number
	    INNER JOIN debit_overdraft ON account.account_number = debit_overdraft.account_number;
	
	CREATE OR REPLACE VIEW client.debit_accounts_statements AS
	    SELECT debit_accounts.account_id, debit_accounts.account_number, debit_statement.id, debit_statement.starting_date, debit_statement.end_date, debit_statement.amount
	    FROM debit_accounts
	    INNER JOIN debit_statement ON debit_accounts.account_number = debit_statement.account_number;
	
	CREATE OR REPLACE VIEW client.debit_accounts_statement AS
	    SELECT debit_accounts_statements.account_id, debit_accounts_statements.account_number, debit_accounts_statements.id, debit_accounts_statements.starting_date, debit_accounts_statements.end_date, debit_accounts_statements.amount, transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date
	    FROM debit_accounts_statements
	    INNER JOIN transaction ON debit_accounts_statements.id = transaction.debit_statement_id;
	
	CREATE OR REPLACE VIEW client.credit_accounts AS
	    SELECT account.account_id, account.account_number, credit_account.outstanding_balance, credit_account.credit_limit, credit_account.interest_rate, credit_account_application.application_status
	    FROM account
	    INNER JOIN credit_account ON account.account_number = credit_account.account_number
	    INNER JOIN credit_account_application ON account.account_number = credit_account_application.account_number;
	
	CREATE OR REPLACE VIEW client.credit_accounts_statements AS
	    SELECT credit_accounts.account_id, credit_accounts.account_number, credit_statement.id, credit_statement.starting_date, credit_statement.end_date, credit_statement.amount, credit_statement.minimum_payment, credit_statement.minimum_payment_due_date
	    FROM credit_accounts
	    INNER JOIN credit_statement ON credit_accounts.account_number = credit_statement.account_number;
	
	CREATE OR REPLACE VIEW client.credit_accounts_statement AS
	    SELECT credit_accounts_statements.account_id, credit_accounts_statements.account_number, credit_accounts_statements.id, credit_accounts_statements.starting_date, credit_accounts_statements.end_date, credit_accounts_statements.amount, credit_accounts_statements.minimum_payment, credit_accounts_statements.minimum_payment_due_date, transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date
	    FROM credit_accounts_statements
	    INNER JOIN transaction ON credit_accounts_statements.id = transaction.credit_statement_id;
	
	CREATE OR REPLACE VIEW client.savings_accounts AS
	    SELECT account.account_id, account.account_number, savings_account.current_balance, savings_account.interest_rate
	    FROM account
	    INNER JOIN savings_account ON account.account_number = savings_account.account_number;
	
	CREATE OR REPLACE VIEW client.savings_accounts_statements AS
	    SELECT savings_accounts.account_id, savings_accounts.account_number, savings_statement.id, savings_statement.starting_date, savings_statement.end_date, savings_statement.amount
	    FROM savings_accounts
	    INNER JOIN savings_statement ON savings_accounts.account_number = savings_statement.account_number;
	
	CREATE OR REPLACE VIEW client.loans AS
	    SELECT loan.account_id, loan.id, loan.amount, loan.interest_rate, loan.term, loan_application.application_status
	    FROM loan
	    INNER JOIN loan_application ON loan.id = loan_application.account_id;
	
	CREATE OR REPLACE FUNCTION client.update_personal_information(account_identifier INT, first_name TEXT, last_name TEXT, date_of_birth DATE, phone_number TEXT, email_address TEXT, address_street TEXT, address_city TEXT, address_county TEXT, address_postcode TEXT, account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-13 08:05:14.772 GMT [62502] ERROR:  syntax error at or near "UPDATE" at character 11
2023-01-13 08:05:14.772 GMT [62502] STATEMENT:  BEGIN
	    UPDATE customer SET first_name = first_name, last_name = last_name, date_of_birth = date_of_birth, phone_number = phone_number, email_address = email_address, address_street = address_street, address_city = address_city, address_county = address_county, address_postcode = address_postcode
	    WHERE id = (SELECT customer_id FROM online_account WHERE id = account_identifier);
2023-01-13 08:05:14.772 GMT [62502] ERROR:  column "account_identifier" does not exist at character 76
2023-01-13 08:05:14.772 GMT [62502] STATEMENT:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Updated personal information', CURRENT_DATE);
2023-01-13 08:05:14.773 GMT [62502] ERROR:  syntax error at or near "passed" at character 1
2023-01-13 08:05:14.773 GMT [62502] STATEMENT:  passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-13 08:05:14.774 GMT [62502] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:05:14.774 GMT [62502] STATEMENT:  RETURN passed;
2023-01-13 08:05:14.775 GMT [62502] WARNING:  there is no transaction in progress
2023-01-13 08:05:14.775 GMT [62502] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.update_password(account_identifier INT, new_password TEXT)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-13 08:05:14.775 GMT [62502] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.update_password(account_identifier INT, new_password TEXT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-13 08:05:14.775 GMT [62502] ERROR:  syntax error at or near "UPDATE" at character 11
2023-01-13 08:05:14.775 GMT [62502] STATEMENT:  BEGIN
	    UPDATE user_login SET password = md5(new_password)
	    WHERE account_id = account_identifier;
2023-01-13 08:05:14.776 GMT [62502] ERROR:  column "account_identifier" does not exist at character 76
2023-01-13 08:05:14.776 GMT [62502] STATEMENT:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Updated password', CURRENT_DATE);
2023-01-13 08:05:14.776 GMT [62502] ERROR:  syntax error at or near "passed" at character 1
2023-01-13 08:05:14.776 GMT [62502] STATEMENT:  passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-13 08:05:14.776 GMT [62502] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:05:14.776 GMT [62502] STATEMENT:  RETURN passed;
2023-01-13 08:05:14.776 GMT [62502] WARNING:  there is no transaction in progress
2023-01-13 08:05:14.777 GMT [62502] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.update_email(account_identifier INT, new_email TEXT)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-13 08:05:14.777 GMT [62502] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.update_email(account_identifier INT, new_email TEXT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-13 08:05:14.777 GMT [62502] ERROR:  syntax error at or near "UPDATE" at character 11
2023-01-13 08:05:14.777 GMT [62502] STATEMENT:  BEGIN
	    UPDATE user_login SET email = new_email
	    WHERE account_id = account_identifier;
2023-01-13 08:05:14.777 GMT [62502] ERROR:  column "account_identifier" does not exist at character 76
2023-01-13 08:05:14.777 GMT [62502] STATEMENT:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Updated email', CURRENT_DATE);
2023-01-13 08:05:14.777 GMT [62502] ERROR:  syntax error at or near "passed" at character 1
2023-01-13 08:05:14.777 GMT [62502] STATEMENT:  passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-13 08:05:14.777 GMT [62502] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:05:14.777 GMT [62502] STATEMENT:  RETURN passed;
2023-01-13 08:05:14.777 GMT [62502] WARNING:  there is no transaction in progress
2023-01-13 08:05:14.777 GMT [62502] ERROR:  schema "client" does not exist
2023-01-13 08:05:14.777 GMT [62502] STATEMENT:  CREATE OR REPLACE FUNCTION client.open_debit_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE debit_account_number INT;
	DECLARE next_account_number INT;
	BEGIN
	
	    SELECT get_next_account_number() INTO next_account_number;
	
	    INSERT INTO debit_account (account_number, account_id, current_balance, interest_rate) VALUES (next_account_number ,account_id, 0, 0.01) RETURNING id INTO debit_account_number;
	    INSERT INTO debit_statement (starting_date, end_date, amount, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, debit_account_id);
	    INSERT INTO debit_overdraft (overdraft_usage, overdraft_limit, interest_rate, account_id) VALUES (0, 0, 0.01, debit_account_id);
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened debit account', CURRENT_DATE);
	    passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
	    RETURN passed;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:05:14.777 GMT [62502] ERROR:  schema "client" does not exist
2023-01-13 08:05:14.777 GMT [62502] STATEMENT:  CREATE OR REPLACE FUNCTION client.open_credit_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE credit_account_number INT;
	DECLARE next_account_number INT;
	BEGIN
	
	    SELECT get_next_account_number() INTO next_account_number;
	
	    INSERT INTO credit_account (account_number, outstanding_balance, credit_limit, interest_rate, account_id) VALUES (next_account_number ,0, 0, 24.9, account_id) RETURNING id INTO credit_account_id;
	    INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_id) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_id);
	    INSERT INTO credit_account_application (credit_account_id, application_status) VALUES (credit_account_id, 'PENDING');
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened credit account', CURRENT_DATE);
	END
	$$ LANGUAGE plpgsql;
2023-01-13 08:05:14.779 GMT [62502] ERROR:  schema "client" does not exist
2023-01-13 08:05:14.779 GMT [62502] STATEMENT:  CREATE OR REPLACE FUNCTION client.open_savings_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE savings_account_id INT;
	DECLARE next_account_number INT;
	BEGIN
	
	    SELECT get_next_account_number() INTO next_account_number;
	
	    INSERT INTO savings_account (account_number, account_id, current_balance, interest_rate) VALUES (next_account_number ,account_id, 0, 0.01) RETURNING id INTO savings_account_id;
	    INSERT INTO savings_statement (starting_date, end_date, amount, account_id) VALUES (CURRENT_DATE, CURRENT_DATE, 0, savings_account_id);
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened savings account', CURRENT_DATE);
	    INSERT INTO external_account (account_id, external_account_number) VALUES (savings_account_id, '12345678');
	    passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
	    RETURN passed;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:05:14.779 GMT [62502] ERROR:  schema "client" does not exist
2023-01-13 08:05:14.779 GMT [62502] STATEMENT:  CREATE OR REPLACE FUNCTION client.open_loan(account_id INT, loan_amount INT, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE loan_id INT;
	BEGIN
	    INSERT INTO loan (account_id, loan_amount, loan_end_date, loan_type, loan_interest_rate) VALUES (account_id, loan_amount, loan_end_date, loan_type, loan_interest_rate) RETURNING id INTO loan_id;
	    INSERT INTO loan_statement (starting_date, end_date, amount, account_id) VALUES (CURRENT_DATE, CURRENT_DATE, 0, loan_id);
	    INSERT INTO loan_application (loan_id, application_status) VALUES (loan_id, 'PENDING');
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened loan', CURRENT_DATE);
	    passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
	    RETURN passed;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:05:14.780 GMT [62502] ERROR:  syntax error at or near "INSERT" at character 657
2023-01-13 08:05:14.780 GMT [62502] STATEMENT:  CREATE OR REPLACE FUNCTION client.get_account_type(account_number INT)
	RETURNS TEXT AS $$
	DECLARE account_type TEXT;
	BEGIN
	    SELECT CASE WHEN EXISTS (SELECT * FROM debit_account WHERE account_number = account_number) THEN 'DEBIT'
	                WHEN EXISTS (SELECT * FROM credit_account WHERE account_number = account_number) THEN 'CREDIT'
	                WHEN EXISTS (SELECT * FROM savings_account WHERE account_number = account_number) THEN 'SAVINGS'
	                ELSE 'UNKNOWN' END INTO account_type;
	    RETURN account_type;
	END;
	
	CREATE OR REPLACE FUNCTION client.view_accounts(account_id INT)
	RETURNS TABLE (account_number INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed accounts', CURRENT_DATE);
	    RETURN QUERY
	        SELECT account.*, COALESCE(debit_accounts.current_balance, credit_accounts.outstanding_balance, savings_accounts.current_balance, loans.loan_amount) AS balance,
	        COALESCE(debit_accounts.interest_rate, credit_accounts.interest_rate, savings_accounts.interest_rate, loans.loan_interest_rate) AS interest_rate,
	        get_account_type(account.account_number) AS account_type
	END;
2023-01-13 08:05:14.781 GMT [62502] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, overdraft_limit NUMERIC, overdraft_usage NUMERIC, interest_rate, external_account_number INT) AS $$" at character 1
2023-01-13 08:05:14.781 GMT [62502] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, overdraft_limit NUMERIC, overdraft_usage NUMERIC, interest_rate, external_account_number INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed debit accounts', CURRENT_DATE);
2023-01-13 08:05:14.782 GMT [62502] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:05:14.782 GMT [62502] STATEMENT:  RETURN QUERY
	        SELECT * FROM client.debit_accounts WHERE account_id = account_id;
2023-01-13 08:05:14.782 GMT [62502] WARNING:  there is no transaction in progress
2023-01-13 08:05:14.782 GMT [62502] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_accounts(account_id INT)
	RETURNS TABLE (id INT, outstanding_balance NUMERIC, credit_limit NUMERIC, interest_rate NUMERIC, application_status TEXT) AS $$" at character 1
2023-01-13 08:05:14.782 GMT [62502] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_accounts(account_id INT)
	RETURNS TABLE (id INT, outstanding_balance NUMERIC, credit_limit NUMERIC, interest_rate NUMERIC, application_status TEXT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit accounts', CURRENT_DATE);
2023-01-13 08:05:14.783 GMT [62502] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:05:14.783 GMT [62502] STATEMENT:  RETURN QUERY
	        SELECT * FROM client.credit_accounts WHERE account_id = account_id;
2023-01-13 08:05:14.783 GMT [62502] WARNING:  there is no transaction in progress
2023-01-13 08:05:14.783 GMT [62502] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_savings_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, external_account_number INT) AS $$" at character 1
2023-01-13 08:05:14.783 GMT [62502] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_savings_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, external_account_number INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings accounts', CURRENT_DATE);
2023-01-13 08:05:14.783 GMT [62502] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:05:14.783 GMT [62502] STATEMENT:  RETURN QUERY
	        SELECT * FROM client.savings_accounts WHERE account_id = account_id;
2023-01-13 08:05:14.784 GMT [62502] WARNING:  there is no transaction in progress
2023-01-13 08:05:14.784 GMT [62502] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_loans(account_id INT)
	RETURNS TABLE (id INT, loan_amount NUMERIC, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC, application_status TEXT) AS $$" at character 1
2023-01-13 08:05:14.784 GMT [62502] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_loans(account_id INT)
	RETURNS TABLE (id INT, loan_amount NUMERIC, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC, application_status TEXT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed loans', CURRENT_DATE);
2023-01-13 08:05:14.784 GMT [62502] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:05:14.784 GMT [62502] STATEMENT:  RETURN QUERY
	        SELECT * FROM client.loans WHERE account_id = account_id;
2023-01-13 08:05:14.784 GMT [62502] WARNING:  there is no transaction in progress
2023-01-13 08:05:14.784 GMT [62502] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_savings_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-13 08:05:14.784 GMT [62502] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_savings_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statements', CURRENT_DATE);
2023-01-13 08:05:14.785 GMT [62502] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:05:14.785 GMT [62502] STATEMENT:  RETURN QUERY
	        SELECT savings_accounts_statements.account_id, savings_accounts_statements.account_number, savings_accounts_statements.starting_date, savings_accounts_statements.end_date, savings_accounts_statements.amount
	        FROM client.savings_accounts_statements
	        WHERE savings_accounts_statements.account_number = account_number
	        AND savings_accounts_statements.account_id = account_id;
2023-01-13 08:05:14.785 GMT [62502] WARNING:  there is no transaction in progress
2023-01-13 08:05:14.786 GMT [62502] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-13 08:05:14.786 GMT [62502] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed debit statements', CURRENT_DATE);
2023-01-13 08:05:14.786 GMT [62502] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:05:14.786 GMT [62502] STATEMENT:  RETURN QUERY
	        SELECT debit_accounts_statements.account_id, debit_accounts_statements.account_number, debit_accounts_statements.starting_date, debit_accounts_statements.end_date, debit_accounts_statements.amount
	        FROM client.debit_accounts_statements
	        WHERE debit_accounts_statements.account_number = account_number
	        AND debit_accounts_statements.account_id = account_id;
2023-01-13 08:05:14.786 GMT [62502] WARNING:  there is no transaction in progress
2023-01-13 08:05:14.787 GMT [62502] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-13 08:05:14.787 GMT [62502] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statements', CURRENT_DATE);
2023-01-13 08:05:14.787 GMT [62502] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:05:14.787 GMT [62502] STATEMENT:  RETURN QUERY
	        SELECT credit_accounts_statements.account_id, credit_accounts_statements.account_number, credit_accounts_statements.starting_date, credit_accounts_statements.end_date, credit_accounts_statements.amount
	        FROM client.credit_accounts_statements
	        WHERE credit_accounts_statements.account_number = account_number
	        AND credit_accounts_statements.account_id = account_id;
2023-01-13 08:05:14.787 GMT [62502] WARNING:  there is no transaction in progress
2023-01-13 08:05:14.788 GMT [62502] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-13 08:05:14.788 GMT [62502] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed debit statement', CURRENT_DATE);
2023-01-13 08:05:14.788 GMT [62502] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:05:14.788 GMT [62502] STATEMENT:  RETURN QUERY
	        SELECT debit_accounts_statement.account_id, debit_accounts_statement.account_number, debit_accounts_statement.starting_date, debit_accounts_statement.end_date, debit_accounts_statement.amount
	        FROM client.debit_accounts_statement
	        WHERE debit_accounts_statement.account_id = account_id
	        AND debit_accounts_statement.account_number = account_number
	        AND debit_accounts_statement.statement_id = statement_id;
2023-01-13 08:05:14.788 GMT [62502] WARNING:  there is no transaction in progress
2023-01-13 08:05:14.788 GMT [62502] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-13 08:05:14.788 GMT [62502] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statement', CURRENT_DATE);
2023-01-13 08:05:14.788 GMT [62502] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:05:14.788 GMT [62502] STATEMENT:  RETURN QUERY
	        SELECT credit_accounts_statement.account_id, credit_accounts_statement.account_number, credit_accounts_statement.starting_date, credit_accounts_statement.end_date, credit_accounts_statement.amount
	        FROM client.credit_accounts_statement
	        WHERE credit_accounts_statement.account_id = account_id
	        AND credit_accounts_statement.account_number = account_number
	        AND credit_accounts_statement.statement_id = statement_id;
2023-01-13 08:05:14.789 GMT [62502] WARNING:  there is no transaction in progress
2023-01-13 08:05:14.789 GMT [62502] ERROR:  syntax error at or near "DECLARE" at character 1790
2023-01-13 08:05:14.789 GMT [62502] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_savings_statement(account_id INT, savings_account_id INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT savings_accounts_statement.account_id, savings_accounts_statement.account_number, savings_accounts_statement.starting_date, savings_accounts_statement.end_date, savings_accounts_statement.amount
	        FROM client.savings_accounts_statement
	        WHERE savings_accounts_statement.account_id = account_id
	        AND savings_accounts_statement.account_number = savings_account_id
	        AND savings_accounts_statement.statement_id = statement_id;
	END;
	
	CREATE SCHEMA IF NOT EXISTS unauthenticated;
	SET search_path TO unauthenticated, public;
	
	-- Allows an unauthenticated user to match hashes to hashes of personal information contained in the customer table
	CREATE OR REPLACE VIEW unauthenticated.unauthenticated_personal_information AS
	SELECT id, md5(first_name) AS first_name, md5(last_name) AS last_name, md5(email_address) AS email_address
	FROM customer;
	
	-- Allows an unauthenticated user to view hashes of usernames contained in the user_login table
	CREATE OR REPLACE VIEW unauthenticated.unauthenticated_login AS
	SELECT md5(username) AS username FROM user_login;
	
	-- Allows a user to insert personal information into the online banking system
	CREATE OR REPLACE FUNCTION unauthenticated.create_personal_info(first_name TEXT, last_name TEXT, date_of_birth DATE, phone_number TEXT, email_address TEXT, address_street TEXT, address_city TEXT, address_county TEXT, address_postcode TEXT)
	RETURNS INT AS $$
	DECLARE customer_id INT;
2023-01-13 08:05:14.789 GMT [62502] ERROR:  syntax error at or near "IF" at character 11
2023-01-13 08:05:14.789 GMT [62502] STATEMENT:  BEGIN
	    IF NOT EXISTS (SELECT FROM unauthenticated.unauthenticated_personal_information WHERE md5(first_name) = first_name AND md5(last_name) = last_name AND md5(email_address) = email_address) THEN
	        INSERT INTO customer
	        VALUES (first_name, last_name, date_of_birth, phone_number, email_address, address_street, address_city, address_county, address_postcode)
	        RETURNING id INTO customer_id;
2023-01-13 08:05:14.790 GMT [62502] ERROR:  syntax error at or near "ELSE" at character 1
2023-01-13 08:05:14.790 GMT [62502] STATEMENT:  ELSE
	        RAISE NOTICE 'CUSTOMER INFORMATION ALREADY PRESENT';
2023-01-13 08:05:14.790 GMT [62502] ERROR:  relation "unauthenticated.unauthenticated_personal_information" does not exist at character 33
2023-01-13 08:05:14.790 GMT [62502] STATEMENT:  SELECT id INTO customer_id FROM unauthenticated.unauthenticated_personal_information WHERE md5(first_name) = first_name AND md5(last_name) = last_name AND md5(email_address) = email_address;
2023-01-13 08:05:14.791 GMT [62502] ERROR:  syntax error at or near "IF" at character 5
2023-01-13 08:05:14.791 GMT [62502] STATEMENT:  END IF;
2023-01-13 08:05:14.791 GMT [62502] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:05:14.791 GMT [62502] STATEMENT:  RETURN customer_id;
2023-01-13 08:05:14.791 GMT [62502] WARNING:  there is no transaction in progress
2023-01-13 08:05:14.791 GMT [62502] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	-- Allows an unauthenticated user to create an online account
	CREATE OR REPLACE FUNCTION unauthenticated.create_online_account_details(customer_id INT, first_name TEXT, last_name TEXT, email_address TEXT, question_choice_ids INT[], question_answers TEXT[])
	RETURNS INT AS $$" at character 1
2023-01-13 08:05:14.791 GMT [62502] STATEMENT:  $$ LANGUAGE plpgsql;
	
	-- Allows an unauthenticated user to create an online account
	CREATE OR REPLACE FUNCTION unauthenticated.create_online_account_details(customer_id INT, first_name TEXT, last_name TEXT, email_address TEXT, question_choice_ids INT[], question_answers TEXT[])
	RETURNS INT AS $$
	DECLARE account_id INT;
2023-01-13 08:05:14.791 GMT [62502] ERROR:  syntax error at or near "INT" at character 27
2023-01-13 08:05:14.791 GMT [62502] STATEMENT:  DECLARE online_account_id INT;
2023-01-13 08:05:14.792 GMT [62502] ERROR:  syntax error at or near "INT" at character 28
2023-01-13 08:05:14.792 GMT [62502] STATEMENT:  DECLARE question_choice_id INT;
2023-01-13 08:05:14.792 GMT [62502] ERROR:  syntax error at or near "IF" at character 11
2023-01-13 08:05:14.792 GMT [62502] STATEMENT:  BEGIN
	    IF NOT EXISTS (SELECT FROM user_login WHERE username = username) THEN
	        INSERT INTO online_account (date_opened, sort_code, customer_id)
	        VALUES ((SELECT now()), (SELECT num FROM GENERATE_SERIES(1, 6) AS s(num) LIMIT 1), customer_id)
	        RETURNING id INTO account_id;
2023-01-13 08:05:14.792 GMT [62502] ERROR:  syntax error at or near "INTO" at character 131
2023-01-13 08:05:14.792 GMT [62502] STATEMENT:  INSERT INTO user_login (account_id, username, password)
	        VALUES (account_id, username, md5(password))
	        RETURNING id INTO online_account_id;
2023-01-13 08:05:14.792 GMT [62502] ERROR:  syntax error at or near "FOR" at character 1
2023-01-13 08:05:14.792 GMT [62502] STATEMENT:  FOR i IN 0..2 LOOP
	            
	            INSERT INTO user_login_security_question (question_choice_id, login_id)
	            VALUES (question_choice_ids[i], online_account_id)
	            RETURNING id INTO question_choice_id;
2023-01-13 08:05:14.793 GMT [62502] ERROR:  column "answer" of relation "security_question_answer" does not exist at character 39
2023-01-13 08:05:14.793 GMT [62502] STATEMENT:  INSERT INTO security_question_answer (answer, question_id)
	            VALUES (question_answers[i], question_choice_id);
2023-01-13 08:05:14.794 GMT [62502] ERROR:  syntax error at or near "LOOP" at character 5
2023-01-13 08:05:14.794 GMT [62502] STATEMENT:  END LOOP;
2023-01-13 08:05:14.794 GMT [62502] ERROR:  column "account_id" does not exist at character 117
2023-01-13 08:05:14.794 GMT [62502] HINT:  There is a column named "account_id" in table "authentication_log", but it cannot be referenced from this part of the query.
2023-01-13 08:05:14.794 GMT [62502] STATEMENT:  INSERT INTO authentication_log (log_description, log_date, account_id) VALUES ('New online account created', now(), account_id);
2023-01-13 08:05:14.795 GMT [62502] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:05:14.795 GMT [62502] STATEMENT:  RETURN account_id;
2023-01-13 08:05:14.797 GMT [62502] ERROR:  syntax error at or near "ELSE" at character 1
2023-01-13 08:05:14.797 GMT [62502] STATEMENT:  ELSE
	        RAISE NOTICE 'USERNAME ALREADY TAKEN';
2023-01-13 08:05:14.798 GMT [62502] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:05:14.798 GMT [62502] STATEMENT:  RETURN NULL;
2023-01-13 08:05:14.799 GMT [62502] ERROR:  syntax error at or near "IF" at character 5
2023-01-13 08:05:14.799 GMT [62502] STATEMENT:  END IF;
2023-01-13 08:05:14.799 GMT [62502] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:05:14.799 GMT [62502] STATEMENT:  RETURN success;
2023-01-13 08:05:14.799 GMT [62502] WARNING:  there is no transaction in progress
2023-01-13 08:05:14.800 GMT [62502] ERROR:  unterminated dollar-quoted string at or near "$$ LANGUAGE plpgsql;
	
	
	
	
	
	-- sample data for customers
	INSERT INTO customer (first_name, last_name, date_of_birth, phone_number, email_address, address_street, address_city, address_county, address_postcode)
	VALUES ('John', 'Smith', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('Jane', 'Doe', '1990-01-01', '01234567890', 'test@gmail.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Bloggs', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('John', 'Bloggs', '1990-01-01', '01234567890', 'hello@yahoo.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('Jane', 'Bloggs', '1990-01-01', '01234567890', 'test@outlook.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Doe', '1990-01-01', '01234567890', 'hello@outlook.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('John', 'Doe', '1990-01-01', '01234567890', 'mybankemail@icloud.com', '1 My Bank Street', 'My Bank City', 'My Bank County', 'MB1 1NK'),
	('Jane', 'Smith', '1990-01-01', '01234567890', 'bankemail@outlook.com', '1 Bank Street', 'Bank City', 'Bank County', 'BA1 1NK'),
	('Joe', 'Smith', '1990-01-01', '01234567890', 'example@icloud.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX');
	
	-- sample data for online account
	INSERT INTO online_account (date_opened, sort_code, customer_id)
	VALUES ('2020-01-01', '123456', 1),
	('2019-01-01', '126485', 2),
	('2018-01-01', '128475', 3),
	('2017-01-01', '129476', 4),
	('2016-01-01', '120386', 5),
	('2017-02-03', '127385', 6),
	('2018-02-04', '128256', 7),
	('2020-01-01', '129386', 8),
	('2020-01-01', '120386', 9);
	
	-- sample data for user login
	INSERT INTO user_login (account_id, username, password)
	VALUES (1, 'johnsmith', 'b29af57c2b3bba21e9df0cece40952c6'),
	(2, 'janedoe', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(3, 'joebloggs', 'b29af57c2b3bba21e9df0cece40952c6'),
	(4, 'johnbloggs', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(5, 'janebloggs', 'b29af57c2b3bba21e9df0cece40952c6'),
	(6, 'joedoe', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(7, 'johndoe', 'b29af57c2b3bba21e9df0cece40952c6'),
	(8, 'joesmith', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(9, 'janesmith', 'b29af57c2b3bba21e9df0cece40952c6');
	
	-- sample data for security question option
	INSERT INTO security_question_option (question_description)
	VALUES ('What is your favourite colour?'),
	('What is your favourite food?'),
	('What is your favourite animal?'),
	('What is your favourite sport?'),
	('What is your favourite movie?'),
	('What is your favourite book?'),
	('What is your favourite song?'),
	('What is your favourite band?'),
	('What is your favourite game?'),
	('What is your favourite TV show?');
	
	--sample data for user login security question
	INSERT INTO user_login_security_question (question_choice_id, login_id)
	VALUES (1, 1),
	(2, 2),
	(3, 3),
	(4, 4),
	(5, 5),
	(6, 6),
	(7, 7),
	(8, 8),
	(9, 9);
	
	-- sample data for security question answer
	INSERT INTO security_question_answer (question_answer, question_id)
	VALUES ('Red', 1),
	('Blue', 2),
	('Green', 3),
	('Yellow', 4),
	('Orange', 5),
	('Purple', 6),
	('Pink', 7),
	('Black', 8),
	('White', 9);
	
	INSERT INTO savings_account (account_number, account_id, current_balance, interest_rate)
	VALUES ('12345678', 1, 2000.00, 2.05);
	
	-- -- sample data for savings account
	-- INSERT INTO savings_account (current_balance, interest_rate, account_id)
	-- VALUES (2000.00, 2.05, 1),
	-- (1000.00, 2.05, 2),
	-- (5000.00, 2.05, 3),
	-- (10000.00, 2.05, 4),
	-- (20000.00, 2.05, 5),
	-- (50000.00, 2.05, 6),
	-- (100000.00, 2.05, 7),
	-- (200000.00, 2.05, 8);
	
	-- -- sample data for credit account
	-- INSERT INTO credit_account (outstanding_balance, credit_limit, interest_rate, account_id)
	-- VALUES (55.43, 2000.00, 4.22, 1),
	-- (100.00, 1000.00, 4.22, 2),
	-- (200.00, 5000.00, 4.22, 3),
	-- (300.00, 10000.00, 4.22, 4),
	-- (400.00, 20000.00, 4.22, 5),
	-- (500.00, 50000.00, 4.22, 6),
	-- (600.00, 100000.00, 4.22, 7),
	-- (700.00, 200000.00, 4.22, 8);
	
	-- -- sample data for debit account
	-- INSERT INTO debit_account (current_balance, interest_rate, account_id)
	-- VALUES (3465.43, 0.05, 1),
	-- (1000.00, 0.05, 1),
	-- (5000.00, 0.05, 2),
	-- (10000.00, 0.05, 3),
	-- (20000.00, 0.05, 4),
	-- (50000.00, 0.05, 5),
	-- (100000.00, 0.05, 6),
	-- (200000.00, 0.05, 9);
	
	-- -- sample data for loan
	-- INSERT INTO loan (loan_end_date, loan_amount, loan_type, account_id)
	-- VALUES ('2024-01-01', 10000, 'vehicle', 8),
	-- ('2023-03-04', 300000, 'mortgage', 8),
	-- ('2035-03-03', 400000, 'mortgage', 1),
	-- ('2025-04-05', 25000, 'vehicle', 1),
	-- ('2026-05-05', 34000, 'vehicle', 1),
	-- ('2023-06-07', 500000, 'mortgage', 2),
	-- ('2026-04-04', 60000, 'vehicle', 2),
	-- ('2024-03-03', 70000, 'vehicle', 2),
	-- ('2023-02-02', 800000, 'mortgage', 3),
	-- ('2022-01-01', 90000, 'vehicle', 3),
	-- ('2021-01-01', 100000, 'vehicle', 3),
	-- ('2020-01-01', 110000, 'mortgage', 4),
	-- ('2020-01-01', 12000, 'vehicle', 4),
	-- ('2020-01-01', 13000, 'vehicle', 4),
	-- ('2020-01-01', 140000, 'mortgage', 5),
	-- ('2020-01-01', 15000, 'vehicle', 5),
	-- ('2020-01-01', 16000, 'vehicle', 5),
	-- ('2020-01-01', 170000, 'mortgage', 6),
	-- ('2020-01-01', 18000, 'vehicle', 6),
	-- ('2020-01-01', 19000, 'vehicle', 6),
	-- ('2020-01-01', 200000, 'mortgage', 7),
	-- ('2020-01-01', 21000, 'vehicle', 7),
	-- ('2020-01-01', 22000, 'vehicle', 7);
	
	-- CREATE SCHEMA IF NOT EXISTS staff;
	
	-- SET search_path TO public, staff;" at character 1
2023-01-13 08:05:14.800 GMT [62502] STATEMENT:  $$ LANGUAGE plpgsql;
	
	
	
	
	
	-- sample data for customers
	INSERT INTO customer (first_name, last_name, date_of_birth, phone_number, email_address, address_street, address_city, address_county, address_postcode)
	VALUES ('John', 'Smith', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('Jane', 'Doe', '1990-01-01', '01234567890', 'test@gmail.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Bloggs', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('John', 'Bloggs', '1990-01-01', '01234567890', 'hello@yahoo.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('Jane', 'Bloggs', '1990-01-01', '01234567890', 'test@outlook.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Doe', '1990-01-01', '01234567890', 'hello@outlook.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('John', 'Doe', '1990-01-01', '01234567890', 'mybankemail@icloud.com', '1 My Bank Street', 'My Bank City', 'My Bank County', 'MB1 1NK'),
	('Jane', 'Smith', '1990-01-01', '01234567890', 'bankemail@outlook.com', '1 Bank Street', 'Bank City', 'Bank County', 'BA1 1NK'),
	('Joe', 'Smith', '1990-01-01', '01234567890', 'example@icloud.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX');
	
	-- sample data for online account
	INSERT INTO online_account (date_opened, sort_code, customer_id)
	VALUES ('2020-01-01', '123456', 1),
	('2019-01-01', '126485', 2),
	('2018-01-01', '128475', 3),
	('2017-01-01', '129476', 4),
	('2016-01-01', '120386', 5),
	('2017-02-03', '127385', 6),
	('2018-02-04', '128256', 7),
	('2020-01-01', '129386', 8),
	('2020-01-01', '120386', 9);
	
	-- sample data for user login
	INSERT INTO user_login (account_id, username, password)
	VALUES (1, 'johnsmith', 'b29af57c2b3bba21e9df0cece40952c6'),
	(2, 'janedoe', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(3, 'joebloggs', 'b29af57c2b3bba21e9df0cece40952c6'),
	(4, 'johnbloggs', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(5, 'janebloggs', 'b29af57c2b3bba21e9df0cece40952c6'),
	(6, 'joedoe', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(7, 'johndoe', 'b29af57c2b3bba21e9df0cece40952c6'),
	(8, 'joesmith', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(9, 'janesmith', 'b29af57c2b3bba21e9df0cece40952c6');
	
	-- sample data for security question option
	INSERT INTO security_question_option (question_description)
	VALUES ('What is your favourite colour?'),
	('What is your favourite food?'),
	('What is your favourite animal?'),
	('What is your favourite sport?'),
	('What is your favourite movie?'),
	('What is your favourite book?'),
	('What is your favourite song?'),
	('What is your favourite band?'),
	('What is your favourite game?'),
	('What is your favourite TV show?');
	
	--sample data for user login security question
	INSERT INTO user_login_security_question (question_choice_id, login_id)
	VALUES (1, 1),
	(2, 2),
	(3, 3),
	(4, 4),
	(5, 5),
	(6, 6),
	(7, 7),
	(8, 8),
	(9, 9);
	
	-- sample data for security question answer
	INSERT INTO security_question_answer (question_answer, question_id)
	VALUES ('Red', 1),
	('Blue', 2),
	('Green', 3),
	('Yellow', 4),
	('Orange', 5),
	('Purple', 6),
	('Pink', 7),
	('Black', 8),
	('White', 9);
	
	INSERT INTO savings_account (account_number, account_id, current_balance, interest_rate)
	VALUES ('12345678', 1, 2000.00, 2.05);
	
	-- -- sample data for savings account
	-- INSERT INTO savings_account (current_balance, interest_rate, account_id)
	-- VALUES (2000.00, 2.05, 1),
	-- (1000.00, 2.05, 2),
	-- (5000.00, 2.05, 3),
	-- (10000.00, 2.05, 4),
	-- (20000.00, 2.05, 5),
	-- (50000.00, 2.05, 6),
	-- (100000.00, 2.05, 7),
	-- (200000.00, 2.05, 8);
	
	-- -- sample data for credit account
	-- INSERT INTO credit_account (outstanding_balance, credit_limit, interest_rate, account_id)
	-- VALUES (55.43, 2000.00, 4.22, 1),
	-- (100.00, 1000.00, 4.22, 2),
	-- (200.00, 5000.00, 4.22, 3),
	-- (300.00, 10000.00, 4.22, 4),
	-- (400.00, 20000.00, 4.22, 5),
	-- (500.00, 50000.00, 4.22, 6),
	-- (600.00, 100000.00, 4.22, 7),
	-- (700.00, 200000.00, 4.22, 8);
	
	-- -- sample data for debit account
	-- INSERT INTO debit_account (current_balance, interest_rate, account_id)
	-- VALUES (3465.43, 0.05, 1),
	-- (1000.00, 0.05, 1),
	-- (5000.00, 0.05, 2),
	-- (10000.00, 0.05, 3),
	-- (20000.00, 0.05, 4),
	-- (50000.00, 0.05, 5),
	-- (100000.00, 0.05, 6),
	-- (200000.00, 0.05, 9);
	
	-- -- sample data for loan
	-- INSERT INTO loan (loan_end_date, loan_amount, loan_type, account_id)
	-- VALUES ('2024-01-01', 10000, 'vehicle', 8),
	-- ('2023-03-04', 300000, 'mortgage', 8),
	-- ('2035-03-03', 400000, 'mortgage', 1),
	-- ('2025-04-05', 25000, 'vehicle', 1),
	-- ('2026-05-05', 34000, 'vehicle', 1),
	-- ('2023-06-07', 500000, 'mortgage', 2),
	-- ('2026-04-04', 60000, 'vehicle', 2),
	-- ('2024-03-03', 70000, 'vehicle', 2),
	-- ('2023-02-02', 800000, 'mortgage', 3),
	-- ('2022-01-01', 90000, 'vehicle', 3),
	-- ('2021-01-01', 100000, 'vehicle', 3),
	-- ('2020-01-01', 110000, 'mortgage', 4),
	-- ('2020-01-01', 12000, 'vehicle', 4),
	-- ('2020-01-01', 13000, 'vehicle', 4),
	-- ('2020-01-01', 140000, 'mortgage', 5),
	-- ('2020-01-01', 15000, 'vehicle', 5),
	-- ('2020-01-01', 16000, 'vehicle', 5),
	-- ('2020-01-01', 170000, 'mortgage', 6),
	-- ('2020-01-01', 18000, 'vehicle', 6),
	-- ('2020-01-01', 19000, 'vehicle', 6),
	-- ('2020-01-01', 200000, 'mortgage', 7),
	-- ('2020-01-01', 21000, 'vehicle', 7),
	-- ('2020-01-01', 22000, 'vehicle', 7);
	
	-- CREATE SCHEMA IF NOT EXISTS staff;
	
	-- SET search_path TO public, staff;
2023-01-13 08:07:07.886 GMT [62466] LOG:  received fast shutdown request
2023-01-13 08:07:07.888 GMT [62466] LOG:  aborting any active transactions
2023-01-13 08:07:07.893 GMT [62466] LOG:  background worker "logical replication launcher" (PID 62473) exited with exit code 1
2023-01-13 08:07:07.900 GMT [62468] LOG:  shutting down
2023-01-13 08:07:07.954 GMT [62466] LOG:  database system is shut down
2023-01-13 08:07:09.632 GMT [62922] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-13 08:07:09.632 GMT [62922] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-13 08:07:09.637 GMT [62922] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-13 08:07:09.643 GMT [62923] LOG:  database system was shut down at 2023-01-13 08:07:09 GMT
2023-01-13 08:07:09.649 GMT [62922] LOG:  database system is ready to accept connections
2023-01-13 08:07:10.568 GMT [62961] ERROR:  syntax error at or near "DECLARE" at character 4694
2023-01-13 08:07:10.568 GMT [62961] STATEMENT:  CREATE OR REPLACE FUNCTION get_next_account_number()
	RETURNS INT AS $$
	DECLARE next_account_number INT;
	BEGIN
	    SELECT MAX(account_number) INTO next_account_number FROM debit_account;
	    IF next_account_number IS NULL THEN
	        next_account_number = 10000000;
	    ELSE
	        next_account_number = next_account_number + 1;
	    END IF;
	    RETURN next_account_number;
	END;
	
	CREATE SCHEMA IF NOT EXISTS staff;
	SET search_path TO public, staff, client;
	
	CREATE OR REPLACE VIEW 
	
	CREATE SCHEMA IF NOT EXISTS client;
	SET search_path TO public, client;
	
	
	CREATE OR REPLACE VIEW client.accounts AS
	    SELECT account_number, account_id FROM account;
	
	CREATE OR REPLACE VIEW client.debit_accounts AS
	    SELECT account.account_id, account.account_number, debit_account.current_balance, debit_account.interest_rate, debit_overdraft.overdraft_limit, debit_overdraft.overdraft_usage, debit_overdraft.interest_rate
	    FROM account
	    INNER JOIN debit_account ON account.account_number = debit_account.account_number
	    INNER JOIN debit_overdraft ON account.account_number = debit_overdraft.account_number;
	
	CREATE OR REPLACE VIEW client.debit_accounts_statements AS
	    SELECT debit_accounts.account_id, debit_accounts.account_number, debit_statement.id, debit_statement.starting_date, debit_statement.end_date, debit_statement.amount
	    FROM debit_accounts
	    INNER JOIN debit_statement ON debit_accounts.account_number = debit_statement.account_number;
	
	CREATE OR REPLACE VIEW client.debit_accounts_statement AS
	    SELECT debit_accounts_statements.account_id, debit_accounts_statements.account_number, debit_accounts_statements.id, debit_accounts_statements.starting_date, debit_accounts_statements.end_date, debit_accounts_statements.amount, transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date
	    FROM debit_accounts_statements
	    INNER JOIN transaction ON debit_accounts_statements.id = transaction.debit_statement_id;
	
	CREATE OR REPLACE VIEW client.credit_accounts AS
	    SELECT account.account_id, account.account_number, credit_account.outstanding_balance, credit_account.credit_limit, credit_account.interest_rate, credit_account_application.application_status
	    FROM account
	    INNER JOIN credit_account ON account.account_number = credit_account.account_number
	    INNER JOIN credit_account_application ON account.account_number = credit_account_application.account_number;
	
	CREATE OR REPLACE VIEW client.credit_accounts_statements AS
	    SELECT credit_accounts.account_id, credit_accounts.account_number, credit_statement.id, credit_statement.starting_date, credit_statement.end_date, credit_statement.amount, credit_statement.minimum_payment, credit_statement.minimum_payment_due_date
	    FROM credit_accounts
	    INNER JOIN credit_statement ON credit_accounts.account_number = credit_statement.account_number;
	
	CREATE OR REPLACE VIEW client.credit_accounts_statement AS
	    SELECT credit_accounts_statements.account_id, credit_accounts_statements.account_number, credit_accounts_statements.id, credit_accounts_statements.starting_date, credit_accounts_statements.end_date, credit_accounts_statements.amount, credit_accounts_statements.minimum_payment, credit_accounts_statements.minimum_payment_due_date, transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date
	    FROM credit_accounts_statements
	    INNER JOIN transaction ON credit_accounts_statements.id = transaction.credit_statement_id;
	
	CREATE OR REPLACE VIEW client.savings_accounts AS
	    SELECT account.account_id, account.account_number, savings_account.current_balance, savings_account.interest_rate
	    FROM account
	    INNER JOIN savings_account ON account.account_number = savings_account.account_number;
	
	CREATE OR REPLACE VIEW client.savings_accounts_statements AS
	    SELECT savings_accounts.account_id, savings_accounts.account_number, savings_statement.id, savings_statement.starting_date, savings_statement.end_date, savings_statement.amount
	    FROM savings_accounts
	    INNER JOIN savings_statement ON savings_accounts.account_number = savings_statement.account_number;
	
	CREATE OR REPLACE VIEW client.loans AS
	    SELECT loan.account_id, loan.id, loan.amount, loan.interest_rate, loan.term, loan_application.application_status
	    FROM loan
	    INNER JOIN loan_application ON loan.id = loan_application.account_id;
	
	CREATE OR REPLACE FUNCTION client.update_personal_information(account_identifier INT, first_name TEXT, last_name TEXT, date_of_birth DATE, phone_number TEXT, email_address TEXT, address_street TEXT, address_city TEXT, address_county TEXT, address_postcode TEXT, account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-13 08:07:10.569 GMT [62961] ERROR:  syntax error at or near "UPDATE" at character 11
2023-01-13 08:07:10.569 GMT [62961] STATEMENT:  BEGIN
	    UPDATE customer SET first_name = first_name, last_name = last_name, date_of_birth = date_of_birth, phone_number = phone_number, email_address = email_address, address_street = address_street, address_city = address_city, address_county = address_county, address_postcode = address_postcode
	    WHERE id = (SELECT customer_id FROM online_account WHERE id = account_identifier);
2023-01-13 08:07:10.569 GMT [62961] ERROR:  column "account_identifier" does not exist at character 122
2023-01-13 08:07:10.569 GMT [62961] STATEMENT:  INSERT INTO management_log (log_description, log_date, account_id) VALUES ('Updated personal information', CURRENT_DATE, account_identifier);
2023-01-13 08:07:10.569 GMT [62961] ERROR:  syntax error at or near "passed" at character 1
2023-01-13 08:07:10.569 GMT [62961] STATEMENT:  passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-13 08:07:10.569 GMT [62961] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:07:10.569 GMT [62961] STATEMENT:  RETURN passed;
2023-01-13 08:07:10.570 GMT [62961] WARNING:  there is no transaction in progress
2023-01-13 08:07:10.570 GMT [62961] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.update_password(account_identifier INT, new_password TEXT)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-13 08:07:10.570 GMT [62961] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.update_password(account_identifier INT, new_password TEXT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-13 08:07:10.574 GMT [62961] ERROR:  syntax error at or near "UPDATE" at character 11
2023-01-13 08:07:10.574 GMT [62961] STATEMENT:  BEGIN
	    UPDATE user_login SET password = md5(new_password)
	    WHERE account_id = account_identifier;
2023-01-13 08:07:10.574 GMT [62961] ERROR:  column "account_identifier" does not exist at character 76
2023-01-13 08:07:10.574 GMT [62961] STATEMENT:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Updated password', CURRENT_DATE);
2023-01-13 08:07:10.575 GMT [62961] ERROR:  syntax error at or near "passed" at character 1
2023-01-13 08:07:10.575 GMT [62961] STATEMENT:  passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-13 08:07:10.575 GMT [62961] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:07:10.575 GMT [62961] STATEMENT:  RETURN passed;
2023-01-13 08:07:10.576 GMT [62961] WARNING:  there is no transaction in progress
2023-01-13 08:07:10.576 GMT [62961] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.update_email(account_identifier INT, new_email TEXT)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-13 08:07:10.576 GMT [62961] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.update_email(account_identifier INT, new_email TEXT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-13 08:07:10.577 GMT [62961] ERROR:  syntax error at or near "UPDATE" at character 11
2023-01-13 08:07:10.577 GMT [62961] STATEMENT:  BEGIN
	    UPDATE user_login SET email = new_email
	    WHERE account_id = account_identifier;
2023-01-13 08:07:10.578 GMT [62961] ERROR:  column "account_identifier" does not exist at character 76
2023-01-13 08:07:10.578 GMT [62961] STATEMENT:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Updated email', CURRENT_DATE);
2023-01-13 08:07:10.578 GMT [62961] ERROR:  syntax error at or near "passed" at character 1
2023-01-13 08:07:10.578 GMT [62961] STATEMENT:  passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-13 08:07:10.578 GMT [62961] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:07:10.578 GMT [62961] STATEMENT:  RETURN passed;
2023-01-13 08:07:10.578 GMT [62961] WARNING:  there is no transaction in progress
2023-01-13 08:07:10.579 GMT [62961] ERROR:  schema "client" does not exist
2023-01-13 08:07:10.579 GMT [62961] STATEMENT:  CREATE OR REPLACE FUNCTION client.open_debit_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE debit_account_number INT;
	DECLARE next_account_number INT;
	BEGIN
	
	    SELECT get_next_account_number() INTO next_account_number;
	
	    INSERT INTO debit_account (account_number, account_id, current_balance, interest_rate) VALUES (next_account_number ,account_id, 0, 0.01) RETURNING id INTO debit_account_number;
	    INSERT INTO debit_statement (starting_date, end_date, amount, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, debit_account_id);
	    INSERT INTO debit_overdraft (overdraft_usage, overdraft_limit, interest_rate, account_id) VALUES (0, 0, 0.01, debit_account_id);
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened debit account', CURRENT_DATE);
	    passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
	    RETURN passed;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:07:10.579 GMT [62961] ERROR:  schema "client" does not exist
2023-01-13 08:07:10.579 GMT [62961] STATEMENT:  CREATE OR REPLACE FUNCTION client.open_credit_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE credit_account_number INT;
	DECLARE next_account_number INT;
	BEGIN
	
	    SELECT get_next_account_number() INTO next_account_number;
	
	    INSERT INTO credit_account (account_number, outstanding_balance, credit_limit, interest_rate, account_id) VALUES (next_account_number ,0, 0, 24.9, account_id) RETURNING id INTO credit_account_id;
	    INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_id) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_id);
	    INSERT INTO credit_account_application (credit_account_id, application_status) VALUES (credit_account_id, 'PENDING');
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened credit account', CURRENT_DATE);
	END
	$$ LANGUAGE plpgsql;
2023-01-13 08:07:10.579 GMT [62961] ERROR:  schema "client" does not exist
2023-01-13 08:07:10.579 GMT [62961] STATEMENT:  CREATE OR REPLACE FUNCTION client.open_savings_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE savings_account_id INT;
	DECLARE next_account_number INT;
	BEGIN
	
	    SELECT get_next_account_number() INTO next_account_number;
	
	    INSERT INTO savings_account (account_number, account_id, current_balance, interest_rate) VALUES (next_account_number ,account_id, 0, 0.01) RETURNING id INTO savings_account_id;
	    INSERT INTO savings_statement (starting_date, end_date, amount, account_id) VALUES (CURRENT_DATE, CURRENT_DATE, 0, savings_account_id);
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened savings account', CURRENT_DATE);
	    INSERT INTO external_account (account_id, external_account_number) VALUES (savings_account_id, '12345678');
	    passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
	    RETURN passed;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:07:10.579 GMT [62961] ERROR:  schema "client" does not exist
2023-01-13 08:07:10.579 GMT [62961] STATEMENT:  CREATE OR REPLACE FUNCTION client.open_loan(account_id INT, loan_amount INT, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE loan_id INT;
	BEGIN
	    INSERT INTO loan (account_id, loan_amount, loan_end_date, loan_type, loan_interest_rate) VALUES (account_id, loan_amount, loan_end_date, loan_type, loan_interest_rate) RETURNING id INTO loan_id;
	    INSERT INTO loan_statement (starting_date, end_date, amount, account_id) VALUES (CURRENT_DATE, CURRENT_DATE, 0, loan_id);
	    INSERT INTO loan_application (loan_id, application_status) VALUES (loan_id, 'PENDING');
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened loan', CURRENT_DATE);
	    passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
	    RETURN passed;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:07:10.580 GMT [62961] ERROR:  syntax error at or near "INSERT" at character 657
2023-01-13 08:07:10.580 GMT [62961] STATEMENT:  CREATE OR REPLACE FUNCTION client.get_account_type(account_number INT)
	RETURNS TEXT AS $$
	DECLARE account_type TEXT;
	BEGIN
	    SELECT CASE WHEN EXISTS (SELECT * FROM debit_account WHERE account_number = account_number) THEN 'DEBIT'
	                WHEN EXISTS (SELECT * FROM credit_account WHERE account_number = account_number) THEN 'CREDIT'
	                WHEN EXISTS (SELECT * FROM savings_account WHERE account_number = account_number) THEN 'SAVINGS'
	                ELSE 'UNKNOWN' END INTO account_type;
	    RETURN account_type;
	END;
	
	CREATE OR REPLACE FUNCTION client.view_accounts(account_id INT)
	RETURNS TABLE (account_number INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed accounts', CURRENT_DATE);
	    RETURN QUERY
	        SELECT account.*, COALESCE(debit_accounts.current_balance, credit_accounts.outstanding_balance, savings_accounts.current_balance, loans.loan_amount) AS balance,
	        COALESCE(debit_accounts.interest_rate, credit_accounts.interest_rate, savings_accounts.interest_rate, loans.loan_interest_rate) AS interest_rate,
	        get_account_type(account.account_number) AS account_type
	END;
2023-01-13 08:07:10.581 GMT [62961] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, overdraft_limit NUMERIC, overdraft_usage NUMERIC, interest_rate, external_account_number INT) AS $$" at character 1
2023-01-13 08:07:10.581 GMT [62961] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, overdraft_limit NUMERIC, overdraft_usage NUMERIC, interest_rate, external_account_number INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed debit accounts', CURRENT_DATE);
2023-01-13 08:07:10.581 GMT [62961] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:07:10.581 GMT [62961] STATEMENT:  RETURN QUERY
	        SELECT * FROM client.debit_accounts WHERE account_id = account_id;
2023-01-13 08:07:10.581 GMT [62961] WARNING:  there is no transaction in progress
2023-01-13 08:07:10.581 GMT [62961] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_accounts(account_id INT)
	RETURNS TABLE (id INT, outstanding_balance NUMERIC, credit_limit NUMERIC, interest_rate NUMERIC, application_status TEXT) AS $$" at character 1
2023-01-13 08:07:10.581 GMT [62961] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_accounts(account_id INT)
	RETURNS TABLE (id INT, outstanding_balance NUMERIC, credit_limit NUMERIC, interest_rate NUMERIC, application_status TEXT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit accounts', CURRENT_DATE);
2023-01-13 08:07:10.582 GMT [62961] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:07:10.582 GMT [62961] STATEMENT:  RETURN QUERY
	        SELECT * FROM client.credit_accounts WHERE account_id = account_id;
2023-01-13 08:07:10.582 GMT [62961] WARNING:  there is no transaction in progress
2023-01-13 08:07:10.582 GMT [62961] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_savings_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, external_account_number INT) AS $$" at character 1
2023-01-13 08:07:10.582 GMT [62961] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_savings_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, external_account_number INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings accounts', CURRENT_DATE);
2023-01-13 08:07:10.583 GMT [62961] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:07:10.583 GMT [62961] STATEMENT:  RETURN QUERY
	        SELECT * FROM client.savings_accounts WHERE account_id = account_id;
2023-01-13 08:07:10.583 GMT [62961] WARNING:  there is no transaction in progress
2023-01-13 08:07:10.586 GMT [62961] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_loans(account_id INT)
	RETURNS TABLE (id INT, loan_amount NUMERIC, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC, application_status TEXT) AS $$" at character 1
2023-01-13 08:07:10.586 GMT [62961] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_loans(account_id INT)
	RETURNS TABLE (id INT, loan_amount NUMERIC, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC, application_status TEXT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed loans', CURRENT_DATE);
2023-01-13 08:07:10.587 GMT [62961] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:07:10.587 GMT [62961] STATEMENT:  RETURN QUERY
	        SELECT * FROM client.loans WHERE account_id = account_id;
2023-01-13 08:07:10.587 GMT [62961] WARNING:  there is no transaction in progress
2023-01-13 08:07:10.587 GMT [62961] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_savings_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-13 08:07:10.587 GMT [62961] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_savings_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statements', CURRENT_DATE);
2023-01-13 08:07:10.587 GMT [62961] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:07:10.587 GMT [62961] STATEMENT:  RETURN QUERY
	        SELECT savings_accounts_statements.account_id, savings_accounts_statements.account_number, savings_accounts_statements.starting_date, savings_accounts_statements.end_date, savings_accounts_statements.amount
	        FROM client.savings_accounts_statements
	        WHERE savings_accounts_statements.account_number = account_number
	        AND savings_accounts_statements.account_id = account_id;
2023-01-13 08:07:10.588 GMT [62961] WARNING:  there is no transaction in progress
2023-01-13 08:07:10.594 GMT [62961] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-13 08:07:10.594 GMT [62961] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed debit statements', CURRENT_DATE);
2023-01-13 08:07:10.594 GMT [62961] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:07:10.594 GMT [62961] STATEMENT:  RETURN QUERY
	        SELECT debit_accounts_statements.account_id, debit_accounts_statements.account_number, debit_accounts_statements.starting_date, debit_accounts_statements.end_date, debit_accounts_statements.amount
	        FROM client.debit_accounts_statements
	        WHERE debit_accounts_statements.account_number = account_number
	        AND debit_accounts_statements.account_id = account_id;
2023-01-13 08:07:10.595 GMT [62961] WARNING:  there is no transaction in progress
2023-01-13 08:07:10.595 GMT [62961] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-13 08:07:10.595 GMT [62961] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statements', CURRENT_DATE);
2023-01-13 08:07:10.595 GMT [62961] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:07:10.595 GMT [62961] STATEMENT:  RETURN QUERY
	        SELECT credit_accounts_statements.account_id, credit_accounts_statements.account_number, credit_accounts_statements.starting_date, credit_accounts_statements.end_date, credit_accounts_statements.amount
	        FROM client.credit_accounts_statements
	        WHERE credit_accounts_statements.account_number = account_number
	        AND credit_accounts_statements.account_id = account_id;
2023-01-13 08:07:10.595 GMT [62961] WARNING:  there is no transaction in progress
2023-01-13 08:07:10.595 GMT [62961] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-13 08:07:10.595 GMT [62961] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed debit statement', CURRENT_DATE);
2023-01-13 08:07:10.595 GMT [62961] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:07:10.595 GMT [62961] STATEMENT:  RETURN QUERY
	        SELECT debit_accounts_statement.account_id, debit_accounts_statement.account_number, debit_accounts_statement.starting_date, debit_accounts_statement.end_date, debit_accounts_statement.amount
	        FROM client.debit_accounts_statement
	        WHERE debit_accounts_statement.account_id = account_id
	        AND debit_accounts_statement.account_number = account_number
	        AND debit_accounts_statement.statement_id = statement_id;
2023-01-13 08:07:10.597 GMT [62961] WARNING:  there is no transaction in progress
2023-01-13 08:07:10.598 GMT [62961] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-13 08:07:10.598 GMT [62961] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statement', CURRENT_DATE);
2023-01-13 08:07:10.598 GMT [62961] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:07:10.598 GMT [62961] STATEMENT:  RETURN QUERY
	        SELECT credit_accounts_statement.account_id, credit_accounts_statement.account_number, credit_accounts_statement.starting_date, credit_accounts_statement.end_date, credit_accounts_statement.amount
	        FROM client.credit_accounts_statement
	        WHERE credit_accounts_statement.account_id = account_id
	        AND credit_accounts_statement.account_number = account_number
	        AND credit_accounts_statement.statement_id = statement_id;
2023-01-13 08:07:10.598 GMT [62961] WARNING:  there is no transaction in progress
2023-01-13 08:07:10.598 GMT [62961] ERROR:  syntax error at or near "DECLARE" at character 1790
2023-01-13 08:07:10.598 GMT [62961] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_savings_statement(account_id INT, savings_account_id INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT savings_accounts_statement.account_id, savings_accounts_statement.account_number, savings_accounts_statement.starting_date, savings_accounts_statement.end_date, savings_accounts_statement.amount
	        FROM client.savings_accounts_statement
	        WHERE savings_accounts_statement.account_id = account_id
	        AND savings_accounts_statement.account_number = savings_account_id
	        AND savings_accounts_statement.statement_id = statement_id;
	END;
	
	CREATE SCHEMA IF NOT EXISTS unauthenticated;
	SET search_path TO unauthenticated, public;
	
	-- Allows an unauthenticated user to match hashes to hashes of personal information contained in the customer table
	CREATE OR REPLACE VIEW unauthenticated.unauthenticated_personal_information AS
	SELECT id, md5(first_name) AS first_name, md5(last_name) AS last_name, md5(email_address) AS email_address
	FROM customer;
	
	-- Allows an unauthenticated user to view hashes of usernames contained in the user_login table
	CREATE OR REPLACE VIEW unauthenticated.unauthenticated_login AS
	SELECT md5(username) AS username FROM user_login;
	
	-- Allows a user to insert personal information into the online banking system
	CREATE OR REPLACE FUNCTION unauthenticated.create_personal_info(first_name TEXT, last_name TEXT, date_of_birth DATE, phone_number TEXT, email_address TEXT, address_street TEXT, address_city TEXT, address_county TEXT, address_postcode TEXT)
	RETURNS INT AS $$
	DECLARE customer_id INT;
2023-01-13 08:07:10.599 GMT [62961] ERROR:  syntax error at or near "IF" at character 11
2023-01-13 08:07:10.599 GMT [62961] STATEMENT:  BEGIN
	    IF NOT EXISTS (SELECT FROM unauthenticated.unauthenticated_personal_information WHERE md5(first_name) = first_name AND md5(last_name) = last_name AND md5(email_address) = email_address) THEN
	        INSERT INTO customer
	        VALUES (first_name, last_name, date_of_birth, phone_number, email_address, address_street, address_city, address_county, address_postcode)
	        RETURNING id INTO customer_id;
2023-01-13 08:07:10.601 GMT [62961] ERROR:  syntax error at or near "ELSE" at character 1
2023-01-13 08:07:10.601 GMT [62961] STATEMENT:  ELSE
	        RAISE NOTICE 'CUSTOMER INFORMATION ALREADY PRESENT';
2023-01-13 08:07:10.602 GMT [62961] ERROR:  relation "unauthenticated.unauthenticated_personal_information" does not exist at character 33
2023-01-13 08:07:10.602 GMT [62961] STATEMENT:  SELECT id INTO customer_id FROM unauthenticated.unauthenticated_personal_information WHERE md5(first_name) = first_name AND md5(last_name) = last_name AND md5(email_address) = email_address;
2023-01-13 08:07:10.602 GMT [62961] ERROR:  syntax error at or near "IF" at character 5
2023-01-13 08:07:10.602 GMT [62961] STATEMENT:  END IF;
2023-01-13 08:07:10.602 GMT [62961] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:07:10.602 GMT [62961] STATEMENT:  RETURN customer_id;
2023-01-13 08:07:10.603 GMT [62961] WARNING:  there is no transaction in progress
2023-01-13 08:07:10.603 GMT [62961] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	-- Allows an unauthenticated user to create an online account
	CREATE OR REPLACE FUNCTION unauthenticated.create_online_account_details(customer_id INT, first_name TEXT, last_name TEXT, email_address TEXT, question_choice_ids INT[], question_answers TEXT[])
	RETURNS INT AS $$" at character 1
2023-01-13 08:07:10.603 GMT [62961] STATEMENT:  $$ LANGUAGE plpgsql;
	
	-- Allows an unauthenticated user to create an online account
	CREATE OR REPLACE FUNCTION unauthenticated.create_online_account_details(customer_id INT, first_name TEXT, last_name TEXT, email_address TEXT, question_choice_ids INT[], question_answers TEXT[])
	RETURNS INT AS $$
	DECLARE account_id INT;
2023-01-13 08:07:10.603 GMT [62961] ERROR:  syntax error at or near "INT" at character 27
2023-01-13 08:07:10.603 GMT [62961] STATEMENT:  DECLARE online_account_id INT;
2023-01-13 08:07:10.604 GMT [62961] ERROR:  syntax error at or near "INT" at character 28
2023-01-13 08:07:10.604 GMT [62961] STATEMENT:  DECLARE question_choice_id INT;
2023-01-13 08:07:10.604 GMT [62961] ERROR:  syntax error at or near "IF" at character 11
2023-01-13 08:07:10.604 GMT [62961] STATEMENT:  BEGIN
	    IF NOT EXISTS (SELECT FROM user_login WHERE username = username) THEN
	        INSERT INTO online_account (date_opened, sort_code, customer_id)
	        VALUES ((SELECT now()), (SELECT num FROM GENERATE_SERIES(1, 6) AS s(num) LIMIT 1), customer_id)
	        RETURNING id INTO account_id;
2023-01-13 08:07:10.604 GMT [62961] ERROR:  syntax error at or near "INTO" at character 131
2023-01-13 08:07:10.604 GMT [62961] STATEMENT:  INSERT INTO user_login (account_id, username, password)
	        VALUES (account_id, username, md5(password))
	        RETURNING id INTO online_account_id;
2023-01-13 08:07:10.605 GMT [62961] ERROR:  syntax error at or near "FOR" at character 1
2023-01-13 08:07:10.605 GMT [62961] STATEMENT:  FOR i IN 0..2 LOOP
	            
	            INSERT INTO user_login_security_question (question_choice_id, login_id)
	            VALUES (question_choice_ids[i], online_account_id)
	            RETURNING id INTO question_choice_id;
2023-01-13 08:07:10.605 GMT [62961] ERROR:  column "answer" of relation "security_question_answer" does not exist at character 39
2023-01-13 08:07:10.605 GMT [62961] STATEMENT:  INSERT INTO security_question_answer (answer, question_id)
	            VALUES (question_answers[i], question_choice_id);
2023-01-13 08:07:10.605 GMT [62961] ERROR:  syntax error at or near "LOOP" at character 5
2023-01-13 08:07:10.605 GMT [62961] STATEMENT:  END LOOP;
2023-01-13 08:07:10.605 GMT [62961] ERROR:  column "account_id" does not exist at character 117
2023-01-13 08:07:10.605 GMT [62961] HINT:  There is a column named "account_id" in table "authentication_log", but it cannot be referenced from this part of the query.
2023-01-13 08:07:10.605 GMT [62961] STATEMENT:  INSERT INTO authentication_log (log_description, log_date, account_id) VALUES ('New online account created', now(), account_id);
2023-01-13 08:07:10.607 GMT [62961] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:07:10.607 GMT [62961] STATEMENT:  RETURN account_id;
2023-01-13 08:07:10.607 GMT [62961] ERROR:  syntax error at or near "ELSE" at character 1
2023-01-13 08:07:10.607 GMT [62961] STATEMENT:  ELSE
	        RAISE NOTICE 'USERNAME ALREADY TAKEN';
2023-01-13 08:07:10.607 GMT [62961] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:07:10.607 GMT [62961] STATEMENT:  RETURN NULL;
2023-01-13 08:07:10.608 GMT [62961] ERROR:  syntax error at or near "IF" at character 5
2023-01-13 08:07:10.608 GMT [62961] STATEMENT:  END IF;
2023-01-13 08:07:10.608 GMT [62961] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:07:10.608 GMT [62961] STATEMENT:  RETURN success;
2023-01-13 08:07:10.608 GMT [62961] WARNING:  there is no transaction in progress
2023-01-13 08:07:10.608 GMT [62961] ERROR:  unterminated dollar-quoted string at or near "$$ LANGUAGE plpgsql;
	
	
	
	
	
	-- sample data for customers
	INSERT INTO customer (first_name, last_name, date_of_birth, phone_number, email_address, address_street, address_city, address_county, address_postcode)
	VALUES ('John', 'Smith', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('Jane', 'Doe', '1990-01-01', '01234567890', 'test@gmail.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Bloggs', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('John', 'Bloggs', '1990-01-01', '01234567890', 'hello@yahoo.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('Jane', 'Bloggs', '1990-01-01', '01234567890', 'test@outlook.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Doe', '1990-01-01', '01234567890', 'hello@outlook.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('John', 'Doe', '1990-01-01', '01234567890', 'mybankemail@icloud.com', '1 My Bank Street', 'My Bank City', 'My Bank County', 'MB1 1NK'),
	('Jane', 'Smith', '1990-01-01', '01234567890', 'bankemail@outlook.com', '1 Bank Street', 'Bank City', 'Bank County', 'BA1 1NK'),
	('Joe', 'Smith', '1990-01-01', '01234567890', 'example@icloud.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX');
	
	-- sample data for online account
	INSERT INTO online_account (date_opened, sort_code, customer_id)
	VALUES ('2020-01-01', '123456', 1),
	('2019-01-01', '126485', 2),
	('2018-01-01', '128475', 3),
	('2017-01-01', '129476', 4),
	('2016-01-01', '120386', 5),
	('2017-02-03', '127385', 6),
	('2018-02-04', '128256', 7),
	('2020-01-01', '129386', 8),
	('2020-01-01', '120386', 9);
	
	-- sample data for user login
	INSERT INTO user_login (account_id, username, password)
	VALUES (1, 'johnsmith', 'b29af57c2b3bba21e9df0cece40952c6'),
	(2, 'janedoe', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(3, 'joebloggs', 'b29af57c2b3bba21e9df0cece40952c6'),
	(4, 'johnbloggs', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(5, 'janebloggs', 'b29af57c2b3bba21e9df0cece40952c6'),
	(6, 'joedoe', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(7, 'johndoe', 'b29af57c2b3bba21e9df0cece40952c6'),
	(8, 'joesmith', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(9, 'janesmith', 'b29af57c2b3bba21e9df0cece40952c6');
	
	-- sample data for security question option
	INSERT INTO security_question_option (question_description)
	VALUES ('What is your favourite colour?'),
	('What is your favourite food?'),
	('What is your favourite animal?'),
	('What is your favourite sport?'),
	('What is your favourite movie?'),
	('What is your favourite book?'),
	('What is your favourite song?'),
	('What is your favourite band?'),
	('What is your favourite game?'),
	('What is your favourite TV show?');
	
	--sample data for user login security question
	INSERT INTO user_login_security_question (question_choice_id, login_id)
	VALUES (1, 1),
	(2, 2),
	(3, 3),
	(4, 4),
	(5, 5),
	(6, 6),
	(7, 7),
	(8, 8),
	(9, 9);
	
	-- sample data for security question answer
	INSERT INTO security_question_answer (question_answer, question_id)
	VALUES ('Red', 1),
	('Blue', 2),
	('Green', 3),
	('Yellow', 4),
	('Orange', 5),
	('Purple', 6),
	('Pink', 7),
	('Black', 8),
	('White', 9);
	
	INSERT INTO savings_account (account_number, account_id, current_balance, interest_rate)
	VALUES ('12345678', 1, 2000.00, 2.05);
	
	-- -- sample data for savings account
	-- INSERT INTO savings_account (current_balance, interest_rate, account_id)
	-- VALUES (2000.00, 2.05, 1),
	-- (1000.00, 2.05, 2),
	-- (5000.00, 2.05, 3),
	-- (10000.00, 2.05, 4),
	-- (20000.00, 2.05, 5),
	-- (50000.00, 2.05, 6),
	-- (100000.00, 2.05, 7),
	-- (200000.00, 2.05, 8);
	
	-- -- sample data for credit account
	-- INSERT INTO credit_account (outstanding_balance, credit_limit, interest_rate, account_id)
	-- VALUES (55.43, 2000.00, 4.22, 1),
	-- (100.00, 1000.00, 4.22, 2),
	-- (200.00, 5000.00, 4.22, 3),
	-- (300.00, 10000.00, 4.22, 4),
	-- (400.00, 20000.00, 4.22, 5),
	-- (500.00, 50000.00, 4.22, 6),
	-- (600.00, 100000.00, 4.22, 7),
	-- (700.00, 200000.00, 4.22, 8);
	
	-- -- sample data for debit account
	-- INSERT INTO debit_account (current_balance, interest_rate, account_id)
	-- VALUES (3465.43, 0.05, 1),
	-- (1000.00, 0.05, 1),
	-- (5000.00, 0.05, 2),
	-- (10000.00, 0.05, 3),
	-- (20000.00, 0.05, 4),
	-- (50000.00, 0.05, 5),
	-- (100000.00, 0.05, 6),
	-- (200000.00, 0.05, 9);
	
	-- -- sample data for loan
	-- INSERT INTO loan (loan_end_date, loan_amount, loan_type, account_id)
	-- VALUES ('2024-01-01', 10000, 'vehicle', 8),
	-- ('2023-03-04', 300000, 'mortgage', 8),
	-- ('2035-03-03', 400000, 'mortgage', 1),
	-- ('2025-04-05', 25000, 'vehicle', 1),
	-- ('2026-05-05', 34000, 'vehicle', 1),
	-- ('2023-06-07', 500000, 'mortgage', 2),
	-- ('2026-04-04', 60000, 'vehicle', 2),
	-- ('2024-03-03', 70000, 'vehicle', 2),
	-- ('2023-02-02', 800000, 'mortgage', 3),
	-- ('2022-01-01', 90000, 'vehicle', 3),
	-- ('2021-01-01', 100000, 'vehicle', 3),
	-- ('2020-01-01', 110000, 'mortgage', 4),
	-- ('2020-01-01', 12000, 'vehicle', 4),
	-- ('2020-01-01', 13000, 'vehicle', 4),
	-- ('2020-01-01', 140000, 'mortgage', 5),
	-- ('2020-01-01', 15000, 'vehicle', 5),
	-- ('2020-01-01', 16000, 'vehicle', 5),
	-- ('2020-01-01', 170000, 'mortgage', 6),
	-- ('2020-01-01', 18000, 'vehicle', 6),
	-- ('2020-01-01', 19000, 'vehicle', 6),
	-- ('2020-01-01', 200000, 'mortgage', 7),
	-- ('2020-01-01', 21000, 'vehicle', 7),
	-- ('2020-01-01', 22000, 'vehicle', 7);
	
	-- CREATE SCHEMA IF NOT EXISTS staff;
	
	-- SET search_path TO public, staff;" at character 1
2023-01-13 08:07:10.608 GMT [62961] STATEMENT:  $$ LANGUAGE plpgsql;
	
	
	
	
	
	-- sample data for customers
	INSERT INTO customer (first_name, last_name, date_of_birth, phone_number, email_address, address_street, address_city, address_county, address_postcode)
	VALUES ('John', 'Smith', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('Jane', 'Doe', '1990-01-01', '01234567890', 'test@gmail.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Bloggs', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('John', 'Bloggs', '1990-01-01', '01234567890', 'hello@yahoo.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('Jane', 'Bloggs', '1990-01-01', '01234567890', 'test@outlook.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Doe', '1990-01-01', '01234567890', 'hello@outlook.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('John', 'Doe', '1990-01-01', '01234567890', 'mybankemail@icloud.com', '1 My Bank Street', 'My Bank City', 'My Bank County', 'MB1 1NK'),
	('Jane', 'Smith', '1990-01-01', '01234567890', 'bankemail@outlook.com', '1 Bank Street', 'Bank City', 'Bank County', 'BA1 1NK'),
	('Joe', 'Smith', '1990-01-01', '01234567890', 'example@icloud.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX');
	
	-- sample data for online account
	INSERT INTO online_account (date_opened, sort_code, customer_id)
	VALUES ('2020-01-01', '123456', 1),
	('2019-01-01', '126485', 2),
	('2018-01-01', '128475', 3),
	('2017-01-01', '129476', 4),
	('2016-01-01', '120386', 5),
	('2017-02-03', '127385', 6),
	('2018-02-04', '128256', 7),
	('2020-01-01', '129386', 8),
	('2020-01-01', '120386', 9);
	
	-- sample data for user login
	INSERT INTO user_login (account_id, username, password)
	VALUES (1, 'johnsmith', 'b29af57c2b3bba21e9df0cece40952c6'),
	(2, 'janedoe', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(3, 'joebloggs', 'b29af57c2b3bba21e9df0cece40952c6'),
	(4, 'johnbloggs', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(5, 'janebloggs', 'b29af57c2b3bba21e9df0cece40952c6'),
	(6, 'joedoe', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(7, 'johndoe', 'b29af57c2b3bba21e9df0cece40952c6'),
	(8, 'joesmith', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(9, 'janesmith', 'b29af57c2b3bba21e9df0cece40952c6');
	
	-- sample data for security question option
	INSERT INTO security_question_option (question_description)
	VALUES ('What is your favourite colour?'),
	('What is your favourite food?'),
	('What is your favourite animal?'),
	('What is your favourite sport?'),
	('What is your favourite movie?'),
	('What is your favourite book?'),
	('What is your favourite song?'),
	('What is your favourite band?'),
	('What is your favourite game?'),
	('What is your favourite TV show?');
	
	--sample data for user login security question
	INSERT INTO user_login_security_question (question_choice_id, login_id)
	VALUES (1, 1),
	(2, 2),
	(3, 3),
	(4, 4),
	(5, 5),
	(6, 6),
	(7, 7),
	(8, 8),
	(9, 9);
	
	-- sample data for security question answer
	INSERT INTO security_question_answer (question_answer, question_id)
	VALUES ('Red', 1),
	('Blue', 2),
	('Green', 3),
	('Yellow', 4),
	('Orange', 5),
	('Purple', 6),
	('Pink', 7),
	('Black', 8),
	('White', 9);
	
	INSERT INTO savings_account (account_number, account_id, current_balance, interest_rate)
	VALUES ('12345678', 1, 2000.00, 2.05);
	
	-- -- sample data for savings account
	-- INSERT INTO savings_account (current_balance, interest_rate, account_id)
	-- VALUES (2000.00, 2.05, 1),
	-- (1000.00, 2.05, 2),
	-- (5000.00, 2.05, 3),
	-- (10000.00, 2.05, 4),
	-- (20000.00, 2.05, 5),
	-- (50000.00, 2.05, 6),
	-- (100000.00, 2.05, 7),
	-- (200000.00, 2.05, 8);
	
	-- -- sample data for credit account
	-- INSERT INTO credit_account (outstanding_balance, credit_limit, interest_rate, account_id)
	-- VALUES (55.43, 2000.00, 4.22, 1),
	-- (100.00, 1000.00, 4.22, 2),
	-- (200.00, 5000.00, 4.22, 3),
	-- (300.00, 10000.00, 4.22, 4),
	-- (400.00, 20000.00, 4.22, 5),
	-- (500.00, 50000.00, 4.22, 6),
	-- (600.00, 100000.00, 4.22, 7),
	-- (700.00, 200000.00, 4.22, 8);
	
	-- -- sample data for debit account
	-- INSERT INTO debit_account (current_balance, interest_rate, account_id)
	-- VALUES (3465.43, 0.05, 1),
	-- (1000.00, 0.05, 1),
	-- (5000.00, 0.05, 2),
	-- (10000.00, 0.05, 3),
	-- (20000.00, 0.05, 4),
	-- (50000.00, 0.05, 5),
	-- (100000.00, 0.05, 6),
	-- (200000.00, 0.05, 9);
	
	-- -- sample data for loan
	-- INSERT INTO loan (loan_end_date, loan_amount, loan_type, account_id)
	-- VALUES ('2024-01-01', 10000, 'vehicle', 8),
	-- ('2023-03-04', 300000, 'mortgage', 8),
	-- ('2035-03-03', 400000, 'mortgage', 1),
	-- ('2025-04-05', 25000, 'vehicle', 1),
	-- ('2026-05-05', 34000, 'vehicle', 1),
	-- ('2023-06-07', 500000, 'mortgage', 2),
	-- ('2026-04-04', 60000, 'vehicle', 2),
	-- ('2024-03-03', 70000, 'vehicle', 2),
	-- ('2023-02-02', 800000, 'mortgage', 3),
	-- ('2022-01-01', 90000, 'vehicle', 3),
	-- ('2021-01-01', 100000, 'vehicle', 3),
	-- ('2020-01-01', 110000, 'mortgage', 4),
	-- ('2020-01-01', 12000, 'vehicle', 4),
	-- ('2020-01-01', 13000, 'vehicle', 4),
	-- ('2020-01-01', 140000, 'mortgage', 5),
	-- ('2020-01-01', 15000, 'vehicle', 5),
	-- ('2020-01-01', 16000, 'vehicle', 5),
	-- ('2020-01-01', 170000, 'mortgage', 6),
	-- ('2020-01-01', 18000, 'vehicle', 6),
	-- ('2020-01-01', 19000, 'vehicle', 6),
	-- ('2020-01-01', 200000, 'mortgage', 7),
	-- ('2020-01-01', 21000, 'vehicle', 7),
	-- ('2020-01-01', 22000, 'vehicle', 7);
	
	-- CREATE SCHEMA IF NOT EXISTS staff;
	
	-- SET search_path TO public, staff;
2023-01-13 08:08:56.566 GMT [62922] LOG:  received fast shutdown request
2023-01-13 08:08:56.568 GMT [62922] LOG:  aborting any active transactions
2023-01-13 08:08:56.574 GMT [62922] LOG:  background worker "logical replication launcher" (PID 62929) exited with exit code 1
2023-01-13 08:08:56.574 GMT [62924] LOG:  shutting down
2023-01-13 08:08:56.620 GMT [62922] LOG:  database system is shut down
2023-01-13 08:08:58.002 GMT [63346] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-13 08:08:58.003 GMT [63346] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-13 08:08:58.005 GMT [63346] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-13 08:08:58.013 GMT [63350] LOG:  database system was shut down at 2023-01-13 08:08:57 GMT
2023-01-13 08:08:58.019 GMT [63346] LOG:  database system is ready to accept connections
2023-01-13 08:08:58.843 GMT [63385] ERROR:  syntax error at or near "DECLARE" at character 4694
2023-01-13 08:08:58.843 GMT [63385] STATEMENT:  CREATE OR REPLACE FUNCTION get_next_account_number()
	RETURNS INT AS $$
	DECLARE next_account_number INT;
	BEGIN
	    SELECT MAX(account_number) INTO next_account_number FROM debit_account;
	    IF next_account_number IS NULL THEN
	        next_account_number = 10000000;
	    ELSE
	        next_account_number = next_account_number + 1;
	    END IF;
	    RETURN next_account_number;
	END;
	
	CREATE SCHEMA IF NOT EXISTS staff;
	SET search_path TO public, staff, client;
	
	CREATE OR REPLACE VIEW 
	
	CREATE SCHEMA IF NOT EXISTS client;
	SET search_path TO public, client;
	
	
	CREATE OR REPLACE VIEW client.accounts AS
	    SELECT account_number, account_id FROM account;
	
	CREATE OR REPLACE VIEW client.debit_accounts AS
	    SELECT account.account_id, account.account_number, debit_account.current_balance, debit_account.interest_rate, debit_overdraft.overdraft_limit, debit_overdraft.overdraft_usage, debit_overdraft.interest_rate
	    FROM account
	    INNER JOIN debit_account ON account.account_number = debit_account.account_number
	    INNER JOIN debit_overdraft ON account.account_number = debit_overdraft.account_number;
	
	CREATE OR REPLACE VIEW client.debit_accounts_statements AS
	    SELECT debit_accounts.account_id, debit_accounts.account_number, debit_statement.id, debit_statement.starting_date, debit_statement.end_date, debit_statement.amount
	    FROM debit_accounts
	    INNER JOIN debit_statement ON debit_accounts.account_number = debit_statement.account_number;
	
	CREATE OR REPLACE VIEW client.debit_accounts_statement AS
	    SELECT debit_accounts_statements.account_id, debit_accounts_statements.account_number, debit_accounts_statements.id, debit_accounts_statements.starting_date, debit_accounts_statements.end_date, debit_accounts_statements.amount, transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date
	    FROM debit_accounts_statements
	    INNER JOIN transaction ON debit_accounts_statements.id = transaction.debit_statement_id;
	
	CREATE OR REPLACE VIEW client.credit_accounts AS
	    SELECT account.account_id, account.account_number, credit_account.outstanding_balance, credit_account.credit_limit, credit_account.interest_rate, credit_account_application.application_status
	    FROM account
	    INNER JOIN credit_account ON account.account_number = credit_account.account_number
	    INNER JOIN credit_account_application ON account.account_number = credit_account_application.account_number;
	
	CREATE OR REPLACE VIEW client.credit_accounts_statements AS
	    SELECT credit_accounts.account_id, credit_accounts.account_number, credit_statement.id, credit_statement.starting_date, credit_statement.end_date, credit_statement.amount, credit_statement.minimum_payment, credit_statement.minimum_payment_due_date
	    FROM credit_accounts
	    INNER JOIN credit_statement ON credit_accounts.account_number = credit_statement.account_number;
	
	CREATE OR REPLACE VIEW client.credit_accounts_statement AS
	    SELECT credit_accounts_statements.account_id, credit_accounts_statements.account_number, credit_accounts_statements.id, credit_accounts_statements.starting_date, credit_accounts_statements.end_date, credit_accounts_statements.amount, credit_accounts_statements.minimum_payment, credit_accounts_statements.minimum_payment_due_date, transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date
	    FROM credit_accounts_statements
	    INNER JOIN transaction ON credit_accounts_statements.id = transaction.credit_statement_id;
	
	CREATE OR REPLACE VIEW client.savings_accounts AS
	    SELECT account.account_id, account.account_number, savings_account.current_balance, savings_account.interest_rate
	    FROM account
	    INNER JOIN savings_account ON account.account_number = savings_account.account_number;
	
	CREATE OR REPLACE VIEW client.savings_accounts_statements AS
	    SELECT savings_accounts.account_id, savings_accounts.account_number, savings_statement.id, savings_statement.starting_date, savings_statement.end_date, savings_statement.amount
	    FROM savings_accounts
	    INNER JOIN savings_statement ON savings_accounts.account_number = savings_statement.account_number;
	
	CREATE OR REPLACE VIEW client.loans AS
	    SELECT loan.account_id, loan.id, loan.amount, loan.interest_rate, loan.term, loan_application.application_status
	    FROM loan
	    INNER JOIN loan_application ON loan.id = loan_application.account_id;
	
	CREATE OR REPLACE FUNCTION client.update_personal_information(account_identifier INT, first_name TEXT, last_name TEXT, date_of_birth DATE, phone_number TEXT, email_address TEXT, address_street TEXT, address_city TEXT, address_county TEXT, address_postcode TEXT, account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-13 08:08:58.845 GMT [63385] ERROR:  syntax error at or near "UPDATE" at character 11
2023-01-13 08:08:58.845 GMT [63385] STATEMENT:  BEGIN
	    UPDATE customer SET first_name = first_name, last_name = last_name, date_of_birth = date_of_birth, phone_number = phone_number, email_address = email_address, address_street = address_street, address_city = address_city, address_county = address_county, address_postcode = address_postcode
	    WHERE id = (SELECT customer_id FROM online_account WHERE id = account_identifier);
2023-01-13 08:08:58.845 GMT [63385] ERROR:  syntax error at or near "passed" at character 1
2023-01-13 08:08:58.845 GMT [63385] STATEMENT:  passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-13 08:08:58.846 GMT [63385] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:08:58.846 GMT [63385] STATEMENT:  RETURN passed;
2023-01-13 08:08:58.846 GMT [63385] WARNING:  there is no transaction in progress
2023-01-13 08:08:58.847 GMT [63385] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.update_password(account_identifier INT, new_password TEXT)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-13 08:08:58.847 GMT [63385] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.update_password(account_identifier INT, new_password TEXT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-13 08:08:58.847 GMT [63385] ERROR:  syntax error at or near "UPDATE" at character 11
2023-01-13 08:08:58.847 GMT [63385] STATEMENT:  BEGIN
	    UPDATE user_login SET password = md5(new_password)
	    WHERE account_id = account_identifier;
2023-01-13 08:08:58.848 GMT [63385] ERROR:  column "account_identifier" does not exist at character 76
2023-01-13 08:08:58.848 GMT [63385] STATEMENT:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Updated password', CURRENT_DATE);
2023-01-13 08:08:58.849 GMT [63385] ERROR:  syntax error at or near "passed" at character 1
2023-01-13 08:08:58.849 GMT [63385] STATEMENT:  passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-13 08:08:58.849 GMT [63385] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:08:58.849 GMT [63385] STATEMENT:  RETURN passed;
2023-01-13 08:08:58.850 GMT [63385] WARNING:  there is no transaction in progress
2023-01-13 08:08:58.850 GMT [63385] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.update_email(account_identifier INT, new_email TEXT)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-13 08:08:58.850 GMT [63385] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.update_email(account_identifier INT, new_email TEXT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-13 08:08:58.850 GMT [63385] ERROR:  syntax error at or near "UPDATE" at character 11
2023-01-13 08:08:58.850 GMT [63385] STATEMENT:  BEGIN
	    UPDATE user_login SET email = new_email
	    WHERE account_id = account_identifier;
2023-01-13 08:08:58.850 GMT [63385] ERROR:  column "account_identifier" does not exist at character 76
2023-01-13 08:08:58.850 GMT [63385] STATEMENT:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Updated email', CURRENT_DATE);
2023-01-13 08:08:58.851 GMT [63385] ERROR:  syntax error at or near "passed" at character 1
2023-01-13 08:08:58.851 GMT [63385] STATEMENT:  passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-13 08:08:58.851 GMT [63385] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:08:58.851 GMT [63385] STATEMENT:  RETURN passed;
2023-01-13 08:08:58.852 GMT [63385] WARNING:  there is no transaction in progress
2023-01-13 08:08:58.853 GMT [63385] ERROR:  schema "client" does not exist
2023-01-13 08:08:58.853 GMT [63385] STATEMENT:  CREATE OR REPLACE FUNCTION client.open_debit_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE debit_account_number INT;
	DECLARE next_account_number INT;
	BEGIN
	
	    SELECT get_next_account_number() INTO next_account_number;
	
	    INSERT INTO debit_account (account_number, account_id, current_balance, interest_rate) VALUES (next_account_number ,account_id, 0, 0.01) RETURNING id INTO debit_account_number;
	    INSERT INTO debit_statement (starting_date, end_date, amount, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, debit_account_id);
	    INSERT INTO debit_overdraft (overdraft_usage, overdraft_limit, interest_rate, account_id) VALUES (0, 0, 0.01, debit_account_id);
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened debit account', CURRENT_DATE);
	    passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
	    RETURN passed;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:08:58.854 GMT [63385] ERROR:  schema "client" does not exist
2023-01-13 08:08:58.854 GMT [63385] STATEMENT:  CREATE OR REPLACE FUNCTION client.open_credit_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE credit_account_number INT;
	DECLARE next_account_number INT;
	BEGIN
	
	    SELECT get_next_account_number() INTO next_account_number;
	
	    INSERT INTO credit_account (account_number, outstanding_balance, credit_limit, interest_rate, account_id) VALUES (next_account_number ,0, 0, 24.9, account_id) RETURNING id INTO credit_account_id;
	    INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_id) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_id);
	    INSERT INTO credit_account_application (credit_account_id, application_status) VALUES (credit_account_id, 'PENDING');
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened credit account', CURRENT_DATE);
	END
	$$ LANGUAGE plpgsql;
2023-01-13 08:08:58.854 GMT [63385] ERROR:  schema "client" does not exist
2023-01-13 08:08:58.854 GMT [63385] STATEMENT:  CREATE OR REPLACE FUNCTION client.open_savings_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE savings_account_id INT;
	DECLARE next_account_number INT;
	BEGIN
	
	    SELECT get_next_account_number() INTO next_account_number;
	
	    INSERT INTO savings_account (account_number, account_id, current_balance, interest_rate) VALUES (next_account_number ,account_id, 0, 0.01) RETURNING id INTO savings_account_id;
	    INSERT INTO savings_statement (starting_date, end_date, amount, account_id) VALUES (CURRENT_DATE, CURRENT_DATE, 0, savings_account_id);
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened savings account', CURRENT_DATE);
	    INSERT INTO external_account (account_id, external_account_number) VALUES (savings_account_id, '12345678');
	    passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
	    RETURN passed;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:08:58.854 GMT [63385] ERROR:  schema "client" does not exist
2023-01-13 08:08:58.854 GMT [63385] STATEMENT:  CREATE OR REPLACE FUNCTION client.open_loan(account_id INT, loan_amount INT, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE loan_id INT;
	BEGIN
	    INSERT INTO loan (account_id, loan_amount, loan_end_date, loan_type, loan_interest_rate) VALUES (account_id, loan_amount, loan_end_date, loan_type, loan_interest_rate) RETURNING id INTO loan_id;
	    INSERT INTO loan_statement (starting_date, end_date, amount, account_id) VALUES (CURRENT_DATE, CURRENT_DATE, 0, loan_id);
	    INSERT INTO loan_application (loan_id, application_status) VALUES (loan_id, 'PENDING');
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened loan', CURRENT_DATE);
	    passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
	    RETURN passed;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:08:58.855 GMT [63385] ERROR:  syntax error at or near "INSERT" at character 657
2023-01-13 08:08:58.855 GMT [63385] STATEMENT:  CREATE OR REPLACE FUNCTION client.get_account_type(account_number INT)
	RETURNS TEXT AS $$
	DECLARE account_type TEXT;
	BEGIN
	    SELECT CASE WHEN EXISTS (SELECT * FROM debit_account WHERE account_number = account_number) THEN 'DEBIT'
	                WHEN EXISTS (SELECT * FROM credit_account WHERE account_number = account_number) THEN 'CREDIT'
	                WHEN EXISTS (SELECT * FROM savings_account WHERE account_number = account_number) THEN 'SAVINGS'
	                ELSE 'UNKNOWN' END INTO account_type;
	    RETURN account_type;
	END;
	
	CREATE OR REPLACE FUNCTION client.view_accounts(account_id INT)
	RETURNS TABLE (account_number INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed accounts', CURRENT_DATE);
	    RETURN QUERY
	        SELECT account.*, COALESCE(debit_accounts.current_balance, credit_accounts.outstanding_balance, savings_accounts.current_balance, loans.loan_amount) AS balance,
	        COALESCE(debit_accounts.interest_rate, credit_accounts.interest_rate, savings_accounts.interest_rate, loans.loan_interest_rate) AS interest_rate,
	        get_account_type(account.account_number) AS account_type
	END;
2023-01-13 08:08:58.856 GMT [63385] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, overdraft_limit NUMERIC, overdraft_usage NUMERIC, interest_rate, external_account_number INT) AS $$" at character 1
2023-01-13 08:08:58.856 GMT [63385] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, overdraft_limit NUMERIC, overdraft_usage NUMERIC, interest_rate, external_account_number INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed debit accounts', CURRENT_DATE);
2023-01-13 08:08:58.856 GMT [63385] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:08:58.856 GMT [63385] STATEMENT:  RETURN QUERY
	        SELECT * FROM client.debit_accounts WHERE account_id = account_id;
2023-01-13 08:08:58.856 GMT [63385] WARNING:  there is no transaction in progress
2023-01-13 08:08:58.857 GMT [63385] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_accounts(account_id INT)
	RETURNS TABLE (id INT, outstanding_balance NUMERIC, credit_limit NUMERIC, interest_rate NUMERIC, application_status TEXT) AS $$" at character 1
2023-01-13 08:08:58.857 GMT [63385] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_accounts(account_id INT)
	RETURNS TABLE (id INT, outstanding_balance NUMERIC, credit_limit NUMERIC, interest_rate NUMERIC, application_status TEXT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit accounts', CURRENT_DATE);
2023-01-13 08:08:58.858 GMT [63385] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:08:58.858 GMT [63385] STATEMENT:  RETURN QUERY
	        SELECT * FROM client.credit_accounts WHERE account_id = account_id;
2023-01-13 08:08:58.862 GMT [63385] WARNING:  there is no transaction in progress
2023-01-13 08:08:58.863 GMT [63385] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_savings_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, external_account_number INT) AS $$" at character 1
2023-01-13 08:08:58.863 GMT [63385] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_savings_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, external_account_number INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings accounts', CURRENT_DATE);
2023-01-13 08:08:58.864 GMT [63385] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:08:58.864 GMT [63385] STATEMENT:  RETURN QUERY
	        SELECT * FROM client.savings_accounts WHERE account_id = account_id;
2023-01-13 08:08:58.864 GMT [63385] WARNING:  there is no transaction in progress
2023-01-13 08:08:58.864 GMT [63385] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_loans(account_id INT)
	RETURNS TABLE (id INT, loan_amount NUMERIC, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC, application_status TEXT) AS $$" at character 1
2023-01-13 08:08:58.864 GMT [63385] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_loans(account_id INT)
	RETURNS TABLE (id INT, loan_amount NUMERIC, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC, application_status TEXT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed loans', CURRENT_DATE);
2023-01-13 08:08:58.865 GMT [63385] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:08:58.865 GMT [63385] STATEMENT:  RETURN QUERY
	        SELECT * FROM client.loans WHERE account_id = account_id;
2023-01-13 08:08:58.865 GMT [63385] WARNING:  there is no transaction in progress
2023-01-13 08:08:58.865 GMT [63385] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_savings_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-13 08:08:58.865 GMT [63385] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_savings_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statements', CURRENT_DATE);
2023-01-13 08:08:58.865 GMT [63385] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:08:58.865 GMT [63385] STATEMENT:  RETURN QUERY
	        SELECT savings_accounts_statements.account_id, savings_accounts_statements.account_number, savings_accounts_statements.starting_date, savings_accounts_statements.end_date, savings_accounts_statements.amount
	        FROM client.savings_accounts_statements
	        WHERE savings_accounts_statements.account_number = account_number
	        AND savings_accounts_statements.account_id = account_id;
2023-01-13 08:08:58.865 GMT [63385] WARNING:  there is no transaction in progress
2023-01-13 08:08:58.866 GMT [63385] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-13 08:08:58.866 GMT [63385] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed debit statements', CURRENT_DATE);
2023-01-13 08:08:58.866 GMT [63385] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:08:58.866 GMT [63385] STATEMENT:  RETURN QUERY
	        SELECT debit_accounts_statements.account_id, debit_accounts_statements.account_number, debit_accounts_statements.starting_date, debit_accounts_statements.end_date, debit_accounts_statements.amount
	        FROM client.debit_accounts_statements
	        WHERE debit_accounts_statements.account_number = account_number
	        AND debit_accounts_statements.account_id = account_id;
2023-01-13 08:08:58.866 GMT [63385] WARNING:  there is no transaction in progress
2023-01-13 08:08:58.866 GMT [63385] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-13 08:08:58.866 GMT [63385] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statements', CURRENT_DATE);
2023-01-13 08:08:58.867 GMT [63385] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:08:58.867 GMT [63385] STATEMENT:  RETURN QUERY
	        SELECT credit_accounts_statements.account_id, credit_accounts_statements.account_number, credit_accounts_statements.starting_date, credit_accounts_statements.end_date, credit_accounts_statements.amount
	        FROM client.credit_accounts_statements
	        WHERE credit_accounts_statements.account_number = account_number
	        AND credit_accounts_statements.account_id = account_id;
2023-01-13 08:08:58.867 GMT [63385] WARNING:  there is no transaction in progress
2023-01-13 08:08:58.867 GMT [63385] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-13 08:08:58.867 GMT [63385] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed debit statement', CURRENT_DATE);
2023-01-13 08:08:58.867 GMT [63385] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:08:58.867 GMT [63385] STATEMENT:  RETURN QUERY
	        SELECT debit_accounts_statement.account_id, debit_accounts_statement.account_number, debit_accounts_statement.starting_date, debit_accounts_statement.end_date, debit_accounts_statement.amount
	        FROM client.debit_accounts_statement
	        WHERE debit_accounts_statement.account_id = account_id
	        AND debit_accounts_statement.account_number = account_number
	        AND debit_accounts_statement.statement_id = statement_id;
2023-01-13 08:08:58.867 GMT [63385] WARNING:  there is no transaction in progress
2023-01-13 08:08:58.868 GMT [63385] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-13 08:08:58.868 GMT [63385] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statement', CURRENT_DATE);
2023-01-13 08:08:58.868 GMT [63385] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:08:58.868 GMT [63385] STATEMENT:  RETURN QUERY
	        SELECT credit_accounts_statement.account_id, credit_accounts_statement.account_number, credit_accounts_statement.starting_date, credit_accounts_statement.end_date, credit_accounts_statement.amount
	        FROM client.credit_accounts_statement
	        WHERE credit_accounts_statement.account_id = account_id
	        AND credit_accounts_statement.account_number = account_number
	        AND credit_accounts_statement.statement_id = statement_id;
2023-01-13 08:08:58.868 GMT [63385] WARNING:  there is no transaction in progress
2023-01-13 08:08:58.869 GMT [63385] ERROR:  syntax error at or near "DECLARE" at character 1790
2023-01-13 08:08:58.869 GMT [63385] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_savings_statement(account_id INT, savings_account_id INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT savings_accounts_statement.account_id, savings_accounts_statement.account_number, savings_accounts_statement.starting_date, savings_accounts_statement.end_date, savings_accounts_statement.amount
	        FROM client.savings_accounts_statement
	        WHERE savings_accounts_statement.account_id = account_id
	        AND savings_accounts_statement.account_number = savings_account_id
	        AND savings_accounts_statement.statement_id = statement_id;
	END;
	
	CREATE SCHEMA IF NOT EXISTS unauthenticated;
	SET search_path TO unauthenticated, public;
	
	-- Allows an unauthenticated user to match hashes to hashes of personal information contained in the customer table
	CREATE OR REPLACE VIEW unauthenticated.unauthenticated_personal_information AS
	SELECT id, md5(first_name) AS first_name, md5(last_name) AS last_name, md5(email_address) AS email_address
	FROM customer;
	
	-- Allows an unauthenticated user to view hashes of usernames contained in the user_login table
	CREATE OR REPLACE VIEW unauthenticated.unauthenticated_login AS
	SELECT md5(username) AS username FROM user_login;
	
	-- Allows a user to insert personal information into the online banking system
	CREATE OR REPLACE FUNCTION unauthenticated.create_personal_info(first_name TEXT, last_name TEXT, date_of_birth DATE, phone_number TEXT, email_address TEXT, address_street TEXT, address_city TEXT, address_county TEXT, address_postcode TEXT)
	RETURNS INT AS $$
	DECLARE customer_id INT;
2023-01-13 08:08:58.869 GMT [63385] ERROR:  syntax error at or near "IF" at character 11
2023-01-13 08:08:58.869 GMT [63385] STATEMENT:  BEGIN
	    IF NOT EXISTS (SELECT FROM unauthenticated.unauthenticated_personal_information WHERE md5(first_name) = first_name AND md5(last_name) = last_name AND md5(email_address) = email_address) THEN
	        INSERT INTO customer
	        VALUES (first_name, last_name, date_of_birth, phone_number, email_address, address_street, address_city, address_county, address_postcode)
	        RETURNING id INTO customer_id;
2023-01-13 08:08:58.871 GMT [63385] ERROR:  syntax error at or near "ELSE" at character 1
2023-01-13 08:08:58.871 GMT [63385] STATEMENT:  ELSE
	        RAISE NOTICE 'CUSTOMER INFORMATION ALREADY PRESENT';
2023-01-13 08:08:58.871 GMT [63385] ERROR:  relation "unauthenticated.unauthenticated_personal_information" does not exist at character 33
2023-01-13 08:08:58.871 GMT [63385] STATEMENT:  SELECT id INTO customer_id FROM unauthenticated.unauthenticated_personal_information WHERE md5(first_name) = first_name AND md5(last_name) = last_name AND md5(email_address) = email_address;
2023-01-13 08:08:58.871 GMT [63385] ERROR:  syntax error at or near "IF" at character 5
2023-01-13 08:08:58.871 GMT [63385] STATEMENT:  END IF;
2023-01-13 08:08:58.872 GMT [63385] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:08:58.872 GMT [63385] STATEMENT:  RETURN customer_id;
2023-01-13 08:08:58.872 GMT [63385] WARNING:  there is no transaction in progress
2023-01-13 08:08:58.872 GMT [63385] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	-- Allows an unauthenticated user to create an online account
	CREATE OR REPLACE FUNCTION unauthenticated.create_online_account_details(customer_id INT, first_name TEXT, last_name TEXT, email_address TEXT, question_choice_ids INT[], question_answers TEXT[])
	RETURNS INT AS $$" at character 1
2023-01-13 08:08:58.872 GMT [63385] STATEMENT:  $$ LANGUAGE plpgsql;
	
	-- Allows an unauthenticated user to create an online account
	CREATE OR REPLACE FUNCTION unauthenticated.create_online_account_details(customer_id INT, first_name TEXT, last_name TEXT, email_address TEXT, question_choice_ids INT[], question_answers TEXT[])
	RETURNS INT AS $$
	DECLARE account_id INT;
2023-01-13 08:08:58.872 GMT [63385] ERROR:  syntax error at or near "INT" at character 27
2023-01-13 08:08:58.872 GMT [63385] STATEMENT:  DECLARE online_account_id INT;
2023-01-13 08:08:58.872 GMT [63385] ERROR:  syntax error at or near "INT" at character 28
2023-01-13 08:08:58.872 GMT [63385] STATEMENT:  DECLARE question_choice_id INT;
2023-01-13 08:08:58.873 GMT [63385] ERROR:  syntax error at or near "IF" at character 11
2023-01-13 08:08:58.873 GMT [63385] STATEMENT:  BEGIN
	    IF NOT EXISTS (SELECT FROM user_login WHERE username = username) THEN
	        INSERT INTO online_account (date_opened, sort_code, customer_id)
	        VALUES ((SELECT now()), (SELECT num FROM GENERATE_SERIES(1, 6) AS s(num) LIMIT 1), customer_id)
	        RETURNING id INTO account_id;
2023-01-13 08:08:58.873 GMT [63385] ERROR:  syntax error at or near "INTO" at character 131
2023-01-13 08:08:58.873 GMT [63385] STATEMENT:  INSERT INTO user_login (account_id, username, password)
	        VALUES (account_id, username, md5(password))
	        RETURNING id INTO online_account_id;
2023-01-13 08:08:58.874 GMT [63385] ERROR:  syntax error at or near "FOR" at character 1
2023-01-13 08:08:58.874 GMT [63385] STATEMENT:  FOR i IN 0..2 LOOP
	            
	            INSERT INTO user_login_security_question (question_choice_id, login_id)
	            VALUES (question_choice_ids[i], online_account_id)
	            RETURNING id INTO question_choice_id;
2023-01-13 08:08:58.874 GMT [63385] ERROR:  column "answer" of relation "security_question_answer" does not exist at character 39
2023-01-13 08:08:58.874 GMT [63385] STATEMENT:  INSERT INTO security_question_answer (answer, question_id)
	            VALUES (question_answers[i], question_choice_id);
2023-01-13 08:08:58.874 GMT [63385] ERROR:  syntax error at or near "LOOP" at character 5
2023-01-13 08:08:58.874 GMT [63385] STATEMENT:  END LOOP;
2023-01-13 08:08:58.875 GMT [63385] ERROR:  column "account_id" does not exist at character 117
2023-01-13 08:08:58.875 GMT [63385] HINT:  There is a column named "account_id" in table "authentication_log", but it cannot be referenced from this part of the query.
2023-01-13 08:08:58.875 GMT [63385] STATEMENT:  INSERT INTO authentication_log (log_description, log_date, account_id) VALUES ('New online account created', now(), account_id);
2023-01-13 08:08:58.875 GMT [63385] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:08:58.875 GMT [63385] STATEMENT:  RETURN account_id;
2023-01-13 08:08:58.875 GMT [63385] ERROR:  syntax error at or near "ELSE" at character 1
2023-01-13 08:08:58.875 GMT [63385] STATEMENT:  ELSE
	        RAISE NOTICE 'USERNAME ALREADY TAKEN';
2023-01-13 08:08:58.875 GMT [63385] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:08:58.875 GMT [63385] STATEMENT:  RETURN NULL;
2023-01-13 08:08:58.875 GMT [63385] ERROR:  syntax error at or near "IF" at character 5
2023-01-13 08:08:58.875 GMT [63385] STATEMENT:  END IF;
2023-01-13 08:08:58.875 GMT [63385] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:08:58.875 GMT [63385] STATEMENT:  RETURN success;
2023-01-13 08:08:58.876 GMT [63385] WARNING:  there is no transaction in progress
2023-01-13 08:08:58.876 GMT [63385] ERROR:  unterminated dollar-quoted string at or near "$$ LANGUAGE plpgsql;
	
	
	
	
	
	-- sample data for customers
	INSERT INTO customer (first_name, last_name, date_of_birth, phone_number, email_address, address_street, address_city, address_county, address_postcode)
	VALUES ('John', 'Smith', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('Jane', 'Doe', '1990-01-01', '01234567890', 'test@gmail.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Bloggs', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('John', 'Bloggs', '1990-01-01', '01234567890', 'hello@yahoo.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('Jane', 'Bloggs', '1990-01-01', '01234567890', 'test@outlook.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Doe', '1990-01-01', '01234567890', 'hello@outlook.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('John', 'Doe', '1990-01-01', '01234567890', 'mybankemail@icloud.com', '1 My Bank Street', 'My Bank City', 'My Bank County', 'MB1 1NK'),
	('Jane', 'Smith', '1990-01-01', '01234567890', 'bankemail@outlook.com', '1 Bank Street', 'Bank City', 'Bank County', 'BA1 1NK'),
	('Joe', 'Smith', '1990-01-01', '01234567890', 'example@icloud.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX');
	
	-- sample data for online account
	INSERT INTO online_account (date_opened, sort_code, customer_id)
	VALUES ('2020-01-01', '123456', 1),
	('2019-01-01', '126485', 2),
	('2018-01-01', '128475', 3),
	('2017-01-01', '129476', 4),
	('2016-01-01', '120386', 5),
	('2017-02-03', '127385', 6),
	('2018-02-04', '128256', 7),
	('2020-01-01', '129386', 8),
	('2020-01-01', '120386', 9);
	
	-- sample data for user login
	INSERT INTO user_login (account_id, username, password)
	VALUES (1, 'johnsmith', 'b29af57c2b3bba21e9df0cece40952c6'),
	(2, 'janedoe', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(3, 'joebloggs', 'b29af57c2b3bba21e9df0cece40952c6'),
	(4, 'johnbloggs', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(5, 'janebloggs', 'b29af57c2b3bba21e9df0cece40952c6'),
	(6, 'joedoe', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(7, 'johndoe', 'b29af57c2b3bba21e9df0cece40952c6'),
	(8, 'joesmith', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(9, 'janesmith', 'b29af57c2b3bba21e9df0cece40952c6');
	
	-- sample data for security question option
	INSERT INTO security_question_option (question_description)
	VALUES ('What is your favourite colour?'),
	('What is your favourite food?'),
	('What is your favourite animal?'),
	('What is your favourite sport?'),
	('What is your favourite movie?'),
	('What is your favourite book?'),
	('What is your favourite song?'),
	('What is your favourite band?'),
	('What is your favourite game?'),
	('What is your favourite TV show?');
	
	--sample data for user login security question
	INSERT INTO user_login_security_question (question_choice_id, login_id)
	VALUES (1, 1),
	(2, 2),
	(3, 3),
	(4, 4),
	(5, 5),
	(6, 6),
	(7, 7),
	(8, 8),
	(9, 9);
	
	-- sample data for security question answer
	INSERT INTO security_question_answer (question_answer, question_id)
	VALUES ('Red', 1),
	('Blue', 2),
	('Green', 3),
	('Yellow', 4),
	('Orange', 5),
	('Purple', 6),
	('Pink', 7),
	('Black', 8),
	('White', 9);
	
	INSERT INTO savings_account (account_number, account_id, current_balance, interest_rate)
	VALUES ('12345678', 1, 2000.00, 2.05);
	
	-- -- sample data for savings account
	-- INSERT INTO savings_account (current_balance, interest_rate, account_id)
	-- VALUES (2000.00, 2.05, 1),
	-- (1000.00, 2.05, 2),
	-- (5000.00, 2.05, 3),
	-- (10000.00, 2.05, 4),
	-- (20000.00, 2.05, 5),
	-- (50000.00, 2.05, 6),
	-- (100000.00, 2.05, 7),
	-- (200000.00, 2.05, 8);
	
	-- -- sample data for credit account
	-- INSERT INTO credit_account (outstanding_balance, credit_limit, interest_rate, account_id)
	-- VALUES (55.43, 2000.00, 4.22, 1),
	-- (100.00, 1000.00, 4.22, 2),
	-- (200.00, 5000.00, 4.22, 3),
	-- (300.00, 10000.00, 4.22, 4),
	-- (400.00, 20000.00, 4.22, 5),
	-- (500.00, 50000.00, 4.22, 6),
	-- (600.00, 100000.00, 4.22, 7),
	-- (700.00, 200000.00, 4.22, 8);
	
	-- -- sample data for debit account
	-- INSERT INTO debit_account (current_balance, interest_rate, account_id)
	-- VALUES (3465.43, 0.05, 1),
	-- (1000.00, 0.05, 1),
	-- (5000.00, 0.05, 2),
	-- (10000.00, 0.05, 3),
	-- (20000.00, 0.05, 4),
	-- (50000.00, 0.05, 5),
	-- (100000.00, 0.05, 6),
	-- (200000.00, 0.05, 9);
	
	-- -- sample data for loan
	-- INSERT INTO loan (loan_end_date, loan_amount, loan_type, account_id)
	-- VALUES ('2024-01-01', 10000, 'vehicle', 8),
	-- ('2023-03-04', 300000, 'mortgage', 8),
	-- ('2035-03-03', 400000, 'mortgage', 1),
	-- ('2025-04-05', 25000, 'vehicle', 1),
	-- ('2026-05-05', 34000, 'vehicle', 1),
	-- ('2023-06-07', 500000, 'mortgage', 2),
	-- ('2026-04-04', 60000, 'vehicle', 2),
	-- ('2024-03-03', 70000, 'vehicle', 2),
	-- ('2023-02-02', 800000, 'mortgage', 3),
	-- ('2022-01-01', 90000, 'vehicle', 3),
	-- ('2021-01-01', 100000, 'vehicle', 3),
	-- ('2020-01-01', 110000, 'mortgage', 4),
	-- ('2020-01-01', 12000, 'vehicle', 4),
	-- ('2020-01-01', 13000, 'vehicle', 4),
	-- ('2020-01-01', 140000, 'mortgage', 5),
	-- ('2020-01-01', 15000, 'vehicle', 5),
	-- ('2020-01-01', 16000, 'vehicle', 5),
	-- ('2020-01-01', 170000, 'mortgage', 6),
	-- ('2020-01-01', 18000, 'vehicle', 6),
	-- ('2020-01-01', 19000, 'vehicle', 6),
	-- ('2020-01-01', 200000, 'mortgage', 7),
	-- ('2020-01-01', 21000, 'vehicle', 7),
	-- ('2020-01-01', 22000, 'vehicle', 7);
	
	-- CREATE SCHEMA IF NOT EXISTS staff;
	
	-- SET search_path TO public, staff;" at character 1
2023-01-13 08:08:58.876 GMT [63385] STATEMENT:  $$ LANGUAGE plpgsql;
	
	
	
	
	
	-- sample data for customers
	INSERT INTO customer (first_name, last_name, date_of_birth, phone_number, email_address, address_street, address_city, address_county, address_postcode)
	VALUES ('John', 'Smith', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('Jane', 'Doe', '1990-01-01', '01234567890', 'test@gmail.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Bloggs', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('John', 'Bloggs', '1990-01-01', '01234567890', 'hello@yahoo.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('Jane', 'Bloggs', '1990-01-01', '01234567890', 'test@outlook.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Doe', '1990-01-01', '01234567890', 'hello@outlook.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('John', 'Doe', '1990-01-01', '01234567890', 'mybankemail@icloud.com', '1 My Bank Street', 'My Bank City', 'My Bank County', 'MB1 1NK'),
	('Jane', 'Smith', '1990-01-01', '01234567890', 'bankemail@outlook.com', '1 Bank Street', 'Bank City', 'Bank County', 'BA1 1NK'),
	('Joe', 'Smith', '1990-01-01', '01234567890', 'example@icloud.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX');
	
	-- sample data for online account
	INSERT INTO online_account (date_opened, sort_code, customer_id)
	VALUES ('2020-01-01', '123456', 1),
	('2019-01-01', '126485', 2),
	('2018-01-01', '128475', 3),
	('2017-01-01', '129476', 4),
	('2016-01-01', '120386', 5),
	('2017-02-03', '127385', 6),
	('2018-02-04', '128256', 7),
	('2020-01-01', '129386', 8),
	('2020-01-01', '120386', 9);
	
	-- sample data for user login
	INSERT INTO user_login (account_id, username, password)
	VALUES (1, 'johnsmith', 'b29af57c2b3bba21e9df0cece40952c6'),
	(2, 'janedoe', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(3, 'joebloggs', 'b29af57c2b3bba21e9df0cece40952c6'),
	(4, 'johnbloggs', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(5, 'janebloggs', 'b29af57c2b3bba21e9df0cece40952c6'),
	(6, 'joedoe', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(7, 'johndoe', 'b29af57c2b3bba21e9df0cece40952c6'),
	(8, 'joesmith', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(9, 'janesmith', 'b29af57c2b3bba21e9df0cece40952c6');
	
	-- sample data for security question option
	INSERT INTO security_question_option (question_description)
	VALUES ('What is your favourite colour?'),
	('What is your favourite food?'),
	('What is your favourite animal?'),
	('What is your favourite sport?'),
	('What is your favourite movie?'),
	('What is your favourite book?'),
	('What is your favourite song?'),
	('What is your favourite band?'),
	('What is your favourite game?'),
	('What is your favourite TV show?');
	
	--sample data for user login security question
	INSERT INTO user_login_security_question (question_choice_id, login_id)
	VALUES (1, 1),
	(2, 2),
	(3, 3),
	(4, 4),
	(5, 5),
	(6, 6),
	(7, 7),
	(8, 8),
	(9, 9);
	
	-- sample data for security question answer
	INSERT INTO security_question_answer (question_answer, question_id)
	VALUES ('Red', 1),
	('Blue', 2),
	('Green', 3),
	('Yellow', 4),
	('Orange', 5),
	('Purple', 6),
	('Pink', 7),
	('Black', 8),
	('White', 9);
	
	INSERT INTO savings_account (account_number, account_id, current_balance, interest_rate)
	VALUES ('12345678', 1, 2000.00, 2.05);
	
	-- -- sample data for savings account
	-- INSERT INTO savings_account (current_balance, interest_rate, account_id)
	-- VALUES (2000.00, 2.05, 1),
	-- (1000.00, 2.05, 2),
	-- (5000.00, 2.05, 3),
	-- (10000.00, 2.05, 4),
	-- (20000.00, 2.05, 5),
	-- (50000.00, 2.05, 6),
	-- (100000.00, 2.05, 7),
	-- (200000.00, 2.05, 8);
	
	-- -- sample data for credit account
	-- INSERT INTO credit_account (outstanding_balance, credit_limit, interest_rate, account_id)
	-- VALUES (55.43, 2000.00, 4.22, 1),
	-- (100.00, 1000.00, 4.22, 2),
	-- (200.00, 5000.00, 4.22, 3),
	-- (300.00, 10000.00, 4.22, 4),
	-- (400.00, 20000.00, 4.22, 5),
	-- (500.00, 50000.00, 4.22, 6),
	-- (600.00, 100000.00, 4.22, 7),
	-- (700.00, 200000.00, 4.22, 8);
	
	-- -- sample data for debit account
	-- INSERT INTO debit_account (current_balance, interest_rate, account_id)
	-- VALUES (3465.43, 0.05, 1),
	-- (1000.00, 0.05, 1),
	-- (5000.00, 0.05, 2),
	-- (10000.00, 0.05, 3),
	-- (20000.00, 0.05, 4),
	-- (50000.00, 0.05, 5),
	-- (100000.00, 0.05, 6),
	-- (200000.00, 0.05, 9);
	
	-- -- sample data for loan
	-- INSERT INTO loan (loan_end_date, loan_amount, loan_type, account_id)
	-- VALUES ('2024-01-01', 10000, 'vehicle', 8),
	-- ('2023-03-04', 300000, 'mortgage', 8),
	-- ('2035-03-03', 400000, 'mortgage', 1),
	-- ('2025-04-05', 25000, 'vehicle', 1),
	-- ('2026-05-05', 34000, 'vehicle', 1),
	-- ('2023-06-07', 500000, 'mortgage', 2),
	-- ('2026-04-04', 60000, 'vehicle', 2),
	-- ('2024-03-03', 70000, 'vehicle', 2),
	-- ('2023-02-02', 800000, 'mortgage', 3),
	-- ('2022-01-01', 90000, 'vehicle', 3),
	-- ('2021-01-01', 100000, 'vehicle', 3),
	-- ('2020-01-01', 110000, 'mortgage', 4),
	-- ('2020-01-01', 12000, 'vehicle', 4),
	-- ('2020-01-01', 13000, 'vehicle', 4),
	-- ('2020-01-01', 140000, 'mortgage', 5),
	-- ('2020-01-01', 15000, 'vehicle', 5),
	-- ('2020-01-01', 16000, 'vehicle', 5),
	-- ('2020-01-01', 170000, 'mortgage', 6),
	-- ('2020-01-01', 18000, 'vehicle', 6),
	-- ('2020-01-01', 19000, 'vehicle', 6),
	-- ('2020-01-01', 200000, 'mortgage', 7),
	-- ('2020-01-01', 21000, 'vehicle', 7),
	-- ('2020-01-01', 22000, 'vehicle', 7);
	
	-- CREATE SCHEMA IF NOT EXISTS staff;
	
	-- SET search_path TO public, staff;
2023-01-13 08:09:31.867 GMT [63346] LOG:  received fast shutdown request
2023-01-13 08:09:31.870 GMT [63346] LOG:  aborting any active transactions
2023-01-13 08:09:31.874 GMT [63346] LOG:  background worker "logical replication launcher" (PID 63356) exited with exit code 1
2023-01-13 08:09:31.875 GMT [63351] LOG:  shutting down
2023-01-13 08:09:31.921 GMT [63346] LOG:  database system is shut down
2023-01-13 08:09:33.666 GMT [63562] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-13 08:09:33.666 GMT [63562] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-13 08:09:33.668 GMT [63562] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-13 08:09:33.674 GMT [63563] LOG:  database system was shut down at 2023-01-13 08:09:33 GMT
2023-01-13 08:09:33.680 GMT [63562] LOG:  database system is ready to accept connections
2023-01-13 08:09:34.529 GMT [63598] ERROR:  syntax error at or near "CREATE" at character 4709
2023-01-13 08:09:34.529 GMT [63598] STATEMENT:  CREATE OR REPLACE FUNCTION get_next_account_number()
	RETURNS INT AS $$
	DECLARE next_account_number INT;
	BEGIN
	    SELECT MAX(account_number) INTO next_account_number FROM debit_account;
	    IF next_account_number IS NULL THEN
	        next_account_number = 10000000;
	    ELSE
	        next_account_number = next_account_number + 1;
	    END IF;
	    RETURN next_account_number;
	END;
	
	CREATE SCHEMA IF NOT EXISTS staff;
	SET search_path TO public, staff, client;
	
	CREATE OR REPLACE VIEW 
	
	CREATE SCHEMA IF NOT EXISTS client;
	SET search_path TO public, client;
	
	
	CREATE OR REPLACE VIEW client.accounts AS
	    SELECT account_number, account_id FROM account;
	
	CREATE OR REPLACE VIEW client.debit_accounts AS
	    SELECT account.account_id, account.account_number, debit_account.current_balance, debit_account.interest_rate, debit_overdraft.overdraft_limit, debit_overdraft.overdraft_usage, debit_overdraft.interest_rate
	    FROM account
	    INNER JOIN debit_account ON account.account_number = debit_account.account_number
	    INNER JOIN debit_overdraft ON account.account_number = debit_overdraft.account_number;
	
	CREATE OR REPLACE VIEW client.debit_accounts_statements AS
	    SELECT debit_accounts.account_id, debit_accounts.account_number, debit_statement.id, debit_statement.starting_date, debit_statement.end_date, debit_statement.amount
	    FROM debit_accounts
	    INNER JOIN debit_statement ON debit_accounts.account_number = debit_statement.account_number;
	
	CREATE OR REPLACE VIEW client.debit_accounts_statement AS
	    SELECT debit_accounts_statements.account_id, debit_accounts_statements.account_number, debit_accounts_statements.id, debit_accounts_statements.starting_date, debit_accounts_statements.end_date, debit_accounts_statements.amount, transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date
	    FROM debit_accounts_statements
	    INNER JOIN transaction ON debit_accounts_statements.id = transaction.debit_statement_id;
	
	CREATE OR REPLACE VIEW client.credit_accounts AS
	    SELECT account.account_id, account.account_number, credit_account.outstanding_balance, credit_account.credit_limit, credit_account.interest_rate, credit_account_application.application_status
	    FROM account
	    INNER JOIN credit_account ON account.account_number = credit_account.account_number
	    INNER JOIN credit_account_application ON account.account_number = credit_account_application.account_number;
	
	CREATE OR REPLACE VIEW client.credit_accounts_statements AS
	    SELECT credit_accounts.account_id, credit_accounts.account_number, credit_statement.id, credit_statement.starting_date, credit_statement.end_date, credit_statement.amount, credit_statement.minimum_payment, credit_statement.minimum_payment_due_date
	    FROM credit_accounts
	    INNER JOIN credit_statement ON credit_accounts.account_number = credit_statement.account_number;
	
	CREATE OR REPLACE VIEW client.credit_accounts_statement AS
	    SELECT credit_accounts_statements.account_id, credit_accounts_statements.account_number, credit_accounts_statements.id, credit_accounts_statements.starting_date, credit_accounts_statements.end_date, credit_accounts_statements.amount, credit_accounts_statements.minimum_payment, credit_accounts_statements.minimum_payment_due_date, transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date
	    FROM credit_accounts_statements
	    INNER JOIN transaction ON credit_accounts_statements.id = transaction.credit_statement_id;
	
	CREATE OR REPLACE VIEW client.savings_accounts AS
	    SELECT account.account_id, account.account_number, savings_account.current_balance, savings_account.interest_rate
	    FROM account
	    INNER JOIN savings_account ON account.account_number = savings_account.account_number;
	
	CREATE OR REPLACE VIEW client.savings_accounts_statements AS
	    SELECT savings_accounts.account_id, savings_accounts.account_number, savings_statement.id, savings_statement.starting_date, savings_statement.end_date, savings_statement.amount
	    FROM savings_accounts
	    INNER JOIN savings_statement ON savings_accounts.account_number = savings_statement.account_number;
	
	CREATE OR REPLACE VIEW client.loans AS
	    SELECT loan.account_id, loan.id, loan.amount, loan.interest_rate, loan.term, loan_application.application_status
	    FROM loan
	    INNER JOIN loan_application ON loan.id = loan_application.account_id;
	
	-- CREATE OR REPLACE FUNCTION client.update_personal_information(account_identifier INT, first_name TEXT, last_name TEXT, date_of_birth DATE, phone_number TEXT, email_address TEXT, address_street TEXT, address_city TEXT, address_county TEXT, address_postcode TEXT, account_id INT)
	-- RETURNS BOOLEAN AS $$
	
	
	
	
	
	
	
	
	
	CREATE OR REPLACE FUNCTION client.update_password(account_identifier INT, new_password TEXT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	BEGIN
	    UPDATE user_login SET password = md5(new_password)
	    WHERE account_id = account_identifier;
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Updated password', CURRENT_DATE);
	    passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
	    RETURN passed;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:09:34.529 GMT [63598] ERROR:  syntax error at or near "DECLARE" at character 541
2023-01-13 08:09:34.529 GMT [63598] STATEMENT:  CREATE OR REPLACE FUNCTION client.update_email(account_identifier INT, new_email TEXT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	BEGIN
	    UPDATE user_login SET email = new_email
	    WHERE account_id = account_identifier;
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Updated email', CURRENT_DATE);
	    passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
	    RETURN passed;
	END;
	
	
	
	CREATE OR REPLACE FUNCTION client.open_debit_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-13 08:09:34.530 GMT [63598] ERROR:  syntax error at or near "INT" at character 30
2023-01-13 08:09:34.530 GMT [63598] STATEMENT:  DECLARE debit_account_number INT;
2023-01-13 08:09:34.530 GMT [63598] ERROR:  syntax error at or near "INT" at character 29
2023-01-13 08:09:34.530 GMT [63598] STATEMENT:  DECLARE next_account_number INT;
2023-01-13 08:09:34.530 GMT [63598] ERROR:  syntax error at or near "SELECT" at character 11
2023-01-13 08:09:34.530 GMT [63598] STATEMENT:  BEGIN
	    SELECT get_next_account_number() INTO next_account_number;
2023-01-13 08:09:34.530 GMT [63598] ERROR:  syntax error at or near "INTO" at character 151
2023-01-13 08:09:34.530 GMT [63598] STATEMENT:  INSERT INTO debit_account (account_number, account_id, current_balance, interest_rate) VALUES (next_account_number ,account_id, 0, 0.01) RETURNING id INTO debit_account_number;
2023-01-13 08:09:34.531 GMT [63598] ERROR:  column "debit_account_id" does not exist at character 118
2023-01-13 08:09:34.531 GMT [63598] STATEMENT:  INSERT INTO debit_statement (starting_date, end_date, amount, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, debit_account_id);
2023-01-13 08:09:34.531 GMT [63598] ERROR:  column "account_id" of relation "debit_overdraft" does not exist at character 79
2023-01-13 08:09:34.531 GMT [63598] STATEMENT:  INSERT INTO debit_overdraft (overdraft_usage, overdraft_limit, interest_rate, account_id) VALUES (0, 0, 0.01, debit_account_id);
2023-01-13 08:09:34.532 GMT [63598] ERROR:  column "account_id" does not exist at character 76
2023-01-13 08:09:34.532 GMT [63598] HINT:  There is a column named "account_id" in table "management_log", but it cannot be referenced from this part of the query.
2023-01-13 08:09:34.532 GMT [63598] STATEMENT:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened debit account', CURRENT_DATE);
2023-01-13 08:09:34.532 GMT [63598] ERROR:  syntax error at or near "passed" at character 1
2023-01-13 08:09:34.532 GMT [63598] STATEMENT:  passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-13 08:09:34.532 GMT [63598] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:09:34.532 GMT [63598] STATEMENT:  RETURN passed;
2023-01-13 08:09:34.532 GMT [63598] WARNING:  there is no transaction in progress
2023-01-13 08:09:34.532 GMT [63598] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_credit_account(account_id INT)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-13 08:09:34.532 GMT [63598] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_credit_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-13 08:09:34.533 GMT [63598] ERROR:  syntax error at or near "INT" at character 31
2023-01-13 08:09:34.533 GMT [63598] STATEMENT:  DECLARE credit_account_number INT;
2023-01-13 08:09:34.533 GMT [63598] ERROR:  syntax error at or near "INT" at character 29
2023-01-13 08:09:34.533 GMT [63598] STATEMENT:  DECLARE next_account_number INT;
2023-01-13 08:09:34.533 GMT [63598] ERROR:  syntax error at or near "SELECT" at character 11
2023-01-13 08:09:34.533 GMT [63598] STATEMENT:  BEGIN
	    SELECT get_next_account_number() INTO next_account_number;
2023-01-13 08:09:34.533 GMT [63598] ERROR:  syntax error at or near "INTO" at character 173
2023-01-13 08:09:34.533 GMT [63598] STATEMENT:  INSERT INTO credit_account (account_number, outstanding_balance, credit_limit, interest_rate, account_id) VALUES (next_account_number ,0, 0, 24.9, account_id) RETURNING id INTO credit_account_id;
2023-01-13 08:09:34.533 GMT [63598] ERROR:  column "account_id" of relation "credit_statement" does not exist at character 107
2023-01-13 08:09:34.533 GMT [63598] STATEMENT:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_id) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_id);
2023-01-13 08:09:34.533 GMT [63598] ERROR:  column "credit_account_id" of relation "credit_account_application" does not exist at character 41
2023-01-13 08:09:34.533 GMT [63598] STATEMENT:  INSERT INTO credit_account_application (credit_account_id, application_status) VALUES (credit_account_id, 'PENDING');
2023-01-13 08:09:34.533 GMT [63598] ERROR:  column "account_id" does not exist at character 76
2023-01-13 08:09:34.533 GMT [63598] HINT:  There is a column named "account_id" in table "management_log", but it cannot be referenced from this part of the query.
2023-01-13 08:09:34.533 GMT [63598] STATEMENT:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened credit account', CURRENT_DATE);
2023-01-13 08:09:34.533 GMT [63598] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_savings_account(account_id INT)
	RETURNS BOOLEAN AS $$" at character 5
2023-01-13 08:09:34.533 GMT [63598] STATEMENT:  END
	$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_savings_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-13 08:09:34.533 GMT [63598] ERROR:  syntax error at or near "INT" at character 28
2023-01-13 08:09:34.533 GMT [63598] STATEMENT:  DECLARE savings_account_id INT;
2023-01-13 08:09:34.533 GMT [63598] ERROR:  syntax error at or near "INT" at character 29
2023-01-13 08:09:34.533 GMT [63598] STATEMENT:  DECLARE next_account_number INT;
2023-01-13 08:09:34.533 GMT [63598] ERROR:  syntax error at or near "SELECT" at character 11
2023-01-13 08:09:34.533 GMT [63598] STATEMENT:  BEGIN
	    SELECT get_next_account_number() INTO next_account_number;
2023-01-13 08:09:34.534 GMT [63598] ERROR:  syntax error at or near "INTO" at character 153
2023-01-13 08:09:34.534 GMT [63598] STATEMENT:  INSERT INTO savings_account (account_number, account_id, current_balance, interest_rate) VALUES (next_account_number ,account_id, 0, 0.01) RETURNING id INTO savings_account_id;
2023-01-13 08:09:34.534 GMT [63598] ERROR:  column "account_id" of relation "savings_statement" does not exist at character 65
2023-01-13 08:09:34.534 GMT [63598] STATEMENT:  INSERT INTO savings_statement (starting_date, end_date, amount, account_id) VALUES (CURRENT_DATE, CURRENT_DATE, 0, savings_account_id);
2023-01-13 08:09:34.534 GMT [63598] ERROR:  column "account_id" does not exist at character 76
2023-01-13 08:09:34.534 GMT [63598] HINT:  There is a column named "account_id" in table "management_log", but it cannot be referenced from this part of the query.
2023-01-13 08:09:34.534 GMT [63598] STATEMENT:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened savings account', CURRENT_DATE);
2023-01-13 08:09:34.534 GMT [63598] ERROR:  relation "external_account" does not exist at character 13
2023-01-13 08:09:34.534 GMT [63598] STATEMENT:  INSERT INTO external_account (account_id, external_account_number) VALUES (savings_account_id, '12345678');
2023-01-13 08:09:34.534 GMT [63598] ERROR:  syntax error at or near "passed" at character 1
2023-01-13 08:09:34.534 GMT [63598] STATEMENT:  passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-13 08:09:34.534 GMT [63598] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:09:34.534 GMT [63598] STATEMENT:  RETURN passed;
2023-01-13 08:09:34.534 GMT [63598] WARNING:  there is no transaction in progress
2023-01-13 08:09:34.534 GMT [63598] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_loan(account_id INT, loan_amount INT, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-13 08:09:34.534 GMT [63598] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_loan(account_id INT, loan_amount INT, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-13 08:09:34.534 GMT [63598] ERROR:  syntax error at or near "INT" at character 17
2023-01-13 08:09:34.534 GMT [63598] STATEMENT:  DECLARE loan_id INT;
2023-01-13 08:09:34.534 GMT [63598] ERROR:  syntax error at or near "INSERT" at character 11
2023-01-13 08:09:34.534 GMT [63598] STATEMENT:  BEGIN
	    INSERT INTO loan (account_id, loan_amount, loan_end_date, loan_type, loan_interest_rate) VALUES (account_id, loan_amount, loan_end_date, loan_type, loan_interest_rate) RETURNING id INTO loan_id;
2023-01-13 08:09:34.534 GMT [63598] ERROR:  column "end_date" of relation "loan_statement" does not exist at character 44
2023-01-13 08:09:34.534 GMT [63598] STATEMENT:  INSERT INTO loan_statement (starting_date, end_date, amount, account_id) VALUES (CURRENT_DATE, CURRENT_DATE, 0, loan_id);
2023-01-13 08:09:34.535 GMT [63598] ERROR:  column "loan_id" does not exist at character 68
2023-01-13 08:09:34.535 GMT [63598] HINT:  There is a column named "loan_id" in table "loan_application", but it cannot be referenced from this part of the query.
2023-01-13 08:09:34.535 GMT [63598] STATEMENT:  INSERT INTO loan_application (loan_id, application_status) VALUES (loan_id, 'PENDING');
2023-01-13 08:09:34.535 GMT [63598] ERROR:  column "account_id" does not exist at character 76
2023-01-13 08:09:34.535 GMT [63598] HINT:  There is a column named "account_id" in table "management_log", but it cannot be referenced from this part of the query.
2023-01-13 08:09:34.535 GMT [63598] STATEMENT:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened loan', CURRENT_DATE);
2023-01-13 08:09:34.535 GMT [63598] ERROR:  syntax error at or near "passed" at character 1
2023-01-13 08:09:34.535 GMT [63598] STATEMENT:  passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-13 08:09:34.535 GMT [63598] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:09:34.535 GMT [63598] STATEMENT:  RETURN passed;
2023-01-13 08:09:34.535 GMT [63598] WARNING:  there is no transaction in progress
2023-01-13 08:09:34.535 GMT [63598] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.get_account_type(account_number INT)
	RETURNS TEXT AS $$" at character 1
2023-01-13 08:09:34.535 GMT [63598] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.get_account_type(account_number INT)
	RETURNS TEXT AS $$
	DECLARE account_type TEXT;
2023-01-13 08:09:34.535 GMT [63598] ERROR:  syntax error at or near "SELECT" at character 11
2023-01-13 08:09:34.535 GMT [63598] STATEMENT:  BEGIN
	    SELECT CASE WHEN EXISTS (SELECT * FROM debit_account WHERE account_number = account_number) THEN 'DEBIT'
	                WHEN EXISTS (SELECT * FROM credit_account WHERE account_number = account_number) THEN 'CREDIT'
	                WHEN EXISTS (SELECT * FROM savings_account WHERE account_number = account_number) THEN 'SAVINGS'
	                ELSE 'UNKNOWN' END INTO account_type;
2023-01-13 08:09:34.535 GMT [63598] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:09:34.535 GMT [63598] STATEMENT:  RETURN account_type;
2023-01-13 08:09:34.535 GMT [63598] WARNING:  there is no transaction in progress
2023-01-13 08:09:34.536 GMT [63598] ERROR:  schema "client" does not exist
2023-01-13 08:09:34.536 GMT [63598] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_accounts(account_id INT)
	RETURNS TABLE (account_number INT) AS $$
	
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed accounts', CURRENT_DATE);
	    RETURN QUERY
	        SELECT account.*, COALESCE(debit_accounts.current_balance, credit_accounts.outstanding_balance, savings_accounts.current_balance, loans.loan_amount) AS balance,
	        COALESCE(debit_accounts.interest_rate, credit_accounts.interest_rate, savings_accounts.interest_rate, loans.loan_interest_rate) AS interest_rate,
	        get_account_type(account.account_number) AS account_type
	
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:09:34.536 GMT [63598] ERROR:  syntax error at or near "," at character 205
2023-01-13 08:09:34.536 GMT [63598] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_debit_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, overdraft_limit NUMERIC, overdraft_usage NUMERIC, interest_rate, external_account_number INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed debit accounts', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT * FROM client.debit_accounts WHERE account_id = account_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:09:34.536 GMT [63598] ERROR:  schema "client" does not exist
2023-01-13 08:09:34.536 GMT [63598] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_credit_accounts(account_id INT)
	RETURNS TABLE (id INT, outstanding_balance NUMERIC, credit_limit NUMERIC, interest_rate NUMERIC, application_status TEXT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit accounts', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT * FROM client.credit_accounts WHERE account_id = account_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:09:34.536 GMT [63598] ERROR:  schema "client" does not exist
2023-01-13 08:09:34.536 GMT [63598] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_savings_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, external_account_number INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings accounts', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT * FROM client.savings_accounts WHERE account_id = account_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:09:34.536 GMT [63598] ERROR:  schema "client" does not exist
2023-01-13 08:09:34.536 GMT [63598] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_loans(account_id INT)
	RETURNS TABLE (id INT, loan_amount NUMERIC, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC, application_status TEXT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed loans', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT * FROM client.loans WHERE account_id = account_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:09:34.537 GMT [63598] ERROR:  schema "client" does not exist
2023-01-13 08:09:34.537 GMT [63598] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_savings_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statements', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT savings_accounts_statements.account_id, savings_accounts_statements.account_number, savings_accounts_statements.starting_date, savings_accounts_statements.end_date, savings_accounts_statements.amount
	        FROM client.savings_accounts_statements
	        WHERE savings_accounts_statements.account_number = account_number
	        AND savings_accounts_statements.account_id = account_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:09:34.537 GMT [63598] ERROR:  schema "client" does not exist
2023-01-13 08:09:34.537 GMT [63598] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_debit_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed debit statements', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT debit_accounts_statements.account_id, debit_accounts_statements.account_number, debit_accounts_statements.starting_date, debit_accounts_statements.end_date, debit_accounts_statements.amount
	        FROM client.debit_accounts_statements
	        WHERE debit_accounts_statements.account_number = account_number
	        AND debit_accounts_statements.account_id = account_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:09:34.537 GMT [63598] ERROR:  schema "client" does not exist
2023-01-13 08:09:34.537 GMT [63598] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_credit_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statements', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statements.account_id, credit_accounts_statements.account_number, credit_accounts_statements.starting_date, credit_accounts_statements.end_date, credit_accounts_statements.amount
	        FROM client.credit_accounts_statements
	        WHERE credit_accounts_statements.account_number = account_number
	        AND credit_accounts_statements.account_id = account_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:09:34.537 GMT [63598] ERROR:  schema "client" does not exist
2023-01-13 08:09:34.537 GMT [63598] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_debit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed debit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT debit_accounts_statement.account_id, debit_accounts_statement.account_number, debit_accounts_statement.starting_date, debit_accounts_statement.end_date, debit_accounts_statement.amount
	        FROM client.debit_accounts_statement
	        WHERE debit_accounts_statement.account_id = account_id
	        AND debit_accounts_statement.account_number = account_number
	        AND debit_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:09:34.537 GMT [63598] ERROR:  syntax error at or near "INSERT" at character 1028
2023-01-13 08:09:34.537 GMT [63598] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_credit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statement.account_id, credit_accounts_statement.account_number, credit_accounts_statement.starting_date, credit_accounts_statement.end_date, credit_accounts_statement.amount
	        FROM client.credit_accounts_statement
	        WHERE credit_accounts_statement.account_id = account_id
	        AND credit_accounts_statement.account_number = account_number
	        AND credit_accounts_statement.statement_id = statement_id;
	END;
	
	CREATE OR REPLACE FUNCTION client.view_savings_statement(account_id INT, savings_account_id INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statement', CURRENT_DATE);
	    RETURN QUERY
	        SELECT savings_accounts_statement.account_id, savings_accounts_statement.account_number, savings_accounts_statement.starting_date, savings_accounts_statement.end_date, savings_accounts_statement.amount
	        FROM client.savings_accounts_statement
	        WHERE savings_accounts_statement.account_id = account_id
	        AND savings_accounts_statement.account_number = savings_account_id
	        AND savings_accounts_statement.statement_id = statement_id;
	END;
2023-01-13 08:11:21.196 GMT [63562] LOG:  received fast shutdown request
2023-01-13 08:11:21.197 GMT [63562] LOG:  aborting any active transactions
2023-01-13 08:11:21.204 GMT [63562] LOG:  background worker "logical replication launcher" (PID 63569) exited with exit code 1
2023-01-13 08:11:21.205 GMT [63564] LOG:  shutting down
2023-01-13 08:11:21.262 GMT [63562] LOG:  database system is shut down
2023-01-13 08:11:22.944 GMT [64035] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-13 08:11:22.945 GMT [64035] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-13 08:11:22.946 GMT [64035] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-13 08:11:22.954 GMT [64036] LOG:  database system was shut down at 2023-01-13 08:11:22 GMT
2023-01-13 08:11:22.963 GMT [64035] LOG:  database system is ready to accept connections
2023-01-13 08:11:23.846 GMT [64071] ERROR:  syntax error at or near "CREATE" at character 25
2023-01-13 08:11:23.846 GMT [64071] STATEMENT:  CREATE OR REPLACE VIEW 
	CREATE SCHEMA IF NOT EXISTS client;
2023-01-13 08:11:23.849 GMT [64071] ERROR:  schema "client" does not exist
2023-01-13 08:11:23.849 GMT [64071] STATEMENT:  CREATE OR REPLACE VIEW client.accounts AS
	    SELECT account_number, account_id FROM account;
2023-01-13 08:11:23.853 GMT [64071] ERROR:  schema "client" does not exist
2023-01-13 08:11:23.853 GMT [64071] STATEMENT:  CREATE OR REPLACE VIEW client.debit_accounts AS
	    SELECT account.account_id, account.account_number, debit_account.current_balance, debit_account.interest_rate, debit_overdraft.overdraft_limit, debit_overdraft.overdraft_usage, debit_overdraft.interest_rate
	    FROM account
	    INNER JOIN debit_account ON account.account_number = debit_account.account_number
	    INNER JOIN debit_overdraft ON account.account_number = debit_overdraft.account_number;
2023-01-13 08:11:23.856 GMT [64071] ERROR:  relation "debit_accounts" does not exist at character 238
2023-01-13 08:11:23.856 GMT [64071] STATEMENT:  CREATE OR REPLACE VIEW client.debit_accounts_statements AS
	    SELECT debit_accounts.account_id, debit_accounts.account_number, debit_statement.id, debit_statement.starting_date, debit_statement.end_date, debit_statement.amount
	    FROM debit_accounts
	    INNER JOIN debit_statement ON debit_accounts.account_number = debit_statement.account_number;
2023-01-13 08:11:23.858 GMT [64071] ERROR:  relation "debit_accounts_statements" does not exist at character 397
2023-01-13 08:11:23.858 GMT [64071] STATEMENT:  CREATE OR REPLACE VIEW client.debit_accounts_statement AS
	    SELECT debit_accounts_statements.account_id, debit_accounts_statements.account_number, debit_accounts_statements.id, debit_accounts_statements.starting_date, debit_accounts_statements.end_date, debit_accounts_statements.amount, transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date
	    FROM debit_accounts_statements
	    INNER JOIN transaction ON debit_accounts_statements.id = transaction.debit_statement_id;
2023-01-13 08:11:23.859 GMT [64071] ERROR:  schema "client" does not exist
2023-01-13 08:11:23.859 GMT [64071] STATEMENT:  CREATE OR REPLACE VIEW client.credit_accounts AS
	    SELECT account.account_id, account.account_number, credit_account.outstanding_balance, credit_account.credit_limit, credit_account.interest_rate, credit_account_application.application_status
	    FROM account
	    INNER JOIN credit_account ON account.account_number = credit_account.account_number
	    INNER JOIN credit_account_application ON account.account_number = credit_account_application.account_number;
2023-01-13 08:11:23.859 GMT [64071] ERROR:  relation "credit_accounts" does not exist at character 322
2023-01-13 08:11:23.859 GMT [64071] STATEMENT:  CREATE OR REPLACE VIEW client.credit_accounts_statements AS
	    SELECT credit_accounts.account_id, credit_accounts.account_number, credit_statement.id, credit_statement.starting_date, credit_statement.end_date, credit_statement.amount, credit_statement.minimum_payment, credit_statement.minimum_payment_due_date
	    FROM credit_accounts
	    INNER JOIN credit_statement ON credit_accounts.account_number = credit_statement.account_number;
2023-01-13 08:11:23.860 GMT [64071] ERROR:  relation "credit_accounts_statements" does not exist at character 501
2023-01-13 08:11:23.860 GMT [64071] STATEMENT:  CREATE OR REPLACE VIEW client.credit_accounts_statement AS
	    SELECT credit_accounts_statements.account_id, credit_accounts_statements.account_number, credit_accounts_statements.id, credit_accounts_statements.starting_date, credit_accounts_statements.end_date, credit_accounts_statements.amount, credit_accounts_statements.minimum_payment, credit_accounts_statements.minimum_payment_due_date, transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date
	    FROM credit_accounts_statements
	    INNER JOIN transaction ON credit_accounts_statements.id = transaction.credit_statement_id;
2023-01-13 08:11:23.861 GMT [64071] ERROR:  schema "client" does not exist
2023-01-13 08:11:23.861 GMT [64071] STATEMENT:  CREATE OR REPLACE VIEW client.savings_accounts AS
	    SELECT account.account_id, account.account_number, savings_account.current_balance, savings_account.interest_rate
	    FROM account
	    INNER JOIN savings_account ON account.account_number = savings_account.account_number;
2023-01-13 08:11:23.861 GMT [64071] ERROR:  relation "savings_accounts" does not exist at character 252
2023-01-13 08:11:23.861 GMT [64071] STATEMENT:  CREATE OR REPLACE VIEW client.savings_accounts_statements AS
	    SELECT savings_accounts.account_id, savings_accounts.account_number, savings_statement.id, savings_statement.starting_date, savings_statement.end_date, savings_statement.amount
	    FROM savings_accounts
	    INNER JOIN savings_statement ON savings_accounts.account_number = savings_statement.account_number;
2023-01-13 08:11:23.863 GMT [64071] ERROR:  column loan_application.account_id does not exist at character 216
2023-01-13 08:11:23.863 GMT [64071] STATEMENT:  CREATE OR REPLACE VIEW client.loans AS
	    SELECT loan.account_id, loan.id, loan.amount, loan.interest_rate, loan.term, loan_application.application_status
	    FROM loan
	    INNER JOIN loan_application ON loan.id = loan_application.account_id;
2023-01-13 08:11:23.864 GMT [64071] ERROR:  schema "client" does not exist
2023-01-13 08:11:23.864 GMT [64071] STATEMENT:  CREATE OR REPLACE FUNCTION client.update_password(account_identifier INT, new_password TEXT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	BEGIN
	    UPDATE user_login SET password = md5(new_password)
	    WHERE account_id = account_identifier;
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Updated password', CURRENT_DATE);
	    passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
	    RETURN passed;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:11:23.865 GMT [64071] ERROR:  syntax error at or near "DECLARE" at character 541
2023-01-13 08:11:23.865 GMT [64071] STATEMENT:  CREATE OR REPLACE FUNCTION client.update_email(account_identifier INT, new_email TEXT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	BEGIN
	    UPDATE user_login SET email = new_email
	    WHERE account_id = account_identifier;
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Updated email', CURRENT_DATE);
	    passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
	    RETURN passed;
	END;
	
	
	
	CREATE OR REPLACE FUNCTION client.open_debit_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-13 08:11:23.865 GMT [64071] ERROR:  syntax error at or near "INT" at character 30
2023-01-13 08:11:23.865 GMT [64071] STATEMENT:  DECLARE debit_account_number INT;
2023-01-13 08:11:23.866 GMT [64071] ERROR:  syntax error at or near "INT" at character 29
2023-01-13 08:11:23.866 GMT [64071] STATEMENT:  DECLARE next_account_number INT;
2023-01-13 08:11:23.866 GMT [64071] ERROR:  syntax error at or near "SELECT" at character 11
2023-01-13 08:11:23.866 GMT [64071] STATEMENT:  BEGIN
	    SELECT get_next_account_number() INTO next_account_number;
2023-01-13 08:11:23.866 GMT [64071] ERROR:  syntax error at or near "INTO" at character 151
2023-01-13 08:11:23.866 GMT [64071] STATEMENT:  INSERT INTO debit_account (account_number, account_id, current_balance, interest_rate) VALUES (next_account_number ,account_id, 0, 0.01) RETURNING id INTO debit_account_number;
2023-01-13 08:11:23.867 GMT [64071] ERROR:  column "debit_account_id" does not exist at character 118
2023-01-13 08:11:23.867 GMT [64071] STATEMENT:  INSERT INTO debit_statement (starting_date, end_date, amount, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, debit_account_id);
2023-01-13 08:11:23.867 GMT [64071] ERROR:  column "account_id" of relation "debit_overdraft" does not exist at character 79
2023-01-13 08:11:23.867 GMT [64071] STATEMENT:  INSERT INTO debit_overdraft (overdraft_usage, overdraft_limit, interest_rate, account_id) VALUES (0, 0, 0.01, debit_account_id);
2023-01-13 08:11:23.867 GMT [64071] ERROR:  column "account_id" does not exist at character 76
2023-01-13 08:11:23.867 GMT [64071] HINT:  There is a column named "account_id" in table "management_log", but it cannot be referenced from this part of the query.
2023-01-13 08:11:23.867 GMT [64071] STATEMENT:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened debit account', CURRENT_DATE);
2023-01-13 08:11:23.867 GMT [64071] ERROR:  syntax error at or near "passed" at character 1
2023-01-13 08:11:23.867 GMT [64071] STATEMENT:  passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-13 08:11:23.868 GMT [64071] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:11:23.868 GMT [64071] STATEMENT:  RETURN passed;
2023-01-13 08:11:23.868 GMT [64071] WARNING:  there is no transaction in progress
2023-01-13 08:11:23.868 GMT [64071] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_credit_account(account_id INT)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-13 08:11:23.868 GMT [64071] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_credit_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-13 08:11:23.868 GMT [64071] ERROR:  syntax error at or near "INT" at character 31
2023-01-13 08:11:23.868 GMT [64071] STATEMENT:  DECLARE credit_account_number INT;
2023-01-13 08:11:23.868 GMT [64071] ERROR:  syntax error at or near "INT" at character 29
2023-01-13 08:11:23.868 GMT [64071] STATEMENT:  DECLARE next_account_number INT;
2023-01-13 08:11:23.868 GMT [64071] ERROR:  syntax error at or near "SELECT" at character 11
2023-01-13 08:11:23.868 GMT [64071] STATEMENT:  BEGIN
	    SELECT get_next_account_number() INTO next_account_number;
2023-01-13 08:11:23.869 GMT [64071] ERROR:  syntax error at or near "INTO" at character 173
2023-01-13 08:11:23.869 GMT [64071] STATEMENT:  INSERT INTO credit_account (account_number, outstanding_balance, credit_limit, interest_rate, account_id) VALUES (next_account_number ,0, 0, 24.9, account_id) RETURNING id INTO credit_account_id;
2023-01-13 08:11:23.869 GMT [64071] ERROR:  column "account_id" of relation "credit_statement" does not exist at character 107
2023-01-13 08:11:23.869 GMT [64071] STATEMENT:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_id) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_id);
2023-01-13 08:11:23.869 GMT [64071] ERROR:  column "credit_account_id" of relation "credit_account_application" does not exist at character 41
2023-01-13 08:11:23.869 GMT [64071] STATEMENT:  INSERT INTO credit_account_application (credit_account_id, application_status) VALUES (credit_account_id, 'PENDING');
2023-01-13 08:11:23.870 GMT [64071] ERROR:  column "account_id" does not exist at character 76
2023-01-13 08:11:23.870 GMT [64071] HINT:  There is a column named "account_id" in table "management_log", but it cannot be referenced from this part of the query.
2023-01-13 08:11:23.870 GMT [64071] STATEMENT:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened credit account', CURRENT_DATE);
2023-01-13 08:11:23.870 GMT [64071] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_savings_account(account_id INT)
	RETURNS BOOLEAN AS $$" at character 5
2023-01-13 08:11:23.870 GMT [64071] STATEMENT:  END
	$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_savings_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-13 08:11:23.870 GMT [64071] ERROR:  syntax error at or near "INT" at character 28
2023-01-13 08:11:23.870 GMT [64071] STATEMENT:  DECLARE savings_account_id INT;
2023-01-13 08:11:23.870 GMT [64071] ERROR:  syntax error at or near "INT" at character 29
2023-01-13 08:11:23.870 GMT [64071] STATEMENT:  DECLARE next_account_number INT;
2023-01-13 08:11:23.871 GMT [64071] ERROR:  syntax error at or near "SELECT" at character 11
2023-01-13 08:11:23.871 GMT [64071] STATEMENT:  BEGIN
	    SELECT get_next_account_number() INTO next_account_number;
2023-01-13 08:11:23.871 GMT [64071] ERROR:  syntax error at or near "INTO" at character 153
2023-01-13 08:11:23.871 GMT [64071] STATEMENT:  INSERT INTO savings_account (account_number, account_id, current_balance, interest_rate) VALUES (next_account_number ,account_id, 0, 0.01) RETURNING id INTO savings_account_id;
2023-01-13 08:11:23.871 GMT [64071] ERROR:  column "account_id" of relation "savings_statement" does not exist at character 65
2023-01-13 08:11:23.871 GMT [64071] STATEMENT:  INSERT INTO savings_statement (starting_date, end_date, amount, account_id) VALUES (CURRENT_DATE, CURRENT_DATE, 0, savings_account_id);
2023-01-13 08:11:23.872 GMT [64071] ERROR:  column "account_id" does not exist at character 76
2023-01-13 08:11:23.872 GMT [64071] HINT:  There is a column named "account_id" in table "management_log", but it cannot be referenced from this part of the query.
2023-01-13 08:11:23.872 GMT [64071] STATEMENT:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened savings account', CURRENT_DATE);
2023-01-13 08:11:23.872 GMT [64071] ERROR:  relation "external_account" does not exist at character 13
2023-01-13 08:11:23.872 GMT [64071] STATEMENT:  INSERT INTO external_account (account_id, external_account_number) VALUES (savings_account_id, '12345678');
2023-01-13 08:11:23.872 GMT [64071] ERROR:  syntax error at or near "passed" at character 1
2023-01-13 08:11:23.872 GMT [64071] STATEMENT:  passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-13 08:11:23.873 GMT [64071] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:11:23.873 GMT [64071] STATEMENT:  RETURN passed;
2023-01-13 08:11:23.873 GMT [64071] WARNING:  there is no transaction in progress
2023-01-13 08:11:23.873 GMT [64071] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_loan(account_id INT, loan_amount INT, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-13 08:11:23.873 GMT [64071] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_loan(account_id INT, loan_amount INT, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-13 08:11:23.874 GMT [64071] ERROR:  syntax error at or near "INT" at character 17
2023-01-13 08:11:23.874 GMT [64071] STATEMENT:  DECLARE loan_id INT;
2023-01-13 08:11:23.874 GMT [64071] ERROR:  syntax error at or near "INSERT" at character 11
2023-01-13 08:11:23.874 GMT [64071] STATEMENT:  BEGIN
	    INSERT INTO loan (account_id, loan_amount, loan_end_date, loan_type, loan_interest_rate) VALUES (account_id, loan_amount, loan_end_date, loan_type, loan_interest_rate) RETURNING id INTO loan_id;
2023-01-13 08:11:23.874 GMT [64071] ERROR:  column "end_date" of relation "loan_statement" does not exist at character 44
2023-01-13 08:11:23.874 GMT [64071] STATEMENT:  INSERT INTO loan_statement (starting_date, end_date, amount, account_id) VALUES (CURRENT_DATE, CURRENT_DATE, 0, loan_id);
2023-01-13 08:11:23.875 GMT [64071] ERROR:  column "loan_id" does not exist at character 68
2023-01-13 08:11:23.875 GMT [64071] HINT:  There is a column named "loan_id" in table "loan_application", but it cannot be referenced from this part of the query.
2023-01-13 08:11:23.875 GMT [64071] STATEMENT:  INSERT INTO loan_application (loan_id, application_status) VALUES (loan_id, 'PENDING');
2023-01-13 08:11:23.875 GMT [64071] ERROR:  column "account_id" does not exist at character 76
2023-01-13 08:11:23.875 GMT [64071] HINT:  There is a column named "account_id" in table "management_log", but it cannot be referenced from this part of the query.
2023-01-13 08:11:23.875 GMT [64071] STATEMENT:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened loan', CURRENT_DATE);
2023-01-13 08:11:23.875 GMT [64071] ERROR:  syntax error at or near "passed" at character 1
2023-01-13 08:11:23.875 GMT [64071] STATEMENT:  passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-13 08:11:23.876 GMT [64071] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:11:23.876 GMT [64071] STATEMENT:  RETURN passed;
2023-01-13 08:11:23.876 GMT [64071] WARNING:  there is no transaction in progress
2023-01-13 08:11:23.876 GMT [64071] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.get_account_type(account_number INT)
	RETURNS TEXT AS $$" at character 1
2023-01-13 08:11:23.876 GMT [64071] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.get_account_type(account_number INT)
	RETURNS TEXT AS $$
	DECLARE account_type TEXT;
2023-01-13 08:11:23.876 GMT [64071] ERROR:  syntax error at or near "SELECT" at character 11
2023-01-13 08:11:23.876 GMT [64071] STATEMENT:  BEGIN
	    SELECT CASE WHEN EXISTS (SELECT * FROM debit_account WHERE account_number = account_number) THEN 'DEBIT'
	                WHEN EXISTS (SELECT * FROM credit_account WHERE account_number = account_number) THEN 'CREDIT'
	                WHEN EXISTS (SELECT * FROM savings_account WHERE account_number = account_number) THEN 'SAVINGS'
	                ELSE 'UNKNOWN' END INTO account_type;
2023-01-13 08:11:23.876 GMT [64071] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:11:23.876 GMT [64071] STATEMENT:  RETURN account_type;
2023-01-13 08:11:23.877 GMT [64071] WARNING:  there is no transaction in progress
2023-01-13 08:11:23.877 GMT [64071] ERROR:  schema "client" does not exist
2023-01-13 08:11:23.877 GMT [64071] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_accounts(account_id INT)
	RETURNS TABLE (account_number INT) AS $$
	
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed accounts', CURRENT_DATE);
	    RETURN QUERY
	        SELECT account.*, COALESCE(debit_accounts.current_balance, credit_accounts.outstanding_balance, savings_accounts.current_balance, loans.loan_amount) AS balance,
	        COALESCE(debit_accounts.interest_rate, credit_accounts.interest_rate, savings_accounts.interest_rate, loans.loan_interest_rate) AS interest_rate,
	        get_account_type(account.account_number) AS account_type
	
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:11:23.877 GMT [64071] ERROR:  syntax error at or near "," at character 205
2023-01-13 08:11:23.877 GMT [64071] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_debit_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, overdraft_limit NUMERIC, overdraft_usage NUMERIC, interest_rate, external_account_number INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed debit accounts', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT * FROM client.debit_accounts WHERE account_id = account_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:11:23.878 GMT [64071] ERROR:  schema "client" does not exist
2023-01-13 08:11:23.878 GMT [64071] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_credit_accounts(account_id INT)
	RETURNS TABLE (id INT, outstanding_balance NUMERIC, credit_limit NUMERIC, interest_rate NUMERIC, application_status TEXT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit accounts', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT * FROM client.credit_accounts WHERE account_id = account_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:11:23.878 GMT [64071] ERROR:  schema "client" does not exist
2023-01-13 08:11:23.878 GMT [64071] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_savings_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, external_account_number INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings accounts', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT * FROM client.savings_accounts WHERE account_id = account_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:11:23.878 GMT [64071] ERROR:  schema "client" does not exist
2023-01-13 08:11:23.878 GMT [64071] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_loans(account_id INT)
	RETURNS TABLE (id INT, loan_amount NUMERIC, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC, application_status TEXT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed loans', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT * FROM client.loans WHERE account_id = account_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:11:23.879 GMT [64071] ERROR:  schema "client" does not exist
2023-01-13 08:11:23.879 GMT [64071] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_savings_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statements', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT savings_accounts_statements.account_id, savings_accounts_statements.account_number, savings_accounts_statements.starting_date, savings_accounts_statements.end_date, savings_accounts_statements.amount
	        FROM client.savings_accounts_statements
	        WHERE savings_accounts_statements.account_number = account_number
	        AND savings_accounts_statements.account_id = account_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:11:23.879 GMT [64071] ERROR:  schema "client" does not exist
2023-01-13 08:11:23.879 GMT [64071] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_debit_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed debit statements', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT debit_accounts_statements.account_id, debit_accounts_statements.account_number, debit_accounts_statements.starting_date, debit_accounts_statements.end_date, debit_accounts_statements.amount
	        FROM client.debit_accounts_statements
	        WHERE debit_accounts_statements.account_number = account_number
	        AND debit_accounts_statements.account_id = account_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:11:23.879 GMT [64071] ERROR:  schema "client" does not exist
2023-01-13 08:11:23.879 GMT [64071] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_credit_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statements', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statements.account_id, credit_accounts_statements.account_number, credit_accounts_statements.starting_date, credit_accounts_statements.end_date, credit_accounts_statements.amount
	        FROM client.credit_accounts_statements
	        WHERE credit_accounts_statements.account_number = account_number
	        AND credit_accounts_statements.account_id = account_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:11:23.879 GMT [64071] ERROR:  schema "client" does not exist
2023-01-13 08:11:23.879 GMT [64071] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_debit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed debit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT debit_accounts_statement.account_id, debit_accounts_statement.account_number, debit_accounts_statement.starting_date, debit_accounts_statement.end_date, debit_accounts_statement.amount
	        FROM client.debit_accounts_statement
	        WHERE debit_accounts_statement.account_id = account_id
	        AND debit_accounts_statement.account_number = account_number
	        AND debit_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:11:23.880 GMT [64071] ERROR:  syntax error at or near "INSERT" at character 1028
2023-01-13 08:11:23.880 GMT [64071] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_credit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statement.account_id, credit_accounts_statement.account_number, credit_accounts_statement.starting_date, credit_accounts_statement.end_date, credit_accounts_statement.amount
	        FROM client.credit_accounts_statement
	        WHERE credit_accounts_statement.account_id = account_id
	        AND credit_accounts_statement.account_number = account_number
	        AND credit_accounts_statement.statement_id = statement_id;
	END;
	
	CREATE OR REPLACE FUNCTION client.view_savings_statement(account_id INT, savings_account_id INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statement', CURRENT_DATE);
	    RETURN QUERY
	        SELECT savings_accounts_statement.account_id, savings_accounts_statement.account_number, savings_accounts_statement.starting_date, savings_accounts_statement.end_date, savings_accounts_statement.amount
	        FROM client.savings_accounts_statement
	        WHERE savings_accounts_statement.account_id = account_id
	        AND savings_accounts_statement.account_number = savings_account_id
	        AND savings_accounts_statement.statement_id = statement_id;
	END;
2023-01-13 08:11:42.123 GMT [64035] LOG:  received fast shutdown request
2023-01-13 08:11:42.124 GMT [64035] LOG:  aborting any active transactions
2023-01-13 08:11:42.130 GMT [64035] LOG:  background worker "logical replication launcher" (PID 64042) exited with exit code 1
2023-01-13 08:11:42.133 GMT [64037] LOG:  shutting down
2023-01-13 08:11:42.196 GMT [64035] LOG:  database system is shut down
2023-01-13 08:11:43.708 GMT [64203] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-13 08:11:43.708 GMT [64203] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-13 08:11:43.710 GMT [64203] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-13 08:11:43.715 GMT [64204] LOG:  database system was shut down at 2023-01-13 08:11:43 GMT
2023-01-13 08:11:43.722 GMT [64203] LOG:  database system is ready to accept connections
2023-01-13 08:11:44.621 GMT [64239] ERROR:  column "interest_rate" specified more than once
2023-01-13 08:11:44.621 GMT [64239] STATEMENT:  CREATE OR REPLACE VIEW client.debit_accounts AS
	    SELECT account.account_id, account.account_number, debit_account.current_balance, debit_account.interest_rate, debit_overdraft.overdraft_limit, debit_overdraft.overdraft_usage, debit_overdraft.interest_rate
	    FROM account
	    INNER JOIN debit_account ON account.account_number = debit_account.account_number
	    INNER JOIN debit_overdraft ON account.account_number = debit_overdraft.account_number;
2023-01-13 08:11:44.621 GMT [64239] ERROR:  relation "debit_accounts" does not exist at character 238
2023-01-13 08:11:44.621 GMT [64239] STATEMENT:  CREATE OR REPLACE VIEW client.debit_accounts_statements AS
	    SELECT debit_accounts.account_id, debit_accounts.account_number, debit_statement.id, debit_statement.starting_date, debit_statement.end_date, debit_statement.amount
	    FROM debit_accounts
	    INNER JOIN debit_statement ON debit_accounts.account_number = debit_statement.account_number;
2023-01-13 08:11:44.622 GMT [64239] ERROR:  relation "debit_accounts_statements" does not exist at character 397
2023-01-13 08:11:44.622 GMT [64239] STATEMENT:  CREATE OR REPLACE VIEW client.debit_accounts_statement AS
	    SELECT debit_accounts_statements.account_id, debit_accounts_statements.account_number, debit_accounts_statements.id, debit_accounts_statements.starting_date, debit_accounts_statements.end_date, debit_accounts_statements.amount, transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date
	    FROM debit_accounts_statements
	    INNER JOIN transaction ON debit_accounts_statements.id = transaction.debit_statement_id;
2023-01-13 08:11:44.628 GMT [64239] ERROR:  column "amount" specified more than once
2023-01-13 08:11:44.628 GMT [64239] STATEMENT:  CREATE OR REPLACE VIEW client.credit_accounts_statement AS
	    SELECT credit_accounts_statements.account_id, credit_accounts_statements.account_number, credit_accounts_statements.id, credit_accounts_statements.starting_date, credit_accounts_statements.end_date, credit_accounts_statements.amount, credit_accounts_statements.minimum_payment, credit_accounts_statements.minimum_payment_due_date, transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date
	    FROM credit_accounts_statements
	    INNER JOIN transaction ON credit_accounts_statements.id = transaction.credit_statement_id;
2023-01-13 08:11:44.635 GMT [64239] ERROR:  column loan_application.account_id does not exist at character 216
2023-01-13 08:11:44.635 GMT [64239] STATEMENT:  CREATE OR REPLACE VIEW client.loans AS
	    SELECT loan.account_id, loan.id, loan.amount, loan.interest_rate, loan.term, loan_application.application_status
	    FROM loan
	    INNER JOIN loan_application ON loan.id = loan_application.account_id;
2023-01-13 08:11:44.637 GMT [64239] ERROR:  syntax error at or near "DECLARE" at character 541
2023-01-13 08:11:44.637 GMT [64239] STATEMENT:  CREATE OR REPLACE FUNCTION client.update_email(account_identifier INT, new_email TEXT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	BEGIN
	    UPDATE user_login SET email = new_email
	    WHERE account_id = account_identifier;
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Updated email', CURRENT_DATE);
	    passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
	    RETURN passed;
	END;
	
	
	
	CREATE OR REPLACE FUNCTION client.open_debit_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-13 08:11:44.638 GMT [64239] ERROR:  syntax error at or near "INT" at character 30
2023-01-13 08:11:44.638 GMT [64239] STATEMENT:  DECLARE debit_account_number INT;
2023-01-13 08:11:44.638 GMT [64239] ERROR:  syntax error at or near "INT" at character 29
2023-01-13 08:11:44.638 GMT [64239] STATEMENT:  DECLARE next_account_number INT;
2023-01-13 08:11:44.638 GMT [64239] ERROR:  syntax error at or near "SELECT" at character 11
2023-01-13 08:11:44.638 GMT [64239] STATEMENT:  BEGIN
	    SELECT get_next_account_number() INTO next_account_number;
2023-01-13 08:11:44.639 GMT [64239] ERROR:  syntax error at or near "INTO" at character 151
2023-01-13 08:11:44.639 GMT [64239] STATEMENT:  INSERT INTO debit_account (account_number, account_id, current_balance, interest_rate) VALUES (next_account_number ,account_id, 0, 0.01) RETURNING id INTO debit_account_number;
2023-01-13 08:11:44.639 GMT [64239] ERROR:  column "debit_account_id" does not exist at character 118
2023-01-13 08:11:44.639 GMT [64239] STATEMENT:  INSERT INTO debit_statement (starting_date, end_date, amount, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, debit_account_id);
2023-01-13 08:11:44.643 GMT [64239] ERROR:  column "account_id" of relation "debit_overdraft" does not exist at character 79
2023-01-13 08:11:44.643 GMT [64239] STATEMENT:  INSERT INTO debit_overdraft (overdraft_usage, overdraft_limit, interest_rate, account_id) VALUES (0, 0, 0.01, debit_account_id);
2023-01-13 08:11:44.644 GMT [64239] ERROR:  column "account_id" does not exist at character 76
2023-01-13 08:11:44.644 GMT [64239] HINT:  There is a column named "account_id" in table "management_log", but it cannot be referenced from this part of the query.
2023-01-13 08:11:44.644 GMT [64239] STATEMENT:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened debit account', CURRENT_DATE);
2023-01-13 08:11:44.644 GMT [64239] ERROR:  syntax error at or near "passed" at character 1
2023-01-13 08:11:44.644 GMT [64239] STATEMENT:  passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-13 08:11:44.645 GMT [64239] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:11:44.645 GMT [64239] STATEMENT:  RETURN passed;
2023-01-13 08:11:44.646 GMT [64239] WARNING:  there is no transaction in progress
2023-01-13 08:11:44.646 GMT [64239] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_credit_account(account_id INT)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-13 08:11:44.646 GMT [64239] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_credit_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-13 08:11:44.647 GMT [64239] ERROR:  syntax error at or near "INT" at character 31
2023-01-13 08:11:44.647 GMT [64239] STATEMENT:  DECLARE credit_account_number INT;
2023-01-13 08:11:44.648 GMT [64239] ERROR:  syntax error at or near "INT" at character 29
2023-01-13 08:11:44.648 GMT [64239] STATEMENT:  DECLARE next_account_number INT;
2023-01-13 08:11:44.648 GMT [64239] ERROR:  syntax error at or near "SELECT" at character 11
2023-01-13 08:11:44.648 GMT [64239] STATEMENT:  BEGIN
	    SELECT get_next_account_number() INTO next_account_number;
2023-01-13 08:11:44.650 GMT [64239] ERROR:  syntax error at or near "INTO" at character 173
2023-01-13 08:11:44.650 GMT [64239] STATEMENT:  INSERT INTO credit_account (account_number, outstanding_balance, credit_limit, interest_rate, account_id) VALUES (next_account_number ,0, 0, 24.9, account_id) RETURNING id INTO credit_account_id;
2023-01-13 08:11:44.651 GMT [64239] ERROR:  column "account_id" of relation "credit_statement" does not exist at character 107
2023-01-13 08:11:44.651 GMT [64239] STATEMENT:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_id) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_id);
2023-01-13 08:11:44.653 GMT [64239] ERROR:  column "credit_account_id" of relation "credit_account_application" does not exist at character 41
2023-01-13 08:11:44.653 GMT [64239] STATEMENT:  INSERT INTO credit_account_application (credit_account_id, application_status) VALUES (credit_account_id, 'PENDING');
2023-01-13 08:11:44.654 GMT [64239] ERROR:  column "account_id" does not exist at character 76
2023-01-13 08:11:44.654 GMT [64239] HINT:  There is a column named "account_id" in table "management_log", but it cannot be referenced from this part of the query.
2023-01-13 08:11:44.654 GMT [64239] STATEMENT:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened credit account', CURRENT_DATE);
2023-01-13 08:11:44.655 GMT [64239] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_savings_account(account_id INT)
	RETURNS BOOLEAN AS $$" at character 5
2023-01-13 08:11:44.655 GMT [64239] STATEMENT:  END
	$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_savings_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-13 08:11:44.655 GMT [64239] ERROR:  syntax error at or near "INT" at character 28
2023-01-13 08:11:44.655 GMT [64239] STATEMENT:  DECLARE savings_account_id INT;
2023-01-13 08:11:44.655 GMT [64239] ERROR:  syntax error at or near "INT" at character 29
2023-01-13 08:11:44.655 GMT [64239] STATEMENT:  DECLARE next_account_number INT;
2023-01-13 08:11:44.656 GMT [64239] ERROR:  syntax error at or near "SELECT" at character 11
2023-01-13 08:11:44.656 GMT [64239] STATEMENT:  BEGIN
	    SELECT get_next_account_number() INTO next_account_number;
2023-01-13 08:11:44.656 GMT [64239] ERROR:  syntax error at or near "INTO" at character 153
2023-01-13 08:11:44.656 GMT [64239] STATEMENT:  INSERT INTO savings_account (account_number, account_id, current_balance, interest_rate) VALUES (next_account_number ,account_id, 0, 0.01) RETURNING id INTO savings_account_id;
2023-01-13 08:11:44.656 GMT [64239] ERROR:  column "account_id" of relation "savings_statement" does not exist at character 65
2023-01-13 08:11:44.656 GMT [64239] STATEMENT:  INSERT INTO savings_statement (starting_date, end_date, amount, account_id) VALUES (CURRENT_DATE, CURRENT_DATE, 0, savings_account_id);
2023-01-13 08:11:44.657 GMT [64239] ERROR:  column "account_id" does not exist at character 76
2023-01-13 08:11:44.657 GMT [64239] HINT:  There is a column named "account_id" in table "management_log", but it cannot be referenced from this part of the query.
2023-01-13 08:11:44.657 GMT [64239] STATEMENT:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened savings account', CURRENT_DATE);
2023-01-13 08:11:44.657 GMT [64239] ERROR:  relation "external_account" does not exist at character 13
2023-01-13 08:11:44.657 GMT [64239] STATEMENT:  INSERT INTO external_account (account_id, external_account_number) VALUES (savings_account_id, '12345678');
2023-01-13 08:11:44.657 GMT [64239] ERROR:  syntax error at or near "passed" at character 1
2023-01-13 08:11:44.657 GMT [64239] STATEMENT:  passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-13 08:11:44.657 GMT [64239] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:11:44.657 GMT [64239] STATEMENT:  RETURN passed;
2023-01-13 08:11:44.657 GMT [64239] WARNING:  there is no transaction in progress
2023-01-13 08:11:44.657 GMT [64239] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_loan(account_id INT, loan_amount INT, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-13 08:11:44.657 GMT [64239] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_loan(account_id INT, loan_amount INT, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-13 08:11:44.658 GMT [64239] ERROR:  syntax error at or near "INT" at character 17
2023-01-13 08:11:44.658 GMT [64239] STATEMENT:  DECLARE loan_id INT;
2023-01-13 08:11:44.658 GMT [64239] ERROR:  syntax error at or near "INSERT" at character 11
2023-01-13 08:11:44.658 GMT [64239] STATEMENT:  BEGIN
	    INSERT INTO loan (account_id, loan_amount, loan_end_date, loan_type, loan_interest_rate) VALUES (account_id, loan_amount, loan_end_date, loan_type, loan_interest_rate) RETURNING id INTO loan_id;
2023-01-13 08:11:44.658 GMT [64239] ERROR:  column "end_date" of relation "loan_statement" does not exist at character 44
2023-01-13 08:11:44.658 GMT [64239] STATEMENT:  INSERT INTO loan_statement (starting_date, end_date, amount, account_id) VALUES (CURRENT_DATE, CURRENT_DATE, 0, loan_id);
2023-01-13 08:11:44.658 GMT [64239] ERROR:  column "loan_id" does not exist at character 68
2023-01-13 08:11:44.658 GMT [64239] HINT:  There is a column named "loan_id" in table "loan_application", but it cannot be referenced from this part of the query.
2023-01-13 08:11:44.658 GMT [64239] STATEMENT:  INSERT INTO loan_application (loan_id, application_status) VALUES (loan_id, 'PENDING');
2023-01-13 08:11:44.658 GMT [64239] ERROR:  column "account_id" does not exist at character 76
2023-01-13 08:11:44.658 GMT [64239] HINT:  There is a column named "account_id" in table "management_log", but it cannot be referenced from this part of the query.
2023-01-13 08:11:44.658 GMT [64239] STATEMENT:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened loan', CURRENT_DATE);
2023-01-13 08:11:44.658 GMT [64239] ERROR:  syntax error at or near "passed" at character 1
2023-01-13 08:11:44.658 GMT [64239] STATEMENT:  passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-13 08:11:44.658 GMT [64239] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:11:44.658 GMT [64239] STATEMENT:  RETURN passed;
2023-01-13 08:11:44.659 GMT [64239] WARNING:  there is no transaction in progress
2023-01-13 08:11:44.659 GMT [64239] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.get_account_type(account_number INT)
	RETURNS TEXT AS $$" at character 1
2023-01-13 08:11:44.659 GMT [64239] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.get_account_type(account_number INT)
	RETURNS TEXT AS $$
	DECLARE account_type TEXT;
2023-01-13 08:11:44.659 GMT [64239] ERROR:  syntax error at or near "SELECT" at character 11
2023-01-13 08:11:44.659 GMT [64239] STATEMENT:  BEGIN
	    SELECT CASE WHEN EXISTS (SELECT * FROM debit_account WHERE account_number = account_number) THEN 'DEBIT'
	                WHEN EXISTS (SELECT * FROM credit_account WHERE account_number = account_number) THEN 'CREDIT'
	                WHEN EXISTS (SELECT * FROM savings_account WHERE account_number = account_number) THEN 'SAVINGS'
	                ELSE 'UNKNOWN' END INTO account_type;
2023-01-13 08:11:44.659 GMT [64239] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:11:44.659 GMT [64239] STATEMENT:  RETURN account_type;
2023-01-13 08:11:44.659 GMT [64239] WARNING:  there is no transaction in progress
2023-01-13 08:11:44.660 GMT [64239] ERROR:  syntax error at or near "END" at character 644
2023-01-13 08:11:44.660 GMT [64239] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_accounts(account_id INT)
	RETURNS TABLE (account_number INT) AS $$
	
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed accounts', CURRENT_DATE);
	    RETURN QUERY
	        SELECT account.*, COALESCE(debit_accounts.current_balance, credit_accounts.outstanding_balance, savings_accounts.current_balance, loans.loan_amount) AS balance,
	        COALESCE(debit_accounts.interest_rate, credit_accounts.interest_rate, savings_accounts.interest_rate, loans.loan_interest_rate) AS interest_rate,
	        get_account_type(account.account_number) AS account_type
	
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:11:44.660 GMT [64239] ERROR:  syntax error at or near "," at character 205
2023-01-13 08:11:44.660 GMT [64239] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_debit_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, overdraft_limit NUMERIC, overdraft_usage NUMERIC, interest_rate, external_account_number INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed debit accounts', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT * FROM client.debit_accounts WHERE account_id = account_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:11:44.665 GMT [64239] ERROR:  parameter name "account_id" used more than once
2023-01-13 08:11:44.665 GMT [64239] CONTEXT:  compilation of PL/pgSQL function "view_savings_statements" near line 1
2023-01-13 08:11:44.665 GMT [64239] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_savings_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statements', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT savings_accounts_statements.account_id, savings_accounts_statements.account_number, savings_accounts_statements.starting_date, savings_accounts_statements.end_date, savings_accounts_statements.amount
	        FROM client.savings_accounts_statements
	        WHERE savings_accounts_statements.account_number = account_number
	        AND savings_accounts_statements.account_id = account_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:11:44.666 GMT [64239] ERROR:  parameter name "account_id" used more than once
2023-01-13 08:11:44.666 GMT [64239] CONTEXT:  compilation of PL/pgSQL function "view_debit_statements" near line 1
2023-01-13 08:11:44.666 GMT [64239] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_debit_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed debit statements', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT debit_accounts_statements.account_id, debit_accounts_statements.account_number, debit_accounts_statements.starting_date, debit_accounts_statements.end_date, debit_accounts_statements.amount
	        FROM client.debit_accounts_statements
	        WHERE debit_accounts_statements.account_number = account_number
	        AND debit_accounts_statements.account_id = account_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:11:44.666 GMT [64239] ERROR:  parameter name "account_id" used more than once
2023-01-13 08:11:44.666 GMT [64239] CONTEXT:  compilation of PL/pgSQL function "view_credit_statements" near line 1
2023-01-13 08:11:44.666 GMT [64239] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_credit_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statements', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statements.account_id, credit_accounts_statements.account_number, credit_accounts_statements.starting_date, credit_accounts_statements.end_date, credit_accounts_statements.amount
	        FROM client.credit_accounts_statements
	        WHERE credit_accounts_statements.account_number = account_number
	        AND credit_accounts_statements.account_id = account_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:11:44.666 GMT [64239] ERROR:  parameter name "account_id" used more than once
2023-01-13 08:11:44.666 GMT [64239] CONTEXT:  compilation of PL/pgSQL function "view_debit_statement" near line 1
2023-01-13 08:11:44.666 GMT [64239] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_debit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed debit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT debit_accounts_statement.account_id, debit_accounts_statement.account_number, debit_accounts_statement.starting_date, debit_accounts_statement.end_date, debit_accounts_statement.amount
	        FROM client.debit_accounts_statement
	        WHERE debit_accounts_statement.account_id = account_id
	        AND debit_accounts_statement.account_number = account_number
	        AND debit_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:11:44.667 GMT [64239] ERROR:  syntax error at or near "INSERT" at character 1028
2023-01-13 08:11:44.667 GMT [64239] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_credit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statement.account_id, credit_accounts_statement.account_number, credit_accounts_statement.starting_date, credit_accounts_statement.end_date, credit_accounts_statement.amount
	        FROM client.credit_accounts_statement
	        WHERE credit_accounts_statement.account_id = account_id
	        AND credit_accounts_statement.account_number = account_number
	        AND credit_accounts_statement.statement_id = statement_id;
	END;
	
	CREATE OR REPLACE FUNCTION client.view_savings_statement(account_id INT, savings_account_id INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statement', CURRENT_DATE);
	    RETURN QUERY
	        SELECT savings_accounts_statement.account_id, savings_accounts_statement.account_number, savings_accounts_statement.starting_date, savings_accounts_statement.end_date, savings_accounts_statement.amount
	        FROM client.savings_accounts_statement
	        WHERE savings_accounts_statement.account_id = account_id
	        AND savings_accounts_statement.account_number = savings_account_id
	        AND savings_accounts_statement.statement_id = statement_id;
	END;
2023-01-13 08:12:16.024 GMT [64203] LOG:  received fast shutdown request
2023-01-13 08:12:16.027 GMT [64203] LOG:  aborting any active transactions
2023-01-13 08:12:16.037 GMT [64203] LOG:  background worker "logical replication launcher" (PID 64210) exited with exit code 1
2023-01-13 08:12:16.041 GMT [64205] LOG:  shutting down
2023-01-13 08:12:16.105 GMT [64203] LOG:  database system is shut down
2023-01-13 08:12:17.518 GMT [64436] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-13 08:12:17.518 GMT [64436] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-13 08:12:17.520 GMT [64436] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-13 08:12:17.525 GMT [64437] LOG:  database system was shut down at 2023-01-13 08:12:17 GMT
2023-01-13 08:12:17.531 GMT [64436] LOG:  database system is ready to accept connections
2023-01-13 08:12:18.461 GMT [64476] ERROR:  column "amount" specified more than once
2023-01-13 08:12:18.461 GMT [64476] STATEMENT:  CREATE OR REPLACE VIEW client.debit_accounts_statement AS
	    SELECT debit_accounts_statements.account_id, debit_accounts_statements.account_number, debit_accounts_statements.id, debit_accounts_statements.starting_date, debit_accounts_statements.end_date, debit_accounts_statements.amount, transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date
	    FROM debit_accounts_statements
	    INNER JOIN transaction ON debit_accounts_statements.id = transaction.debit_statement_id;
2023-01-13 08:12:18.465 GMT [64476] ERROR:  column "amount" specified more than once
2023-01-13 08:12:18.465 GMT [64476] STATEMENT:  CREATE OR REPLACE VIEW client.credit_accounts_statement AS
	    SELECT credit_accounts_statements.account_id, credit_accounts_statements.account_number, credit_accounts_statements.id, credit_accounts_statements.starting_date, credit_accounts_statements.end_date, credit_accounts_statements.amount, credit_accounts_statements.minimum_payment, credit_accounts_statements.minimum_payment_due_date, transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date
	    FROM credit_accounts_statements
	    INNER JOIN transaction ON credit_accounts_statements.id = transaction.credit_statement_id;
2023-01-13 08:12:18.472 GMT [64476] ERROR:  column loan_application.account_id does not exist at character 216
2023-01-13 08:12:18.472 GMT [64476] STATEMENT:  CREATE OR REPLACE VIEW client.loans AS
	    SELECT loan.account_id, loan.id, loan.amount, loan.interest_rate, loan.term, loan_application.application_status
	    FROM loan
	    INNER JOIN loan_application ON loan.id = loan_application.account_id;
2023-01-13 08:12:18.475 GMT [64476] ERROR:  syntax error at or near "DECLARE" at character 541
2023-01-13 08:12:18.475 GMT [64476] STATEMENT:  CREATE OR REPLACE FUNCTION client.update_email(account_identifier INT, new_email TEXT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	BEGIN
	    UPDATE user_login SET email = new_email
	    WHERE account_id = account_identifier;
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Updated email', CURRENT_DATE);
	    passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
	    RETURN passed;
	END;
	
	
	
	CREATE OR REPLACE FUNCTION client.open_debit_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-13 08:12:18.475 GMT [64476] ERROR:  syntax error at or near "INT" at character 30
2023-01-13 08:12:18.475 GMT [64476] STATEMENT:  DECLARE debit_account_number INT;
2023-01-13 08:12:18.476 GMT [64476] ERROR:  syntax error at or near "INT" at character 29
2023-01-13 08:12:18.476 GMT [64476] STATEMENT:  DECLARE next_account_number INT;
2023-01-13 08:12:18.476 GMT [64476] ERROR:  syntax error at or near "SELECT" at character 11
2023-01-13 08:12:18.476 GMT [64476] STATEMENT:  BEGIN
	    SELECT get_next_account_number() INTO next_account_number;
2023-01-13 08:12:18.476 GMT [64476] ERROR:  syntax error at or near "INTO" at character 151
2023-01-13 08:12:18.476 GMT [64476] STATEMENT:  INSERT INTO debit_account (account_number, account_id, current_balance, interest_rate) VALUES (next_account_number ,account_id, 0, 0.01) RETURNING id INTO debit_account_number;
2023-01-13 08:12:18.476 GMT [64476] ERROR:  column "debit_account_id" does not exist at character 118
2023-01-13 08:12:18.476 GMT [64476] STATEMENT:  INSERT INTO debit_statement (starting_date, end_date, amount, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, debit_account_id);
2023-01-13 08:12:18.477 GMT [64476] ERROR:  column "account_id" of relation "debit_overdraft" does not exist at character 79
2023-01-13 08:12:18.477 GMT [64476] STATEMENT:  INSERT INTO debit_overdraft (overdraft_usage, overdraft_limit, interest_rate, account_id) VALUES (0, 0, 0.01, debit_account_id);
2023-01-13 08:12:18.477 GMT [64476] ERROR:  column "account_id" does not exist at character 76
2023-01-13 08:12:18.477 GMT [64476] HINT:  There is a column named "account_id" in table "management_log", but it cannot be referenced from this part of the query.
2023-01-13 08:12:18.477 GMT [64476] STATEMENT:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened debit account', CURRENT_DATE);
2023-01-13 08:12:18.477 GMT [64476] ERROR:  syntax error at or near "passed" at character 1
2023-01-13 08:12:18.477 GMT [64476] STATEMENT:  passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-13 08:12:18.477 GMT [64476] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:12:18.477 GMT [64476] STATEMENT:  RETURN passed;
2023-01-13 08:12:18.478 GMT [64476] WARNING:  there is no transaction in progress
2023-01-13 08:12:18.478 GMT [64476] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_credit_account(account_id INT)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-13 08:12:18.478 GMT [64476] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_credit_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-13 08:12:18.478 GMT [64476] ERROR:  syntax error at or near "INT" at character 31
2023-01-13 08:12:18.478 GMT [64476] STATEMENT:  DECLARE credit_account_number INT;
2023-01-13 08:12:18.478 GMT [64476] ERROR:  syntax error at or near "INT" at character 29
2023-01-13 08:12:18.478 GMT [64476] STATEMENT:  DECLARE next_account_number INT;
2023-01-13 08:12:18.479 GMT [64476] ERROR:  syntax error at or near "SELECT" at character 11
2023-01-13 08:12:18.479 GMT [64476] STATEMENT:  BEGIN
	    SELECT get_next_account_number() INTO next_account_number;
2023-01-13 08:12:18.479 GMT [64476] ERROR:  syntax error at or near "INTO" at character 173
2023-01-13 08:12:18.479 GMT [64476] STATEMENT:  INSERT INTO credit_account (account_number, outstanding_balance, credit_limit, interest_rate, account_id) VALUES (next_account_number ,0, 0, 24.9, account_id) RETURNING id INTO credit_account_id;
2023-01-13 08:12:18.479 GMT [64476] ERROR:  column "account_id" of relation "credit_statement" does not exist at character 107
2023-01-13 08:12:18.479 GMT [64476] STATEMENT:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_id) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_id);
2023-01-13 08:12:18.480 GMT [64476] ERROR:  column "credit_account_id" of relation "credit_account_application" does not exist at character 41
2023-01-13 08:12:18.480 GMT [64476] STATEMENT:  INSERT INTO credit_account_application (credit_account_id, application_status) VALUES (credit_account_id, 'PENDING');
2023-01-13 08:12:18.480 GMT [64476] ERROR:  column "account_id" does not exist at character 76
2023-01-13 08:12:18.480 GMT [64476] HINT:  There is a column named "account_id" in table "management_log", but it cannot be referenced from this part of the query.
2023-01-13 08:12:18.480 GMT [64476] STATEMENT:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened credit account', CURRENT_DATE);
2023-01-13 08:12:18.480 GMT [64476] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_savings_account(account_id INT)
	RETURNS BOOLEAN AS $$" at character 5
2023-01-13 08:12:18.480 GMT [64476] STATEMENT:  END
	$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_savings_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-13 08:12:18.481 GMT [64476] ERROR:  syntax error at or near "INT" at character 28
2023-01-13 08:12:18.481 GMT [64476] STATEMENT:  DECLARE savings_account_id INT;
2023-01-13 08:12:18.481 GMT [64476] ERROR:  syntax error at or near "INT" at character 29
2023-01-13 08:12:18.481 GMT [64476] STATEMENT:  DECLARE next_account_number INT;
2023-01-13 08:12:18.482 GMT [64476] ERROR:  syntax error at or near "SELECT" at character 11
2023-01-13 08:12:18.482 GMT [64476] STATEMENT:  BEGIN
	    SELECT get_next_account_number() INTO next_account_number;
2023-01-13 08:12:18.482 GMT [64476] ERROR:  syntax error at or near "INTO" at character 153
2023-01-13 08:12:18.482 GMT [64476] STATEMENT:  INSERT INTO savings_account (account_number, account_id, current_balance, interest_rate) VALUES (next_account_number ,account_id, 0, 0.01) RETURNING id INTO savings_account_id;
2023-01-13 08:12:18.483 GMT [64476] ERROR:  column "account_id" of relation "savings_statement" does not exist at character 65
2023-01-13 08:12:18.483 GMT [64476] STATEMENT:  INSERT INTO savings_statement (starting_date, end_date, amount, account_id) VALUES (CURRENT_DATE, CURRENT_DATE, 0, savings_account_id);
2023-01-13 08:12:18.485 GMT [64476] ERROR:  column "account_id" does not exist at character 76
2023-01-13 08:12:18.485 GMT [64476] HINT:  There is a column named "account_id" in table "management_log", but it cannot be referenced from this part of the query.
2023-01-13 08:12:18.485 GMT [64476] STATEMENT:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened savings account', CURRENT_DATE);
2023-01-13 08:12:18.486 GMT [64476] ERROR:  relation "external_account" does not exist at character 13
2023-01-13 08:12:18.486 GMT [64476] STATEMENT:  INSERT INTO external_account (account_id, external_account_number) VALUES (savings_account_id, '12345678');
2023-01-13 08:12:18.486 GMT [64476] ERROR:  syntax error at or near "passed" at character 1
2023-01-13 08:12:18.486 GMT [64476] STATEMENT:  passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-13 08:12:18.486 GMT [64476] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:12:18.486 GMT [64476] STATEMENT:  RETURN passed;
2023-01-13 08:12:18.487 GMT [64476] WARNING:  there is no transaction in progress
2023-01-13 08:12:18.487 GMT [64476] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_loan(account_id INT, loan_amount INT, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-13 08:12:18.487 GMT [64476] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_loan(account_id INT, loan_amount INT, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-13 08:12:18.487 GMT [64476] ERROR:  syntax error at or near "INT" at character 17
2023-01-13 08:12:18.487 GMT [64476] STATEMENT:  DECLARE loan_id INT;
2023-01-13 08:12:18.488 GMT [64476] ERROR:  syntax error at or near "INSERT" at character 11
2023-01-13 08:12:18.488 GMT [64476] STATEMENT:  BEGIN
	    INSERT INTO loan (account_id, loan_amount, loan_end_date, loan_type, loan_interest_rate) VALUES (account_id, loan_amount, loan_end_date, loan_type, loan_interest_rate) RETURNING id INTO loan_id;
2023-01-13 08:12:18.488 GMT [64476] ERROR:  column "end_date" of relation "loan_statement" does not exist at character 44
2023-01-13 08:12:18.488 GMT [64476] STATEMENT:  INSERT INTO loan_statement (starting_date, end_date, amount, account_id) VALUES (CURRENT_DATE, CURRENT_DATE, 0, loan_id);
2023-01-13 08:12:18.488 GMT [64476] ERROR:  column "loan_id" does not exist at character 68
2023-01-13 08:12:18.488 GMT [64476] HINT:  There is a column named "loan_id" in table "loan_application", but it cannot be referenced from this part of the query.
2023-01-13 08:12:18.488 GMT [64476] STATEMENT:  INSERT INTO loan_application (loan_id, application_status) VALUES (loan_id, 'PENDING');
2023-01-13 08:12:18.489 GMT [64476] ERROR:  column "account_id" does not exist at character 76
2023-01-13 08:12:18.489 GMT [64476] HINT:  There is a column named "account_id" in table "management_log", but it cannot be referenced from this part of the query.
2023-01-13 08:12:18.489 GMT [64476] STATEMENT:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened loan', CURRENT_DATE);
2023-01-13 08:12:18.489 GMT [64476] ERROR:  syntax error at or near "passed" at character 1
2023-01-13 08:12:18.489 GMT [64476] STATEMENT:  passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-13 08:12:18.490 GMT [64476] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:12:18.490 GMT [64476] STATEMENT:  RETURN passed;
2023-01-13 08:12:18.490 GMT [64476] WARNING:  there is no transaction in progress
2023-01-13 08:12:18.490 GMT [64476] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.get_account_type(account_number INT)
	RETURNS TEXT AS $$" at character 1
2023-01-13 08:12:18.490 GMT [64476] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.get_account_type(account_number INT)
	RETURNS TEXT AS $$
	DECLARE account_type TEXT;
2023-01-13 08:12:18.490 GMT [64476] ERROR:  syntax error at or near "SELECT" at character 11
2023-01-13 08:12:18.490 GMT [64476] STATEMENT:  BEGIN
	    SELECT CASE WHEN EXISTS (SELECT * FROM debit_account WHERE account_number = account_number) THEN 'DEBIT'
	                WHEN EXISTS (SELECT * FROM credit_account WHERE account_number = account_number) THEN 'CREDIT'
	                WHEN EXISTS (SELECT * FROM savings_account WHERE account_number = account_number) THEN 'SAVINGS'
	                ELSE 'UNKNOWN' END INTO account_type;
2023-01-13 08:12:18.490 GMT [64476] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:12:18.490 GMT [64476] STATEMENT:  RETURN account_type;
2023-01-13 08:12:18.491 GMT [64476] WARNING:  there is no transaction in progress
2023-01-13 08:12:18.492 GMT [64476] ERROR:  syntax error at or near "END" at character 644
2023-01-13 08:12:18.492 GMT [64476] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_accounts(account_id INT)
	RETURNS TABLE (account_number INT) AS $$
	
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed accounts', CURRENT_DATE);
	    RETURN QUERY
	        SELECT account.*, COALESCE(debit_accounts.current_balance, credit_accounts.outstanding_balance, savings_accounts.current_balance, loans.loan_amount) AS balance,
	        COALESCE(debit_accounts.interest_rate, credit_accounts.interest_rate, savings_accounts.interest_rate, loans.loan_interest_rate) AS interest_rate,
	        get_account_type(account.account_number) AS account_type
	
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:12:18.494 GMT [64476] ERROR:  syntax error at or near "," at character 205
2023-01-13 08:12:18.494 GMT [64476] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_debit_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, overdraft_limit NUMERIC, overdraft_usage NUMERIC, interest_rate, external_account_number INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed debit accounts', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT * FROM client.debit_accounts WHERE account_id = account_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:12:18.509 GMT [64476] ERROR:  parameter name "account_id" used more than once
2023-01-13 08:12:18.509 GMT [64476] CONTEXT:  compilation of PL/pgSQL function "view_savings_statements" near line 1
2023-01-13 08:12:18.509 GMT [64476] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_savings_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statements', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT savings_accounts_statements.account_id, savings_accounts_statements.account_number, savings_accounts_statements.starting_date, savings_accounts_statements.end_date, savings_accounts_statements.amount
	        FROM client.savings_accounts_statements
	        WHERE savings_accounts_statements.account_number = account_number
	        AND savings_accounts_statements.account_id = account_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:12:18.510 GMT [64476] ERROR:  parameter name "account_id" used more than once
2023-01-13 08:12:18.510 GMT [64476] CONTEXT:  compilation of PL/pgSQL function "view_debit_statements" near line 1
2023-01-13 08:12:18.510 GMT [64476] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_debit_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed debit statements', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT debit_accounts_statements.account_id, debit_accounts_statements.account_number, debit_accounts_statements.starting_date, debit_accounts_statements.end_date, debit_accounts_statements.amount
	        FROM client.debit_accounts_statements
	        WHERE debit_accounts_statements.account_number = account_number
	        AND debit_accounts_statements.account_id = account_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:12:18.511 GMT [64476] ERROR:  parameter name "account_id" used more than once
2023-01-13 08:12:18.511 GMT [64476] CONTEXT:  compilation of PL/pgSQL function "view_credit_statements" near line 1
2023-01-13 08:12:18.511 GMT [64476] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_credit_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statements', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statements.account_id, credit_accounts_statements.account_number, credit_accounts_statements.starting_date, credit_accounts_statements.end_date, credit_accounts_statements.amount
	        FROM client.credit_accounts_statements
	        WHERE credit_accounts_statements.account_number = account_number
	        AND credit_accounts_statements.account_id = account_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:12:18.513 GMT [64476] ERROR:  parameter name "account_id" used more than once
2023-01-13 08:12:18.513 GMT [64476] CONTEXT:  compilation of PL/pgSQL function "view_debit_statement" near line 1
2023-01-13 08:12:18.513 GMT [64476] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_debit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed debit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT debit_accounts_statement.account_id, debit_accounts_statement.account_number, debit_accounts_statement.starting_date, debit_accounts_statement.end_date, debit_accounts_statement.amount
	        FROM client.debit_accounts_statement
	        WHERE debit_accounts_statement.account_id = account_id
	        AND debit_accounts_statement.account_number = account_number
	        AND debit_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:12:18.513 GMT [64476] ERROR:  syntax error at or near "INSERT" at character 1028
2023-01-13 08:12:18.513 GMT [64476] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_credit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statement.account_id, credit_accounts_statement.account_number, credit_accounts_statement.starting_date, credit_accounts_statement.end_date, credit_accounts_statement.amount
	        FROM client.credit_accounts_statement
	        WHERE credit_accounts_statement.account_id = account_id
	        AND credit_accounts_statement.account_number = account_number
	        AND credit_accounts_statement.statement_id = statement_id;
	END;
	
	CREATE OR REPLACE FUNCTION client.view_savings_statement(account_id INT, savings_account_id INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statement', CURRENT_DATE);
	    RETURN QUERY
	        SELECT savings_accounts_statement.account_id, savings_accounts_statement.account_number, savings_accounts_statement.starting_date, savings_accounts_statement.end_date, savings_accounts_statement.amount
	        FROM client.savings_accounts_statement
	        WHERE savings_accounts_statement.account_id = account_id
	        AND savings_accounts_statement.account_number = savings_account_id
	        AND savings_accounts_statement.statement_id = statement_id;
	END;
2023-01-13 08:13:37.219 GMT [64436] LOG:  received fast shutdown request
2023-01-13 08:13:37.221 GMT [64436] LOG:  aborting any active transactions
2023-01-13 08:13:37.226 GMT [64436] LOG:  background worker "logical replication launcher" (PID 64443) exited with exit code 1
2023-01-13 08:13:37.228 GMT [64438] LOG:  shutting down
2023-01-13 08:13:37.293 GMT [64436] LOG:  database system is shut down
2023-01-13 08:13:38.631 GMT [64781] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-13 08:13:38.632 GMT [64781] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-13 08:13:38.633 GMT [64781] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-13 08:13:38.638 GMT [64782] LOG:  database system was shut down at 2023-01-13 08:13:38 GMT
2023-01-13 08:13:38.647 GMT [64781] LOG:  database system is ready to accept connections
2023-01-13 08:13:39.486 GMT [64820] ERROR:  column loan_application.account_id does not exist at character 216
2023-01-13 08:13:39.486 GMT [64820] STATEMENT:  CREATE OR REPLACE VIEW client.loans AS
	    SELECT loan.account_id, loan.id, loan.amount, loan.interest_rate, loan.term, loan_application.application_status
	    FROM loan
	    INNER JOIN loan_application ON loan.id = loan_application.account_id;
2023-01-13 08:13:39.490 GMT [64820] ERROR:  syntax error at or near "DECLARE" at character 541
2023-01-13 08:13:39.490 GMT [64820] STATEMENT:  CREATE OR REPLACE FUNCTION client.update_email(account_identifier INT, new_email TEXT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	BEGIN
	    UPDATE user_login SET email = new_email
	    WHERE account_id = account_identifier;
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Updated email', CURRENT_DATE);
	    passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
	    RETURN passed;
	END;
	
	
	
	CREATE OR REPLACE FUNCTION client.open_debit_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-13 08:13:39.490 GMT [64820] ERROR:  syntax error at or near "INT" at character 30
2023-01-13 08:13:39.490 GMT [64820] STATEMENT:  DECLARE debit_account_number INT;
2023-01-13 08:13:39.493 GMT [64820] ERROR:  syntax error at or near "INT" at character 29
2023-01-13 08:13:39.493 GMT [64820] STATEMENT:  DECLARE next_account_number INT;
2023-01-13 08:13:39.494 GMT [64820] ERROR:  syntax error at or near "SELECT" at character 11
2023-01-13 08:13:39.494 GMT [64820] STATEMENT:  BEGIN
	    SELECT get_next_account_number() INTO next_account_number;
2023-01-13 08:13:39.494 GMT [64820] ERROR:  syntax error at or near "INTO" at character 151
2023-01-13 08:13:39.494 GMT [64820] STATEMENT:  INSERT INTO debit_account (account_number, account_id, current_balance, interest_rate) VALUES (next_account_number ,account_id, 0, 0.01) RETURNING id INTO debit_account_number;
2023-01-13 08:13:39.495 GMT [64820] ERROR:  column "debit_account_id" does not exist at character 118
2023-01-13 08:13:39.495 GMT [64820] STATEMENT:  INSERT INTO debit_statement (starting_date, end_date, amount, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, debit_account_id);
2023-01-13 08:13:39.495 GMT [64820] ERROR:  column "account_id" of relation "debit_overdraft" does not exist at character 79
2023-01-13 08:13:39.495 GMT [64820] STATEMENT:  INSERT INTO debit_overdraft (overdraft_usage, overdraft_limit, interest_rate, account_id) VALUES (0, 0, 0.01, debit_account_id);
2023-01-13 08:13:39.495 GMT [64820] ERROR:  column "account_id" does not exist at character 76
2023-01-13 08:13:39.495 GMT [64820] HINT:  There is a column named "account_id" in table "management_log", but it cannot be referenced from this part of the query.
2023-01-13 08:13:39.495 GMT [64820] STATEMENT:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened debit account', CURRENT_DATE);
2023-01-13 08:13:39.496 GMT [64820] ERROR:  syntax error at or near "passed" at character 1
2023-01-13 08:13:39.496 GMT [64820] STATEMENT:  passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-13 08:13:39.496 GMT [64820] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:13:39.496 GMT [64820] STATEMENT:  RETURN passed;
2023-01-13 08:13:39.496 GMT [64820] WARNING:  there is no transaction in progress
2023-01-13 08:13:39.497 GMT [64820] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_credit_account(account_id INT)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-13 08:13:39.497 GMT [64820] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_credit_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-13 08:13:39.497 GMT [64820] ERROR:  syntax error at or near "INT" at character 31
2023-01-13 08:13:39.497 GMT [64820] STATEMENT:  DECLARE credit_account_number INT;
2023-01-13 08:13:39.498 GMT [64820] ERROR:  syntax error at or near "INT" at character 29
2023-01-13 08:13:39.498 GMT [64820] STATEMENT:  DECLARE next_account_number INT;
2023-01-13 08:13:39.498 GMT [64820] ERROR:  syntax error at or near "SELECT" at character 11
2023-01-13 08:13:39.498 GMT [64820] STATEMENT:  BEGIN
	    SELECT get_next_account_number() INTO next_account_number;
2023-01-13 08:13:39.498 GMT [64820] ERROR:  syntax error at or near "INTO" at character 173
2023-01-13 08:13:39.498 GMT [64820] STATEMENT:  INSERT INTO credit_account (account_number, outstanding_balance, credit_limit, interest_rate, account_id) VALUES (next_account_number ,0, 0, 24.9, account_id) RETURNING id INTO credit_account_id;
2023-01-13 08:13:39.499 GMT [64820] ERROR:  column "account_id" of relation "credit_statement" does not exist at character 107
2023-01-13 08:13:39.499 GMT [64820] STATEMENT:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_id) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_id);
2023-01-13 08:13:39.499 GMT [64820] ERROR:  column "credit_account_id" of relation "credit_account_application" does not exist at character 41
2023-01-13 08:13:39.499 GMT [64820] STATEMENT:  INSERT INTO credit_account_application (credit_account_id, application_status) VALUES (credit_account_id, 'PENDING');
2023-01-13 08:13:39.499 GMT [64820] ERROR:  column "account_id" does not exist at character 76
2023-01-13 08:13:39.499 GMT [64820] HINT:  There is a column named "account_id" in table "management_log", but it cannot be referenced from this part of the query.
2023-01-13 08:13:39.499 GMT [64820] STATEMENT:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened credit account', CURRENT_DATE);
2023-01-13 08:13:39.499 GMT [64820] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_savings_account(account_id INT)
	RETURNS BOOLEAN AS $$" at character 5
2023-01-13 08:13:39.499 GMT [64820] STATEMENT:  END
	$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_savings_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-13 08:13:39.499 GMT [64820] ERROR:  syntax error at or near "INT" at character 28
2023-01-13 08:13:39.499 GMT [64820] STATEMENT:  DECLARE savings_account_id INT;
2023-01-13 08:13:39.499 GMT [64820] ERROR:  syntax error at or near "INT" at character 29
2023-01-13 08:13:39.499 GMT [64820] STATEMENT:  DECLARE next_account_number INT;
2023-01-13 08:13:39.499 GMT [64820] ERROR:  syntax error at or near "SELECT" at character 11
2023-01-13 08:13:39.499 GMT [64820] STATEMENT:  BEGIN
	    SELECT get_next_account_number() INTO next_account_number;
2023-01-13 08:13:39.499 GMT [64820] ERROR:  syntax error at or near "INTO" at character 153
2023-01-13 08:13:39.499 GMT [64820] STATEMENT:  INSERT INTO savings_account (account_number, account_id, current_balance, interest_rate) VALUES (next_account_number ,account_id, 0, 0.01) RETURNING id INTO savings_account_id;
2023-01-13 08:13:39.501 GMT [64820] ERROR:  column "account_id" of relation "savings_statement" does not exist at character 65
2023-01-13 08:13:39.501 GMT [64820] STATEMENT:  INSERT INTO savings_statement (starting_date, end_date, amount, account_id) VALUES (CURRENT_DATE, CURRENT_DATE, 0, savings_account_id);
2023-01-13 08:13:39.501 GMT [64820] ERROR:  column "account_id" does not exist at character 76
2023-01-13 08:13:39.501 GMT [64820] HINT:  There is a column named "account_id" in table "management_log", but it cannot be referenced from this part of the query.
2023-01-13 08:13:39.501 GMT [64820] STATEMENT:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened savings account', CURRENT_DATE);
2023-01-13 08:13:39.502 GMT [64820] ERROR:  relation "external_account" does not exist at character 13
2023-01-13 08:13:39.502 GMT [64820] STATEMENT:  INSERT INTO external_account (account_id, external_account_number) VALUES (savings_account_id, '12345678');
2023-01-13 08:13:39.503 GMT [64820] ERROR:  syntax error at or near "passed" at character 1
2023-01-13 08:13:39.503 GMT [64820] STATEMENT:  passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-13 08:13:39.503 GMT [64820] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:13:39.503 GMT [64820] STATEMENT:  RETURN passed;
2023-01-13 08:13:39.503 GMT [64820] WARNING:  there is no transaction in progress
2023-01-13 08:13:39.504 GMT [64820] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_loan(account_id INT, loan_amount INT, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-13 08:13:39.504 GMT [64820] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_loan(account_id INT, loan_amount INT, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-13 08:13:39.504 GMT [64820] ERROR:  syntax error at or near "INT" at character 17
2023-01-13 08:13:39.504 GMT [64820] STATEMENT:  DECLARE loan_id INT;
2023-01-13 08:13:39.504 GMT [64820] ERROR:  syntax error at or near "INSERT" at character 11
2023-01-13 08:13:39.504 GMT [64820] STATEMENT:  BEGIN
	    INSERT INTO loan (account_id, loan_amount, loan_end_date, loan_type, loan_interest_rate) VALUES (account_id, loan_amount, loan_end_date, loan_type, loan_interest_rate) RETURNING id INTO loan_id;
2023-01-13 08:13:39.504 GMT [64820] ERROR:  column "end_date" of relation "loan_statement" does not exist at character 44
2023-01-13 08:13:39.504 GMT [64820] STATEMENT:  INSERT INTO loan_statement (starting_date, end_date, amount, account_id) VALUES (CURRENT_DATE, CURRENT_DATE, 0, loan_id);
2023-01-13 08:13:39.504 GMT [64820] ERROR:  column "loan_id" does not exist at character 68
2023-01-13 08:13:39.504 GMT [64820] HINT:  There is a column named "loan_id" in table "loan_application", but it cannot be referenced from this part of the query.
2023-01-13 08:13:39.504 GMT [64820] STATEMENT:  INSERT INTO loan_application (loan_id, application_status) VALUES (loan_id, 'PENDING');
2023-01-13 08:13:39.504 GMT [64820] ERROR:  column "account_id" does not exist at character 76
2023-01-13 08:13:39.504 GMT [64820] HINT:  There is a column named "account_id" in table "management_log", but it cannot be referenced from this part of the query.
2023-01-13 08:13:39.504 GMT [64820] STATEMENT:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened loan', CURRENT_DATE);
2023-01-13 08:13:39.505 GMT [64820] ERROR:  syntax error at or near "passed" at character 1
2023-01-13 08:13:39.505 GMT [64820] STATEMENT:  passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-13 08:13:39.505 GMT [64820] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:13:39.505 GMT [64820] STATEMENT:  RETURN passed;
2023-01-13 08:13:39.505 GMT [64820] WARNING:  there is no transaction in progress
2023-01-13 08:13:39.505 GMT [64820] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.get_account_type(account_number INT)
	RETURNS TEXT AS $$" at character 1
2023-01-13 08:13:39.505 GMT [64820] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.get_account_type(account_number INT)
	RETURNS TEXT AS $$
	DECLARE account_type TEXT;
2023-01-13 08:13:39.505 GMT [64820] ERROR:  syntax error at or near "SELECT" at character 11
2023-01-13 08:13:39.505 GMT [64820] STATEMENT:  BEGIN
	    SELECT CASE WHEN EXISTS (SELECT * FROM debit_account WHERE account_number = account_number) THEN 'DEBIT'
	                WHEN EXISTS (SELECT * FROM credit_account WHERE account_number = account_number) THEN 'CREDIT'
	                WHEN EXISTS (SELECT * FROM savings_account WHERE account_number = account_number) THEN 'SAVINGS'
	                ELSE 'UNKNOWN' END INTO account_type;
2023-01-13 08:13:39.505 GMT [64820] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:13:39.505 GMT [64820] STATEMENT:  RETURN account_type;
2023-01-13 08:13:39.505 GMT [64820] WARNING:  there is no transaction in progress
2023-01-13 08:13:39.505 GMT [64820] ERROR:  syntax error at or near "END" at character 644
2023-01-13 08:13:39.505 GMT [64820] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_accounts(account_id INT)
	RETURNS TABLE (account_number INT) AS $$
	
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed accounts', CURRENT_DATE);
	    RETURN QUERY
	        SELECT account.*, COALESCE(debit_accounts.current_balance, credit_accounts.outstanding_balance, savings_accounts.current_balance, loans.loan_amount) AS balance,
	        COALESCE(debit_accounts.interest_rate, credit_accounts.interest_rate, savings_accounts.interest_rate, loans.loan_interest_rate) AS interest_rate,
	        get_account_type(account.account_number) AS account_type
	
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:13:39.506 GMT [64820] ERROR:  syntax error at or near "," at character 205
2023-01-13 08:13:39.506 GMT [64820] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_debit_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, overdraft_limit NUMERIC, overdraft_usage NUMERIC, interest_rate, external_account_number INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed debit accounts', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT * FROM client.debit_accounts WHERE account_id = account_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:13:39.512 GMT [64820] ERROR:  parameter name "account_id" used more than once
2023-01-13 08:13:39.512 GMT [64820] CONTEXT:  compilation of PL/pgSQL function "view_savings_statements" near line 1
2023-01-13 08:13:39.512 GMT [64820] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_savings_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statements', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT savings_accounts_statements.account_id, savings_accounts_statements.account_number, savings_accounts_statements.starting_date, savings_accounts_statements.end_date, savings_accounts_statements.amount
	        FROM client.savings_accounts_statements
	        WHERE savings_accounts_statements.account_number = account_number
	        AND savings_accounts_statements.account_id = account_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:13:39.513 GMT [64820] ERROR:  parameter name "account_id" used more than once
2023-01-13 08:13:39.513 GMT [64820] CONTEXT:  compilation of PL/pgSQL function "view_debit_statements" near line 1
2023-01-13 08:13:39.513 GMT [64820] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_debit_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed debit statements', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT debit_accounts_statements.account_id, debit_accounts_statements.account_number, debit_accounts_statements.starting_date, debit_accounts_statements.end_date, debit_accounts_statements.amount
	        FROM client.debit_accounts_statements
	        WHERE debit_accounts_statements.account_number = account_number
	        AND debit_accounts_statements.account_id = account_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:13:39.515 GMT [64820] ERROR:  parameter name "account_id" used more than once
2023-01-13 08:13:39.515 GMT [64820] CONTEXT:  compilation of PL/pgSQL function "view_credit_statements" near line 1
2023-01-13 08:13:39.515 GMT [64820] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_credit_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statements', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statements.account_id, credit_accounts_statements.account_number, credit_accounts_statements.starting_date, credit_accounts_statements.end_date, credit_accounts_statements.amount
	        FROM client.credit_accounts_statements
	        WHERE credit_accounts_statements.account_number = account_number
	        AND credit_accounts_statements.account_id = account_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:13:39.517 GMT [64820] ERROR:  parameter name "account_id" used more than once
2023-01-13 08:13:39.517 GMT [64820] CONTEXT:  compilation of PL/pgSQL function "view_debit_statement" near line 1
2023-01-13 08:13:39.517 GMT [64820] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_debit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed debit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT debit_accounts_statement.account_id, debit_accounts_statement.account_number, debit_accounts_statement.starting_date, debit_accounts_statement.end_date, debit_accounts_statement.amount
	        FROM client.debit_accounts_statement
	        WHERE debit_accounts_statement.account_id = account_id
	        AND debit_accounts_statement.account_number = account_number
	        AND debit_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:13:39.518 GMT [64820] ERROR:  syntax error at or near "INSERT" at character 1028
2023-01-13 08:13:39.518 GMT [64820] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_credit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statement.account_id, credit_accounts_statement.account_number, credit_accounts_statement.starting_date, credit_accounts_statement.end_date, credit_accounts_statement.amount
	        FROM client.credit_accounts_statement
	        WHERE credit_accounts_statement.account_id = account_id
	        AND credit_accounts_statement.account_number = account_number
	        AND credit_accounts_statement.statement_id = statement_id;
	END;
	
	CREATE OR REPLACE FUNCTION client.view_savings_statement(account_id INT, savings_account_id INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statement', CURRENT_DATE);
	    RETURN QUERY
	        SELECT savings_accounts_statement.account_id, savings_accounts_statement.account_number, savings_accounts_statement.starting_date, savings_accounts_statement.end_date, savings_accounts_statement.amount
	        FROM client.savings_accounts_statement
	        WHERE savings_accounts_statement.account_id = account_id
	        AND savings_accounts_statement.account_number = savings_account_id
	        AND savings_accounts_statement.statement_id = statement_id;
	END;
2023-01-13 08:14:22.069 GMT [64781] LOG:  received fast shutdown request
2023-01-13 08:14:22.071 GMT [64781] LOG:  aborting any active transactions
2023-01-13 08:14:22.077 GMT [64781] LOG:  background worker "logical replication launcher" (PID 64788) exited with exit code 1
2023-01-13 08:14:22.078 GMT [64783] LOG:  shutting down
2023-01-13 08:14:22.133 GMT [64781] LOG:  database system is shut down
2023-01-13 08:14:23.546 GMT [65014] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-13 08:14:23.546 GMT [65014] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-13 08:14:23.548 GMT [65014] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-13 08:14:23.553 GMT [65015] LOG:  database system was shut down at 2023-01-13 08:14:23 GMT
2023-01-13 08:14:23.560 GMT [65014] LOG:  database system is ready to accept connections
2023-01-13 08:14:24.444 GMT [65050] ERROR:  column loan.amount does not exist at character 77
2023-01-13 08:14:24.444 GMT [65050] STATEMENT:  CREATE OR REPLACE VIEW client.loans AS
	    SELECT loan.account_id, loan.id, loan.amount, loan.interest_rate, loan.term, loan_application.application_status
	    FROM loan
	    INNER JOIN loan_application ON loan.id = loan_application.loan_id;
2023-01-13 08:14:24.446 GMT [65050] ERROR:  syntax error at or near "DECLARE" at character 541
2023-01-13 08:14:24.446 GMT [65050] STATEMENT:  CREATE OR REPLACE FUNCTION client.update_email(account_identifier INT, new_email TEXT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	BEGIN
	    UPDATE user_login SET email = new_email
	    WHERE account_id = account_identifier;
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Updated email', CURRENT_DATE);
	    passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
	    RETURN passed;
	END;
	
	
	
	CREATE OR REPLACE FUNCTION client.open_debit_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-13 08:14:24.446 GMT [65050] ERROR:  syntax error at or near "INT" at character 30
2023-01-13 08:14:24.446 GMT [65050] STATEMENT:  DECLARE debit_account_number INT;
2023-01-13 08:14:24.446 GMT [65050] ERROR:  syntax error at or near "INT" at character 29
2023-01-13 08:14:24.446 GMT [65050] STATEMENT:  DECLARE next_account_number INT;
2023-01-13 08:14:24.446 GMT [65050] ERROR:  syntax error at or near "SELECT" at character 11
2023-01-13 08:14:24.446 GMT [65050] STATEMENT:  BEGIN
	    SELECT get_next_account_number() INTO next_account_number;
2023-01-13 08:14:24.447 GMT [65050] ERROR:  syntax error at or near "INTO" at character 151
2023-01-13 08:14:24.447 GMT [65050] STATEMENT:  INSERT INTO debit_account (account_number, account_id, current_balance, interest_rate) VALUES (next_account_number ,account_id, 0, 0.01) RETURNING id INTO debit_account_number;
2023-01-13 08:14:24.447 GMT [65050] ERROR:  column "debit_account_id" does not exist at character 118
2023-01-13 08:14:24.447 GMT [65050] STATEMENT:  INSERT INTO debit_statement (starting_date, end_date, amount, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, debit_account_id);
2023-01-13 08:14:24.447 GMT [65050] ERROR:  column "account_id" of relation "debit_overdraft" does not exist at character 79
2023-01-13 08:14:24.447 GMT [65050] STATEMENT:  INSERT INTO debit_overdraft (overdraft_usage, overdraft_limit, interest_rate, account_id) VALUES (0, 0, 0.01, debit_account_id);
2023-01-13 08:14:24.447 GMT [65050] ERROR:  column "account_id" does not exist at character 76
2023-01-13 08:14:24.447 GMT [65050] HINT:  There is a column named "account_id" in table "management_log", but it cannot be referenced from this part of the query.
2023-01-13 08:14:24.447 GMT [65050] STATEMENT:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened debit account', CURRENT_DATE);
2023-01-13 08:14:24.448 GMT [65050] ERROR:  syntax error at or near "passed" at character 1
2023-01-13 08:14:24.448 GMT [65050] STATEMENT:  passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-13 08:14:24.448 GMT [65050] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:14:24.448 GMT [65050] STATEMENT:  RETURN passed;
2023-01-13 08:14:24.448 GMT [65050] WARNING:  there is no transaction in progress
2023-01-13 08:14:24.448 GMT [65050] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_credit_account(account_id INT)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-13 08:14:24.448 GMT [65050] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_credit_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-13 08:14:24.449 GMT [65050] ERROR:  syntax error at or near "INT" at character 31
2023-01-13 08:14:24.449 GMT [65050] STATEMENT:  DECLARE credit_account_number INT;
2023-01-13 08:14:24.449 GMT [65050] ERROR:  syntax error at or near "INT" at character 29
2023-01-13 08:14:24.449 GMT [65050] STATEMENT:  DECLARE next_account_number INT;
2023-01-13 08:14:24.449 GMT [65050] ERROR:  syntax error at or near "SELECT" at character 11
2023-01-13 08:14:24.449 GMT [65050] STATEMENT:  BEGIN
	    SELECT get_next_account_number() INTO next_account_number;
2023-01-13 08:14:24.449 GMT [65050] ERROR:  syntax error at or near "INTO" at character 173
2023-01-13 08:14:24.449 GMT [65050] STATEMENT:  INSERT INTO credit_account (account_number, outstanding_balance, credit_limit, interest_rate, account_id) VALUES (next_account_number ,0, 0, 24.9, account_id) RETURNING id INTO credit_account_id;
2023-01-13 08:14:24.449 GMT [65050] ERROR:  column "account_id" of relation "credit_statement" does not exist at character 107
2023-01-13 08:14:24.449 GMT [65050] STATEMENT:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_id) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_id);
2023-01-13 08:14:24.450 GMT [65050] ERROR:  column "credit_account_id" of relation "credit_account_application" does not exist at character 41
2023-01-13 08:14:24.450 GMT [65050] STATEMENT:  INSERT INTO credit_account_application (credit_account_id, application_status) VALUES (credit_account_id, 'PENDING');
2023-01-13 08:14:24.450 GMT [65050] ERROR:  column "account_id" does not exist at character 76
2023-01-13 08:14:24.450 GMT [65050] HINT:  There is a column named "account_id" in table "management_log", but it cannot be referenced from this part of the query.
2023-01-13 08:14:24.450 GMT [65050] STATEMENT:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened credit account', CURRENT_DATE);
2023-01-13 08:14:24.450 GMT [65050] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_savings_account(account_id INT)
	RETURNS BOOLEAN AS $$" at character 5
2023-01-13 08:14:24.450 GMT [65050] STATEMENT:  END
	$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_savings_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-13 08:14:24.451 GMT [65050] ERROR:  syntax error at or near "INT" at character 28
2023-01-13 08:14:24.451 GMT [65050] STATEMENT:  DECLARE savings_account_id INT;
2023-01-13 08:14:24.451 GMT [65050] ERROR:  syntax error at or near "INT" at character 29
2023-01-13 08:14:24.451 GMT [65050] STATEMENT:  DECLARE next_account_number INT;
2023-01-13 08:14:24.451 GMT [65050] ERROR:  syntax error at or near "SELECT" at character 11
2023-01-13 08:14:24.451 GMT [65050] STATEMENT:  BEGIN
	    SELECT get_next_account_number() INTO next_account_number;
2023-01-13 08:14:24.452 GMT [65050] ERROR:  syntax error at or near "INTO" at character 153
2023-01-13 08:14:24.452 GMT [65050] STATEMENT:  INSERT INTO savings_account (account_number, account_id, current_balance, interest_rate) VALUES (next_account_number ,account_id, 0, 0.01) RETURNING id INTO savings_account_id;
2023-01-13 08:14:24.452 GMT [65050] ERROR:  column "account_id" of relation "savings_statement" does not exist at character 65
2023-01-13 08:14:24.452 GMT [65050] STATEMENT:  INSERT INTO savings_statement (starting_date, end_date, amount, account_id) VALUES (CURRENT_DATE, CURRENT_DATE, 0, savings_account_id);
2023-01-13 08:14:24.453 GMT [65050] ERROR:  column "account_id" does not exist at character 76
2023-01-13 08:14:24.453 GMT [65050] HINT:  There is a column named "account_id" in table "management_log", but it cannot be referenced from this part of the query.
2023-01-13 08:14:24.453 GMT [65050] STATEMENT:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened savings account', CURRENT_DATE);
2023-01-13 08:14:24.453 GMT [65050] ERROR:  relation "external_account" does not exist at character 13
2023-01-13 08:14:24.453 GMT [65050] STATEMENT:  INSERT INTO external_account (account_id, external_account_number) VALUES (savings_account_id, '12345678');
2023-01-13 08:14:24.453 GMT [65050] ERROR:  syntax error at or near "passed" at character 1
2023-01-13 08:14:24.453 GMT [65050] STATEMENT:  passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-13 08:14:24.454 GMT [65050] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:14:24.454 GMT [65050] STATEMENT:  RETURN passed;
2023-01-13 08:14:24.454 GMT [65050] WARNING:  there is no transaction in progress
2023-01-13 08:14:24.454 GMT [65050] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_loan(account_id INT, loan_amount INT, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-13 08:14:24.454 GMT [65050] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_loan(account_id INT, loan_amount INT, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-13 08:14:24.454 GMT [65050] ERROR:  syntax error at or near "INT" at character 17
2023-01-13 08:14:24.454 GMT [65050] STATEMENT:  DECLARE loan_id INT;
2023-01-13 08:14:24.455 GMT [65050] ERROR:  syntax error at or near "INSERT" at character 11
2023-01-13 08:14:24.455 GMT [65050] STATEMENT:  BEGIN
	    INSERT INTO loan (account_id, loan_amount, loan_end_date, loan_type, loan_interest_rate) VALUES (account_id, loan_amount, loan_end_date, loan_type, loan_interest_rate) RETURNING id INTO loan_id;
2023-01-13 08:14:24.455 GMT [65050] ERROR:  column "end_date" of relation "loan_statement" does not exist at character 44
2023-01-13 08:14:24.455 GMT [65050] STATEMENT:  INSERT INTO loan_statement (starting_date, end_date, amount, account_id) VALUES (CURRENT_DATE, CURRENT_DATE, 0, loan_id);
2023-01-13 08:14:24.455 GMT [65050] ERROR:  column "loan_id" does not exist at character 68
2023-01-13 08:14:24.455 GMT [65050] HINT:  There is a column named "loan_id" in table "loan_application", but it cannot be referenced from this part of the query.
2023-01-13 08:14:24.455 GMT [65050] STATEMENT:  INSERT INTO loan_application (loan_id, application_status) VALUES (loan_id, 'PENDING');
2023-01-13 08:14:24.456 GMT [65050] ERROR:  column "account_id" does not exist at character 76
2023-01-13 08:14:24.456 GMT [65050] HINT:  There is a column named "account_id" in table "management_log", but it cannot be referenced from this part of the query.
2023-01-13 08:14:24.456 GMT [65050] STATEMENT:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened loan', CURRENT_DATE);
2023-01-13 08:14:24.456 GMT [65050] ERROR:  syntax error at or near "passed" at character 1
2023-01-13 08:14:24.456 GMT [65050] STATEMENT:  passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-13 08:14:24.456 GMT [65050] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:14:24.456 GMT [65050] STATEMENT:  RETURN passed;
2023-01-13 08:14:24.456 GMT [65050] WARNING:  there is no transaction in progress
2023-01-13 08:14:24.456 GMT [65050] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.get_account_type(account_number INT)
	RETURNS TEXT AS $$" at character 1
2023-01-13 08:14:24.456 GMT [65050] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.get_account_type(account_number INT)
	RETURNS TEXT AS $$
	DECLARE account_type TEXT;
2023-01-13 08:14:24.457 GMT [65050] ERROR:  syntax error at or near "SELECT" at character 11
2023-01-13 08:14:24.457 GMT [65050] STATEMENT:  BEGIN
	    SELECT CASE WHEN EXISTS (SELECT * FROM debit_account WHERE account_number = account_number) THEN 'DEBIT'
	                WHEN EXISTS (SELECT * FROM credit_account WHERE account_number = account_number) THEN 'CREDIT'
	                WHEN EXISTS (SELECT * FROM savings_account WHERE account_number = account_number) THEN 'SAVINGS'
	                ELSE 'UNKNOWN' END INTO account_type;
2023-01-13 08:14:24.457 GMT [65050] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:14:24.457 GMT [65050] STATEMENT:  RETURN account_type;
2023-01-13 08:14:24.457 GMT [65050] WARNING:  there is no transaction in progress
2023-01-13 08:14:24.458 GMT [65050] ERROR:  syntax error at or near "END" at character 644
2023-01-13 08:14:24.458 GMT [65050] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_accounts(account_id INT)
	RETURNS TABLE (account_number INT) AS $$
	
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed accounts', CURRENT_DATE);
	    RETURN QUERY
	        SELECT account.*, COALESCE(debit_accounts.current_balance, credit_accounts.outstanding_balance, savings_accounts.current_balance, loans.loan_amount) AS balance,
	        COALESCE(debit_accounts.interest_rate, credit_accounts.interest_rate, savings_accounts.interest_rate, loans.loan_interest_rate) AS interest_rate,
	        get_account_type(account.account_number) AS account_type
	
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:14:24.459 GMT [65050] ERROR:  syntax error at or near "," at character 205
2023-01-13 08:14:24.459 GMT [65050] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_debit_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, overdraft_limit NUMERIC, overdraft_usage NUMERIC, interest_rate, external_account_number INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed debit accounts', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT * FROM client.debit_accounts WHERE account_id = account_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:14:24.465 GMT [65050] ERROR:  parameter name "account_id" used more than once
2023-01-13 08:14:24.465 GMT [65050] CONTEXT:  compilation of PL/pgSQL function "view_savings_statements" near line 1
2023-01-13 08:14:24.465 GMT [65050] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_savings_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statements', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT savings_accounts_statements.account_id, savings_accounts_statements.account_number, savings_accounts_statements.starting_date, savings_accounts_statements.end_date, savings_accounts_statements.amount
	        FROM client.savings_accounts_statements
	        WHERE savings_accounts_statements.account_number = account_number
	        AND savings_accounts_statements.account_id = account_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:14:24.466 GMT [65050] ERROR:  parameter name "account_id" used more than once
2023-01-13 08:14:24.466 GMT [65050] CONTEXT:  compilation of PL/pgSQL function "view_debit_statements" near line 1
2023-01-13 08:14:24.466 GMT [65050] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_debit_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed debit statements', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT debit_accounts_statements.account_id, debit_accounts_statements.account_number, debit_accounts_statements.starting_date, debit_accounts_statements.end_date, debit_accounts_statements.amount
	        FROM client.debit_accounts_statements
	        WHERE debit_accounts_statements.account_number = account_number
	        AND debit_accounts_statements.account_id = account_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:14:24.467 GMT [65050] ERROR:  parameter name "account_id" used more than once
2023-01-13 08:14:24.467 GMT [65050] CONTEXT:  compilation of PL/pgSQL function "view_credit_statements" near line 1
2023-01-13 08:14:24.467 GMT [65050] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_credit_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statements', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statements.account_id, credit_accounts_statements.account_number, credit_accounts_statements.starting_date, credit_accounts_statements.end_date, credit_accounts_statements.amount
	        FROM client.credit_accounts_statements
	        WHERE credit_accounts_statements.account_number = account_number
	        AND credit_accounts_statements.account_id = account_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:14:24.468 GMT [65050] ERROR:  parameter name "account_id" used more than once
2023-01-13 08:14:24.468 GMT [65050] CONTEXT:  compilation of PL/pgSQL function "view_debit_statement" near line 1
2023-01-13 08:14:24.468 GMT [65050] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_debit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed debit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT debit_accounts_statement.account_id, debit_accounts_statement.account_number, debit_accounts_statement.starting_date, debit_accounts_statement.end_date, debit_accounts_statement.amount
	        FROM client.debit_accounts_statement
	        WHERE debit_accounts_statement.account_id = account_id
	        AND debit_accounts_statement.account_number = account_number
	        AND debit_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:14:24.470 GMT [65050] ERROR:  syntax error at or near "INSERT" at character 1028
2023-01-13 08:14:24.470 GMT [65050] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_credit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statement.account_id, credit_accounts_statement.account_number, credit_accounts_statement.starting_date, credit_accounts_statement.end_date, credit_accounts_statement.amount
	        FROM client.credit_accounts_statement
	        WHERE credit_accounts_statement.account_id = account_id
	        AND credit_accounts_statement.account_number = account_number
	        AND credit_accounts_statement.statement_id = statement_id;
	END;
	
	CREATE OR REPLACE FUNCTION client.view_savings_statement(account_id INT, savings_account_id INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statement', CURRENT_DATE);
	    RETURN QUERY
	        SELECT savings_accounts_statement.account_id, savings_accounts_statement.account_number, savings_accounts_statement.starting_date, savings_accounts_statement.end_date, savings_accounts_statement.amount
	        FROM client.savings_accounts_statement
	        WHERE savings_accounts_statement.account_id = account_id
	        AND savings_accounts_statement.account_number = savings_account_id
	        AND savings_accounts_statement.statement_id = statement_id;
	END;
2023-01-13 08:15:47.557 GMT [65014] LOG:  received fast shutdown request
2023-01-13 08:15:47.560 GMT [65014] LOG:  aborting any active transactions
2023-01-13 08:15:47.567 GMT [65014] LOG:  background worker "logical replication launcher" (PID 65021) exited with exit code 1
2023-01-13 08:15:47.567 GMT [65016] LOG:  shutting down
2023-01-13 08:15:47.680 GMT [65014] LOG:  database system is shut down
2023-01-13 08:15:49.229 GMT [65409] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-13 08:15:49.230 GMT [65409] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-13 08:15:49.232 GMT [65409] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-13 08:15:49.243 GMT [65410] LOG:  database system was shut down at 2023-01-13 08:15:48 GMT
2023-01-13 08:15:49.249 GMT [65409] LOG:  database system is ready to accept connections
2023-01-13 08:15:50.319 GMT [65448] ERROR:  column loan.term does not exist at character 126
2023-01-13 08:15:50.319 GMT [65448] STATEMENT:  CREATE OR REPLACE VIEW client.loans AS
	    SELECT loan.account_id, loan.id, loan.amount, loan.interest_rate, loan.loan_type, loan.term, loan_application.application_status
	    FROM loan
	    INNER JOIN loan_application ON loan.id = loan_application.loan_id;
2023-01-13 08:15:50.323 GMT [65448] ERROR:  syntax error at or near "DECLARE" at character 541
2023-01-13 08:15:50.323 GMT [65448] STATEMENT:  CREATE OR REPLACE FUNCTION client.update_email(account_identifier INT, new_email TEXT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	BEGIN
	    UPDATE user_login SET email = new_email
	    WHERE account_id = account_identifier;
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Updated email', CURRENT_DATE);
	    passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
	    RETURN passed;
	END;
	
	
	
	CREATE OR REPLACE FUNCTION client.open_debit_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-13 08:15:50.324 GMT [65448] ERROR:  syntax error at or near "INT" at character 30
2023-01-13 08:15:50.324 GMT [65448] STATEMENT:  DECLARE debit_account_number INT;
2023-01-13 08:15:50.325 GMT [65448] ERROR:  syntax error at or near "INT" at character 29
2023-01-13 08:15:50.325 GMT [65448] STATEMENT:  DECLARE next_account_number INT;
2023-01-13 08:15:50.326 GMT [65448] ERROR:  syntax error at or near "SELECT" at character 11
2023-01-13 08:15:50.326 GMT [65448] STATEMENT:  BEGIN
	    SELECT get_next_account_number() INTO next_account_number;
2023-01-13 08:15:50.326 GMT [65448] ERROR:  syntax error at or near "INTO" at character 151
2023-01-13 08:15:50.326 GMT [65448] STATEMENT:  INSERT INTO debit_account (account_number, account_id, current_balance, interest_rate) VALUES (next_account_number ,account_id, 0, 0.01) RETURNING id INTO debit_account_number;
2023-01-13 08:15:50.327 GMT [65448] ERROR:  column "debit_account_id" does not exist at character 118
2023-01-13 08:15:50.327 GMT [65448] STATEMENT:  INSERT INTO debit_statement (starting_date, end_date, amount, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, debit_account_id);
2023-01-13 08:15:50.327 GMT [65448] ERROR:  column "account_id" of relation "debit_overdraft" does not exist at character 79
2023-01-13 08:15:50.327 GMT [65448] STATEMENT:  INSERT INTO debit_overdraft (overdraft_usage, overdraft_limit, interest_rate, account_id) VALUES (0, 0, 0.01, debit_account_id);
2023-01-13 08:15:50.328 GMT [65448] ERROR:  column "account_id" does not exist at character 76
2023-01-13 08:15:50.328 GMT [65448] HINT:  There is a column named "account_id" in table "management_log", but it cannot be referenced from this part of the query.
2023-01-13 08:15:50.328 GMT [65448] STATEMENT:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened debit account', CURRENT_DATE);
2023-01-13 08:15:50.328 GMT [65448] ERROR:  syntax error at or near "passed" at character 1
2023-01-13 08:15:50.328 GMT [65448] STATEMENT:  passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-13 08:15:50.328 GMT [65448] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:15:50.328 GMT [65448] STATEMENT:  RETURN passed;
2023-01-13 08:15:50.329 GMT [65448] WARNING:  there is no transaction in progress
2023-01-13 08:15:50.329 GMT [65448] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_credit_account(account_id INT)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-13 08:15:50.329 GMT [65448] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_credit_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-13 08:15:50.329 GMT [65448] ERROR:  syntax error at or near "INT" at character 31
2023-01-13 08:15:50.329 GMT [65448] STATEMENT:  DECLARE credit_account_number INT;
2023-01-13 08:15:50.329 GMT [65448] ERROR:  syntax error at or near "INT" at character 29
2023-01-13 08:15:50.329 GMT [65448] STATEMENT:  DECLARE next_account_number INT;
2023-01-13 08:15:50.330 GMT [65448] ERROR:  syntax error at or near "SELECT" at character 11
2023-01-13 08:15:50.330 GMT [65448] STATEMENT:  BEGIN
	    SELECT get_next_account_number() INTO next_account_number;
2023-01-13 08:15:50.330 GMT [65448] ERROR:  syntax error at or near "INTO" at character 173
2023-01-13 08:15:50.330 GMT [65448] STATEMENT:  INSERT INTO credit_account (account_number, outstanding_balance, credit_limit, interest_rate, account_id) VALUES (next_account_number ,0, 0, 24.9, account_id) RETURNING id INTO credit_account_id;
2023-01-13 08:15:50.330 GMT [65448] ERROR:  column "account_id" of relation "credit_statement" does not exist at character 107
2023-01-13 08:15:50.330 GMT [65448] STATEMENT:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_id) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_id);
2023-01-13 08:15:50.331 GMT [65448] ERROR:  column "credit_account_id" of relation "credit_account_application" does not exist at character 41
2023-01-13 08:15:50.331 GMT [65448] STATEMENT:  INSERT INTO credit_account_application (credit_account_id, application_status) VALUES (credit_account_id, 'PENDING');
2023-01-13 08:15:50.331 GMT [65448] ERROR:  column "account_id" does not exist at character 76
2023-01-13 08:15:50.331 GMT [65448] HINT:  There is a column named "account_id" in table "management_log", but it cannot be referenced from this part of the query.
2023-01-13 08:15:50.331 GMT [65448] STATEMENT:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened credit account', CURRENT_DATE);
2023-01-13 08:15:50.332 GMT [65448] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_savings_account(account_id INT)
	RETURNS BOOLEAN AS $$" at character 5
2023-01-13 08:15:50.332 GMT [65448] STATEMENT:  END
	$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_savings_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-13 08:15:50.332 GMT [65448] ERROR:  syntax error at or near "INT" at character 28
2023-01-13 08:15:50.332 GMT [65448] STATEMENT:  DECLARE savings_account_id INT;
2023-01-13 08:15:50.332 GMT [65448] ERROR:  syntax error at or near "INT" at character 29
2023-01-13 08:15:50.332 GMT [65448] STATEMENT:  DECLARE next_account_number INT;
2023-01-13 08:15:50.333 GMT [65448] ERROR:  syntax error at or near "SELECT" at character 11
2023-01-13 08:15:50.333 GMT [65448] STATEMENT:  BEGIN
	    SELECT get_next_account_number() INTO next_account_number;
2023-01-13 08:15:50.333 GMT [65448] ERROR:  syntax error at or near "INTO" at character 153
2023-01-13 08:15:50.333 GMT [65448] STATEMENT:  INSERT INTO savings_account (account_number, account_id, current_balance, interest_rate) VALUES (next_account_number ,account_id, 0, 0.01) RETURNING id INTO savings_account_id;
2023-01-13 08:15:50.333 GMT [65448] ERROR:  column "account_id" of relation "savings_statement" does not exist at character 65
2023-01-13 08:15:50.333 GMT [65448] STATEMENT:  INSERT INTO savings_statement (starting_date, end_date, amount, account_id) VALUES (CURRENT_DATE, CURRENT_DATE, 0, savings_account_id);
2023-01-13 08:15:50.334 GMT [65448] ERROR:  column "account_id" does not exist at character 76
2023-01-13 08:15:50.334 GMT [65448] HINT:  There is a column named "account_id" in table "management_log", but it cannot be referenced from this part of the query.
2023-01-13 08:15:50.334 GMT [65448] STATEMENT:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened savings account', CURRENT_DATE);
2023-01-13 08:15:50.334 GMT [65448] ERROR:  relation "external_account" does not exist at character 13
2023-01-13 08:15:50.334 GMT [65448] STATEMENT:  INSERT INTO external_account (account_id, external_account_number) VALUES (savings_account_id, '12345678');
2023-01-13 08:15:50.334 GMT [65448] ERROR:  syntax error at or near "passed" at character 1
2023-01-13 08:15:50.334 GMT [65448] STATEMENT:  passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-13 08:15:50.335 GMT [65448] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:15:50.335 GMT [65448] STATEMENT:  RETURN passed;
2023-01-13 08:15:50.335 GMT [65448] WARNING:  there is no transaction in progress
2023-01-13 08:15:50.335 GMT [65448] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_loan(account_id INT, loan_amount INT, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-13 08:15:50.335 GMT [65448] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_loan(account_id INT, loan_amount INT, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-13 08:15:50.336 GMT [65448] ERROR:  syntax error at or near "INT" at character 17
2023-01-13 08:15:50.336 GMT [65448] STATEMENT:  DECLARE loan_id INT;
2023-01-13 08:15:50.336 GMT [65448] ERROR:  syntax error at or near "INSERT" at character 11
2023-01-13 08:15:50.336 GMT [65448] STATEMENT:  BEGIN
	    INSERT INTO loan (account_id, loan_amount, loan_end_date, loan_type, loan_interest_rate) VALUES (account_id, loan_amount, loan_end_date, loan_type, loan_interest_rate) RETURNING id INTO loan_id;
2023-01-13 08:15:50.336 GMT [65448] ERROR:  column "end_date" of relation "loan_statement" does not exist at character 44
2023-01-13 08:15:50.336 GMT [65448] STATEMENT:  INSERT INTO loan_statement (starting_date, end_date, amount, account_id) VALUES (CURRENT_DATE, CURRENT_DATE, 0, loan_id);
2023-01-13 08:15:50.337 GMT [65448] ERROR:  column "loan_id" does not exist at character 68
2023-01-13 08:15:50.337 GMT [65448] HINT:  There is a column named "loan_id" in table "loan_application", but it cannot be referenced from this part of the query.
2023-01-13 08:15:50.337 GMT [65448] STATEMENT:  INSERT INTO loan_application (loan_id, application_status) VALUES (loan_id, 'PENDING');
2023-01-13 08:15:50.337 GMT [65448] ERROR:  column "account_id" does not exist at character 76
2023-01-13 08:15:50.337 GMT [65448] HINT:  There is a column named "account_id" in table "management_log", but it cannot be referenced from this part of the query.
2023-01-13 08:15:50.337 GMT [65448] STATEMENT:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened loan', CURRENT_DATE);
2023-01-13 08:15:50.337 GMT [65448] ERROR:  syntax error at or near "passed" at character 1
2023-01-13 08:15:50.337 GMT [65448] STATEMENT:  passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-13 08:15:50.338 GMT [65448] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:15:50.338 GMT [65448] STATEMENT:  RETURN passed;
2023-01-13 08:15:50.338 GMT [65448] WARNING:  there is no transaction in progress
2023-01-13 08:15:50.338 GMT [65448] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.get_account_type(account_number INT)
	RETURNS TEXT AS $$" at character 1
2023-01-13 08:15:50.338 GMT [65448] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.get_account_type(account_number INT)
	RETURNS TEXT AS $$
	DECLARE account_type TEXT;
2023-01-13 08:15:50.338 GMT [65448] ERROR:  syntax error at or near "SELECT" at character 11
2023-01-13 08:15:50.338 GMT [65448] STATEMENT:  BEGIN
	    SELECT CASE WHEN EXISTS (SELECT * FROM debit_account WHERE account_number = account_number) THEN 'DEBIT'
	                WHEN EXISTS (SELECT * FROM credit_account WHERE account_number = account_number) THEN 'CREDIT'
	                WHEN EXISTS (SELECT * FROM savings_account WHERE account_number = account_number) THEN 'SAVINGS'
	                ELSE 'UNKNOWN' END INTO account_type;
2023-01-13 08:15:50.339 GMT [65448] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:15:50.339 GMT [65448] STATEMENT:  RETURN account_type;
2023-01-13 08:15:50.339 GMT [65448] WARNING:  there is no transaction in progress
2023-01-13 08:15:50.341 GMT [65448] ERROR:  syntax error at or near "END" at character 644
2023-01-13 08:15:50.341 GMT [65448] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_accounts(account_id INT)
	RETURNS TABLE (account_number INT) AS $$
	
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed accounts', CURRENT_DATE);
	    RETURN QUERY
	        SELECT account.*, COALESCE(debit_accounts.current_balance, credit_accounts.outstanding_balance, savings_accounts.current_balance, loans.loan_amount) AS balance,
	        COALESCE(debit_accounts.interest_rate, credit_accounts.interest_rate, savings_accounts.interest_rate, loans.loan_interest_rate) AS interest_rate,
	        get_account_type(account.account_number) AS account_type
	
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:15:50.341 GMT [65448] ERROR:  syntax error at or near "," at character 205
2023-01-13 08:15:50.341 GMT [65448] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_debit_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, overdraft_limit NUMERIC, overdraft_usage NUMERIC, interest_rate, external_account_number INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed debit accounts', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT * FROM client.debit_accounts WHERE account_id = account_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:15:50.352 GMT [65448] ERROR:  parameter name "account_id" used more than once
2023-01-13 08:15:50.352 GMT [65448] CONTEXT:  compilation of PL/pgSQL function "view_savings_statements" near line 1
2023-01-13 08:15:50.352 GMT [65448] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_savings_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statements', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT savings_accounts_statements.account_id, savings_accounts_statements.account_number, savings_accounts_statements.starting_date, savings_accounts_statements.end_date, savings_accounts_statements.amount
	        FROM client.savings_accounts_statements
	        WHERE savings_accounts_statements.account_number = account_number
	        AND savings_accounts_statements.account_id = account_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:15:50.354 GMT [65448] ERROR:  parameter name "account_id" used more than once
2023-01-13 08:15:50.354 GMT [65448] CONTEXT:  compilation of PL/pgSQL function "view_debit_statements" near line 1
2023-01-13 08:15:50.354 GMT [65448] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_debit_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed debit statements', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT debit_accounts_statements.account_id, debit_accounts_statements.account_number, debit_accounts_statements.starting_date, debit_accounts_statements.end_date, debit_accounts_statements.amount
	        FROM client.debit_accounts_statements
	        WHERE debit_accounts_statements.account_number = account_number
	        AND debit_accounts_statements.account_id = account_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:15:50.356 GMT [65448] ERROR:  parameter name "account_id" used more than once
2023-01-13 08:15:50.356 GMT [65448] CONTEXT:  compilation of PL/pgSQL function "view_credit_statements" near line 1
2023-01-13 08:15:50.356 GMT [65448] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_credit_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statements', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statements.account_id, credit_accounts_statements.account_number, credit_accounts_statements.starting_date, credit_accounts_statements.end_date, credit_accounts_statements.amount
	        FROM client.credit_accounts_statements
	        WHERE credit_accounts_statements.account_number = account_number
	        AND credit_accounts_statements.account_id = account_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:15:50.357 GMT [65448] ERROR:  parameter name "account_id" used more than once
2023-01-13 08:15:50.357 GMT [65448] CONTEXT:  compilation of PL/pgSQL function "view_debit_statement" near line 1
2023-01-13 08:15:50.357 GMT [65448] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_debit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed debit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT debit_accounts_statement.account_id, debit_accounts_statement.account_number, debit_accounts_statement.starting_date, debit_accounts_statement.end_date, debit_accounts_statement.amount
	        FROM client.debit_accounts_statement
	        WHERE debit_accounts_statement.account_id = account_id
	        AND debit_accounts_statement.account_number = account_number
	        AND debit_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:15:50.358 GMT [65448] ERROR:  syntax error at or near "INSERT" at character 1028
2023-01-13 08:15:50.358 GMT [65448] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_credit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statement.account_id, credit_accounts_statement.account_number, credit_accounts_statement.starting_date, credit_accounts_statement.end_date, credit_accounts_statement.amount
	        FROM client.credit_accounts_statement
	        WHERE credit_accounts_statement.account_id = account_id
	        AND credit_accounts_statement.account_number = account_number
	        AND credit_accounts_statement.statement_id = statement_id;
	END;
	
	CREATE OR REPLACE FUNCTION client.view_savings_statement(account_id INT, savings_account_id INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statement', CURRENT_DATE);
	    RETURN QUERY
	        SELECT savings_accounts_statement.account_id, savings_accounts_statement.account_number, savings_accounts_statement.starting_date, savings_accounts_statement.end_date, savings_accounts_statement.amount
	        FROM client.savings_accounts_statement
	        WHERE savings_accounts_statement.account_id = account_id
	        AND savings_accounts_statement.account_number = savings_account_id
	        AND savings_accounts_statement.statement_id = statement_id;
	END;
2023-01-13 08:16:08.476 GMT [65409] LOG:  received fast shutdown request
2023-01-13 08:16:08.478 GMT [65409] LOG:  aborting any active transactions
2023-01-13 08:16:08.483 GMT [65409] LOG:  background worker "logical replication launcher" (PID 65416) exited with exit code 1
2023-01-13 08:16:08.486 GMT [65411] LOG:  shutting down
2023-01-13 08:16:08.547 GMT [65409] LOG:  database system is shut down
2023-01-13 08:16:09.943 GMT [65580] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-13 08:16:09.943 GMT [65580] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-13 08:16:09.945 GMT [65580] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-13 08:16:09.950 GMT [65581] LOG:  database system was shut down at 2023-01-13 08:16:09 GMT
2023-01-13 08:16:09.956 GMT [65580] LOG:  database system is ready to accept connections
2023-01-13 08:16:10.898 GMT [65619] ERROR:  syntax error at or near "DECLARE" at character 541
2023-01-13 08:16:10.898 GMT [65619] STATEMENT:  CREATE OR REPLACE FUNCTION client.update_email(account_identifier INT, new_email TEXT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	BEGIN
	    UPDATE user_login SET email = new_email
	    WHERE account_id = account_identifier;
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Updated email', CURRENT_DATE);
	    passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
	    RETURN passed;
	END;
	
	
	
	CREATE OR REPLACE FUNCTION client.open_debit_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-13 08:16:10.899 GMT [65619] ERROR:  syntax error at or near "INT" at character 30
2023-01-13 08:16:10.899 GMT [65619] STATEMENT:  DECLARE debit_account_number INT;
2023-01-13 08:16:10.899 GMT [65619] ERROR:  syntax error at or near "INT" at character 29
2023-01-13 08:16:10.899 GMT [65619] STATEMENT:  DECLARE next_account_number INT;
2023-01-13 08:16:10.899 GMT [65619] ERROR:  syntax error at or near "SELECT" at character 11
2023-01-13 08:16:10.899 GMT [65619] STATEMENT:  BEGIN
	    SELECT get_next_account_number() INTO next_account_number;
2023-01-13 08:16:10.900 GMT [65619] ERROR:  syntax error at or near "INTO" at character 151
2023-01-13 08:16:10.900 GMT [65619] STATEMENT:  INSERT INTO debit_account (account_number, account_id, current_balance, interest_rate) VALUES (next_account_number ,account_id, 0, 0.01) RETURNING id INTO debit_account_number;
2023-01-13 08:16:10.900 GMT [65619] ERROR:  column "debit_account_id" does not exist at character 118
2023-01-13 08:16:10.900 GMT [65619] STATEMENT:  INSERT INTO debit_statement (starting_date, end_date, amount, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, debit_account_id);
2023-01-13 08:16:10.901 GMT [65619] ERROR:  column "account_id" of relation "debit_overdraft" does not exist at character 79
2023-01-13 08:16:10.901 GMT [65619] STATEMENT:  INSERT INTO debit_overdraft (overdraft_usage, overdraft_limit, interest_rate, account_id) VALUES (0, 0, 0.01, debit_account_id);
2023-01-13 08:16:10.902 GMT [65619] ERROR:  column "account_id" does not exist at character 76
2023-01-13 08:16:10.902 GMT [65619] HINT:  There is a column named "account_id" in table "management_log", but it cannot be referenced from this part of the query.
2023-01-13 08:16:10.902 GMT [65619] STATEMENT:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened debit account', CURRENT_DATE);
2023-01-13 08:16:10.904 GMT [65619] ERROR:  syntax error at or near "passed" at character 1
2023-01-13 08:16:10.904 GMT [65619] STATEMENT:  passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-13 08:16:10.905 GMT [65619] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:16:10.905 GMT [65619] STATEMENT:  RETURN passed;
2023-01-13 08:16:10.905 GMT [65619] WARNING:  there is no transaction in progress
2023-01-13 08:16:10.906 GMT [65619] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_credit_account(account_id INT)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-13 08:16:10.906 GMT [65619] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_credit_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-13 08:16:10.906 GMT [65619] ERROR:  syntax error at or near "INT" at character 31
2023-01-13 08:16:10.906 GMT [65619] STATEMENT:  DECLARE credit_account_number INT;
2023-01-13 08:16:10.907 GMT [65619] ERROR:  syntax error at or near "INT" at character 29
2023-01-13 08:16:10.907 GMT [65619] STATEMENT:  DECLARE next_account_number INT;
2023-01-13 08:16:10.907 GMT [65619] ERROR:  syntax error at or near "SELECT" at character 11
2023-01-13 08:16:10.907 GMT [65619] STATEMENT:  BEGIN
	    SELECT get_next_account_number() INTO next_account_number;
2023-01-13 08:16:10.908 GMT [65619] ERROR:  syntax error at or near "INTO" at character 173
2023-01-13 08:16:10.908 GMT [65619] STATEMENT:  INSERT INTO credit_account (account_number, outstanding_balance, credit_limit, interest_rate, account_id) VALUES (next_account_number ,0, 0, 24.9, account_id) RETURNING id INTO credit_account_id;
2023-01-13 08:16:10.908 GMT [65619] ERROR:  column "account_id" of relation "credit_statement" does not exist at character 107
2023-01-13 08:16:10.908 GMT [65619] STATEMENT:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_id) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_id);
2023-01-13 08:16:10.908 GMT [65619] ERROR:  column "credit_account_id" of relation "credit_account_application" does not exist at character 41
2023-01-13 08:16:10.908 GMT [65619] STATEMENT:  INSERT INTO credit_account_application (credit_account_id, application_status) VALUES (credit_account_id, 'PENDING');
2023-01-13 08:16:10.909 GMT [65619] ERROR:  column "account_id" does not exist at character 76
2023-01-13 08:16:10.909 GMT [65619] HINT:  There is a column named "account_id" in table "management_log", but it cannot be referenced from this part of the query.
2023-01-13 08:16:10.909 GMT [65619] STATEMENT:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened credit account', CURRENT_DATE);
2023-01-13 08:16:10.909 GMT [65619] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_savings_account(account_id INT)
	RETURNS BOOLEAN AS $$" at character 5
2023-01-13 08:16:10.909 GMT [65619] STATEMENT:  END
	$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_savings_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-13 08:16:10.910 GMT [65619] ERROR:  syntax error at or near "INT" at character 28
2023-01-13 08:16:10.910 GMT [65619] STATEMENT:  DECLARE savings_account_id INT;
2023-01-13 08:16:10.910 GMT [65619] ERROR:  syntax error at or near "INT" at character 29
2023-01-13 08:16:10.910 GMT [65619] STATEMENT:  DECLARE next_account_number INT;
2023-01-13 08:16:10.911 GMT [65619] ERROR:  syntax error at or near "SELECT" at character 11
2023-01-13 08:16:10.911 GMT [65619] STATEMENT:  BEGIN
	    SELECT get_next_account_number() INTO next_account_number;
2023-01-13 08:16:10.911 GMT [65619] ERROR:  syntax error at or near "INTO" at character 153
2023-01-13 08:16:10.911 GMT [65619] STATEMENT:  INSERT INTO savings_account (account_number, account_id, current_balance, interest_rate) VALUES (next_account_number ,account_id, 0, 0.01) RETURNING id INTO savings_account_id;
2023-01-13 08:16:10.912 GMT [65619] ERROR:  column "account_id" of relation "savings_statement" does not exist at character 65
2023-01-13 08:16:10.912 GMT [65619] STATEMENT:  INSERT INTO savings_statement (starting_date, end_date, amount, account_id) VALUES (CURRENT_DATE, CURRENT_DATE, 0, savings_account_id);
2023-01-13 08:16:10.912 GMT [65619] ERROR:  column "account_id" does not exist at character 76
2023-01-13 08:16:10.912 GMT [65619] HINT:  There is a column named "account_id" in table "management_log", but it cannot be referenced from this part of the query.
2023-01-13 08:16:10.912 GMT [65619] STATEMENT:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened savings account', CURRENT_DATE);
2023-01-13 08:16:10.912 GMT [65619] ERROR:  relation "external_account" does not exist at character 13
2023-01-13 08:16:10.912 GMT [65619] STATEMENT:  INSERT INTO external_account (account_id, external_account_number) VALUES (savings_account_id, '12345678');
2023-01-13 08:16:10.913 GMT [65619] ERROR:  syntax error at or near "passed" at character 1
2023-01-13 08:16:10.913 GMT [65619] STATEMENT:  passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-13 08:16:10.913 GMT [65619] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:16:10.913 GMT [65619] STATEMENT:  RETURN passed;
2023-01-13 08:16:10.914 GMT [65619] WARNING:  there is no transaction in progress
2023-01-13 08:16:10.914 GMT [65619] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_loan(account_id INT, loan_amount INT, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-13 08:16:10.914 GMT [65619] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_loan(account_id INT, loan_amount INT, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-13 08:16:10.914 GMT [65619] ERROR:  syntax error at or near "INT" at character 17
2023-01-13 08:16:10.914 GMT [65619] STATEMENT:  DECLARE loan_id INT;
2023-01-13 08:16:10.914 GMT [65619] ERROR:  syntax error at or near "INSERT" at character 11
2023-01-13 08:16:10.914 GMT [65619] STATEMENT:  BEGIN
	    INSERT INTO loan (account_id, loan_amount, loan_end_date, loan_type, loan_interest_rate) VALUES (account_id, loan_amount, loan_end_date, loan_type, loan_interest_rate) RETURNING id INTO loan_id;
2023-01-13 08:16:10.915 GMT [65619] ERROR:  column "end_date" of relation "loan_statement" does not exist at character 44
2023-01-13 08:16:10.915 GMT [65619] STATEMENT:  INSERT INTO loan_statement (starting_date, end_date, amount, account_id) VALUES (CURRENT_DATE, CURRENT_DATE, 0, loan_id);
2023-01-13 08:16:10.916 GMT [65619] ERROR:  column "loan_id" does not exist at character 68
2023-01-13 08:16:10.916 GMT [65619] HINT:  There is a column named "loan_id" in table "loan_application", but it cannot be referenced from this part of the query.
2023-01-13 08:16:10.916 GMT [65619] STATEMENT:  INSERT INTO loan_application (loan_id, application_status) VALUES (loan_id, 'PENDING');
2023-01-13 08:16:10.916 GMT [65619] ERROR:  column "account_id" does not exist at character 76
2023-01-13 08:16:10.916 GMT [65619] HINT:  There is a column named "account_id" in table "management_log", but it cannot be referenced from this part of the query.
2023-01-13 08:16:10.916 GMT [65619] STATEMENT:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened loan', CURRENT_DATE);
2023-01-13 08:16:10.916 GMT [65619] ERROR:  syntax error at or near "passed" at character 1
2023-01-13 08:16:10.916 GMT [65619] STATEMENT:  passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-13 08:16:10.917 GMT [65619] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:16:10.917 GMT [65619] STATEMENT:  RETURN passed;
2023-01-13 08:16:10.917 GMT [65619] WARNING:  there is no transaction in progress
2023-01-13 08:16:10.917 GMT [65619] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.get_account_type(account_number INT)
	RETURNS TEXT AS $$" at character 1
2023-01-13 08:16:10.917 GMT [65619] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.get_account_type(account_number INT)
	RETURNS TEXT AS $$
	DECLARE account_type TEXT;
2023-01-13 08:16:10.918 GMT [65619] ERROR:  syntax error at or near "SELECT" at character 11
2023-01-13 08:16:10.918 GMT [65619] STATEMENT:  BEGIN
	    SELECT CASE WHEN EXISTS (SELECT * FROM debit_account WHERE account_number = account_number) THEN 'DEBIT'
	                WHEN EXISTS (SELECT * FROM credit_account WHERE account_number = account_number) THEN 'CREDIT'
	                WHEN EXISTS (SELECT * FROM savings_account WHERE account_number = account_number) THEN 'SAVINGS'
	                ELSE 'UNKNOWN' END INTO account_type;
2023-01-13 08:16:10.918 GMT [65619] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:16:10.918 GMT [65619] STATEMENT:  RETURN account_type;
2023-01-13 08:16:10.919 GMT [65619] WARNING:  there is no transaction in progress
2023-01-13 08:16:10.920 GMT [65619] ERROR:  syntax error at or near "END" at character 644
2023-01-13 08:16:10.920 GMT [65619] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_accounts(account_id INT)
	RETURNS TABLE (account_number INT) AS $$
	
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed accounts', CURRENT_DATE);
	    RETURN QUERY
	        SELECT account.*, COALESCE(debit_accounts.current_balance, credit_accounts.outstanding_balance, savings_accounts.current_balance, loans.loan_amount) AS balance,
	        COALESCE(debit_accounts.interest_rate, credit_accounts.interest_rate, savings_accounts.interest_rate, loans.loan_interest_rate) AS interest_rate,
	        get_account_type(account.account_number) AS account_type
	
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:16:10.922 GMT [65619] ERROR:  syntax error at or near "," at character 205
2023-01-13 08:16:10.922 GMT [65619] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_debit_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, overdraft_limit NUMERIC, overdraft_usage NUMERIC, interest_rate, external_account_number INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed debit accounts', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT * FROM client.debit_accounts WHERE account_id = account_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:16:10.927 GMT [65619] ERROR:  parameter name "account_id" used more than once
2023-01-13 08:16:10.927 GMT [65619] CONTEXT:  compilation of PL/pgSQL function "view_savings_statements" near line 1
2023-01-13 08:16:10.927 GMT [65619] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_savings_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statements', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT savings_accounts_statements.account_id, savings_accounts_statements.account_number, savings_accounts_statements.starting_date, savings_accounts_statements.end_date, savings_accounts_statements.amount
	        FROM client.savings_accounts_statements
	        WHERE savings_accounts_statements.account_number = account_number
	        AND savings_accounts_statements.account_id = account_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:16:10.928 GMT [65619] ERROR:  parameter name "account_id" used more than once
2023-01-13 08:16:10.928 GMT [65619] CONTEXT:  compilation of PL/pgSQL function "view_debit_statements" near line 1
2023-01-13 08:16:10.928 GMT [65619] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_debit_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed debit statements', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT debit_accounts_statements.account_id, debit_accounts_statements.account_number, debit_accounts_statements.starting_date, debit_accounts_statements.end_date, debit_accounts_statements.amount
	        FROM client.debit_accounts_statements
	        WHERE debit_accounts_statements.account_number = account_number
	        AND debit_accounts_statements.account_id = account_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:16:10.929 GMT [65619] ERROR:  parameter name "account_id" used more than once
2023-01-13 08:16:10.929 GMT [65619] CONTEXT:  compilation of PL/pgSQL function "view_credit_statements" near line 1
2023-01-13 08:16:10.929 GMT [65619] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_credit_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statements', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statements.account_id, credit_accounts_statements.account_number, credit_accounts_statements.starting_date, credit_accounts_statements.end_date, credit_accounts_statements.amount
	        FROM client.credit_accounts_statements
	        WHERE credit_accounts_statements.account_number = account_number
	        AND credit_accounts_statements.account_id = account_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:16:10.931 GMT [65619] ERROR:  parameter name "account_id" used more than once
2023-01-13 08:16:10.931 GMT [65619] CONTEXT:  compilation of PL/pgSQL function "view_debit_statement" near line 1
2023-01-13 08:16:10.931 GMT [65619] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_debit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed debit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT debit_accounts_statement.account_id, debit_accounts_statement.account_number, debit_accounts_statement.starting_date, debit_accounts_statement.end_date, debit_accounts_statement.amount
	        FROM client.debit_accounts_statement
	        WHERE debit_accounts_statement.account_id = account_id
	        AND debit_accounts_statement.account_number = account_number
	        AND debit_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:16:10.932 GMT [65619] ERROR:  syntax error at or near "INSERT" at character 1028
2023-01-13 08:16:10.932 GMT [65619] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_credit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statement.account_id, credit_accounts_statement.account_number, credit_accounts_statement.starting_date, credit_accounts_statement.end_date, credit_accounts_statement.amount
	        FROM client.credit_accounts_statement
	        WHERE credit_accounts_statement.account_id = account_id
	        AND credit_accounts_statement.account_number = account_number
	        AND credit_accounts_statement.statement_id = statement_id;
	END;
	
	CREATE OR REPLACE FUNCTION client.view_savings_statement(account_id INT, savings_account_id INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statement', CURRENT_DATE);
	    RETURN QUERY
	        SELECT savings_accounts_statement.account_id, savings_accounts_statement.account_number, savings_accounts_statement.starting_date, savings_accounts_statement.end_date, savings_accounts_statement.amount
	        FROM client.savings_accounts_statement
	        WHERE savings_accounts_statement.account_id = account_id
	        AND savings_accounts_statement.account_number = savings_account_id
	        AND savings_accounts_statement.statement_id = statement_id;
	END;
2023-01-13 08:16:32.727 GMT [65580] LOG:  received fast shutdown request
2023-01-13 08:16:32.729 GMT [65580] LOG:  aborting any active transactions
2023-01-13 08:16:32.740 GMT [65580] LOG:  background worker "logical replication launcher" (PID 65587) exited with exit code 1
2023-01-13 08:16:32.742 GMT [65582] LOG:  shutting down
2023-01-13 08:16:32.804 GMT [65580] LOG:  database system is shut down
2023-01-13 08:16:34.315 GMT [65760] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-13 08:16:34.316 GMT [65760] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-13 08:16:34.318 GMT [65760] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-13 08:16:34.323 GMT [65761] LOG:  database system was shut down at 2023-01-13 08:16:33 GMT
2023-01-13 08:16:34.329 GMT [65760] LOG:  database system is ready to accept connections
2023-01-13 08:16:35.389 GMT [65796] ERROR:  "credit_account_id" is not a known variable at character 437
2023-01-13 08:16:35.389 GMT [65796] STATEMENT:  CREATE OR REPLACE FUNCTION client.open_credit_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE credit_account_number INT;
	DECLARE next_account_number INT;
	BEGIN
	
	    SELECT get_next_account_number() INTO next_account_number;
	
	    INSERT INTO credit_account (account_number, outstanding_balance, credit_limit, interest_rate, account_id) VALUES (next_account_number ,0, 0, 24.9, account_id) RETURNING id INTO credit_account_id;
	    INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_id) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_id);
	    INSERT INTO credit_account_application (credit_account_id, application_status) VALUES (credit_account_id, 'PENDING');
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened credit account', CURRENT_DATE);
	END
	$$ LANGUAGE plpgsql;
2023-01-13 08:16:35.398 GMT [65796] ERROR:  syntax error at or near "INSERT" at character 657
2023-01-13 08:16:35.398 GMT [65796] STATEMENT:  CREATE OR REPLACE FUNCTION client.get_account_type(account_number INT)
	RETURNS TEXT AS $$
	DECLARE account_type TEXT;
	BEGIN
	    SELECT CASE WHEN EXISTS (SELECT * FROM debit_account WHERE account_number = account_number) THEN 'DEBIT'
	                WHEN EXISTS (SELECT * FROM credit_account WHERE account_number = account_number) THEN 'CREDIT'
	                WHEN EXISTS (SELECT * FROM savings_account WHERE account_number = account_number) THEN 'SAVINGS'
	                ELSE 'UNKNOWN' END INTO account_type;
	    RETURN account_type;
	END;
	
	CREATE OR REPLACE FUNCTION client.view_accounts(account_id INT)
	RETURNS TABLE (account_number INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed accounts', CURRENT_DATE);
	    RETURN QUERY
	        SELECT account.*, COALESCE(debit_accounts.current_balance, credit_accounts.outstanding_balance, savings_accounts.current_balance, loans.loan_amount) AS balance,
	        COALESCE(debit_accounts.interest_rate, credit_accounts.interest_rate, savings_accounts.interest_rate, loans.loan_interest_rate) AS interest_rate,
	        get_account_type(account.account_number) AS account_type
	END;
2023-01-13 08:16:35.399 GMT [65796] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, overdraft_limit NUMERIC, overdraft_usage NUMERIC, interest_rate, external_account_number INT) AS $$" at character 1
2023-01-13 08:16:35.399 GMT [65796] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, overdraft_limit NUMERIC, overdraft_usage NUMERIC, interest_rate, external_account_number INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed debit accounts', CURRENT_DATE);
2023-01-13 08:16:35.401 GMT [65796] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:16:35.401 GMT [65796] STATEMENT:  RETURN QUERY
	        SELECT * FROM client.debit_accounts WHERE account_id = account_id;
2023-01-13 08:16:35.401 GMT [65796] WARNING:  there is no transaction in progress
2023-01-13 08:16:35.405 GMT [65796] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_accounts(account_id INT)
	RETURNS TABLE (id INT, outstanding_balance NUMERIC, credit_limit NUMERIC, interest_rate NUMERIC, application_status TEXT) AS $$" at character 1
2023-01-13 08:16:35.405 GMT [65796] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_accounts(account_id INT)
	RETURNS TABLE (id INT, outstanding_balance NUMERIC, credit_limit NUMERIC, interest_rate NUMERIC, application_status TEXT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit accounts', CURRENT_DATE);
2023-01-13 08:16:35.405 GMT [65796] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:16:35.405 GMT [65796] STATEMENT:  RETURN QUERY
	        SELECT * FROM client.credit_accounts WHERE account_id = account_id;
2023-01-13 08:16:35.406 GMT [65796] WARNING:  there is no transaction in progress
2023-01-13 08:16:35.406 GMT [65796] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_savings_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, external_account_number INT) AS $$" at character 1
2023-01-13 08:16:35.406 GMT [65796] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_savings_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, external_account_number INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings accounts', CURRENT_DATE);
2023-01-13 08:16:35.407 GMT [65796] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:16:35.407 GMT [65796] STATEMENT:  RETURN QUERY
	        SELECT * FROM client.savings_accounts WHERE account_id = account_id;
2023-01-13 08:16:35.407 GMT [65796] WARNING:  there is no transaction in progress
2023-01-13 08:16:35.408 GMT [65796] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_loans(account_id INT)
	RETURNS TABLE (id INT, loan_amount NUMERIC, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC, application_status TEXT) AS $$" at character 1
2023-01-13 08:16:35.408 GMT [65796] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_loans(account_id INT)
	RETURNS TABLE (id INT, loan_amount NUMERIC, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC, application_status TEXT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed loans', CURRENT_DATE);
2023-01-13 08:16:35.408 GMT [65796] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:16:35.408 GMT [65796] STATEMENT:  RETURN QUERY
	        SELECT * FROM client.loans WHERE account_id = account_id;
2023-01-13 08:16:35.408 GMT [65796] WARNING:  there is no transaction in progress
2023-01-13 08:16:35.408 GMT [65796] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_savings_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-13 08:16:35.408 GMT [65796] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_savings_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statements', CURRENT_DATE);
2023-01-13 08:16:35.409 GMT [65796] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:16:35.409 GMT [65796] STATEMENT:  RETURN QUERY
	        SELECT savings_accounts_statements.account_id, savings_accounts_statements.account_number, savings_accounts_statements.starting_date, savings_accounts_statements.end_date, savings_accounts_statements.amount
	        FROM client.savings_accounts_statements
	        WHERE savings_accounts_statements.account_number = account_number
	        AND savings_accounts_statements.account_id = account_id;
2023-01-13 08:16:35.409 GMT [65796] WARNING:  there is no transaction in progress
2023-01-13 08:16:35.409 GMT [65796] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-13 08:16:35.409 GMT [65796] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed debit statements', CURRENT_DATE);
2023-01-13 08:16:35.409 GMT [65796] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:16:35.409 GMT [65796] STATEMENT:  RETURN QUERY
	        SELECT debit_accounts_statements.account_id, debit_accounts_statements.account_number, debit_accounts_statements.starting_date, debit_accounts_statements.end_date, debit_accounts_statements.amount
	        FROM client.debit_accounts_statements
	        WHERE debit_accounts_statements.account_number = account_number
	        AND debit_accounts_statements.account_id = account_id;
2023-01-13 08:16:35.410 GMT [65796] WARNING:  there is no transaction in progress
2023-01-13 08:16:35.411 GMT [65796] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-13 08:16:35.411 GMT [65796] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statements', CURRENT_DATE);
2023-01-13 08:16:35.411 GMT [65796] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:16:35.411 GMT [65796] STATEMENT:  RETURN QUERY
	        SELECT credit_accounts_statements.account_id, credit_accounts_statements.account_number, credit_accounts_statements.starting_date, credit_accounts_statements.end_date, credit_accounts_statements.amount
	        FROM client.credit_accounts_statements
	        WHERE credit_accounts_statements.account_number = account_number
	        AND credit_accounts_statements.account_id = account_id;
2023-01-13 08:16:35.411 GMT [65796] WARNING:  there is no transaction in progress
2023-01-13 08:16:35.412 GMT [65796] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-13 08:16:35.412 GMT [65796] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed debit statement', CURRENT_DATE);
2023-01-13 08:16:35.412 GMT [65796] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:16:35.412 GMT [65796] STATEMENT:  RETURN QUERY
	        SELECT debit_accounts_statement.account_id, debit_accounts_statement.account_number, debit_accounts_statement.starting_date, debit_accounts_statement.end_date, debit_accounts_statement.amount
	        FROM client.debit_accounts_statement
	        WHERE debit_accounts_statement.account_id = account_id
	        AND debit_accounts_statement.account_number = account_number
	        AND debit_accounts_statement.statement_id = statement_id;
2023-01-13 08:16:35.413 GMT [65796] WARNING:  there is no transaction in progress
2023-01-13 08:16:35.413 GMT [65796] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-13 08:16:35.413 GMT [65796] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statement', CURRENT_DATE);
2023-01-13 08:16:35.413 GMT [65796] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:16:35.413 GMT [65796] STATEMENT:  RETURN QUERY
	        SELECT credit_accounts_statement.account_id, credit_accounts_statement.account_number, credit_accounts_statement.starting_date, credit_accounts_statement.end_date, credit_accounts_statement.amount
	        FROM client.credit_accounts_statement
	        WHERE credit_accounts_statement.account_id = account_id
	        AND credit_accounts_statement.account_number = account_number
	        AND credit_accounts_statement.statement_id = statement_id;
2023-01-13 08:16:35.413 GMT [65796] WARNING:  there is no transaction in progress
2023-01-13 08:16:35.414 GMT [65796] ERROR:  syntax error at or near "DECLARE" at character 1790
2023-01-13 08:16:35.414 GMT [65796] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_savings_statement(account_id INT, savings_account_id INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT savings_accounts_statement.account_id, savings_accounts_statement.account_number, savings_accounts_statement.starting_date, savings_accounts_statement.end_date, savings_accounts_statement.amount
	        FROM client.savings_accounts_statement
	        WHERE savings_accounts_statement.account_id = account_id
	        AND savings_accounts_statement.account_number = savings_account_id
	        AND savings_accounts_statement.statement_id = statement_id;
	END;
	
	CREATE SCHEMA IF NOT EXISTS unauthenticated;
	SET search_path TO unauthenticated, public;
	
	-- Allows an unauthenticated user to match hashes to hashes of personal information contained in the customer table
	CREATE OR REPLACE VIEW unauthenticated.unauthenticated_personal_information AS
	SELECT id, md5(first_name) AS first_name, md5(last_name) AS last_name, md5(email_address) AS email_address
	FROM customer;
	
	-- Allows an unauthenticated user to view hashes of usernames contained in the user_login table
	CREATE OR REPLACE VIEW unauthenticated.unauthenticated_login AS
	SELECT md5(username) AS username FROM user_login;
	
	-- Allows a user to insert personal information into the online banking system
	CREATE OR REPLACE FUNCTION unauthenticated.create_personal_info(first_name TEXT, last_name TEXT, date_of_birth DATE, phone_number TEXT, email_address TEXT, address_street TEXT, address_city TEXT, address_county TEXT, address_postcode TEXT)
	RETURNS INT AS $$
	DECLARE customer_id INT;
2023-01-13 08:16:35.414 GMT [65796] ERROR:  syntax error at or near "IF" at character 11
2023-01-13 08:16:35.414 GMT [65796] STATEMENT:  BEGIN
	    IF NOT EXISTS (SELECT FROM unauthenticated.unauthenticated_personal_information WHERE md5(first_name) = first_name AND md5(last_name) = last_name AND md5(email_address) = email_address) THEN
	        INSERT INTO customer
	        VALUES (first_name, last_name, date_of_birth, phone_number, email_address, address_street, address_city, address_county, address_postcode)
	        RETURNING id INTO customer_id;
2023-01-13 08:16:35.416 GMT [65796] ERROR:  syntax error at or near "ELSE" at character 1
2023-01-13 08:16:35.416 GMT [65796] STATEMENT:  ELSE
	        RAISE NOTICE 'CUSTOMER INFORMATION ALREADY PRESENT';
2023-01-13 08:16:35.416 GMT [65796] ERROR:  relation "unauthenticated.unauthenticated_personal_information" does not exist at character 33
2023-01-13 08:16:35.416 GMT [65796] STATEMENT:  SELECT id INTO customer_id FROM unauthenticated.unauthenticated_personal_information WHERE md5(first_name) = first_name AND md5(last_name) = last_name AND md5(email_address) = email_address;
2023-01-13 08:16:35.416 GMT [65796] ERROR:  syntax error at or near "IF" at character 5
2023-01-13 08:16:35.416 GMT [65796] STATEMENT:  END IF;
2023-01-13 08:16:35.416 GMT [65796] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:16:35.416 GMT [65796] STATEMENT:  RETURN customer_id;
2023-01-13 08:16:35.417 GMT [65796] WARNING:  there is no transaction in progress
2023-01-13 08:16:35.417 GMT [65796] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	-- Allows an unauthenticated user to create an online account
	CREATE OR REPLACE FUNCTION unauthenticated.create_online_account_details(customer_id INT, first_name TEXT, last_name TEXT, email_address TEXT, question_choice_ids INT[], question_answers TEXT[])
	RETURNS INT AS $$" at character 1
2023-01-13 08:16:35.417 GMT [65796] STATEMENT:  $$ LANGUAGE plpgsql;
	
	-- Allows an unauthenticated user to create an online account
	CREATE OR REPLACE FUNCTION unauthenticated.create_online_account_details(customer_id INT, first_name TEXT, last_name TEXT, email_address TEXT, question_choice_ids INT[], question_answers TEXT[])
	RETURNS INT AS $$
	DECLARE account_id INT;
2023-01-13 08:16:35.417 GMT [65796] ERROR:  syntax error at or near "INT" at character 27
2023-01-13 08:16:35.417 GMT [65796] STATEMENT:  DECLARE online_account_id INT;
2023-01-13 08:16:35.417 GMT [65796] ERROR:  syntax error at or near "INT" at character 28
2023-01-13 08:16:35.417 GMT [65796] STATEMENT:  DECLARE question_choice_id INT;
2023-01-13 08:16:35.418 GMT [65796] ERROR:  syntax error at or near "IF" at character 11
2023-01-13 08:16:35.418 GMT [65796] STATEMENT:  BEGIN
	    IF NOT EXISTS (SELECT FROM user_login WHERE username = username) THEN
	        INSERT INTO online_account (date_opened, sort_code, customer_id)
	        VALUES ((SELECT now()), (SELECT num FROM GENERATE_SERIES(1, 6) AS s(num) LIMIT 1), customer_id)
	        RETURNING id INTO account_id;
2023-01-13 08:16:35.418 GMT [65796] ERROR:  syntax error at or near "INTO" at character 131
2023-01-13 08:16:35.418 GMT [65796] STATEMENT:  INSERT INTO user_login (account_id, username, password)
	        VALUES (account_id, username, md5(password))
	        RETURNING id INTO online_account_id;
2023-01-13 08:16:35.418 GMT [65796] ERROR:  syntax error at or near "FOR" at character 1
2023-01-13 08:16:35.418 GMT [65796] STATEMENT:  FOR i IN 0..2 LOOP
	            
	            INSERT INTO user_login_security_question (question_choice_id, login_id)
	            VALUES (question_choice_ids[i], online_account_id)
	            RETURNING id INTO question_choice_id;
2023-01-13 08:16:35.419 GMT [65796] ERROR:  column "answer" of relation "security_question_answer" does not exist at character 39
2023-01-13 08:16:35.419 GMT [65796] STATEMENT:  INSERT INTO security_question_answer (answer, question_id)
	            VALUES (question_answers[i], question_choice_id);
2023-01-13 08:16:35.419 GMT [65796] ERROR:  syntax error at or near "LOOP" at character 5
2023-01-13 08:16:35.419 GMT [65796] STATEMENT:  END LOOP;
2023-01-13 08:16:35.421 GMT [65796] ERROR:  column "account_id" does not exist at character 117
2023-01-13 08:16:35.421 GMT [65796] HINT:  There is a column named "account_id" in table "authentication_log", but it cannot be referenced from this part of the query.
2023-01-13 08:16:35.421 GMT [65796] STATEMENT:  INSERT INTO authentication_log (log_description, log_date, account_id) VALUES ('New online account created', now(), account_id);
2023-01-13 08:16:35.421 GMT [65796] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:16:35.421 GMT [65796] STATEMENT:  RETURN account_id;
2023-01-13 08:16:35.421 GMT [65796] ERROR:  syntax error at or near "ELSE" at character 1
2023-01-13 08:16:35.421 GMT [65796] STATEMENT:  ELSE
	        RAISE NOTICE 'USERNAME ALREADY TAKEN';
2023-01-13 08:16:35.421 GMT [65796] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:16:35.421 GMT [65796] STATEMENT:  RETURN NULL;
2023-01-13 08:16:35.421 GMT [65796] ERROR:  syntax error at or near "IF" at character 5
2023-01-13 08:16:35.421 GMT [65796] STATEMENT:  END IF;
2023-01-13 08:16:35.421 GMT [65796] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:16:35.421 GMT [65796] STATEMENT:  RETURN success;
2023-01-13 08:16:35.422 GMT [65796] WARNING:  there is no transaction in progress
2023-01-13 08:16:35.422 GMT [65796] ERROR:  unterminated dollar-quoted string at or near "$$ LANGUAGE plpgsql;
	
	
	
	
	
	-- sample data for customers
	INSERT INTO customer (first_name, last_name, date_of_birth, phone_number, email_address, address_street, address_city, address_county, address_postcode)
	VALUES ('John', 'Smith', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('Jane', 'Doe', '1990-01-01', '01234567890', 'test@gmail.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Bloggs', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('John', 'Bloggs', '1990-01-01', '01234567890', 'hello@yahoo.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('Jane', 'Bloggs', '1990-01-01', '01234567890', 'test@outlook.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Doe', '1990-01-01', '01234567890', 'hello@outlook.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('John', 'Doe', '1990-01-01', '01234567890', 'mybankemail@icloud.com', '1 My Bank Street', 'My Bank City', 'My Bank County', 'MB1 1NK'),
	('Jane', 'Smith', '1990-01-01', '01234567890', 'bankemail@outlook.com', '1 Bank Street', 'Bank City', 'Bank County', 'BA1 1NK'),
	('Joe', 'Smith', '1990-01-01', '01234567890', 'example@icloud.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX');
	
	-- sample data for online account
	INSERT INTO online_account (date_opened, sort_code, customer_id)
	VALUES ('2020-01-01', '123456', 1),
	('2019-01-01', '126485', 2),
	('2018-01-01', '128475', 3),
	('2017-01-01', '129476', 4),
	('2016-01-01', '120386', 5),
	('2017-02-03', '127385', 6),
	('2018-02-04', '128256', 7),
	('2020-01-01', '129386', 8),
	('2020-01-01', '120386', 9);
	
	-- sample data for user login
	INSERT INTO user_login (account_id, username, password)
	VALUES (1, 'johnsmith', 'b29af57c2b3bba21e9df0cece40952c6'),
	(2, 'janedoe', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(3, 'joebloggs', 'b29af57c2b3bba21e9df0cece40952c6'),
	(4, 'johnbloggs', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(5, 'janebloggs', 'b29af57c2b3bba21e9df0cece40952c6'),
	(6, 'joedoe', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(7, 'johndoe', 'b29af57c2b3bba21e9df0cece40952c6'),
	(8, 'joesmith', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(9, 'janesmith', 'b29af57c2b3bba21e9df0cece40952c6');
	
	-- sample data for security question option
	INSERT INTO security_question_option (question_description)
	VALUES ('What is your favourite colour?'),
	('What is your favourite food?'),
	('What is your favourite animal?'),
	('What is your favourite sport?'),
	('What is your favourite movie?'),
	('What is your favourite book?'),
	('What is your favourite song?'),
	('What is your favourite band?'),
	('What is your favourite game?'),
	('What is your favourite TV show?');
	
	--sample data for user login security question
	INSERT INTO user_login_security_question (question_choice_id, login_id)
	VALUES (1, 1),
	(2, 2),
	(3, 3),
	(4, 4),
	(5, 5),
	(6, 6),
	(7, 7),
	(8, 8),
	(9, 9);
	
	-- sample data for security question answer
	INSERT INTO security_question_answer (question_answer, question_id)
	VALUES ('Red', 1),
	('Blue', 2),
	('Green', 3),
	('Yellow', 4),
	('Orange', 5),
	('Purple', 6),
	('Pink', 7),
	('Black', 8),
	('White', 9);
	
	INSERT INTO savings_account (account_number, account_id, current_balance, interest_rate)
	VALUES ('12345678', 1, 2000.00, 2.05);
	
	-- -- sample data for savings account
	-- INSERT INTO savings_account (current_balance, interest_rate, account_id)
	-- VALUES (2000.00, 2.05, 1),
	-- (1000.00, 2.05, 2),
	-- (5000.00, 2.05, 3),
	-- (10000.00, 2.05, 4),
	-- (20000.00, 2.05, 5),
	-- (50000.00, 2.05, 6),
	-- (100000.00, 2.05, 7),
	-- (200000.00, 2.05, 8);
	
	-- -- sample data for credit account
	-- INSERT INTO credit_account (outstanding_balance, credit_limit, interest_rate, account_id)
	-- VALUES (55.43, 2000.00, 4.22, 1),
	-- (100.00, 1000.00, 4.22, 2),
	-- (200.00, 5000.00, 4.22, 3),
	-- (300.00, 10000.00, 4.22, 4),
	-- (400.00, 20000.00, 4.22, 5),
	-- (500.00, 50000.00, 4.22, 6),
	-- (600.00, 100000.00, 4.22, 7),
	-- (700.00, 200000.00, 4.22, 8);
	
	-- -- sample data for debit account
	-- INSERT INTO debit_account (current_balance, interest_rate, account_id)
	-- VALUES (3465.43, 0.05, 1),
	-- (1000.00, 0.05, 1),
	-- (5000.00, 0.05, 2),
	-- (10000.00, 0.05, 3),
	-- (20000.00, 0.05, 4),
	-- (50000.00, 0.05, 5),
	-- (100000.00, 0.05, 6),
	-- (200000.00, 0.05, 9);
	
	-- -- sample data for loan
	-- INSERT INTO loan (loan_end_date, loan_amount, loan_type, account_id)
	-- VALUES ('2024-01-01', 10000, 'vehicle', 8),
	-- ('2023-03-04', 300000, 'mortgage', 8),
	-- ('2035-03-03', 400000, 'mortgage', 1),
	-- ('2025-04-05', 25000, 'vehicle', 1),
	-- ('2026-05-05', 34000, 'vehicle', 1),
	-- ('2023-06-07', 500000, 'mortgage', 2),
	-- ('2026-04-04', 60000, 'vehicle', 2),
	-- ('2024-03-03', 70000, 'vehicle', 2),
	-- ('2023-02-02', 800000, 'mortgage', 3),
	-- ('2022-01-01', 90000, 'vehicle', 3),
	-- ('2021-01-01', 100000, 'vehicle', 3),
	-- ('2020-01-01', 110000, 'mortgage', 4),
	-- ('2020-01-01', 12000, 'vehicle', 4),
	-- ('2020-01-01', 13000, 'vehicle', 4),
	-- ('2020-01-01', 140000, 'mortgage', 5),
	-- ('2020-01-01', 15000, 'vehicle', 5),
	-- ('2020-01-01', 16000, 'vehicle', 5),
	-- ('2020-01-01', 170000, 'mortgage', 6),
	-- ('2020-01-01', 18000, 'vehicle', 6),
	-- ('2020-01-01', 19000, 'vehicle', 6),
	-- ('2020-01-01', 200000, 'mortgage', 7),
	-- ('2020-01-01', 21000, 'vehicle', 7),
	-- ('2020-01-01', 22000, 'vehicle', 7);
	
	-- CREATE SCHEMA IF NOT EXISTS staff;
	
	-- SET search_path TO public, staff;" at character 1
2023-01-13 08:16:35.422 GMT [65796] STATEMENT:  $$ LANGUAGE plpgsql;
	
	
	
	
	
	-- sample data for customers
	INSERT INTO customer (first_name, last_name, date_of_birth, phone_number, email_address, address_street, address_city, address_county, address_postcode)
	VALUES ('John', 'Smith', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('Jane', 'Doe', '1990-01-01', '01234567890', 'test@gmail.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Bloggs', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('John', 'Bloggs', '1990-01-01', '01234567890', 'hello@yahoo.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('Jane', 'Bloggs', '1990-01-01', '01234567890', 'test@outlook.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Doe', '1990-01-01', '01234567890', 'hello@outlook.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('John', 'Doe', '1990-01-01', '01234567890', 'mybankemail@icloud.com', '1 My Bank Street', 'My Bank City', 'My Bank County', 'MB1 1NK'),
	('Jane', 'Smith', '1990-01-01', '01234567890', 'bankemail@outlook.com', '1 Bank Street', 'Bank City', 'Bank County', 'BA1 1NK'),
	('Joe', 'Smith', '1990-01-01', '01234567890', 'example@icloud.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX');
	
	-- sample data for online account
	INSERT INTO online_account (date_opened, sort_code, customer_id)
	VALUES ('2020-01-01', '123456', 1),
	('2019-01-01', '126485', 2),
	('2018-01-01', '128475', 3),
	('2017-01-01', '129476', 4),
	('2016-01-01', '120386', 5),
	('2017-02-03', '127385', 6),
	('2018-02-04', '128256', 7),
	('2020-01-01', '129386', 8),
	('2020-01-01', '120386', 9);
	
	-- sample data for user login
	INSERT INTO user_login (account_id, username, password)
	VALUES (1, 'johnsmith', 'b29af57c2b3bba21e9df0cece40952c6'),
	(2, 'janedoe', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(3, 'joebloggs', 'b29af57c2b3bba21e9df0cece40952c6'),
	(4, 'johnbloggs', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(5, 'janebloggs', 'b29af57c2b3bba21e9df0cece40952c6'),
	(6, 'joedoe', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(7, 'johndoe', 'b29af57c2b3bba21e9df0cece40952c6'),
	(8, 'joesmith', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(9, 'janesmith', 'b29af57c2b3bba21e9df0cece40952c6');
	
	-- sample data for security question option
	INSERT INTO security_question_option (question_description)
	VALUES ('What is your favourite colour?'),
	('What is your favourite food?'),
	('What is your favourite animal?'),
	('What is your favourite sport?'),
	('What is your favourite movie?'),
	('What is your favourite book?'),
	('What is your favourite song?'),
	('What is your favourite band?'),
	('What is your favourite game?'),
	('What is your favourite TV show?');
	
	--sample data for user login security question
	INSERT INTO user_login_security_question (question_choice_id, login_id)
	VALUES (1, 1),
	(2, 2),
	(3, 3),
	(4, 4),
	(5, 5),
	(6, 6),
	(7, 7),
	(8, 8),
	(9, 9);
	
	-- sample data for security question answer
	INSERT INTO security_question_answer (question_answer, question_id)
	VALUES ('Red', 1),
	('Blue', 2),
	('Green', 3),
	('Yellow', 4),
	('Orange', 5),
	('Purple', 6),
	('Pink', 7),
	('Black', 8),
	('White', 9);
	
	INSERT INTO savings_account (account_number, account_id, current_balance, interest_rate)
	VALUES ('12345678', 1, 2000.00, 2.05);
	
	-- -- sample data for savings account
	-- INSERT INTO savings_account (current_balance, interest_rate, account_id)
	-- VALUES (2000.00, 2.05, 1),
	-- (1000.00, 2.05, 2),
	-- (5000.00, 2.05, 3),
	-- (10000.00, 2.05, 4),
	-- (20000.00, 2.05, 5),
	-- (50000.00, 2.05, 6),
	-- (100000.00, 2.05, 7),
	-- (200000.00, 2.05, 8);
	
	-- -- sample data for credit account
	-- INSERT INTO credit_account (outstanding_balance, credit_limit, interest_rate, account_id)
	-- VALUES (55.43, 2000.00, 4.22, 1),
	-- (100.00, 1000.00, 4.22, 2),
	-- (200.00, 5000.00, 4.22, 3),
	-- (300.00, 10000.00, 4.22, 4),
	-- (400.00, 20000.00, 4.22, 5),
	-- (500.00, 50000.00, 4.22, 6),
	-- (600.00, 100000.00, 4.22, 7),
	-- (700.00, 200000.00, 4.22, 8);
	
	-- -- sample data for debit account
	-- INSERT INTO debit_account (current_balance, interest_rate, account_id)
	-- VALUES (3465.43, 0.05, 1),
	-- (1000.00, 0.05, 1),
	-- (5000.00, 0.05, 2),
	-- (10000.00, 0.05, 3),
	-- (20000.00, 0.05, 4),
	-- (50000.00, 0.05, 5),
	-- (100000.00, 0.05, 6),
	-- (200000.00, 0.05, 9);
	
	-- -- sample data for loan
	-- INSERT INTO loan (loan_end_date, loan_amount, loan_type, account_id)
	-- VALUES ('2024-01-01', 10000, 'vehicle', 8),
	-- ('2023-03-04', 300000, 'mortgage', 8),
	-- ('2035-03-03', 400000, 'mortgage', 1),
	-- ('2025-04-05', 25000, 'vehicle', 1),
	-- ('2026-05-05', 34000, 'vehicle', 1),
	-- ('2023-06-07', 500000, 'mortgage', 2),
	-- ('2026-04-04', 60000, 'vehicle', 2),
	-- ('2024-03-03', 70000, 'vehicle', 2),
	-- ('2023-02-02', 800000, 'mortgage', 3),
	-- ('2022-01-01', 90000, 'vehicle', 3),
	-- ('2021-01-01', 100000, 'vehicle', 3),
	-- ('2020-01-01', 110000, 'mortgage', 4),
	-- ('2020-01-01', 12000, 'vehicle', 4),
	-- ('2020-01-01', 13000, 'vehicle', 4),
	-- ('2020-01-01', 140000, 'mortgage', 5),
	-- ('2020-01-01', 15000, 'vehicle', 5),
	-- ('2020-01-01', 16000, 'vehicle', 5),
	-- ('2020-01-01', 170000, 'mortgage', 6),
	-- ('2020-01-01', 18000, 'vehicle', 6),
	-- ('2020-01-01', 19000, 'vehicle', 6),
	-- ('2020-01-01', 200000, 'mortgage', 7),
	-- ('2020-01-01', 21000, 'vehicle', 7),
	-- ('2020-01-01', 22000, 'vehicle', 7);
	
	-- CREATE SCHEMA IF NOT EXISTS staff;
	
	-- SET search_path TO public, staff;
2023-01-13 08:17:19.004 GMT [65760] LOG:  received fast shutdown request
2023-01-13 08:17:19.007 GMT [65760] LOG:  aborting any active transactions
2023-01-13 08:17:19.013 GMT [65760] LOG:  background worker "logical replication launcher" (PID 65767) exited with exit code 1
2023-01-13 08:17:19.013 GMT [65762] LOG:  shutting down
2023-01-13 08:17:19.066 GMT [65760] LOG:  database system is shut down
2023-01-13 08:17:20.490 GMT [66015] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-13 08:17:20.490 GMT [66015] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-13 08:17:20.492 GMT [66015] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-13 08:17:20.496 GMT [66016] LOG:  database system was shut down at 2023-01-13 08:17:20 GMT
2023-01-13 08:17:20.502 GMT [66015] LOG:  database system is ready to accept connections
2023-01-13 08:17:21.468 GMT [66054] ERROR:  syntax error at or near "INSERT" at character 657
2023-01-13 08:17:21.468 GMT [66054] STATEMENT:  CREATE OR REPLACE FUNCTION client.get_account_type(account_number INT)
	RETURNS TEXT AS $$
	DECLARE account_type TEXT;
	BEGIN
	    SELECT CASE WHEN EXISTS (SELECT * FROM debit_account WHERE account_number = account_number) THEN 'DEBIT'
	                WHEN EXISTS (SELECT * FROM credit_account WHERE account_number = account_number) THEN 'CREDIT'
	                WHEN EXISTS (SELECT * FROM savings_account WHERE account_number = account_number) THEN 'SAVINGS'
	                ELSE 'UNKNOWN' END INTO account_type;
	    RETURN account_type;
	END;
	
	CREATE OR REPLACE FUNCTION client.view_accounts(account_id INT)
	RETURNS TABLE (account_number INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed accounts', CURRENT_DATE);
	    RETURN QUERY
	        SELECT account.*, COALESCE(debit_accounts.current_balance, credit_accounts.outstanding_balance, savings_accounts.current_balance, loans.loan_amount) AS balance,
	        COALESCE(debit_accounts.interest_rate, credit_accounts.interest_rate, savings_accounts.interest_rate, loans.loan_interest_rate) AS interest_rate,
	        get_account_type(account.account_number) AS account_type
	END;
2023-01-13 08:17:21.469 GMT [66054] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, overdraft_limit NUMERIC, overdraft_usage NUMERIC, interest_rate, external_account_number INT) AS $$" at character 1
2023-01-13 08:17:21.469 GMT [66054] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, overdraft_limit NUMERIC, overdraft_usage NUMERIC, interest_rate, external_account_number INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed debit accounts', CURRENT_DATE);
2023-01-13 08:17:21.472 GMT [66054] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:17:21.472 GMT [66054] STATEMENT:  RETURN QUERY
	        SELECT * FROM client.debit_accounts WHERE account_id = account_id;
2023-01-13 08:17:21.472 GMT [66054] WARNING:  there is no transaction in progress
2023-01-13 08:17:21.474 GMT [66054] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_accounts(account_id INT)
	RETURNS TABLE (id INT, outstanding_balance NUMERIC, credit_limit NUMERIC, interest_rate NUMERIC, application_status TEXT) AS $$" at character 1
2023-01-13 08:17:21.474 GMT [66054] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_accounts(account_id INT)
	RETURNS TABLE (id INT, outstanding_balance NUMERIC, credit_limit NUMERIC, interest_rate NUMERIC, application_status TEXT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit accounts', CURRENT_DATE);
2023-01-13 08:17:21.474 GMT [66054] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:17:21.474 GMT [66054] STATEMENT:  RETURN QUERY
	        SELECT * FROM client.credit_accounts WHERE account_id = account_id;
2023-01-13 08:17:21.477 GMT [66054] WARNING:  there is no transaction in progress
2023-01-13 08:17:21.479 GMT [66054] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_savings_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, external_account_number INT) AS $$" at character 1
2023-01-13 08:17:21.479 GMT [66054] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_savings_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, external_account_number INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings accounts', CURRENT_DATE);
2023-01-13 08:17:21.479 GMT [66054] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:17:21.479 GMT [66054] STATEMENT:  RETURN QUERY
	        SELECT * FROM client.savings_accounts WHERE account_id = account_id;
2023-01-13 08:17:21.480 GMT [66054] WARNING:  there is no transaction in progress
2023-01-13 08:17:21.481 GMT [66054] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_loans(account_id INT)
	RETURNS TABLE (id INT, loan_amount NUMERIC, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC, application_status TEXT) AS $$" at character 1
2023-01-13 08:17:21.481 GMT [66054] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_loans(account_id INT)
	RETURNS TABLE (id INT, loan_amount NUMERIC, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC, application_status TEXT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed loans', CURRENT_DATE);
2023-01-13 08:17:21.481 GMT [66054] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:17:21.481 GMT [66054] STATEMENT:  RETURN QUERY
	        SELECT * FROM client.loans WHERE account_id = account_id;
2023-01-13 08:17:21.481 GMT [66054] WARNING:  there is no transaction in progress
2023-01-13 08:17:21.481 GMT [66054] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_savings_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-13 08:17:21.481 GMT [66054] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_savings_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statements', CURRENT_DATE);
2023-01-13 08:17:21.482 GMT [66054] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:17:21.482 GMT [66054] STATEMENT:  RETURN QUERY
	        SELECT savings_accounts_statements.account_id, savings_accounts_statements.account_number, savings_accounts_statements.starting_date, savings_accounts_statements.end_date, savings_accounts_statements.amount
	        FROM client.savings_accounts_statements
	        WHERE savings_accounts_statements.account_number = account_number
	        AND savings_accounts_statements.account_id = account_id;
2023-01-13 08:17:21.482 GMT [66054] WARNING:  there is no transaction in progress
2023-01-13 08:17:21.482 GMT [66054] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-13 08:17:21.482 GMT [66054] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed debit statements', CURRENT_DATE);
2023-01-13 08:17:21.482 GMT [66054] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:17:21.482 GMT [66054] STATEMENT:  RETURN QUERY
	        SELECT debit_accounts_statements.account_id, debit_accounts_statements.account_number, debit_accounts_statements.starting_date, debit_accounts_statements.end_date, debit_accounts_statements.amount
	        FROM client.debit_accounts_statements
	        WHERE debit_accounts_statements.account_number = account_number
	        AND debit_accounts_statements.account_id = account_id;
2023-01-13 08:17:21.482 GMT [66054] WARNING:  there is no transaction in progress
2023-01-13 08:17:21.482 GMT [66054] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-13 08:17:21.482 GMT [66054] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statements', CURRENT_DATE);
2023-01-13 08:17:21.482 GMT [66054] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:17:21.482 GMT [66054] STATEMENT:  RETURN QUERY
	        SELECT credit_accounts_statements.account_id, credit_accounts_statements.account_number, credit_accounts_statements.starting_date, credit_accounts_statements.end_date, credit_accounts_statements.amount
	        FROM client.credit_accounts_statements
	        WHERE credit_accounts_statements.account_number = account_number
	        AND credit_accounts_statements.account_id = account_id;
2023-01-13 08:17:21.483 GMT [66054] WARNING:  there is no transaction in progress
2023-01-13 08:17:21.483 GMT [66054] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-13 08:17:21.483 GMT [66054] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed debit statement', CURRENT_DATE);
2023-01-13 08:17:21.483 GMT [66054] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:17:21.483 GMT [66054] STATEMENT:  RETURN QUERY
	        SELECT debit_accounts_statement.account_id, debit_accounts_statement.account_number, debit_accounts_statement.starting_date, debit_accounts_statement.end_date, debit_accounts_statement.amount
	        FROM client.debit_accounts_statement
	        WHERE debit_accounts_statement.account_id = account_id
	        AND debit_accounts_statement.account_number = account_number
	        AND debit_accounts_statement.statement_id = statement_id;
2023-01-13 08:17:21.483 GMT [66054] WARNING:  there is no transaction in progress
2023-01-13 08:17:21.483 GMT [66054] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-13 08:17:21.483 GMT [66054] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statement', CURRENT_DATE);
2023-01-13 08:17:21.483 GMT [66054] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:17:21.483 GMT [66054] STATEMENT:  RETURN QUERY
	        SELECT credit_accounts_statement.account_id, credit_accounts_statement.account_number, credit_accounts_statement.starting_date, credit_accounts_statement.end_date, credit_accounts_statement.amount
	        FROM client.credit_accounts_statement
	        WHERE credit_accounts_statement.account_id = account_id
	        AND credit_accounts_statement.account_number = account_number
	        AND credit_accounts_statement.statement_id = statement_id;
2023-01-13 08:17:21.484 GMT [66054] WARNING:  there is no transaction in progress
2023-01-13 08:17:21.484 GMT [66054] ERROR:  syntax error at or near "DECLARE" at character 1790
2023-01-13 08:17:21.484 GMT [66054] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_savings_statement(account_id INT, savings_account_id INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT savings_accounts_statement.account_id, savings_accounts_statement.account_number, savings_accounts_statement.starting_date, savings_accounts_statement.end_date, savings_accounts_statement.amount
	        FROM client.savings_accounts_statement
	        WHERE savings_accounts_statement.account_id = account_id
	        AND savings_accounts_statement.account_number = savings_account_id
	        AND savings_accounts_statement.statement_id = statement_id;
	END;
	
	CREATE SCHEMA IF NOT EXISTS unauthenticated;
	SET search_path TO unauthenticated, public;
	
	-- Allows an unauthenticated user to match hashes to hashes of personal information contained in the customer table
	CREATE OR REPLACE VIEW unauthenticated.unauthenticated_personal_information AS
	SELECT id, md5(first_name) AS first_name, md5(last_name) AS last_name, md5(email_address) AS email_address
	FROM customer;
	
	-- Allows an unauthenticated user to view hashes of usernames contained in the user_login table
	CREATE OR REPLACE VIEW unauthenticated.unauthenticated_login AS
	SELECT md5(username) AS username FROM user_login;
	
	-- Allows a user to insert personal information into the online banking system
	CREATE OR REPLACE FUNCTION unauthenticated.create_personal_info(first_name TEXT, last_name TEXT, date_of_birth DATE, phone_number TEXT, email_address TEXT, address_street TEXT, address_city TEXT, address_county TEXT, address_postcode TEXT)
	RETURNS INT AS $$
	DECLARE customer_id INT;
2023-01-13 08:17:21.484 GMT [66054] ERROR:  syntax error at or near "IF" at character 11
2023-01-13 08:17:21.484 GMT [66054] STATEMENT:  BEGIN
	    IF NOT EXISTS (SELECT FROM unauthenticated.unauthenticated_personal_information WHERE md5(first_name) = first_name AND md5(last_name) = last_name AND md5(email_address) = email_address) THEN
	        INSERT INTO customer
	        VALUES (first_name, last_name, date_of_birth, phone_number, email_address, address_street, address_city, address_county, address_postcode)
	        RETURNING id INTO customer_id;
2023-01-13 08:17:21.486 GMT [66054] ERROR:  syntax error at or near "ELSE" at character 1
2023-01-13 08:17:21.486 GMT [66054] STATEMENT:  ELSE
	        RAISE NOTICE 'CUSTOMER INFORMATION ALREADY PRESENT';
2023-01-13 08:17:21.486 GMT [66054] ERROR:  relation "unauthenticated.unauthenticated_personal_information" does not exist at character 33
2023-01-13 08:17:21.486 GMT [66054] STATEMENT:  SELECT id INTO customer_id FROM unauthenticated.unauthenticated_personal_information WHERE md5(first_name) = first_name AND md5(last_name) = last_name AND md5(email_address) = email_address;
2023-01-13 08:17:21.486 GMT [66054] ERROR:  syntax error at or near "IF" at character 5
2023-01-13 08:17:21.486 GMT [66054] STATEMENT:  END IF;
2023-01-13 08:17:21.486 GMT [66054] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:17:21.486 GMT [66054] STATEMENT:  RETURN customer_id;
2023-01-13 08:17:21.487 GMT [66054] WARNING:  there is no transaction in progress
2023-01-13 08:17:21.487 GMT [66054] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	-- Allows an unauthenticated user to create an online account
	CREATE OR REPLACE FUNCTION unauthenticated.create_online_account_details(customer_id INT, first_name TEXT, last_name TEXT, email_address TEXT, question_choice_ids INT[], question_answers TEXT[])
	RETURNS INT AS $$" at character 1
2023-01-13 08:17:21.487 GMT [66054] STATEMENT:  $$ LANGUAGE plpgsql;
	
	-- Allows an unauthenticated user to create an online account
	CREATE OR REPLACE FUNCTION unauthenticated.create_online_account_details(customer_id INT, first_name TEXT, last_name TEXT, email_address TEXT, question_choice_ids INT[], question_answers TEXT[])
	RETURNS INT AS $$
	DECLARE account_id INT;
2023-01-13 08:17:21.487 GMT [66054] ERROR:  syntax error at or near "INT" at character 27
2023-01-13 08:17:21.487 GMT [66054] STATEMENT:  DECLARE online_account_id INT;
2023-01-13 08:17:21.488 GMT [66054] ERROR:  syntax error at or near "INT" at character 28
2023-01-13 08:17:21.488 GMT [66054] STATEMENT:  DECLARE question_choice_id INT;
2023-01-13 08:17:21.488 GMT [66054] ERROR:  syntax error at or near "IF" at character 11
2023-01-13 08:17:21.488 GMT [66054] STATEMENT:  BEGIN
	    IF NOT EXISTS (SELECT FROM user_login WHERE username = username) THEN
	        INSERT INTO online_account (date_opened, sort_code, customer_id)
	        VALUES ((SELECT now()), (SELECT num FROM GENERATE_SERIES(1, 6) AS s(num) LIMIT 1), customer_id)
	        RETURNING id INTO account_id;
2023-01-13 08:17:21.488 GMT [66054] ERROR:  syntax error at or near "INTO" at character 131
2023-01-13 08:17:21.488 GMT [66054] STATEMENT:  INSERT INTO user_login (account_id, username, password)
	        VALUES (account_id, username, md5(password))
	        RETURNING id INTO online_account_id;
2023-01-13 08:17:21.489 GMT [66054] ERROR:  syntax error at or near "FOR" at character 1
2023-01-13 08:17:21.489 GMT [66054] STATEMENT:  FOR i IN 0..2 LOOP
	            
	            INSERT INTO user_login_security_question (question_choice_id, login_id)
	            VALUES (question_choice_ids[i], online_account_id)
	            RETURNING id INTO question_choice_id;
2023-01-13 08:17:21.489 GMT [66054] ERROR:  column "answer" of relation "security_question_answer" does not exist at character 39
2023-01-13 08:17:21.489 GMT [66054] STATEMENT:  INSERT INTO security_question_answer (answer, question_id)
	            VALUES (question_answers[i], question_choice_id);
2023-01-13 08:17:21.489 GMT [66054] ERROR:  syntax error at or near "LOOP" at character 5
2023-01-13 08:17:21.489 GMT [66054] STATEMENT:  END LOOP;
2023-01-13 08:17:21.490 GMT [66054] ERROR:  column "account_id" does not exist at character 117
2023-01-13 08:17:21.490 GMT [66054] HINT:  There is a column named "account_id" in table "authentication_log", but it cannot be referenced from this part of the query.
2023-01-13 08:17:21.490 GMT [66054] STATEMENT:  INSERT INTO authentication_log (log_description, log_date, account_id) VALUES ('New online account created', now(), account_id);
2023-01-13 08:17:21.490 GMT [66054] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:17:21.490 GMT [66054] STATEMENT:  RETURN account_id;
2023-01-13 08:17:21.491 GMT [66054] ERROR:  syntax error at or near "ELSE" at character 1
2023-01-13 08:17:21.491 GMT [66054] STATEMENT:  ELSE
	        RAISE NOTICE 'USERNAME ALREADY TAKEN';
2023-01-13 08:17:21.491 GMT [66054] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:17:21.491 GMT [66054] STATEMENT:  RETURN NULL;
2023-01-13 08:17:21.492 GMT [66054] ERROR:  syntax error at or near "IF" at character 5
2023-01-13 08:17:21.492 GMT [66054] STATEMENT:  END IF;
2023-01-13 08:17:21.492 GMT [66054] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-13 08:17:21.492 GMT [66054] STATEMENT:  RETURN success;
2023-01-13 08:17:21.492 GMT [66054] WARNING:  there is no transaction in progress
2023-01-13 08:17:21.493 GMT [66054] ERROR:  unterminated dollar-quoted string at or near "$$ LANGUAGE plpgsql;
	
	
	
	
	
	-- sample data for customers
	INSERT INTO customer (first_name, last_name, date_of_birth, phone_number, email_address, address_street, address_city, address_county, address_postcode)
	VALUES ('John', 'Smith', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('Jane', 'Doe', '1990-01-01', '01234567890', 'test@gmail.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Bloggs', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('John', 'Bloggs', '1990-01-01', '01234567890', 'hello@yahoo.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('Jane', 'Bloggs', '1990-01-01', '01234567890', 'test@outlook.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Doe', '1990-01-01', '01234567890', 'hello@outlook.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('John', 'Doe', '1990-01-01', '01234567890', 'mybankemail@icloud.com', '1 My Bank Street', 'My Bank City', 'My Bank County', 'MB1 1NK'),
	('Jane', 'Smith', '1990-01-01', '01234567890', 'bankemail@outlook.com', '1 Bank Street', 'Bank City', 'Bank County', 'BA1 1NK'),
	('Joe', 'Smith', '1990-01-01', '01234567890', 'example@icloud.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX');
	
	-- sample data for online account
	INSERT INTO online_account (date_opened, sort_code, customer_id)
	VALUES ('2020-01-01', '123456', 1),
	('2019-01-01', '126485', 2),
	('2018-01-01', '128475', 3),
	('2017-01-01', '129476', 4),
	('2016-01-01', '120386', 5),
	('2017-02-03', '127385', 6),
	('2018-02-04', '128256', 7),
	('2020-01-01', '129386', 8),
	('2020-01-01', '120386', 9);
	
	-- sample data for user login
	INSERT INTO user_login (account_id, username, password)
	VALUES (1, 'johnsmith', 'b29af57c2b3bba21e9df0cece40952c6'),
	(2, 'janedoe', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(3, 'joebloggs', 'b29af57c2b3bba21e9df0cece40952c6'),
	(4, 'johnbloggs', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(5, 'janebloggs', 'b29af57c2b3bba21e9df0cece40952c6'),
	(6, 'joedoe', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(7, 'johndoe', 'b29af57c2b3bba21e9df0cece40952c6'),
	(8, 'joesmith', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(9, 'janesmith', 'b29af57c2b3bba21e9df0cece40952c6');
	
	-- sample data for security question option
	INSERT INTO security_question_option (question_description)
	VALUES ('What is your favourite colour?'),
	('What is your favourite food?'),
	('What is your favourite animal?'),
	('What is your favourite sport?'),
	('What is your favourite movie?'),
	('What is your favourite book?'),
	('What is your favourite song?'),
	('What is your favourite band?'),
	('What is your favourite game?'),
	('What is your favourite TV show?');
	
	--sample data for user login security question
	INSERT INTO user_login_security_question (question_choice_id, login_id)
	VALUES (1, 1),
	(2, 2),
	(3, 3),
	(4, 4),
	(5, 5),
	(6, 6),
	(7, 7),
	(8, 8),
	(9, 9);
	
	-- sample data for security question answer
	INSERT INTO security_question_answer (question_answer, question_id)
	VALUES ('Red', 1),
	('Blue', 2),
	('Green', 3),
	('Yellow', 4),
	('Orange', 5),
	('Purple', 6),
	('Pink', 7),
	('Black', 8),
	('White', 9);
	
	INSERT INTO savings_account (account_number, account_id, current_balance, interest_rate)
	VALUES ('12345678', 1, 2000.00, 2.05);
	
	-- -- sample data for savings account
	-- INSERT INTO savings_account (current_balance, interest_rate, account_id)
	-- VALUES (2000.00, 2.05, 1),
	-- (1000.00, 2.05, 2),
	-- (5000.00, 2.05, 3),
	-- (10000.00, 2.05, 4),
	-- (20000.00, 2.05, 5),
	-- (50000.00, 2.05, 6),
	-- (100000.00, 2.05, 7),
	-- (200000.00, 2.05, 8);
	
	-- -- sample data for credit account
	-- INSERT INTO credit_account (outstanding_balance, credit_limit, interest_rate, account_id)
	-- VALUES (55.43, 2000.00, 4.22, 1),
	-- (100.00, 1000.00, 4.22, 2),
	-- (200.00, 5000.00, 4.22, 3),
	-- (300.00, 10000.00, 4.22, 4),
	-- (400.00, 20000.00, 4.22, 5),
	-- (500.00, 50000.00, 4.22, 6),
	-- (600.00, 100000.00, 4.22, 7),
	-- (700.00, 200000.00, 4.22, 8);
	
	-- -- sample data for debit account
	-- INSERT INTO debit_account (current_balance, interest_rate, account_id)
	-- VALUES (3465.43, 0.05, 1),
	-- (1000.00, 0.05, 1),
	-- (5000.00, 0.05, 2),
	-- (10000.00, 0.05, 3),
	-- (20000.00, 0.05, 4),
	-- (50000.00, 0.05, 5),
	-- (100000.00, 0.05, 6),
	-- (200000.00, 0.05, 9);
	
	-- -- sample data for loan
	-- INSERT INTO loan (loan_end_date, loan_amount, loan_type, account_id)
	-- VALUES ('2024-01-01', 10000, 'vehicle', 8),
	-- ('2023-03-04', 300000, 'mortgage', 8),
	-- ('2035-03-03', 400000, 'mortgage', 1),
	-- ('2025-04-05', 25000, 'vehicle', 1),
	-- ('2026-05-05', 34000, 'vehicle', 1),
	-- ('2023-06-07', 500000, 'mortgage', 2),
	-- ('2026-04-04', 60000, 'vehicle', 2),
	-- ('2024-03-03', 70000, 'vehicle', 2),
	-- ('2023-02-02', 800000, 'mortgage', 3),
	-- ('2022-01-01', 90000, 'vehicle', 3),
	-- ('2021-01-01', 100000, 'vehicle', 3),
	-- ('2020-01-01', 110000, 'mortgage', 4),
	-- ('2020-01-01', 12000, 'vehicle', 4),
	-- ('2020-01-01', 13000, 'vehicle', 4),
	-- ('2020-01-01', 140000, 'mortgage', 5),
	-- ('2020-01-01', 15000, 'vehicle', 5),
	-- ('2020-01-01', 16000, 'vehicle', 5),
	-- ('2020-01-01', 170000, 'mortgage', 6),
	-- ('2020-01-01', 18000, 'vehicle', 6),
	-- ('2020-01-01', 19000, 'vehicle', 6),
	-- ('2020-01-01', 200000, 'mortgage', 7),
	-- ('2020-01-01', 21000, 'vehicle', 7),
	-- ('2020-01-01', 22000, 'vehicle', 7);
	
	-- CREATE SCHEMA IF NOT EXISTS staff;
	
	-- SET search_path TO public, staff;" at character 1
2023-01-13 08:17:21.493 GMT [66054] STATEMENT:  $$ LANGUAGE plpgsql;
	
	
	
	
	
	-- sample data for customers
	INSERT INTO customer (first_name, last_name, date_of_birth, phone_number, email_address, address_street, address_city, address_county, address_postcode)
	VALUES ('John', 'Smith', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('Jane', 'Doe', '1990-01-01', '01234567890', 'test@gmail.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Bloggs', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('John', 'Bloggs', '1990-01-01', '01234567890', 'hello@yahoo.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('Jane', 'Bloggs', '1990-01-01', '01234567890', 'test@outlook.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Doe', '1990-01-01', '01234567890', 'hello@outlook.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('John', 'Doe', '1990-01-01', '01234567890', 'mybankemail@icloud.com', '1 My Bank Street', 'My Bank City', 'My Bank County', 'MB1 1NK'),
	('Jane', 'Smith', '1990-01-01', '01234567890', 'bankemail@outlook.com', '1 Bank Street', 'Bank City', 'Bank County', 'BA1 1NK'),
	('Joe', 'Smith', '1990-01-01', '01234567890', 'example@icloud.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX');
	
	-- sample data for online account
	INSERT INTO online_account (date_opened, sort_code, customer_id)
	VALUES ('2020-01-01', '123456', 1),
	('2019-01-01', '126485', 2),
	('2018-01-01', '128475', 3),
	('2017-01-01', '129476', 4),
	('2016-01-01', '120386', 5),
	('2017-02-03', '127385', 6),
	('2018-02-04', '128256', 7),
	('2020-01-01', '129386', 8),
	('2020-01-01', '120386', 9);
	
	-- sample data for user login
	INSERT INTO user_login (account_id, username, password)
	VALUES (1, 'johnsmith', 'b29af57c2b3bba21e9df0cece40952c6'),
	(2, 'janedoe', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(3, 'joebloggs', 'b29af57c2b3bba21e9df0cece40952c6'),
	(4, 'johnbloggs', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(5, 'janebloggs', 'b29af57c2b3bba21e9df0cece40952c6'),
	(6, 'joedoe', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(7, 'johndoe', 'b29af57c2b3bba21e9df0cece40952c6'),
	(8, 'joesmith', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(9, 'janesmith', 'b29af57c2b3bba21e9df0cece40952c6');
	
	-- sample data for security question option
	INSERT INTO security_question_option (question_description)
	VALUES ('What is your favourite colour?'),
	('What is your favourite food?'),
	('What is your favourite animal?'),
	('What is your favourite sport?'),
	('What is your favourite movie?'),
	('What is your favourite book?'),
	('What is your favourite song?'),
	('What is your favourite band?'),
	('What is your favourite game?'),
	('What is your favourite TV show?');
	
	--sample data for user login security question
	INSERT INTO user_login_security_question (question_choice_id, login_id)
	VALUES (1, 1),
	(2, 2),
	(3, 3),
	(4, 4),
	(5, 5),
	(6, 6),
	(7, 7),
	(8, 8),
	(9, 9);
	
	-- sample data for security question answer
	INSERT INTO security_question_answer (question_answer, question_id)
	VALUES ('Red', 1),
	('Blue', 2),
	('Green', 3),
	('Yellow', 4),
	('Orange', 5),
	('Purple', 6),
	('Pink', 7),
	('Black', 8),
	('White', 9);
	
	INSERT INTO savings_account (account_number, account_id, current_balance, interest_rate)
	VALUES ('12345678', 1, 2000.00, 2.05);
	
	-- -- sample data for savings account
	-- INSERT INTO savings_account (current_balance, interest_rate, account_id)
	-- VALUES (2000.00, 2.05, 1),
	-- (1000.00, 2.05, 2),
	-- (5000.00, 2.05, 3),
	-- (10000.00, 2.05, 4),
	-- (20000.00, 2.05, 5),
	-- (50000.00, 2.05, 6),
	-- (100000.00, 2.05, 7),
	-- (200000.00, 2.05, 8);
	
	-- -- sample data for credit account
	-- INSERT INTO credit_account (outstanding_balance, credit_limit, interest_rate, account_id)
	-- VALUES (55.43, 2000.00, 4.22, 1),
	-- (100.00, 1000.00, 4.22, 2),
	-- (200.00, 5000.00, 4.22, 3),
	-- (300.00, 10000.00, 4.22, 4),
	-- (400.00, 20000.00, 4.22, 5),
	-- (500.00, 50000.00, 4.22, 6),
	-- (600.00, 100000.00, 4.22, 7),
	-- (700.00, 200000.00, 4.22, 8);
	
	-- -- sample data for debit account
	-- INSERT INTO debit_account (current_balance, interest_rate, account_id)
	-- VALUES (3465.43, 0.05, 1),
	-- (1000.00, 0.05, 1),
	-- (5000.00, 0.05, 2),
	-- (10000.00, 0.05, 3),
	-- (20000.00, 0.05, 4),
	-- (50000.00, 0.05, 5),
	-- (100000.00, 0.05, 6),
	-- (200000.00, 0.05, 9);
	
	-- -- sample data for loan
	-- INSERT INTO loan (loan_end_date, loan_amount, loan_type, account_id)
	-- VALUES ('2024-01-01', 10000, 'vehicle', 8),
	-- ('2023-03-04', 300000, 'mortgage', 8),
	-- ('2035-03-03', 400000, 'mortgage', 1),
	-- ('2025-04-05', 25000, 'vehicle', 1),
	-- ('2026-05-05', 34000, 'vehicle', 1),
	-- ('2023-06-07', 500000, 'mortgage', 2),
	-- ('2026-04-04', 60000, 'vehicle', 2),
	-- ('2024-03-03', 70000, 'vehicle', 2),
	-- ('2023-02-02', 800000, 'mortgage', 3),
	-- ('2022-01-01', 90000, 'vehicle', 3),
	-- ('2021-01-01', 100000, 'vehicle', 3),
	-- ('2020-01-01', 110000, 'mortgage', 4),
	-- ('2020-01-01', 12000, 'vehicle', 4),
	-- ('2020-01-01', 13000, 'vehicle', 4),
	-- ('2020-01-01', 140000, 'mortgage', 5),
	-- ('2020-01-01', 15000, 'vehicle', 5),
	-- ('2020-01-01', 16000, 'vehicle', 5),
	-- ('2020-01-01', 170000, 'mortgage', 6),
	-- ('2020-01-01', 18000, 'vehicle', 6),
	-- ('2020-01-01', 19000, 'vehicle', 6),
	-- ('2020-01-01', 200000, 'mortgage', 7),
	-- ('2020-01-01', 21000, 'vehicle', 7),
	-- ('2020-01-01', 22000, 'vehicle', 7);
	
	-- CREATE SCHEMA IF NOT EXISTS staff;
	
	-- SET search_path TO public, staff;
2023-01-13 08:18:12.063 GMT [66015] LOG:  received fast shutdown request
2023-01-13 08:18:12.065 GMT [66015] LOG:  aborting any active transactions
2023-01-13 08:18:12.070 GMT [66015] LOG:  background worker "logical replication launcher" (PID 66022) exited with exit code 1
2023-01-13 08:18:12.072 GMT [66017] LOG:  shutting down
2023-01-13 08:18:12.128 GMT [66015] LOG:  database system is shut down
2023-01-13 08:18:13.839 GMT [66296] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-13 08:18:13.839 GMT [66296] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-13 08:18:13.843 GMT [66296] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-13 08:18:13.850 GMT [66300] LOG:  database system was shut down at 2023-01-13 08:18:13 GMT
2023-01-13 08:18:13.856 GMT [66296] LOG:  database system is ready to accept connections
2023-01-13 08:18:14.810 GMT [66335] ERROR:  syntax error at or near "END" at character 644
2023-01-13 08:18:14.810 GMT [66335] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_accounts(account_id INT)
	RETURNS TABLE (account_number INT) AS $$
	
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed accounts', CURRENT_DATE);
	    RETURN QUERY
	        SELECT account.*, COALESCE(debit_accounts.current_balance, credit_accounts.outstanding_balance, savings_accounts.current_balance, loans.loan_amount) AS balance,
	        COALESCE(debit_accounts.interest_rate, credit_accounts.interest_rate, savings_accounts.interest_rate, loans.loan_interest_rate) AS interest_rate,
	        get_account_type(account.account_number) AS account_type
	
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:18:14.811 GMT [66335] ERROR:  syntax error at or near "," at character 205
2023-01-13 08:18:14.811 GMT [66335] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_debit_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, overdraft_limit NUMERIC, overdraft_usage NUMERIC, interest_rate, external_account_number INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed debit accounts', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT * FROM client.debit_accounts WHERE account_id = account_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:18:14.819 GMT [66335] ERROR:  parameter name "account_id" used more than once
2023-01-13 08:18:14.819 GMT [66335] CONTEXT:  compilation of PL/pgSQL function "view_savings_statements" near line 1
2023-01-13 08:18:14.819 GMT [66335] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_savings_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statements', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT savings_accounts_statements.account_id, savings_accounts_statements.account_number, savings_accounts_statements.starting_date, savings_accounts_statements.end_date, savings_accounts_statements.amount
	        FROM client.savings_accounts_statements
	        WHERE savings_accounts_statements.account_number = account_number
	        AND savings_accounts_statements.account_id = account_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:18:14.820 GMT [66335] ERROR:  parameter name "account_id" used more than once
2023-01-13 08:18:14.820 GMT [66335] CONTEXT:  compilation of PL/pgSQL function "view_debit_statements" near line 1
2023-01-13 08:18:14.820 GMT [66335] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_debit_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed debit statements', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT debit_accounts_statements.account_id, debit_accounts_statements.account_number, debit_accounts_statements.starting_date, debit_accounts_statements.end_date, debit_accounts_statements.amount
	        FROM client.debit_accounts_statements
	        WHERE debit_accounts_statements.account_number = account_number
	        AND debit_accounts_statements.account_id = account_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:18:14.824 GMT [66335] ERROR:  parameter name "account_id" used more than once
2023-01-13 08:18:14.824 GMT [66335] CONTEXT:  compilation of PL/pgSQL function "view_credit_statements" near line 1
2023-01-13 08:18:14.824 GMT [66335] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_credit_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statements', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statements.account_id, credit_accounts_statements.account_number, credit_accounts_statements.starting_date, credit_accounts_statements.end_date, credit_accounts_statements.amount
	        FROM client.credit_accounts_statements
	        WHERE credit_accounts_statements.account_number = account_number
	        AND credit_accounts_statements.account_id = account_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:18:14.825 GMT [66335] ERROR:  parameter name "account_id" used more than once
2023-01-13 08:18:14.825 GMT [66335] CONTEXT:  compilation of PL/pgSQL function "view_debit_statement" near line 1
2023-01-13 08:18:14.825 GMT [66335] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_debit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed debit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT debit_accounts_statement.account_id, debit_accounts_statement.account_number, debit_accounts_statement.starting_date, debit_accounts_statement.end_date, debit_accounts_statement.amount
	        FROM client.debit_accounts_statement
	        WHERE debit_accounts_statement.account_id = account_id
	        AND debit_accounts_statement.account_number = account_number
	        AND debit_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:18:14.825 GMT [66335] ERROR:  syntax error at or near "INSERT" at character 1028
2023-01-13 08:18:14.825 GMT [66335] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_credit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statement.account_id, credit_accounts_statement.account_number, credit_accounts_statement.starting_date, credit_accounts_statement.end_date, credit_accounts_statement.amount
	        FROM client.credit_accounts_statement
	        WHERE credit_accounts_statement.account_id = account_id
	        AND credit_accounts_statement.account_number = account_number
	        AND credit_accounts_statement.statement_id = statement_id;
	END;
	
	CREATE OR REPLACE FUNCTION client.view_savings_statement(account_id INT, savings_account_id INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statement', CURRENT_DATE);
	    RETURN QUERY
	        SELECT savings_accounts_statement.account_id, savings_accounts_statement.account_number, savings_accounts_statement.starting_date, savings_accounts_statement.end_date, savings_accounts_statement.amount
	        FROM client.savings_accounts_statement
	        WHERE savings_accounts_statement.account_id = account_id
	        AND savings_accounts_statement.account_number = savings_account_id
	        AND savings_accounts_statement.statement_id = statement_id;
	END;
2023-01-13 08:18:43.301 GMT [66296] LOG:  received fast shutdown request
2023-01-13 08:18:43.304 GMT [66296] LOG:  aborting any active transactions
2023-01-13 08:18:43.310 GMT [66296] LOG:  background worker "logical replication launcher" (PID 66306) exited with exit code 1
2023-01-13 08:18:43.311 GMT [66301] LOG:  shutting down
2023-01-13 08:18:43.367 GMT [66296] LOG:  database system is shut down
2023-01-13 08:18:44.881 GMT [66499] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-13 08:18:44.882 GMT [66499] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-13 08:18:44.883 GMT [66499] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-13 08:18:44.892 GMT [66503] LOG:  database system was shut down at 2023-01-13 08:18:44 GMT
2023-01-13 08:18:44.899 GMT [66499] LOG:  database system is ready to accept connections
2023-01-13 08:18:45.794 GMT [66538] ERROR:  syntax error at or near "," at character 205
2023-01-13 08:18:45.794 GMT [66538] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_debit_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, overdraft_limit NUMERIC, overdraft_usage NUMERIC, interest_rate, external_account_number INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed debit accounts', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT * FROM client.debit_accounts WHERE account_id = account_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:18:45.800 GMT [66538] ERROR:  parameter name "account_id" used more than once
2023-01-13 08:18:45.800 GMT [66538] CONTEXT:  compilation of PL/pgSQL function "view_savings_statements" near line 1
2023-01-13 08:18:45.800 GMT [66538] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_savings_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statements', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT savings_accounts_statements.account_id, savings_accounts_statements.account_number, savings_accounts_statements.starting_date, savings_accounts_statements.end_date, savings_accounts_statements.amount
	        FROM client.savings_accounts_statements
	        WHERE savings_accounts_statements.account_number = account_number
	        AND savings_accounts_statements.account_id = account_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:18:45.801 GMT [66538] ERROR:  parameter name "account_id" used more than once
2023-01-13 08:18:45.801 GMT [66538] CONTEXT:  compilation of PL/pgSQL function "view_debit_statements" near line 1
2023-01-13 08:18:45.801 GMT [66538] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_debit_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed debit statements', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT debit_accounts_statements.account_id, debit_accounts_statements.account_number, debit_accounts_statements.starting_date, debit_accounts_statements.end_date, debit_accounts_statements.amount
	        FROM client.debit_accounts_statements
	        WHERE debit_accounts_statements.account_number = account_number
	        AND debit_accounts_statements.account_id = account_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:18:45.801 GMT [66538] ERROR:  parameter name "account_id" used more than once
2023-01-13 08:18:45.801 GMT [66538] CONTEXT:  compilation of PL/pgSQL function "view_credit_statements" near line 1
2023-01-13 08:18:45.801 GMT [66538] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_credit_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statements', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statements.account_id, credit_accounts_statements.account_number, credit_accounts_statements.starting_date, credit_accounts_statements.end_date, credit_accounts_statements.amount
	        FROM client.credit_accounts_statements
	        WHERE credit_accounts_statements.account_number = account_number
	        AND credit_accounts_statements.account_id = account_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:18:45.802 GMT [66538] ERROR:  parameter name "account_id" used more than once
2023-01-13 08:18:45.802 GMT [66538] CONTEXT:  compilation of PL/pgSQL function "view_debit_statement" near line 1
2023-01-13 08:18:45.802 GMT [66538] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_debit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed debit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT debit_accounts_statement.account_id, debit_accounts_statement.account_number, debit_accounts_statement.starting_date, debit_accounts_statement.end_date, debit_accounts_statement.amount
	        FROM client.debit_accounts_statement
	        WHERE debit_accounts_statement.account_id = account_id
	        AND debit_accounts_statement.account_number = account_number
	        AND debit_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:18:45.802 GMT [66538] ERROR:  syntax error at or near "INSERT" at character 1028
2023-01-13 08:18:45.802 GMT [66538] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_credit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statement.account_id, credit_accounts_statement.account_number, credit_accounts_statement.starting_date, credit_accounts_statement.end_date, credit_accounts_statement.amount
	        FROM client.credit_accounts_statement
	        WHERE credit_accounts_statement.account_id = account_id
	        AND credit_accounts_statement.account_number = account_number
	        AND credit_accounts_statement.statement_id = statement_id;
	END;
	
	CREATE OR REPLACE FUNCTION client.view_savings_statement(account_id INT, savings_account_id INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statement', CURRENT_DATE);
	    RETURN QUERY
	        SELECT savings_accounts_statement.account_id, savings_accounts_statement.account_number, savings_accounts_statement.starting_date, savings_accounts_statement.end_date, savings_accounts_statement.amount
	        FROM client.savings_accounts_statement
	        WHERE savings_accounts_statement.account_id = account_id
	        AND savings_accounts_statement.account_number = savings_account_id
	        AND savings_accounts_statement.statement_id = statement_id;
	END;
2023-01-13 08:20:17.316 GMT [66499] LOG:  received fast shutdown request
2023-01-13 08:20:17.321 GMT [66499] LOG:  aborting any active transactions
2023-01-13 08:20:17.324 GMT [66499] LOG:  background worker "logical replication launcher" (PID 66509) exited with exit code 1
2023-01-13 08:20:17.330 GMT [66504] LOG:  shutting down
2023-01-13 08:20:17.389 GMT [66499] LOG:  database system is shut down
2023-01-13 08:20:18.895 GMT [66875] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-13 08:20:18.895 GMT [66875] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-13 08:20:18.897 GMT [66875] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-13 08:20:18.903 GMT [66876] LOG:  database system was shut down at 2023-01-13 08:20:18 GMT
2023-01-13 08:20:18.910 GMT [66875] LOG:  database system is ready to accept connections
2023-01-13 08:20:19.877 GMT [66914] ERROR:  parameter name "account_id" used more than once
2023-01-13 08:20:19.877 GMT [66914] CONTEXT:  compilation of PL/pgSQL function "view_savings_statements" near line 1
2023-01-13 08:20:19.877 GMT [66914] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_savings_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statements', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT savings_accounts_statements.account_id, savings_accounts_statements.account_number, savings_accounts_statements.starting_date, savings_accounts_statements.end_date, savings_accounts_statements.amount
	        FROM client.savings_accounts_statements
	        WHERE savings_accounts_statements.account_number = account_number
	        AND savings_accounts_statements.account_id = account_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:20:19.879 GMT [66914] ERROR:  parameter name "account_id" used more than once
2023-01-13 08:20:19.879 GMT [66914] CONTEXT:  compilation of PL/pgSQL function "view_debit_statements" near line 1
2023-01-13 08:20:19.879 GMT [66914] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_debit_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed debit statements', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT debit_accounts_statements.account_id, debit_accounts_statements.account_number, debit_accounts_statements.starting_date, debit_accounts_statements.end_date, debit_accounts_statements.amount
	        FROM client.debit_accounts_statements
	        WHERE debit_accounts_statements.account_number = account_number
	        AND debit_accounts_statements.account_id = account_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:20:19.879 GMT [66914] ERROR:  parameter name "account_id" used more than once
2023-01-13 08:20:19.879 GMT [66914] CONTEXT:  compilation of PL/pgSQL function "view_credit_statements" near line 1
2023-01-13 08:20:19.879 GMT [66914] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_credit_statements(account_id INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statements', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statements.account_id, credit_accounts_statements.account_number, credit_accounts_statements.starting_date, credit_accounts_statements.end_date, credit_accounts_statements.amount
	        FROM client.credit_accounts_statements
	        WHERE credit_accounts_statements.account_number = account_number
	        AND credit_accounts_statements.account_id = account_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:20:19.881 GMT [66914] ERROR:  parameter name "account_id" used more than once
2023-01-13 08:20:19.881 GMT [66914] CONTEXT:  compilation of PL/pgSQL function "view_debit_statement" near line 1
2023-01-13 08:20:19.881 GMT [66914] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_debit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed debit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT debit_accounts_statement.account_id, debit_accounts_statement.account_number, debit_accounts_statement.starting_date, debit_accounts_statement.end_date, debit_accounts_statement.amount
	        FROM client.debit_accounts_statement
	        WHERE debit_accounts_statement.account_id = account_id
	        AND debit_accounts_statement.account_number = account_number
	        AND debit_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:20:19.881 GMT [66914] ERROR:  syntax error at or near "INSERT" at character 1028
2023-01-13 08:20:19.881 GMT [66914] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_credit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statement.account_id, credit_accounts_statement.account_number, credit_accounts_statement.starting_date, credit_accounts_statement.end_date, credit_accounts_statement.amount
	        FROM client.credit_accounts_statement
	        WHERE credit_accounts_statement.account_id = account_id
	        AND credit_accounts_statement.account_number = account_number
	        AND credit_accounts_statement.statement_id = statement_id;
	END;
	
	CREATE OR REPLACE FUNCTION client.view_savings_statement(account_id INT, savings_account_id INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statement', CURRENT_DATE);
	    RETURN QUERY
	        SELECT savings_accounts_statement.account_id, savings_accounts_statement.account_number, savings_accounts_statement.starting_date, savings_accounts_statement.end_date, savings_accounts_statement.amount
	        FROM client.savings_accounts_statement
	        WHERE savings_accounts_statement.account_id = account_id
	        AND savings_accounts_statement.account_number = savings_account_id
	        AND savings_accounts_statement.statement_id = statement_id;
	END;
2023-01-13 08:22:38.286 GMT [66875] LOG:  received fast shutdown request
2023-01-13 08:22:38.288 GMT [66875] LOG:  aborting any active transactions
2023-01-13 08:22:38.294 GMT [66875] LOG:  background worker "logical replication launcher" (PID 66882) exited with exit code 1
2023-01-13 08:22:38.296 GMT [66877] LOG:  shutting down
2023-01-13 08:22:38.360 GMT [66875] LOG:  database system is shut down
2023-01-13 08:22:39.897 GMT [67398] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-13 08:22:39.897 GMT [67398] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-13 08:22:39.899 GMT [67398] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-13 08:22:39.903 GMT [67399] LOG:  database system was shut down at 2023-01-13 08:22:39 GMT
2023-01-13 08:22:39.910 GMT [67398] LOG:  database system is ready to accept connections
2023-01-13 08:22:40.916 GMT [67437] ERROR:  parameter name "account_id" used more than once
2023-01-13 08:22:40.916 GMT [67437] CONTEXT:  compilation of PL/pgSQL function "view_debit_statement" near line 1
2023-01-13 08:22:40.916 GMT [67437] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_debit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed debit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT debit_accounts_statement.account_id, debit_accounts_statement.account_number, debit_accounts_statement.starting_date, debit_accounts_statement.end_date, debit_accounts_statement.amount
	        FROM client.debit_accounts_statement
	        WHERE debit_accounts_statement.account_id = account_id
	        AND debit_accounts_statement.account_number = account_number
	        AND debit_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:22:40.918 GMT [67437] ERROR:  syntax error at or near "INSERT" at character 1028
2023-01-13 08:22:40.918 GMT [67437] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_credit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statement.account_id, credit_accounts_statement.account_number, credit_accounts_statement.starting_date, credit_accounts_statement.end_date, credit_accounts_statement.amount
	        FROM client.credit_accounts_statement
	        WHERE credit_accounts_statement.account_id = account_id
	        AND credit_accounts_statement.account_number = account_number
	        AND credit_accounts_statement.statement_id = statement_id;
	END;
	
	CREATE OR REPLACE FUNCTION client.view_savings_statement(account_id INT, savings_account_id INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statement', CURRENT_DATE);
	    RETURN QUERY
	        SELECT savings_accounts_statement.account_id, savings_accounts_statement.account_number, savings_accounts_statement.starting_date, savings_accounts_statement.end_date, savings_accounts_statement.amount
	        FROM client.savings_accounts_statement
	        WHERE savings_accounts_statement.account_id = account_id
	        AND savings_accounts_statement.account_number = savings_account_id
	        AND savings_accounts_statement.statement_id = statement_id;
	END;
2023-01-13 08:23:27.390 GMT [67398] LOG:  received fast shutdown request
2023-01-13 08:23:27.391 GMT [67398] LOG:  aborting any active transactions
2023-01-13 08:23:27.402 GMT [67398] LOG:  background worker "logical replication launcher" (PID 67405) exited with exit code 1
2023-01-13 08:23:27.405 GMT [67400] LOG:  shutting down
2023-01-13 08:23:27.464 GMT [67398] LOG:  database system is shut down
2023-01-13 08:23:29.051 GMT [67657] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-13 08:23:29.052 GMT [67657] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-13 08:23:29.053 GMT [67657] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-13 08:23:29.059 GMT [67658] LOG:  database system was shut down at 2023-01-13 08:23:28 GMT
2023-01-13 08:23:29.067 GMT [67657] LOG:  database system is ready to accept connections
2023-01-13 08:23:30.034 GMT [67693] ERROR:  syntax error at or near "INSERT" at character 1028
2023-01-13 08:23:30.034 GMT [67693] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_credit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statement.account_id, credit_accounts_statement.account_number, credit_accounts_statement.starting_date, credit_accounts_statement.end_date, credit_accounts_statement.amount
	        FROM client.credit_accounts_statement
	        WHERE credit_accounts_statement.account_id = account_id
	        AND credit_accounts_statement.account_number = account_number
	        AND credit_accounts_statement.statement_id = statement_id;
	END;
	
	CREATE OR REPLACE FUNCTION client.view_savings_statement(account_id INT, savings_account_id INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statement', CURRENT_DATE);
	    RETURN QUERY
	        SELECT savings_accounts_statement.account_id, savings_accounts_statement.account_number, savings_accounts_statement.starting_date, savings_accounts_statement.end_date, savings_accounts_statement.amount
	        FROM client.savings_accounts_statement
	        WHERE savings_accounts_statement.account_id = account_id
	        AND savings_accounts_statement.account_number = savings_account_id
	        AND savings_accounts_statement.statement_id = statement_id;
	END;
2023-01-13 08:24:57.195 GMT [67657] LOG:  received fast shutdown request
2023-01-13 08:24:57.197 GMT [67657] LOG:  aborting any active transactions
2023-01-13 08:24:57.204 GMT [67657] LOG:  background worker "logical replication launcher" (PID 67664) exited with exit code 1
2023-01-13 08:24:57.205 GMT [67659] LOG:  shutting down
2023-01-13 08:24:57.262 GMT [67657] LOG:  database system is shut down
2023-01-13 08:24:58.692 GMT [68051] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-13 08:24:58.692 GMT [68051] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-13 08:24:58.694 GMT [68051] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-13 08:24:58.700 GMT [68052] LOG:  database system was shut down at 2023-01-13 08:24:58 GMT
2023-01-13 08:24:58.707 GMT [68051] LOG:  database system is ready to accept connections
2023-01-13 08:24:59.642 GMT [68090] ERROR:  syntax error at or near "INSERT" at character 1028
2023-01-13 08:24:59.642 GMT [68090] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_credit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statement.account_id, credit_accounts_statement.account_number, credit_accounts_statement.starting_date, credit_accounts_statement.end_date, credit_accounts_statement.amount
	        FROM client.credit_accounts_statement
	        WHERE credit_accounts_statement.account_id = account_id
	        AND credit_accounts_statement.account_number = account_number
	        AND credit_accounts_statement.statement_id = statement_id;
	END;
	
	CREATE OR REPLACE FUNCTION client.view_savings_statement(account_id INT, savings_account_id INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statement', CURRENT_DATE);
	    RETURN QUERY
	        SELECT savings_accounts_statement.account_id, savings_accounts_statement.account_number, savings_accounts_statement.starting_date, savings_accounts_statement.end_date, savings_accounts_statement.amount
	        FROM client.savings_accounts_statement
	        WHERE savings_accounts_statement.account_id = account_id
	        AND savings_accounts_statement.account_number = savings_account_id
	        AND savings_accounts_statement.statement_id = statement_id;
	END;
2023-01-13 08:24:59.667 GMT [68090] ERROR:  column "id" does not exist at character 150
2023-01-13 08:24:59.667 GMT [68090] QUERY:  INSERT INTO savings_account (account_number, account_id, current_balance, interest_rate) VALUES (next_account_number ,account_id, 0, 0.01) RETURNING id
2023-01-13 08:24:59.667 GMT [68090] CONTEXT:  PL/pgSQL function open_savings_account(integer) line 9 at SQL statement
2023-01-13 08:24:59.667 GMT [68090] STATEMENT:  SELECT * FROM client.open_savings_account(1);
2023-01-13 08:26:02.633 GMT [68051] LOG:  received fast shutdown request
2023-01-13 08:26:02.635 GMT [68051] LOG:  aborting any active transactions
2023-01-13 08:26:02.638 GMT [68051] LOG:  background worker "logical replication launcher" (PID 68058) exited with exit code 1
2023-01-13 08:26:02.644 GMT [68053] LOG:  shutting down
2023-01-13 08:26:02.708 GMT [68051] LOG:  database system is shut down
2023-01-13 08:26:04.060 GMT [68363] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-13 08:26:04.061 GMT [68363] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-13 08:26:04.064 GMT [68363] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-13 08:26:04.070 GMT [68364] LOG:  database system was shut down at 2023-01-13 08:26:03 GMT
2023-01-13 08:26:04.076 GMT [68363] LOG:  database system is ready to accept connections
2023-01-13 08:26:04.935 GMT [68402] ERROR:  syntax error at or near "INSERT" at character 1028
2023-01-13 08:26:04.935 GMT [68402] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_credit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statement.account_id, credit_accounts_statement.account_number, credit_accounts_statement.starting_date, credit_accounts_statement.end_date, credit_accounts_statement.amount
	        FROM client.credit_accounts_statement
	        WHERE credit_accounts_statement.account_id = account_id
	        AND credit_accounts_statement.account_number = account_number
	        AND credit_accounts_statement.statement_id = statement_id;
	END;
	
	CREATE OR REPLACE FUNCTION client.view_savings_statement(account_id INT, savings_account_id INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statement', CURRENT_DATE);
	    RETURN QUERY
	        SELECT savings_accounts_statement.account_id, savings_accounts_statement.account_number, savings_accounts_statement.starting_date, savings_accounts_statement.end_date, savings_accounts_statement.amount
	        FROM client.savings_accounts_statement
	        WHERE savings_accounts_statement.account_id = account_id
	        AND savings_accounts_statement.account_number = savings_account_id
	        AND savings_accounts_statement.statement_id = statement_id;
	END;
2023-01-13 08:26:04.964 GMT [68402] ERROR:  column "account_id" of relation "savings_statement" does not exist at character 65
2023-01-13 08:26:04.964 GMT [68402] QUERY:  INSERT INTO savings_statement (starting_date, end_date, amount, account_id) VALUES (CURRENT_DATE, CURRENT_DATE, 0, savings_account_id)
2023-01-13 08:26:04.964 GMT [68402] CONTEXT:  PL/pgSQL function open_savings_account(integer) line 10 at SQL statement
2023-01-13 08:26:04.964 GMT [68402] STATEMENT:  SELECT * FROM client.open_savings_account(1);
2023-01-13 08:27:47.597 GMT [68363] LOG:  received fast shutdown request
2023-01-13 08:27:47.600 GMT [68363] LOG:  aborting any active transactions
2023-01-13 08:27:47.605 GMT [68363] LOG:  background worker "logical replication launcher" (PID 68370) exited with exit code 1
2023-01-13 08:27:47.605 GMT [68365] LOG:  shutting down
2023-01-13 08:27:47.658 GMT [68363] LOG:  database system is shut down
2023-01-13 08:27:49.132 GMT [68776] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-13 08:27:49.132 GMT [68776] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-13 08:27:49.134 GMT [68776] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-13 08:27:49.148 GMT [68777] LOG:  database system was shut down at 2023-01-13 08:27:48 GMT
2023-01-13 08:27:49.159 GMT [68776] LOG:  database system is ready to accept connections
2023-01-13 08:27:50.111 GMT [68817] ERROR:  syntax error at or near "INSERT" at character 1028
2023-01-13 08:27:50.111 GMT [68817] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_credit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statement.account_id, credit_accounts_statement.account_number, credit_accounts_statement.starting_date, credit_accounts_statement.end_date, credit_accounts_statement.amount
	        FROM client.credit_accounts_statement
	        WHERE credit_accounts_statement.account_id = account_id
	        AND credit_accounts_statement.account_number = account_number
	        AND credit_accounts_statement.statement_id = statement_id;
	END;
	
	CREATE OR REPLACE FUNCTION client.view_savings_statement(account_id INT, savings_account_id INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statement', CURRENT_DATE);
	    RETURN QUERY
	        SELECT savings_accounts_statement.account_id, savings_accounts_statement.account_number, savings_accounts_statement.starting_date, savings_accounts_statement.end_date, savings_accounts_statement.amount
	        FROM client.savings_accounts_statement
	        WHERE savings_accounts_statement.account_id = account_id
	        AND savings_accounts_statement.account_number = savings_account_id
	        AND savings_accounts_statement.statement_id = statement_id;
	END;
2023-01-13 08:27:50.149 GMT [68817] ERROR:  relation "external_account" does not exist at character 13
2023-01-13 08:27:50.149 GMT [68817] QUERY:  INSERT INTO external_account (account_id, external_account_number) VALUES (savings_account_id, '12345678')
2023-01-13 08:27:50.149 GMT [68817] CONTEXT:  PL/pgSQL function open_savings_account(integer) line 12 at SQL statement
2023-01-13 08:27:50.149 GMT [68817] STATEMENT:  SELECT * FROM client.open_savings_account(1);
2023-01-13 08:28:09.859 GMT [68776] LOG:  received fast shutdown request
2023-01-13 08:28:09.860 GMT [68776] LOG:  aborting any active transactions
2023-01-13 08:28:09.866 GMT [68776] LOG:  background worker "logical replication launcher" (PID 68783) exited with exit code 1
2023-01-13 08:28:09.866 GMT [68778] LOG:  shutting down
2023-01-13 08:28:09.927 GMT [68776] LOG:  database system is shut down
2023-01-13 08:28:11.816 GMT [68956] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-13 08:28:11.817 GMT [68956] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-13 08:28:11.822 GMT [68956] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-13 08:28:11.830 GMT [68958] LOG:  database system was shut down at 2023-01-13 08:28:11 GMT
2023-01-13 08:28:11.835 GMT [68956] LOG:  database system is ready to accept connections
2023-01-13 08:28:12.806 GMT [68995] ERROR:  syntax error at or near "INSERT" at character 1028
2023-01-13 08:28:12.806 GMT [68995] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_credit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statement.account_id, credit_accounts_statement.account_number, credit_accounts_statement.starting_date, credit_accounts_statement.end_date, credit_accounts_statement.amount
	        FROM client.credit_accounts_statement
	        WHERE credit_accounts_statement.account_id = account_id
	        AND credit_accounts_statement.account_number = account_number
	        AND credit_accounts_statement.statement_id = statement_id;
	END;
	
	CREATE OR REPLACE FUNCTION client.view_savings_statement(account_id INT, savings_account_id INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statement', CURRENT_DATE);
	    RETURN QUERY
	        SELECT savings_accounts_statement.account_id, savings_accounts_statement.account_number, savings_accounts_statement.starting_date, savings_accounts_statement.end_date, savings_accounts_statement.amount
	        FROM client.savings_accounts_statement
	        WHERE savings_accounts_statement.account_id = account_id
	        AND savings_accounts_statement.account_number = savings_account_id
	        AND savings_accounts_statement.statement_id = statement_id;
	END;
2023-01-13 08:28:12.852 GMT [68995] ERROR:  column "rowcount" does not exist at character 22
2023-01-13 08:28:12.852 GMT [68995] QUERY:  passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END
2023-01-13 08:28:12.852 GMT [68995] CONTEXT:  PL/pgSQL function open_savings_account(integer) line 12 at assignment
2023-01-13 08:28:12.852 GMT [68995] STATEMENT:  SELECT * FROM client.open_savings_account(1);
2023-01-13 08:30:56.058 GMT [68956] LOG:  received fast shutdown request
2023-01-13 08:30:56.060 GMT [68956] LOG:  aborting any active transactions
2023-01-13 08:30:56.065 GMT [68956] LOG:  background worker "logical replication launcher" (PID 68967) exited with exit code 1
2023-01-13 08:30:56.073 GMT [68962] LOG:  shutting down
2023-01-13 08:30:56.175 GMT [68956] LOG:  database system is shut down
2023-01-13 08:30:58.361 GMT [69575] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-13 08:30:58.362 GMT [69575] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-13 08:30:58.364 GMT [69575] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-13 08:30:58.371 GMT [69576] LOG:  database system was shut down at 2023-01-13 08:30:57 GMT
2023-01-13 08:30:58.378 GMT [69575] LOG:  database system is ready to accept connections
2023-01-13 08:30:59.413 GMT [69604] ERROR:  syntax error at or near "INSERT" at character 1028
2023-01-13 08:30:59.413 GMT [69604] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_credit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statement.account_id, credit_accounts_statement.account_number, credit_accounts_statement.starting_date, credit_accounts_statement.end_date, credit_accounts_statement.amount
	        FROM client.credit_accounts_statement
	        WHERE credit_accounts_statement.account_id = account_id
	        AND credit_accounts_statement.account_number = account_number
	        AND credit_accounts_statement.statement_id = statement_id;
	END;
	
	CREATE OR REPLACE FUNCTION client.view_savings_statement(account_id INT, savings_account_id INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statement', CURRENT_DATE);
	    RETURN QUERY
	        SELECT savings_accounts_statement.account_id, savings_accounts_statement.account_number, savings_accounts_statement.starting_date, savings_accounts_statement.end_date, savings_accounts_statement.amount
	        FROM client.savings_accounts_statement
	        WHERE savings_accounts_statement.account_id = account_id
	        AND savings_accounts_statement.account_number = savings_account_id
	        AND savings_accounts_statement.statement_id = statement_id;
	END;
2023-01-13 08:31:55.567 GMT [69575] LOG:  received fast shutdown request
2023-01-13 08:31:55.569 GMT [69575] LOG:  aborting any active transactions
2023-01-13 08:31:55.576 GMT [69575] LOG:  background worker "logical replication launcher" (PID 69582) exited with exit code 1
2023-01-13 08:31:55.579 GMT [69577] LOG:  shutting down
2023-01-13 08:31:55.642 GMT [69575] LOG:  database system is shut down
2023-01-13 08:31:57.022 GMT [69863] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-13 08:31:57.023 GMT [69863] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-13 08:31:57.024 GMT [69863] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-13 08:31:57.030 GMT [69864] LOG:  database system was shut down at 2023-01-13 08:31:56 GMT
2023-01-13 08:31:57.036 GMT [69863] LOG:  database system is ready to accept connections
2023-01-13 08:31:57.989 GMT [69902] ERROR:  syntax error at or near "INSERT" at character 1028
2023-01-13 08:31:57.989 GMT [69902] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_credit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statement.account_id, credit_accounts_statement.account_number, credit_accounts_statement.starting_date, credit_accounts_statement.end_date, credit_accounts_statement.amount
	        FROM client.credit_accounts_statement
	        WHERE credit_accounts_statement.account_id = account_id
	        AND credit_accounts_statement.account_number = account_number
	        AND credit_accounts_statement.statement_id = statement_id;
	END;
	
	CREATE OR REPLACE FUNCTION client.view_savings_statement(account_id INT, savings_account_id INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statement', CURRENT_DATE);
	    RETURN QUERY
	        SELECT savings_accounts_statement.account_id, savings_accounts_statement.account_number, savings_accounts_statement.starting_date, savings_accounts_statement.end_date, savings_accounts_statement.amount
	        FROM client.savings_accounts_statement
	        WHERE savings_accounts_statement.account_id = account_id
	        AND savings_accounts_statement.account_number = savings_account_id
	        AND savings_accounts_statement.statement_id = statement_id;
	END;
2023-01-13 08:32:46.328 GMT [69863] LOG:  received fast shutdown request
2023-01-13 08:32:46.330 GMT [69863] LOG:  aborting any active transactions
2023-01-13 08:32:46.336 GMT [69863] LOG:  background worker "logical replication launcher" (PID 69870) exited with exit code 1
2023-01-13 08:32:46.336 GMT [69865] LOG:  shutting down
2023-01-13 08:32:46.391 GMT [69863] LOG:  database system is shut down
2023-01-13 08:32:47.938 GMT [70120] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-13 08:32:47.938 GMT [70120] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-13 08:32:47.940 GMT [70120] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-13 08:32:47.945 GMT [70121] LOG:  database system was shut down at 2023-01-13 08:32:47 GMT
2023-01-13 08:32:47.952 GMT [70120] LOG:  database system is ready to accept connections
2023-01-13 08:32:48.946 GMT [70163] ERROR:  syntax error at or near "INSERT" at character 1028
2023-01-13 08:32:48.946 GMT [70163] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_credit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statement.account_id, credit_accounts_statement.account_number, credit_accounts_statement.starting_date, credit_accounts_statement.end_date, credit_accounts_statement.amount
	        FROM client.credit_accounts_statement
	        WHERE credit_accounts_statement.account_id = account_id
	        AND credit_accounts_statement.account_number = account_number
	        AND credit_accounts_statement.statement_id = statement_id;
	END;
	
	CREATE OR REPLACE FUNCTION client.view_savings_statement(account_id INT, savings_account_id INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statement', CURRENT_DATE);
	    RETURN QUERY
	        SELECT savings_accounts_statement.account_id, savings_accounts_statement.account_number, savings_accounts_statement.starting_date, savings_accounts_statement.end_date, savings_accounts_statement.amount
	        FROM client.savings_accounts_statement
	        WHERE savings_accounts_statement.account_id = account_id
	        AND savings_accounts_statement.account_number = savings_account_id
	        AND savings_accounts_statement.statement_id = statement_id;
	END;
2023-01-13 08:32:48.979 GMT [70163] ERROR:  missing FROM-clause entry for table "account" at character 8
2023-01-13 08:32:48.979 GMT [70163] QUERY:  SELECT account.*, COALESCE(debit_accounts.current_balance, credit_accounts.outstanding_balance, savings_accounts.current_balance, loans.loan_amount) AS balance,
	        COALESCE(debit_accounts.interest_rate, credit_accounts.interest_rate, savings_accounts.interest_rate, loans.loan_interest_rate) AS interest_rate,
	        get_account_type(account.account_number) AS account_type
2023-01-13 08:32:48.979 GMT [70163] CONTEXT:  PL/pgSQL function view_accounts(integer) line 5 at RETURN QUERY
2023-01-13 08:32:48.979 GMT [70163] STATEMENT:  SELECT * FROM client.view_accounts(1)
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
2023-01-13 08:33:49.331 GMT [70120] LOG:  received fast shutdown request
2023-01-13 08:33:49.333 GMT [70120] LOG:  aborting any active transactions
2023-01-13 08:33:49.340 GMT [70120] LOG:  background worker "logical replication launcher" (PID 70127) exited with exit code 1
2023-01-13 08:33:49.341 GMT [70122] LOG:  shutting down
2023-01-13 08:33:49.414 GMT [70120] LOG:  database system is shut down
2023-01-13 08:33:50.861 GMT [70444] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-13 08:33:50.862 GMT [70444] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-13 08:33:50.863 GMT [70444] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-13 08:33:50.869 GMT [70445] LOG:  database system was shut down at 2023-01-13 08:33:50 GMT
2023-01-13 08:33:50.875 GMT [70444] LOG:  database system is ready to accept connections
2023-01-13 08:33:51.781 GMT [70480] ERROR:  syntax error at or near "END" at character 769
2023-01-13 08:33:51.781 GMT [70480] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_accounts(account_id INT)
	RETURNS TABLE (account_number INT) AS $$
	
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed accounts', CURRENT_DATE);
	    RETURN QUERY
	        SELECT account.*, COALESCE(debit_accounts.current_balance, credit_accounts.outstanding_balance, savings_accounts.current_balance, loans.loan_amount) AS balance,
	        COALESCE(debit_accounts.interest_rate, credit_accounts.interest_rate, savings_accounts.interest_rate, loans.loan_interest_rate) AS interest_rate,
	        get_account_type(account.account_number) AS account_type
	        FROM account, debit_accounts, credit_accounts, savings_accounts, loans
	        WHERE account.account_id = account_id
	
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:33:51.793 GMT [70480] ERROR:  syntax error at or near "INSERT" at character 1028
2023-01-13 08:33:51.793 GMT [70480] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_credit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statement.account_id, credit_accounts_statement.account_number, credit_accounts_statement.starting_date, credit_accounts_statement.end_date, credit_accounts_statement.amount
	        FROM client.credit_accounts_statement
	        WHERE credit_accounts_statement.account_id = account_id
	        AND credit_accounts_statement.account_number = account_number
	        AND credit_accounts_statement.statement_id = statement_id;
	END;
	
	CREATE OR REPLACE FUNCTION client.view_savings_statement(account_id INT, savings_account_id INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statement', CURRENT_DATE);
	    RETURN QUERY
	        SELECT savings_accounts_statement.account_id, savings_accounts_statement.account_number, savings_accounts_statement.starting_date, savings_accounts_statement.end_date, savings_accounts_statement.amount
	        FROM client.savings_accounts_statement
	        WHERE savings_accounts_statement.account_id = account_id
	        AND savings_accounts_statement.account_number = savings_account_id
	        AND savings_accounts_statement.statement_id = statement_id;
	END;
2023-01-13 08:33:51.821 GMT [70480] ERROR:  function client.view_accounts(integer) does not exist at character 15
2023-01-13 08:33:51.821 GMT [70480] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2023-01-13 08:33:51.821 GMT [70480] STATEMENT:  SELECT * FROM client.view_accounts(1)
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
2023-01-13 08:34:49.631 GMT [70444] LOG:  received fast shutdown request
2023-01-13 08:34:49.633 GMT [70444] LOG:  aborting any active transactions
2023-01-13 08:34:49.638 GMT [70444] LOG:  background worker "logical replication launcher" (PID 70451) exited with exit code 1
2023-01-13 08:34:49.638 GMT [70446] LOG:  shutting down
2023-01-13 08:34:49.696 GMT [70444] LOG:  database system is shut down
2023-01-13 08:34:51.526 GMT [70713] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-13 08:34:51.526 GMT [70713] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-13 08:34:51.527 GMT [70713] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-13 08:34:51.531 GMT [70714] LOG:  database system was shut down at 2023-01-13 08:34:51 GMT
2023-01-13 08:34:51.539 GMT [70713] LOG:  database system is ready to accept connections
2023-01-13 08:34:52.535 GMT [70752] ERROR:  syntax error at or near "END" at character 773
2023-01-13 08:34:52.535 GMT [70752] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_accounts(account_id INTEGER)
	RETURNS TABLE (account_number INT) AS $$
	
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed accounts', CURRENT_DATE);
	    RETURN QUERY
	        SELECT account.*, COALESCE(debit_accounts.current_balance, credit_accounts.outstanding_balance, savings_accounts.current_balance, loans.loan_amount) AS balance,
	        COALESCE(debit_accounts.interest_rate, credit_accounts.interest_rate, savings_accounts.interest_rate, loans.loan_interest_rate) AS interest_rate,
	        get_account_type(account.account_number) AS account_type
	        FROM account, debit_accounts, credit_accounts, savings_accounts, loans
	        WHERE account.account_id = account_id
	
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:34:52.548 GMT [70752] ERROR:  syntax error at or near "INSERT" at character 1028
2023-01-13 08:34:52.548 GMT [70752] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_credit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statement.account_id, credit_accounts_statement.account_number, credit_accounts_statement.starting_date, credit_accounts_statement.end_date, credit_accounts_statement.amount
	        FROM client.credit_accounts_statement
	        WHERE credit_accounts_statement.account_id = account_id
	        AND credit_accounts_statement.account_number = account_number
	        AND credit_accounts_statement.statement_id = statement_id;
	END;
	
	CREATE OR REPLACE FUNCTION client.view_savings_statement(account_id INT, savings_account_id INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statement', CURRENT_DATE);
	    RETURN QUERY
	        SELECT savings_accounts_statement.account_id, savings_accounts_statement.account_number, savings_accounts_statement.starting_date, savings_accounts_statement.end_date, savings_accounts_statement.amount
	        FROM client.savings_accounts_statement
	        WHERE savings_accounts_statement.account_id = account_id
	        AND savings_accounts_statement.account_number = savings_account_id
	        AND savings_accounts_statement.statement_id = statement_id;
	END;
2023-01-13 08:34:52.580 GMT [70752] ERROR:  function client.view_accounts(integer) does not exist at character 15
2023-01-13 08:34:52.580 GMT [70752] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2023-01-13 08:34:52.580 GMT [70752] STATEMENT:  SELECT * FROM client.view_accounts(1)
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
2023-01-13 08:36:01.893 GMT [70713] LOG:  received fast shutdown request
2023-01-13 08:36:01.894 GMT [70713] LOG:  aborting any active transactions
2023-01-13 08:36:01.902 GMT [70713] LOG:  background worker "logical replication launcher" (PID 70720) exited with exit code 1
2023-01-13 08:36:01.902 GMT [70715] LOG:  shutting down
2023-01-13 08:36:01.973 GMT [70713] LOG:  database system is shut down
2023-01-13 08:36:03.262 GMT [71055] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-13 08:36:03.263 GMT [71055] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-13 08:36:03.264 GMT [71055] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-13 08:36:03.268 GMT [71056] LOG:  database system was shut down at 2023-01-13 08:36:02 GMT
2023-01-13 08:36:03.274 GMT [71055] LOG:  database system is ready to accept connections
2023-01-13 08:36:04.181 GMT [71094] ERROR:  parameter name "account_id" used more than once
2023-01-13 08:36:04.181 GMT [71094] CONTEXT:  compilation of PL/pgSQL function "view_credit_statement" near line 1
2023-01-13 08:36:04.181 GMT [71094] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_credit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statement.account_id, credit_accounts_statement.account_number, credit_accounts_statement.starting_date, credit_accounts_statement.end_date, credit_accounts_statement.amount
	        FROM client.credit_accounts_statement
	        WHERE credit_accounts_statement.account_id = account_id
	        AND credit_accounts_statement.account_number = account_number
	        AND credit_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:36:04.183 GMT [71094] ERROR:  parameter name "account_id" used more than once
2023-01-13 08:36:04.183 GMT [71094] CONTEXT:  compilation of PL/pgSQL function "view_savings_statement" near line 1
2023-01-13 08:36:04.183 GMT [71094] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_savings_statement(account_id INT, savings_account_id INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT savings_accounts_statement.account_id, savings_accounts_statement.account_number, savings_accounts_statement.starting_date, savings_accounts_statement.end_date, savings_accounts_statement.amount
	        FROM client.savings_accounts_statement
	        WHERE savings_accounts_statement.account_id = account_id
	        AND savings_accounts_statement.account_number = savings_account_id
	        AND savings_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:36:04.218 GMT [71094] ERROR:  relation "debit_accounts" does not exist at character 403
2023-01-13 08:36:04.218 GMT [71094] QUERY:  SELECT account.*, COALESCE(debit_accounts.current_balance, credit_accounts.outstanding_balance, savings_accounts.current_balance, loans.loan_amount) AS balance,
	        COALESCE(debit_accounts.interest_rate, credit_accounts.interest_rate, savings_accounts.interest_rate, loans.loan_interest_rate) AS interest_rate,
	        get_account_type(account.account_number) AS account_type
	        FROM account, debit_accounts, credit_accounts, savings_accounts, loans
	        WHERE account.account_id = account_id
2023-01-13 08:36:04.218 GMT [71094] CONTEXT:  PL/pgSQL function view_accounts(integer) line 5 at RETURN QUERY
2023-01-13 08:36:04.218 GMT [71094] STATEMENT:  SELECT * FROM client.view_accounts(1)
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
2023-01-13 08:36:21.045 GMT [71055] LOG:  received fast shutdown request
2023-01-13 08:36:21.049 GMT [71055] LOG:  aborting any active transactions
2023-01-13 08:36:21.052 GMT [71055] LOG:  background worker "logical replication launcher" (PID 71062) exited with exit code 1
2023-01-13 08:36:21.055 GMT [71057] LOG:  shutting down
2023-01-13 08:36:21.118 GMT [71055] LOG:  database system is shut down
2023-01-13 08:36:22.669 GMT [71227] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-13 08:36:22.670 GMT [71227] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-13 08:36:22.672 GMT [71227] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-13 08:36:22.677 GMT [71228] LOG:  database system was shut down at 2023-01-13 08:36:22 GMT
2023-01-13 08:36:22.683 GMT [71227] LOG:  database system is ready to accept connections
2023-01-13 08:36:23.697 GMT [71267] ERROR:  parameter name "account_id" used more than once
2023-01-13 08:36:23.697 GMT [71267] CONTEXT:  compilation of PL/pgSQL function "view_credit_statement" near line 1
2023-01-13 08:36:23.697 GMT [71267] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_credit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statement.account_id, credit_accounts_statement.account_number, credit_accounts_statement.starting_date, credit_accounts_statement.end_date, credit_accounts_statement.amount
	        FROM client.credit_accounts_statement
	        WHERE credit_accounts_statement.account_id = account_id
	        AND credit_accounts_statement.account_number = account_number
	        AND credit_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:36:23.698 GMT [71267] ERROR:  parameter name "account_id" used more than once
2023-01-13 08:36:23.698 GMT [71267] CONTEXT:  compilation of PL/pgSQL function "view_savings_statement" near line 1
2023-01-13 08:36:23.698 GMT [71267] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_savings_statement(account_id INT, savings_account_id INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT savings_accounts_statement.account_id, savings_accounts_statement.account_number, savings_accounts_statement.starting_date, savings_accounts_statement.end_date, savings_accounts_statement.amount
	        FROM client.savings_accounts_statement
	        WHERE savings_accounts_statement.account_id = account_id
	        AND savings_accounts_statement.account_number = savings_account_id
	        AND savings_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:36:23.729 GMT [71267] ERROR:  relation "loans" does not exist at character 451
2023-01-13 08:36:23.729 GMT [71267] QUERY:  SELECT account.*, COALESCE(debit_accounts.current_balance, credit_accounts.outstanding_balance, savings_accounts.current_balance, loans.loan_amount) AS balance,
	        COALESCE(debit_accounts.interest_rate, credit_accounts.interest_rate, savings_accounts.interest_rate, loans.loan_interest_rate) AS interest_rate,
	        get_account_type(account.account_number) AS account_type
	        FROM account, debit_account, credit_account, savings_account, loans
	        WHERE account.account_id = account_id
2023-01-13 08:36:23.729 GMT [71267] CONTEXT:  PL/pgSQL function view_accounts(integer) line 5 at RETURN QUERY
2023-01-13 08:36:23.729 GMT [71267] STATEMENT:  SELECT * FROM client.view_accounts(1)
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
2023-01-13 08:36:31.578 GMT [71227] LOG:  received fast shutdown request
2023-01-13 08:36:31.581 GMT [71227] LOG:  aborting any active transactions
2023-01-13 08:36:31.587 GMT [71227] LOG:  background worker "logical replication launcher" (PID 71234) exited with exit code 1
2023-01-13 08:36:31.591 GMT [71229] LOG:  shutting down
2023-01-13 08:36:31.659 GMT [71227] LOG:  database system is shut down
2023-01-13 08:36:33.044 GMT [71372] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-13 08:36:33.044 GMT [71372] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-13 08:36:33.046 GMT [71372] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-13 08:36:33.050 GMT [71373] LOG:  database system was shut down at 2023-01-13 08:36:32 GMT
2023-01-13 08:36:33.057 GMT [71372] LOG:  database system is ready to accept connections
2023-01-13 08:36:34.041 GMT [71411] ERROR:  parameter name "account_id" used more than once
2023-01-13 08:36:34.041 GMT [71411] CONTEXT:  compilation of PL/pgSQL function "view_credit_statement" near line 1
2023-01-13 08:36:34.041 GMT [71411] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_credit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statement.account_id, credit_accounts_statement.account_number, credit_accounts_statement.starting_date, credit_accounts_statement.end_date, credit_accounts_statement.amount
	        FROM client.credit_accounts_statement
	        WHERE credit_accounts_statement.account_id = account_id
	        AND credit_accounts_statement.account_number = account_number
	        AND credit_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:36:34.045 GMT [71411] ERROR:  parameter name "account_id" used more than once
2023-01-13 08:36:34.045 GMT [71411] CONTEXT:  compilation of PL/pgSQL function "view_savings_statement" near line 1
2023-01-13 08:36:34.045 GMT [71411] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_savings_statement(account_id INT, savings_account_id INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT savings_accounts_statement.account_id, savings_accounts_statement.account_number, savings_accounts_statement.starting_date, savings_accounts_statement.end_date, savings_accounts_statement.amount
	        FROM client.savings_accounts_statement
	        WHERE savings_accounts_statement.account_id = account_id
	        AND savings_accounts_statement.account_number = savings_account_id
	        AND savings_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:36:34.082 GMT [71411] ERROR:  missing FROM-clause entry for table "debit_accounts" at character 28
2023-01-13 08:36:34.082 GMT [71411] QUERY:  SELECT account.*, COALESCE(debit_accounts.current_balance, credit_accounts.outstanding_balance, savings_accounts.current_balance, loans.loan_amount) AS balance,
	        COALESCE(debit_accounts.interest_rate, credit_accounts.interest_rate, savings_accounts.interest_rate, loans.loan_interest_rate) AS interest_rate,
	        get_account_type(account.account_number) AS account_type
	        FROM account, debit_account, credit_account, savings_account, loan
	        WHERE account.account_id = account_id
2023-01-13 08:36:34.082 GMT [71411] CONTEXT:  PL/pgSQL function view_accounts(integer) line 5 at RETURN QUERY
2023-01-13 08:36:34.082 GMT [71411] STATEMENT:  SELECT * FROM client.view_accounts(1)
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
2023-01-13 08:37:00.820 GMT [71372] LOG:  received fast shutdown request
2023-01-13 08:37:00.822 GMT [71372] LOG:  aborting any active transactions
2023-01-13 08:37:00.827 GMT [71372] LOG:  background worker "logical replication launcher" (PID 71379) exited with exit code 1
2023-01-13 08:37:00.827 GMT [71374] LOG:  shutting down
2023-01-13 08:37:00.890 GMT [71372] LOG:  database system is shut down
2023-01-13 08:37:02.559 GMT [71577] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-13 08:37:02.560 GMT [71577] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-13 08:37:02.562 GMT [71577] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-13 08:37:02.568 GMT [71578] LOG:  database system was shut down at 2023-01-13 08:37:02 GMT
2023-01-13 08:37:02.574 GMT [71577] LOG:  database system is ready to accept connections
2023-01-13 08:37:03.524 GMT [71616] ERROR:  parameter name "account_id" used more than once
2023-01-13 08:37:03.524 GMT [71616] CONTEXT:  compilation of PL/pgSQL function "view_credit_statement" near line 1
2023-01-13 08:37:03.524 GMT [71616] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_credit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statement.account_id, credit_accounts_statement.account_number, credit_accounts_statement.starting_date, credit_accounts_statement.end_date, credit_accounts_statement.amount
	        FROM client.credit_accounts_statement
	        WHERE credit_accounts_statement.account_id = account_id
	        AND credit_accounts_statement.account_number = account_number
	        AND credit_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:37:03.526 GMT [71616] ERROR:  parameter name "account_id" used more than once
2023-01-13 08:37:03.526 GMT [71616] CONTEXT:  compilation of PL/pgSQL function "view_savings_statement" near line 1
2023-01-13 08:37:03.526 GMT [71616] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_savings_statement(account_id INT, savings_account_id INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT savings_accounts_statement.account_id, savings_accounts_statement.account_number, savings_accounts_statement.starting_date, savings_accounts_statement.end_date, savings_accounts_statement.amount
	        FROM client.savings_accounts_statement
	        WHERE savings_accounts_statement.account_id = account_id
	        AND savings_accounts_statement.account_number = savings_account_id
	        AND savings_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:37:03.565 GMT [71616] ERROR:  missing FROM-clause entry for table "loans" at character 131
2023-01-13 08:37:03.565 GMT [71616] QUERY:  SELECT account.*, COALESCE(debit_accounts.current_balance, credit_accounts.outstanding_balance, savings_accounts.current_balance, loans.loan_amount) AS balance,
	        COALESCE(debit_accounts.interest_rate, credit_accounts.interest_rate, savings_accounts.interest_rate, loans.loan_interest_rate) AS interest_rate,
	        get_account_type(account.account_number) AS account_type
	        FROM account, client.debit_accounts, client.credit_accounts, client.savings_accounts, loan
	        WHERE account.account_id = account_id
2023-01-13 08:37:03.565 GMT [71616] CONTEXT:  PL/pgSQL function view_accounts(integer) line 5 at RETURN QUERY
2023-01-13 08:37:03.565 GMT [71616] STATEMENT:  SELECT * FROM client.view_accounts(1)
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
2023-01-13 08:37:20.171 GMT [71577] LOG:  received fast shutdown request
2023-01-13 08:37:20.173 GMT [71577] LOG:  aborting any active transactions
2023-01-13 08:37:20.178 GMT [71577] LOG:  background worker "logical replication launcher" (PID 71584) exited with exit code 1
2023-01-13 08:37:20.178 GMT [71579] LOG:  shutting down
2023-01-13 08:37:20.236 GMT [71577] LOG:  database system is shut down
2023-01-13 08:37:21.699 GMT [71746] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-13 08:37:21.699 GMT [71746] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-13 08:37:21.700 GMT [71746] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-13 08:37:21.705 GMT [71747] LOG:  database system was shut down at 2023-01-13 08:37:21 GMT
2023-01-13 08:37:21.712 GMT [71746] LOG:  database system is ready to accept connections
2023-01-13 08:37:22.700 GMT [71785] ERROR:  parameter name "account_id" used more than once
2023-01-13 08:37:22.700 GMT [71785] CONTEXT:  compilation of PL/pgSQL function "view_credit_statement" near line 1
2023-01-13 08:37:22.700 GMT [71785] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_credit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statement.account_id, credit_accounts_statement.account_number, credit_accounts_statement.starting_date, credit_accounts_statement.end_date, credit_accounts_statement.amount
	        FROM client.credit_accounts_statement
	        WHERE credit_accounts_statement.account_id = account_id
	        AND credit_accounts_statement.account_number = account_number
	        AND credit_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:37:22.701 GMT [71785] ERROR:  parameter name "account_id" used more than once
2023-01-13 08:37:22.701 GMT [71785] CONTEXT:  compilation of PL/pgSQL function "view_savings_statement" near line 1
2023-01-13 08:37:22.701 GMT [71785] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_savings_statement(account_id INT, savings_account_id INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT savings_accounts_statement.account_id, savings_accounts_statement.account_number, savings_accounts_statement.starting_date, savings_accounts_statement.end_date, savings_accounts_statement.amount
	        FROM client.savings_accounts_statement
	        WHERE savings_accounts_statement.account_id = account_id
	        AND savings_accounts_statement.account_number = savings_account_id
	        AND savings_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:37:22.746 GMT [71785] ERROR:  column loans.loan_amount does not exist at character 131
2023-01-13 08:37:22.746 GMT [71785] QUERY:  SELECT account.*, COALESCE(debit_accounts.current_balance, credit_accounts.outstanding_balance, savings_accounts.current_balance, loans.loan_amount) AS balance,
	        COALESCE(debit_accounts.interest_rate, credit_accounts.interest_rate, savings_accounts.interest_rate, loans.loan_interest_rate) AS interest_rate,
	        get_account_type(account.account_number) AS account_type
	        FROM account, client.debit_accounts, client.credit_accounts, client.savings_accounts, client.loans
	        WHERE account.account_id = account_id
2023-01-13 08:37:22.746 GMT [71785] CONTEXT:  PL/pgSQL function view_accounts(integer) line 5 at RETURN QUERY
2023-01-13 08:37:22.746 GMT [71785] STATEMENT:  SELECT * FROM client.view_accounts(1)
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
2023-01-13 08:37:41.580 GMT [71746] LOG:  received fast shutdown request
2023-01-13 08:37:41.583 GMT [71746] LOG:  aborting any active transactions
2023-01-13 08:37:41.587 GMT [71746] LOG:  background worker "logical replication launcher" (PID 71753) exited with exit code 1
2023-01-13 08:37:41.590 GMT [71748] LOG:  shutting down
2023-01-13 08:37:41.662 GMT [71746] LOG:  database system is shut down
2023-01-13 08:37:43.041 GMT [71921] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-13 08:37:43.041 GMT [71921] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-13 08:37:43.043 GMT [71921] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-13 08:37:43.048 GMT [71922] LOG:  database system was shut down at 2023-01-13 08:37:42 GMT
2023-01-13 08:37:43.054 GMT [71921] LOG:  database system is ready to accept connections
2023-01-13 08:37:43.979 GMT [71960] ERROR:  parameter name "account_id" used more than once
2023-01-13 08:37:43.979 GMT [71960] CONTEXT:  compilation of PL/pgSQL function "view_credit_statement" near line 1
2023-01-13 08:37:43.979 GMT [71960] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_credit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statement.account_id, credit_accounts_statement.account_number, credit_accounts_statement.starting_date, credit_accounts_statement.end_date, credit_accounts_statement.amount
	        FROM client.credit_accounts_statement
	        WHERE credit_accounts_statement.account_id = account_id
	        AND credit_accounts_statement.account_number = account_number
	        AND credit_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:37:43.979 GMT [71960] ERROR:  parameter name "account_id" used more than once
2023-01-13 08:37:43.979 GMT [71960] CONTEXT:  compilation of PL/pgSQL function "view_savings_statement" near line 1
2023-01-13 08:37:43.979 GMT [71960] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_savings_statement(account_id INT, savings_account_id INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT savings_accounts_statement.account_id, savings_accounts_statement.account_number, savings_accounts_statement.starting_date, savings_accounts_statement.end_date, savings_accounts_statement.amount
	        FROM client.savings_accounts_statement
	        WHERE savings_accounts_statement.account_id = account_id
	        AND savings_accounts_statement.account_number = savings_account_id
	        AND savings_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:37:44.022 GMT [71960] ERROR:  function get_account_type(integer) does not exist at character 314
2023-01-13 08:37:44.022 GMT [71960] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2023-01-13 08:37:44.022 GMT [71960] QUERY:  SELECT account.*, COALESCE(debit_accounts.current_balance, credit_accounts.outstanding_balance, savings_accounts.current_balance, loans.amount) AS balance,
	        COALESCE(debit_accounts.interest_rate, credit_accounts.interest_rate, savings_accounts.interest_rate, loans.interest_rate) AS interest_rate,
	        get_account_type(account.account_number) AS account_type
	        FROM account, client.debit_accounts, client.credit_accounts, client.savings_accounts, client.loans
	        WHERE account.account_id = account_id
2023-01-13 08:37:44.022 GMT [71960] CONTEXT:  PL/pgSQL function view_accounts(integer) line 5 at RETURN QUERY
2023-01-13 08:37:44.022 GMT [71960] STATEMENT:  SELECT * FROM client.view_accounts(1)
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
2023-01-13 08:51:48.819 GMT [71921] LOG:  received fast shutdown request
2023-01-13 08:51:48.821 GMT [71921] LOG:  aborting any active transactions
2023-01-13 08:51:48.825 GMT [71921] LOG:  background worker "logical replication launcher" (PID 71928) exited with exit code 1
2023-01-13 08:51:48.829 GMT [71923] LOG:  shutting down
2023-01-13 08:51:48.847 GMT [71921] LOG:  database system is shut down
2023-01-13 08:51:50.417 GMT [73562] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-13 08:51:50.418 GMT [73562] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-13 08:51:50.420 GMT [73562] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-13 08:51:50.426 GMT [73563] LOG:  database system was shut down at 2023-01-13 08:51:50 GMT
2023-01-13 08:51:50.434 GMT [73562] LOG:  database system is ready to accept connections
2023-01-13 08:51:51.966 GMT [73601] ERROR:  parameter name "account_id" used more than once
2023-01-13 08:51:51.966 GMT [73601] CONTEXT:  compilation of PL/pgSQL function "view_credit_statement" near line 1
2023-01-13 08:51:51.966 GMT [73601] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_credit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statement.account_id, credit_accounts_statement.account_number, credit_accounts_statement.starting_date, credit_accounts_statement.end_date, credit_accounts_statement.amount
	        FROM client.credit_accounts_statement
	        WHERE credit_accounts_statement.account_id = account_id
	        AND credit_accounts_statement.account_number = account_number
	        AND credit_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:51:51.967 GMT [73601] ERROR:  parameter name "account_id" used more than once
2023-01-13 08:51:51.967 GMT [73601] CONTEXT:  compilation of PL/pgSQL function "view_savings_statement" near line 1
2023-01-13 08:51:51.967 GMT [73601] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_savings_statement(account_id INT, savings_account_id INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT savings_accounts_statement.account_id, savings_accounts_statement.account_number, savings_accounts_statement.starting_date, savings_accounts_statement.end_date, savings_accounts_statement.amount
	        FROM client.savings_accounts_statement
	        WHERE savings_accounts_statement.account_id = account_id
	        AND savings_accounts_statement.account_number = savings_account_id
	        AND savings_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:51:52.003 GMT [73601] ERROR:  column reference "account_id" is ambiguous at character 513
2023-01-13 08:51:52.003 GMT [73601] QUERY:  SELECT account.*, COALESCE(debit_accounts.current_balance, credit_accounts.outstanding_balance, savings_accounts.current_balance, loans.amount) AS balance,
	        COALESCE(debit_accounts.interest_rate, credit_accounts.interest_rate, savings_accounts.interest_rate, loans.interest_rate) AS interest_rate,
	        get_account_type(account.account_number) AS account_type
	        FROM account, client.debit_accounts, client.credit_accounts, client.savings_accounts, client.loans
	        WHERE account.account_id = account_id
2023-01-13 08:51:52.003 GMT [73601] CONTEXT:  PL/pgSQL function view_accounts(integer) line 5 at RETURN QUERY
2023-01-13 08:51:52.003 GMT [73601] STATEMENT:  SELECT * FROM client.view_accounts(1)
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
2023-01-13 08:54:45.611 GMT [73562] LOG:  received fast shutdown request
2023-01-13 08:54:45.613 GMT [73562] LOG:  aborting any active transactions
2023-01-13 08:54:45.619 GMT [73562] LOG:  background worker "logical replication launcher" (PID 73569) exited with exit code 1
2023-01-13 08:54:45.619 GMT [73564] LOG:  shutting down
2023-01-13 08:54:45.700 GMT [73562] LOG:  database system is shut down
2023-01-13 08:54:47.346 GMT [74177] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-13 08:54:47.346 GMT [74177] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-13 08:54:47.347 GMT [74177] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-13 08:54:47.359 GMT [74178] LOG:  database system was shut down at 2023-01-13 08:54:46 GMT
2023-01-13 08:54:47.365 GMT [74177] LOG:  database system is ready to accept connections
2023-01-13 08:54:48.466 GMT [74213] ERROR:  parameter name "account_id" used more than once
2023-01-13 08:54:48.466 GMT [74213] CONTEXT:  compilation of PL/pgSQL function "view_credit_statement" near line 1
2023-01-13 08:54:48.466 GMT [74213] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_credit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statement.account_id, credit_accounts_statement.account_number, credit_accounts_statement.starting_date, credit_accounts_statement.end_date, credit_accounts_statement.amount
	        FROM client.credit_accounts_statement
	        WHERE credit_accounts_statement.account_id = account_id
	        AND credit_accounts_statement.account_number = account_number
	        AND credit_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:54:48.469 GMT [74213] ERROR:  parameter name "account_id" used more than once
2023-01-13 08:54:48.469 GMT [74213] CONTEXT:  compilation of PL/pgSQL function "view_savings_statement" near line 1
2023-01-13 08:54:48.469 GMT [74213] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_savings_statement(account_id INT, savings_account_id INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT savings_accounts_statement.account_id, savings_accounts_statement.account_number, savings_accounts_statement.starting_date, savings_accounts_statement.end_date, savings_accounts_statement.amount
	        FROM client.savings_accounts_statement
	        WHERE savings_accounts_statement.account_id = account_id
	        AND savings_accounts_statement.account_number = savings_account_id
	        AND savings_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:54:48.511 GMT [74213] ERROR:  column "account_id" does not exist at character 76
2023-01-13 08:54:48.511 GMT [74213] HINT:  There is a column named "account_id" in table "management_log", but it cannot be referenced from this part of the query.
2023-01-13 08:54:48.511 GMT [74213] QUERY:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed accounts', CURRENT_DATE)
2023-01-13 08:54:48.511 GMT [74213] CONTEXT:  PL/pgSQL function view_accounts(integer) line 4 at SQL statement
2023-01-13 08:54:48.511 GMT [74213] STATEMENT:  SELECT * FROM client.view_accounts(1)
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
2023-01-13 08:55:55.555 GMT [74177] LOG:  received fast shutdown request
2023-01-13 08:55:55.557 GMT [74177] LOG:  aborting any active transactions
2023-01-13 08:55:55.565 GMT [74177] LOG:  background worker "logical replication launcher" (PID 74184) exited with exit code 1
2023-01-13 08:55:55.566 GMT [74179] LOG:  shutting down
2023-01-13 08:55:55.627 GMT [74177] LOG:  database system is shut down
2023-01-13 08:55:57.109 GMT [74478] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-13 08:55:57.110 GMT [74478] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-13 08:55:57.111 GMT [74478] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-13 08:55:57.117 GMT [74479] LOG:  database system was shut down at 2023-01-13 08:55:56 GMT
2023-01-13 08:55:57.124 GMT [74478] LOG:  database system is ready to accept connections
2023-01-13 08:55:58.093 GMT [74514] ERROR:  parameter name "account_id" used more than once
2023-01-13 08:55:58.093 GMT [74514] CONTEXT:  compilation of PL/pgSQL function "view_credit_statement" near line 1
2023-01-13 08:55:58.093 GMT [74514] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_credit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statement.account_id, credit_accounts_statement.account_number, credit_accounts_statement.starting_date, credit_accounts_statement.end_date, credit_accounts_statement.amount
	        FROM client.credit_accounts_statement
	        WHERE credit_accounts_statement.account_id = account_id
	        AND credit_accounts_statement.account_number = account_number
	        AND credit_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:55:58.097 GMT [74514] ERROR:  parameter name "account_id" used more than once
2023-01-13 08:55:58.097 GMT [74514] CONTEXT:  compilation of PL/pgSQL function "view_savings_statement" near line 1
2023-01-13 08:55:58.097 GMT [74514] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_savings_statement(account_id INT, savings_account_id INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT savings_accounts_statement.account_id, savings_accounts_statement.account_number, savings_accounts_statement.starting_date, savings_accounts_statement.end_date, savings_accounts_statement.amount
	        FROM client.savings_accounts_statement
	        WHERE savings_accounts_statement.account_id = account_id
	        AND savings_accounts_statement.account_number = savings_account_id
	        AND savings_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:55:58.292 GMT [74514] ERROR:  structure of query does not match function result type
2023-01-13 08:55:58.292 GMT [74514] DETAIL:  Number of returned columns (5) does not match expected column count (1).
2023-01-13 08:55:58.292 GMT [74514] CONTEXT:  SQL statement "SELECT account.*, COALESCE(debit_accounts.current_balance, credit_accounts.outstanding_balance, savings_accounts.current_balance, loans.amount) AS balance,
	        COALESCE(debit_accounts.interest_rate, credit_accounts.interest_rate, savings_accounts.interest_rate, loans.interest_rate) AS interest_rate,
	        get_account_type(account.account_number) AS account_type
	        FROM account, client.debit_accounts, client.credit_accounts, client.savings_accounts, client.loans
	        WHERE account.account_id = account_identifier"
	PL/pgSQL function view_accounts(integer) line 5 at RETURN QUERY
2023-01-13 08:55:58.292 GMT [74514] STATEMENT:  SELECT * FROM client.view_accounts(1)
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
2023-01-13 08:56:12.587 GMT [74478] LOG:  received fast shutdown request
2023-01-13 08:56:12.589 GMT [74478] LOG:  aborting any active transactions
2023-01-13 08:56:12.596 GMT [74478] LOG:  background worker "logical replication launcher" (PID 74485) exited with exit code 1
2023-01-13 08:56:12.596 GMT [74480] LOG:  shutting down
2023-01-13 08:56:12.659 GMT [74478] LOG:  database system is shut down
2023-01-13 08:56:14.322 GMT [74637] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-13 08:56:14.322 GMT [74637] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-13 08:56:14.324 GMT [74637] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-13 08:56:14.332 GMT [74638] LOG:  database system was shut down at 2023-01-13 08:56:13 GMT
2023-01-13 08:56:14.340 GMT [74637] LOG:  database system is ready to accept connections
2023-01-13 08:56:15.336 GMT [74676] ERROR:  syntax error at or near "AS" at character 87
2023-01-13 08:56:15.336 GMT [74676] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_accounts(account_identifier INT)
	RETURNS TABLE AS $$
	
	BEGIN
	    --INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed accounts', CURRENT_DATE);
	    RETURN QUERY
	        SELECT account.*, COALESCE(debit_accounts.current_balance, credit_accounts.outstanding_balance, savings_accounts.current_balance, loans.amount) AS balance,
	        COALESCE(debit_accounts.interest_rate, credit_accounts.interest_rate, savings_accounts.interest_rate, loans.interest_rate) AS interest_rate,
	        get_account_type(account.account_number) AS account_type
	        FROM account, client.debit_accounts, client.credit_accounts, client.savings_accounts, client.loans
	        WHERE account.account_id = account_identifier;
	
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:56:15.349 GMT [74676] ERROR:  parameter name "account_id" used more than once
2023-01-13 08:56:15.349 GMT [74676] CONTEXT:  compilation of PL/pgSQL function "view_credit_statement" near line 1
2023-01-13 08:56:15.349 GMT [74676] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_credit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statement.account_id, credit_accounts_statement.account_number, credit_accounts_statement.starting_date, credit_accounts_statement.end_date, credit_accounts_statement.amount
	        FROM client.credit_accounts_statement
	        WHERE credit_accounts_statement.account_id = account_id
	        AND credit_accounts_statement.account_number = account_number
	        AND credit_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:56:15.350 GMT [74676] ERROR:  parameter name "account_id" used more than once
2023-01-13 08:56:15.350 GMT [74676] CONTEXT:  compilation of PL/pgSQL function "view_savings_statement" near line 1
2023-01-13 08:56:15.350 GMT [74676] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_savings_statement(account_id INT, savings_account_id INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT savings_accounts_statement.account_id, savings_accounts_statement.account_number, savings_accounts_statement.starting_date, savings_accounts_statement.end_date, savings_accounts_statement.amount
	        FROM client.savings_accounts_statement
	        WHERE savings_accounts_statement.account_id = account_id
	        AND savings_accounts_statement.account_number = savings_account_id
	        AND savings_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:56:15.380 GMT [74676] ERROR:  function client.view_accounts(integer) does not exist at character 15
2023-01-13 08:56:15.380 GMT [74676] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2023-01-13 08:56:15.380 GMT [74676] STATEMENT:  SELECT * FROM client.view_accounts(1)
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
2023-01-13 08:57:34.892 GMT [74637] LOG:  received fast shutdown request
2023-01-13 08:57:34.895 GMT [74637] LOG:  aborting any active transactions
2023-01-13 08:57:34.898 GMT [74637] LOG:  background worker "logical replication launcher" (PID 74644) exited with exit code 1
2023-01-13 08:57:34.902 GMT [74639] LOG:  shutting down
2023-01-13 08:57:34.985 GMT [74637] LOG:  database system is shut down
2023-01-13 08:57:36.341 GMT [75017] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-13 08:57:36.342 GMT [75017] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-13 08:57:36.343 GMT [75017] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-13 08:57:36.349 GMT [75018] LOG:  database system was shut down at 2023-01-13 08:57:35 GMT
2023-01-13 08:57:36.357 GMT [75017] LOG:  database system is ready to accept connections
2023-01-13 08:57:37.461 GMT [75053] ERROR:  syntax error at or near "," at character 102
2023-01-13 08:57:37.461 GMT [75053] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_accounts(account_identifier INT)
	RETURNS TABLE (account_number, account_id, balance, interest_rate, account_type) AS $$
	
	BEGIN
	    --INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed accounts', CURRENT_DATE);
	    RETURN QUERY
	        SELECT account.*, COALESCE(debit_accounts.current_balance, credit_accounts.outstanding_balance, savings_accounts.current_balance, loans.amount) AS balance,
	        COALESCE(debit_accounts.interest_rate, credit_accounts.interest_rate, savings_accounts.interest_rate, loans.interest_rate) AS interest_rate,
	        get_account_type(account.account_number) AS account_type
	        FROM account, client.debit_accounts, client.credit_accounts, client.savings_accounts, client.loans
	        WHERE account.account_id = account_identifier;
	
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:57:37.477 GMT [75053] ERROR:  parameter name "account_id" used more than once
2023-01-13 08:57:37.477 GMT [75053] CONTEXT:  compilation of PL/pgSQL function "view_credit_statement" near line 1
2023-01-13 08:57:37.477 GMT [75053] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_credit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statement.account_id, credit_accounts_statement.account_number, credit_accounts_statement.starting_date, credit_accounts_statement.end_date, credit_accounts_statement.amount
	        FROM client.credit_accounts_statement
	        WHERE credit_accounts_statement.account_id = account_id
	        AND credit_accounts_statement.account_number = account_number
	        AND credit_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:57:37.480 GMT [75053] ERROR:  parameter name "account_id" used more than once
2023-01-13 08:57:37.480 GMT [75053] CONTEXT:  compilation of PL/pgSQL function "view_savings_statement" near line 1
2023-01-13 08:57:37.480 GMT [75053] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_savings_statement(account_id INT, savings_account_id INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT savings_accounts_statement.account_id, savings_accounts_statement.account_number, savings_accounts_statement.starting_date, savings_accounts_statement.end_date, savings_accounts_statement.amount
	        FROM client.savings_accounts_statement
	        WHERE savings_accounts_statement.account_id = account_id
	        AND savings_accounts_statement.account_number = savings_account_id
	        AND savings_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 08:57:37.519 GMT [75053] ERROR:  function client.view_accounts(integer) does not exist at character 15
2023-01-13 08:57:37.519 GMT [75053] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2023-01-13 08:57:37.519 GMT [75053] STATEMENT:  SELECT * FROM client.view_accounts(1)
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
2023-01-13 09:00:29.174 GMT [75017] LOG:  received fast shutdown request
2023-01-13 09:00:29.176 GMT [75017] LOG:  aborting any active transactions
2023-01-13 09:00:29.179 GMT [75017] LOG:  background worker "logical replication launcher" (PID 75024) exited with exit code 1
2023-01-13 09:00:29.182 GMT [75019] LOG:  shutting down
2023-01-13 09:00:29.277 GMT [75017] LOG:  database system is shut down
2023-01-13 09:00:30.983 GMT [75612] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-13 09:00:30.984 GMT [75612] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-13 09:00:30.986 GMT [75612] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-13 09:00:30.992 GMT [75613] LOG:  database system was shut down at 2023-01-13 09:00:30 GMT
2023-01-13 09:00:30.999 GMT [75612] LOG:  database system is ready to accept connections
2023-01-13 09:00:32.156 GMT [75651] ERROR:  parameter name "account_id" used more than once
2023-01-13 09:00:32.156 GMT [75651] CONTEXT:  compilation of PL/pgSQL function "view_credit_statement" near line 1
2023-01-13 09:00:32.156 GMT [75651] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_credit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statement.account_id, credit_accounts_statement.account_number, credit_accounts_statement.starting_date, credit_accounts_statement.end_date, credit_accounts_statement.amount
	        FROM client.credit_accounts_statement
	        WHERE credit_accounts_statement.account_id = account_id
	        AND credit_accounts_statement.account_number = account_number
	        AND credit_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 09:00:32.157 GMT [75651] ERROR:  parameter name "account_id" used more than once
2023-01-13 09:00:32.157 GMT [75651] CONTEXT:  compilation of PL/pgSQL function "view_savings_statement" near line 1
2023-01-13 09:00:32.157 GMT [75651] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_savings_statement(account_id INT, savings_account_id INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT savings_accounts_statement.account_id, savings_accounts_statement.account_number, savings_accounts_statement.starting_date, savings_accounts_statement.end_date, savings_accounts_statement.amount
	        FROM client.savings_accounts_statement
	        WHERE savings_accounts_statement.account_id = account_id
	        AND savings_accounts_statement.account_number = savings_account_id
	        AND savings_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 09:01:07.422 GMT [75612] LOG:  received fast shutdown request
2023-01-13 09:01:07.424 GMT [75612] LOG:  aborting any active transactions
2023-01-13 09:01:07.431 GMT [75612] LOG:  background worker "logical replication launcher" (PID 75619) exited with exit code 1
2023-01-13 09:01:07.431 GMT [75614] LOG:  shutting down
2023-01-13 09:01:07.501 GMT [75612] LOG:  database system is shut down
2023-01-13 09:01:08.909 GMT [75835] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-13 09:01:08.909 GMT [75835] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-13 09:01:08.910 GMT [75835] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-13 09:01:08.915 GMT [75836] LOG:  database system was shut down at 2023-01-13 09:01:08 GMT
2023-01-13 09:01:08.922 GMT [75835] LOG:  database system is ready to accept connections
2023-01-13 09:01:09.876 GMT [75871] ERROR:  parameter name "account_id" used more than once
2023-01-13 09:01:09.876 GMT [75871] CONTEXT:  compilation of PL/pgSQL function "view_credit_statement" near line 1
2023-01-13 09:01:09.876 GMT [75871] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_credit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statement.account_id, credit_accounts_statement.account_number, credit_accounts_statement.starting_date, credit_accounts_statement.end_date, credit_accounts_statement.amount
	        FROM client.credit_accounts_statement
	        WHERE credit_accounts_statement.account_id = account_id
	        AND credit_accounts_statement.account_number = account_number
	        AND credit_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 09:01:09.877 GMT [75871] ERROR:  parameter name "account_id" used more than once
2023-01-13 09:01:09.877 GMT [75871] CONTEXT:  compilation of PL/pgSQL function "view_savings_statement" near line 1
2023-01-13 09:01:09.877 GMT [75871] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_savings_statement(account_id INT, savings_account_id INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT savings_accounts_statement.account_id, savings_accounts_statement.account_number, savings_accounts_statement.starting_date, savings_accounts_statement.end_date, savings_accounts_statement.amount
	        FROM client.savings_accounts_statement
	        WHERE savings_accounts_statement.account_id = account_id
	        AND savings_accounts_statement.account_number = savings_account_id
	        AND savings_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 09:01:09.904 GMT [75871] ERROR:  duplicate key value violates unique constraint "savings_account_pkey"
2023-01-13 09:01:09.904 GMT [75871] DETAIL:  Key (account_number)=(12345678) already exists.
2023-01-13 09:01:09.904 GMT [75871] STATEMENT:  INSERT INTO savings_account (account_number, account_id, current_balance, interest_rate) VALUES ('12345678', 1, 2000.00, 2.05);
2023-01-13 09:03:51.151 GMT [75835] LOG:  received fast shutdown request
2023-01-13 09:03:51.152 GMT [75835] LOG:  aborting any active transactions
2023-01-13 09:03:51.158 GMT [75835] LOG:  background worker "logical replication launcher" (PID 75842) exited with exit code 1
2023-01-13 09:03:51.158 GMT [75837] LOG:  shutting down
2023-01-13 09:03:51.212 GMT [75835] LOG:  database system is shut down
2023-01-13 09:03:52.789 GMT [76394] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-13 09:03:52.789 GMT [76394] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-13 09:03:52.791 GMT [76394] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-13 09:03:52.797 GMT [76395] LOG:  database system was shut down at 2023-01-13 09:03:52 GMT
2023-01-13 09:03:52.811 GMT [76394] LOG:  database system is ready to accept connections
2023-01-13 09:03:53.835 GMT [76430] ERROR:  parameter name "account_id" used more than once
2023-01-13 09:03:53.835 GMT [76430] CONTEXT:  compilation of PL/pgSQL function "view_credit_statement" near line 1
2023-01-13 09:03:53.835 GMT [76430] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_credit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statement.account_id, credit_accounts_statement.account_number, credit_accounts_statement.starting_date, credit_accounts_statement.end_date, credit_accounts_statement.amount
	        FROM client.credit_accounts_statement
	        WHERE credit_accounts_statement.account_id = account_id
	        AND credit_accounts_statement.account_number = account_number
	        AND credit_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 09:03:53.836 GMT [76430] ERROR:  parameter name "account_id" used more than once
2023-01-13 09:03:53.836 GMT [76430] CONTEXT:  compilation of PL/pgSQL function "view_savings_statement" near line 1
2023-01-13 09:03:53.836 GMT [76430] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_savings_statement(account_id INT, savings_account_id INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT savings_accounts_statement.account_id, savings_accounts_statement.account_number, savings_accounts_statement.starting_date, savings_accounts_statement.end_date, savings_accounts_statement.amount
	        FROM client.savings_accounts_statement
	        WHERE savings_accounts_statement.account_id = account_id
	        AND savings_accounts_statement.account_number = savings_account_id
	        AND savings_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 09:05:50.546 GMT [76394] LOG:  received fast shutdown request
2023-01-13 09:05:50.547 GMT [76394] LOG:  aborting any active transactions
2023-01-13 09:05:50.550 GMT [76394] LOG:  background worker "logical replication launcher" (PID 76401) exited with exit code 1
2023-01-13 09:05:50.555 GMT [76396] LOG:  shutting down
2023-01-13 09:05:50.610 GMT [76394] LOG:  database system is shut down
2023-01-13 09:05:52.265 GMT [76869] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-13 09:05:52.266 GMT [76869] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-13 09:05:52.270 GMT [76869] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-13 09:05:52.276 GMT [76870] LOG:  database system was shut down at 2023-01-13 09:05:51 GMT
2023-01-13 09:05:52.282 GMT [76869] LOG:  database system is ready to accept connections
2023-01-13 09:05:53.463 GMT [76905] ERROR:  parameter name "account_id" used more than once
2023-01-13 09:05:53.463 GMT [76905] CONTEXT:  compilation of PL/pgSQL function "view_credit_statement" near line 1
2023-01-13 09:05:53.463 GMT [76905] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_credit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statement.account_id, credit_accounts_statement.account_number, credit_accounts_statement.starting_date, credit_accounts_statement.end_date, credit_accounts_statement.amount
	        FROM client.credit_accounts_statement
	        WHERE credit_accounts_statement.account_id = account_id
	        AND credit_accounts_statement.account_number = account_number
	        AND credit_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 09:05:53.463 GMT [76905] ERROR:  parameter name "account_id" used more than once
2023-01-13 09:05:53.463 GMT [76905] CONTEXT:  compilation of PL/pgSQL function "view_savings_statement" near line 1
2023-01-13 09:05:53.463 GMT [76905] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_savings_statement(account_id INT, savings_account_id INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT savings_accounts_statement.account_id, savings_accounts_statement.account_number, savings_accounts_statement.starting_date, savings_accounts_statement.end_date, savings_accounts_statement.amount
	        FROM client.savings_accounts_statement
	        WHERE savings_accounts_statement.account_id = account_id
	        AND savings_accounts_statement.account_number = savings_account_id
	        AND savings_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 09:05:53.506 GMT [76905] ERROR:  column loans.account_number does not exist at character 755
2023-01-13 09:05:53.506 GMT [76905] QUERY:  SELECT account.*, COALESCE(debit_accounts.current_balance, credit_accounts.outstanding_balance, savings_accounts.current_balance, loans.amount) AS balance,
	        COALESCE(debit_accounts.interest_rate, credit_accounts.interest_rate, savings_accounts.interest_rate, loans.interest_rate) AS interest_rate,
	        get_account_type(account.account_number) AS account_type
	        FROM account
	        INNER JOIN client.credit_accounts ON account.account_number = credit_accounts.account_number
	        INNER JOIN client.debit_accounts ON account.account_number = debit_accounts.account_number
	        INNER JOIN client.savings_accounts ON account.account_number = savings_accounts.account_number
	        INNER JOIN client.loans ON account.account_number = loans.account_number
	        WHERE account.account_id = account_identifier
2023-01-13 09:05:53.506 GMT [76905] CONTEXT:  PL/pgSQL function view_accounts(integer) line 5 at RETURN QUERY
2023-01-13 09:05:53.506 GMT [76905] STATEMENT:  SELECT * FROM client.view_accounts(1)
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
2023-01-13 09:06:27.678 GMT [76869] LOG:  received fast shutdown request
2023-01-13 09:06:27.679 GMT [76869] LOG:  aborting any active transactions
2023-01-13 09:06:27.685 GMT [76869] LOG:  background worker "logical replication launcher" (PID 76876) exited with exit code 1
2023-01-13 09:06:27.687 GMT [76871] LOG:  shutting down
2023-01-13 09:06:27.740 GMT [76869] LOG:  database system is shut down
2023-01-13 09:06:29.277 GMT [77097] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-13 09:06:29.277 GMT [77097] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-13 09:06:29.278 GMT [77097] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-13 09:06:29.283 GMT [77098] LOG:  database system was shut down at 2023-01-13 09:06:28 GMT
2023-01-13 09:06:29.290 GMT [77097] LOG:  database system is ready to accept connections
2023-01-13 09:06:30.253 GMT [77136] ERROR:  parameter name "account_id" used more than once
2023-01-13 09:06:30.253 GMT [77136] CONTEXT:  compilation of PL/pgSQL function "view_credit_statement" near line 1
2023-01-13 09:06:30.253 GMT [77136] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_credit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statement.account_id, credit_accounts_statement.account_number, credit_accounts_statement.starting_date, credit_accounts_statement.end_date, credit_accounts_statement.amount
	        FROM client.credit_accounts_statement
	        WHERE credit_accounts_statement.account_id = account_id
	        AND credit_accounts_statement.account_number = account_number
	        AND credit_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 09:06:30.253 GMT [77136] ERROR:  parameter name "account_id" used more than once
2023-01-13 09:06:30.253 GMT [77136] CONTEXT:  compilation of PL/pgSQL function "view_savings_statement" near line 1
2023-01-13 09:06:30.253 GMT [77136] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_savings_statement(account_id INT, savings_account_id INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT savings_accounts_statement.account_id, savings_accounts_statement.account_number, savings_accounts_statement.starting_date, savings_accounts_statement.end_date, savings_accounts_statement.amount
	        FROM client.savings_accounts_statement
	        WHERE savings_accounts_statement.account_id = account_id
	        AND savings_accounts_statement.account_number = savings_account_id
	        AND savings_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 09:06:53.817 GMT [77097] LOG:  received fast shutdown request
2023-01-13 09:06:53.819 GMT [77097] LOG:  aborting any active transactions
2023-01-13 09:06:53.824 GMT [77097] LOG:  background worker "logical replication launcher" (PID 77104) exited with exit code 1
2023-01-13 09:06:53.824 GMT [77099] LOG:  shutting down
2023-01-13 09:06:53.888 GMT [77097] LOG:  database system is shut down
2023-01-13 09:06:55.249 GMT [77282] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-13 09:06:55.250 GMT [77282] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-13 09:06:55.251 GMT [77282] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-13 09:06:55.257 GMT [77283] LOG:  database system was shut down at 2023-01-13 09:06:54 GMT
2023-01-13 09:06:55.263 GMT [77282] LOG:  database system is ready to accept connections
2023-01-13 09:06:56.293 GMT [77325] ERROR:  parameter name "account_id" used more than once
2023-01-13 09:06:56.293 GMT [77325] CONTEXT:  compilation of PL/pgSQL function "view_credit_statement" near line 1
2023-01-13 09:06:56.293 GMT [77325] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_credit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statement.account_id, credit_accounts_statement.account_number, credit_accounts_statement.starting_date, credit_accounts_statement.end_date, credit_accounts_statement.amount
	        FROM client.credit_accounts_statement
	        WHERE credit_accounts_statement.account_id = account_id
	        AND credit_accounts_statement.account_number = account_number
	        AND credit_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 09:06:56.295 GMT [77325] ERROR:  parameter name "account_id" used more than once
2023-01-13 09:06:56.295 GMT [77325] CONTEXT:  compilation of PL/pgSQL function "view_savings_statement" near line 1
2023-01-13 09:06:56.295 GMT [77325] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_savings_statement(account_id INT, savings_account_id INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT savings_accounts_statement.account_id, savings_accounts_statement.account_number, savings_accounts_statement.starting_date, savings_accounts_statement.end_date, savings_accounts_statement.amount
	        FROM client.savings_accounts_statement
	        WHERE savings_accounts_statement.account_id = account_id
	        AND savings_accounts_statement.account_number = savings_account_id
	        AND savings_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 09:06:56.334 GMT [77325] ERROR:  column reference "account_number" is ambiguous at character 60
2023-01-13 09:06:56.334 GMT [77325] DETAIL:  It could refer to either a PL/pgSQL variable or a table column.
2023-01-13 09:06:56.334 GMT [77325] QUERY:  SELECT CASE WHEN EXISTS (SELECT * FROM debit_account WHERE account_number = account_number) THEN 'DEBIT'
	                WHEN EXISTS (SELECT * FROM credit_account WHERE account_number = account_number) THEN 'CREDIT'
	                WHEN EXISTS (SELECT * FROM savings_account WHERE account_number = account_number) THEN 'SAVINGS'
	                ELSE 'UNKNOWN' END
2023-01-13 09:06:56.334 GMT [77325] CONTEXT:  PL/pgSQL function get_account_type(integer) line 4 at SQL statement
	SQL statement "SELECT account.*, COALESCE(debit_accounts.current_balance, credit_accounts.outstanding_balance, savings_accounts.current_balance) AS balance,
	        COALESCE(debit_accounts.interest_rate, credit_accounts.interest_rate, savings_accounts.interest_rate) AS interest_rate,
	        get_account_type(account.account_number) AS account_type
	        FROM account
	        LEFT JOIN client.credit_accounts ON account.account_number = credit_accounts.account_number
	        LEFT JOIN client.debit_accounts ON account.account_number = debit_accounts.account_number
	        LEFT JOIN client.savings_accounts ON account.account_number = savings_accounts.account_number
	        WHERE account.account_id = account_identifier"
	PL/pgSQL function view_accounts(integer) line 5 at RETURN QUERY
2023-01-13 09:06:56.334 GMT [77325] STATEMENT:  SELECT * FROM client.view_accounts(1)
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
2023-01-13 09:09:37.804 GMT [77282] LOG:  received fast shutdown request
2023-01-13 09:09:37.805 GMT [77282] LOG:  aborting any active transactions
2023-01-13 09:09:37.810 GMT [77282] LOG:  background worker "logical replication launcher" (PID 77289) exited with exit code 1
2023-01-13 09:09:37.811 GMT [77284] LOG:  shutting down
2023-01-13 09:09:37.878 GMT [77282] LOG:  database system is shut down
2023-01-13 09:09:42.064 GMT [78146] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-13 09:09:42.065 GMT [78146] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-13 09:09:42.066 GMT [78146] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-13 09:09:42.071 GMT [78147] LOG:  database system was shut down at 2023-01-13 09:09:41 GMT
2023-01-13 09:09:42.084 GMT [78146] LOG:  database system is ready to accept connections
2023-01-13 09:09:43.152 GMT [78186] ERROR:  parameter name "account_id" used more than once
2023-01-13 09:09:43.152 GMT [78186] CONTEXT:  compilation of PL/pgSQL function "view_credit_statement" near line 1
2023-01-13 09:09:43.152 GMT [78186] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_credit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statement.account_id, credit_accounts_statement.account_number, credit_accounts_statement.starting_date, credit_accounts_statement.end_date, credit_accounts_statement.amount
	        FROM client.credit_accounts_statement
	        WHERE credit_accounts_statement.account_id = account_id
	        AND credit_accounts_statement.account_number = account_number
	        AND credit_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 09:09:43.154 GMT [78186] ERROR:  parameter name "account_id" used more than once
2023-01-13 09:09:43.154 GMT [78186] CONTEXT:  compilation of PL/pgSQL function "view_savings_statement" near line 1
2023-01-13 09:09:43.154 GMT [78186] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_savings_statement(account_id INT, savings_account_id INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT savings_accounts_statement.account_id, savings_accounts_statement.account_number, savings_accounts_statement.starting_date, savings_accounts_statement.end_date, savings_accounts_statement.amount
	        FROM client.savings_accounts_statement
	        WHERE savings_accounts_statement.account_id = account_id
	        AND savings_accounts_statement.account_number = savings_account_id
	        AND savings_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 09:09:43.194 GMT [78186] ERROR:  column reference "account_number" is ambiguous at character 60
2023-01-13 09:09:43.194 GMT [78186] DETAIL:  It could refer to either a PL/pgSQL variable or a table column.
2023-01-13 09:09:43.194 GMT [78186] QUERY:  SELECT CASE WHEN EXISTS (SELECT * FROM debit_account WHERE account_number = account_number) THEN 'DEBIT'
	                WHEN EXISTS (SELECT * FROM credit_account WHERE account_number = account_number) THEN 'CREDIT'
	                WHEN EXISTS (SELECT * FROM savings_account WHERE account_number = account_number) THEN 'SAVINGS'
	                ELSE 'UNKNOWN' END
2023-01-13 09:09:43.194 GMT [78186] CONTEXT:  PL/pgSQL function get_account_type(integer) line 4 at SQL statement
	SQL statement "SELECT account.*, COALESCE(debit_accounts.current_balance, credit_accounts.outstanding_balance, savings_accounts.current_balance) AS balance,
	        COALESCE(debit_accounts.interest_rate, credit_accounts.interest_rate, savings_accounts.interest_rate) AS interest_rate,
	        get_account_type(account.account_number) AS account_type
	        FROM account
	        LEFT JOIN client.credit_accounts ON account.account_number = credit_accounts.account_number
	        LEFT JOIN client.debit_accounts ON account.account_number = debit_accounts.account_number
	        LEFT JOIN client.savings_accounts ON account.account_number = savings_accounts.account_number
	        WHERE account.account_id = account_identifier"
	PL/pgSQL function view_accounts(integer) line 5 at RETURN QUERY
2023-01-13 09:09:43.194 GMT [78186] STATEMENT:  SELECT * FROM client.view_accounts(1)
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
2023-01-13 09:12:32.643 GMT [78146] LOG:  received fast shutdown request
2023-01-13 09:12:32.647 GMT [78146] LOG:  aborting any active transactions
2023-01-13 09:12:32.655 GMT [78146] LOG:  background worker "logical replication launcher" (PID 78153) exited with exit code 1
2023-01-13 09:12:32.657 GMT [78148] LOG:  shutting down
2023-01-13 09:12:32.725 GMT [78146] LOG:  database system is shut down
2023-01-13 09:12:34.313 GMT [78790] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-13 09:12:34.314 GMT [78790] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-13 09:12:34.315 GMT [78790] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-13 09:12:34.323 GMT [78791] LOG:  database system was shut down at 2023-01-13 09:12:33 GMT
2023-01-13 09:12:34.331 GMT [78790] LOG:  database system is ready to accept connections
2023-01-13 09:12:35.354 GMT [78829] ERROR:  parameter name "account_id" used more than once
2023-01-13 09:12:35.354 GMT [78829] CONTEXT:  compilation of PL/pgSQL function "view_credit_statement" near line 1
2023-01-13 09:12:35.354 GMT [78829] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_credit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statement.account_id, credit_accounts_statement.account_number, credit_accounts_statement.starting_date, credit_accounts_statement.end_date, credit_accounts_statement.amount
	        FROM client.credit_accounts_statement
	        WHERE credit_accounts_statement.account_id = account_id
	        AND credit_accounts_statement.account_number = account_number
	        AND credit_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 09:12:35.354 GMT [78829] ERROR:  parameter name "account_id" used more than once
2023-01-13 09:12:35.354 GMT [78829] CONTEXT:  compilation of PL/pgSQL function "view_savings_statement" near line 1
2023-01-13 09:12:35.354 GMT [78829] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_savings_statement(account_id INT, savings_account_id INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT savings_accounts_statement.account_id, savings_accounts_statement.account_number, savings_accounts_statement.starting_date, savings_accounts_statement.end_date, savings_accounts_statement.amount
	        FROM client.savings_accounts_statement
	        WHERE savings_accounts_statement.account_id = account_id
	        AND savings_accounts_statement.account_number = savings_account_id
	        AND savings_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 09:12:35.405 GMT [78829] ERROR:  structure of query does not match function result type
2023-01-13 09:12:35.405 GMT [78829] DETAIL:  Returned type numeric(15,2) does not match expected type integer in column 1.
2023-01-13 09:12:35.405 GMT [78829] CONTEXT:  SQL statement "SELECT COALESCE(debit_accounts.current_balance, credit_accounts.outstanding_balance, savings_accounts.current_balance) AS balance,
	            COALESCE(debit_accounts.interest_rate, credit_accounts.interest_rate, savings_accounts.interest_rate) AS interest_rate,
	            get_account_type(account.account_number) AS account_type
	            FROM account
	            LEFT JOIN client.credit_accounts ON account.account_number = credit_accounts.account_number
	            LEFT JOIN client.debit_accounts ON account.account_number = debit_accounts.account_number
	            LEFT JOIN client.savings_accounts ON account.account_number = savings_accounts.account_number
	            WHERE account.account_id = account_identifier"
	PL/pgSQL function view_accounts(integer) line 15 at RETURN QUERY
2023-01-13 09:12:35.405 GMT [78829] STATEMENT:  SELECT * FROM client.view_accounts(1)
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
2023-01-13 09:12:53.610 GMT [78790] LOG:  received fast shutdown request
2023-01-13 09:12:53.612 GMT [78790] LOG:  aborting any active transactions
2023-01-13 09:12:53.617 GMT [78790] LOG:  background worker "logical replication launcher" (PID 78797) exited with exit code 1
2023-01-13 09:12:53.617 GMT [78792] LOG:  shutting down
2023-01-13 09:12:53.676 GMT [78790] LOG:  database system is shut down
2023-01-13 09:12:55.091 GMT [78959] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-13 09:12:55.091 GMT [78959] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-13 09:12:55.093 GMT [78959] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-13 09:12:55.098 GMT [78960] LOG:  database system was shut down at 2023-01-13 09:12:54 GMT
2023-01-13 09:12:55.106 GMT [78959] LOG:  database system is ready to accept connections
2023-01-13 09:12:56.158 GMT [79002] ERROR:  parameter name "account_id" used more than once
2023-01-13 09:12:56.158 GMT [79002] CONTEXT:  compilation of PL/pgSQL function "view_credit_statement" near line 1
2023-01-13 09:12:56.158 GMT [79002] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_credit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statement.account_id, credit_accounts_statement.account_number, credit_accounts_statement.starting_date, credit_accounts_statement.end_date, credit_accounts_statement.amount
	        FROM client.credit_accounts_statement
	        WHERE credit_accounts_statement.account_id = account_id
	        AND credit_accounts_statement.account_number = account_number
	        AND credit_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 09:12:56.159 GMT [79002] ERROR:  parameter name "account_id" used more than once
2023-01-13 09:12:56.159 GMT [79002] CONTEXT:  compilation of PL/pgSQL function "view_savings_statement" near line 1
2023-01-13 09:12:56.159 GMT [79002] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_savings_statement(account_id INT, savings_account_id INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT savings_accounts_statement.account_id, savings_accounts_statement.account_number, savings_accounts_statement.starting_date, savings_accounts_statement.end_date, savings_accounts_statement.amount
	        FROM client.savings_accounts_statement
	        WHERE savings_accounts_statement.account_id = account_id
	        AND savings_accounts_statement.account_number = savings_account_id
	        AND savings_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 09:12:56.195 GMT [79002] ERROR:  column reference "account_number" is ambiguous at character 60
2023-01-13 09:12:56.195 GMT [79002] DETAIL:  It could refer to either a PL/pgSQL variable or a table column.
2023-01-13 09:12:56.195 GMT [79002] QUERY:  SELECT CASE WHEN EXISTS (SELECT * FROM debit_account WHERE account_number = account_number) THEN 'DEBIT'
	                WHEN EXISTS (SELECT * FROM credit_account WHERE account_number = account_number) THEN 'CREDIT'
	                WHEN EXISTS (SELECT * FROM savings_account WHERE account_number = account_number) THEN 'SAVINGS'
	                ELSE 'UNKNOWN' END
2023-01-13 09:12:56.195 GMT [79002] CONTEXT:  PL/pgSQL function get_account_type(integer) line 4 at SQL statement
	SQL statement "SELECT COALESCE(debit_accounts.current_balance, credit_accounts.outstanding_balance, savings_accounts.current_balance) AS balance,
	            COALESCE(debit_accounts.interest_rate, credit_accounts.interest_rate, savings_accounts.interest_rate) AS interest_rate,
	            get_account_type(account.account_number) AS account_type
	            FROM account
	            LEFT JOIN client.credit_accounts ON account.account_number = credit_accounts.account_number
	            LEFT JOIN client.debit_accounts ON account.account_number = debit_accounts.account_number
	            LEFT JOIN client.savings_accounts ON account.account_number = savings_accounts.account_number
	            WHERE account.account_id = account_identifier"
	PL/pgSQL function view_accounts(integer) line 15 at RETURN QUERY
2023-01-13 09:12:56.195 GMT [79002] STATEMENT:  SELECT * FROM client.view_accounts(1)
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
2023-01-13 09:14:33.676 GMT [78959] LOG:  received fast shutdown request
2023-01-13 09:14:33.678 GMT [78959] LOG:  aborting any active transactions
2023-01-13 09:14:33.681 GMT [78959] LOG:  background worker "logical replication launcher" (PID 78966) exited with exit code 1
2023-01-13 09:14:33.684 GMT [78961] LOG:  shutting down
2023-01-13 09:14:33.753 GMT [78959] LOG:  database system is shut down
2023-01-13 09:14:35.196 GMT [79377] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-13 09:14:35.197 GMT [79377] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-13 09:14:35.198 GMT [79377] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-13 09:14:35.204 GMT [79378] LOG:  database system was shut down at 2023-01-13 09:14:34 GMT
2023-01-13 09:14:35.210 GMT [79377] LOG:  database system is ready to accept connections
2023-01-13 09:14:36.326 GMT [79416] ERROR:  parameter name "account_id" used more than once
2023-01-13 09:14:36.326 GMT [79416] CONTEXT:  compilation of PL/pgSQL function "view_credit_statement" near line 1
2023-01-13 09:14:36.326 GMT [79416] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_credit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statement.account_id, credit_accounts_statement.account_number, credit_accounts_statement.starting_date, credit_accounts_statement.end_date, credit_accounts_statement.amount
	        FROM client.credit_accounts_statement
	        WHERE credit_accounts_statement.account_id = account_id
	        AND credit_accounts_statement.account_number = account_number
	        AND credit_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 09:14:36.327 GMT [79416] ERROR:  parameter name "account_id" used more than once
2023-01-13 09:14:36.327 GMT [79416] CONTEXT:  compilation of PL/pgSQL function "view_savings_statement" near line 1
2023-01-13 09:14:36.327 GMT [79416] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_savings_statement(account_id INT, savings_account_id INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT savings_accounts_statement.account_id, savings_accounts_statement.account_number, savings_accounts_statement.starting_date, savings_accounts_statement.end_date, savings_accounts_statement.amount
	        FROM client.savings_accounts_statement
	        WHERE savings_accounts_statement.account_id = account_id
	        AND savings_accounts_statement.account_number = savings_account_id
	        AND savings_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 09:16:03.779 GMT [79377] LOG:  received fast shutdown request
2023-01-13 09:16:03.783 GMT [79377] LOG:  aborting any active transactions
2023-01-13 09:16:03.790 GMT [79377] LOG:  background worker "logical replication launcher" (PID 79384) exited with exit code 1
2023-01-13 09:16:03.794 GMT [79379] LOG:  shutting down
2023-01-13 09:16:03.866 GMT [79377] LOG:  database system is shut down
2023-01-13 09:16:05.302 GMT [79754] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-13 09:16:05.303 GMT [79754] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-13 09:16:05.304 GMT [79754] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-13 09:16:05.310 GMT [79755] LOG:  database system was shut down at 2023-01-13 09:16:04 GMT
2023-01-13 09:16:05.320 GMT [79754] LOG:  database system is ready to accept connections
2023-01-13 09:16:06.395 GMT [79790] ERROR:  parameter name "account_id" used more than once
2023-01-13 09:16:06.395 GMT [79790] CONTEXT:  compilation of PL/pgSQL function "view_credit_statement" near line 1
2023-01-13 09:16:06.395 GMT [79790] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_credit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statement.account_id, credit_accounts_statement.account_number, credit_accounts_statement.starting_date, credit_accounts_statement.end_date, credit_accounts_statement.amount
	        FROM client.credit_accounts_statement
	        WHERE credit_accounts_statement.account_id = account_id
	        AND credit_accounts_statement.account_number = account_number
	        AND credit_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 09:16:06.396 GMT [79790] ERROR:  parameter name "account_id" used more than once
2023-01-13 09:16:06.396 GMT [79790] CONTEXT:  compilation of PL/pgSQL function "view_savings_statement" near line 1
2023-01-13 09:16:06.396 GMT [79790] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_savings_statement(account_id INT, savings_account_id INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT savings_accounts_statement.account_id, savings_accounts_statement.account_number, savings_accounts_statement.starting_date, savings_accounts_statement.end_date, savings_accounts_statement.amount
	        FROM client.savings_accounts_statement
	        WHERE savings_accounts_statement.account_id = account_id
	        AND savings_accounts_statement.account_number = savings_account_id
	        AND savings_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 09:16:49.960 GMT [79754] LOG:  received fast shutdown request
2023-01-13 09:16:49.962 GMT [79754] LOG:  aborting any active transactions
2023-01-13 09:16:49.970 GMT [79754] LOG:  background worker "logical replication launcher" (PID 79761) exited with exit code 1
2023-01-13 09:16:49.971 GMT [79756] LOG:  shutting down
2023-01-13 09:16:50.043 GMT [79754] LOG:  database system is shut down
2023-01-13 09:16:51.449 GMT [80006] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-13 09:16:51.450 GMT [80006] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-13 09:16:51.458 GMT [80006] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-13 09:16:51.462 GMT [80007] LOG:  database system was shut down at 2023-01-13 09:16:51 GMT
2023-01-13 09:16:51.468 GMT [80006] LOG:  database system is ready to accept connections
2023-01-13 09:16:52.439 GMT [80042] ERROR:  parameter name "account_id" used more than once
2023-01-13 09:16:52.439 GMT [80042] CONTEXT:  compilation of PL/pgSQL function "view_credit_statement" near line 1
2023-01-13 09:16:52.439 GMT [80042] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_credit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statement.account_id, credit_accounts_statement.account_number, credit_accounts_statement.starting_date, credit_accounts_statement.end_date, credit_accounts_statement.amount
	        FROM client.credit_accounts_statement
	        WHERE credit_accounts_statement.account_id = account_id
	        AND credit_accounts_statement.account_number = account_number
	        AND credit_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 09:16:52.440 GMT [80042] ERROR:  parameter name "account_id" used more than once
2023-01-13 09:16:52.440 GMT [80042] CONTEXT:  compilation of PL/pgSQL function "view_savings_statement" near line 1
2023-01-13 09:16:52.440 GMT [80042] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_savings_statement(account_id INT, savings_account_id INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT savings_accounts_statement.account_id, savings_accounts_statement.account_number, savings_accounts_statement.starting_date, savings_accounts_statement.end_date, savings_accounts_statement.amount
	        FROM client.savings_accounts_statement
	        WHERE savings_accounts_statement.account_id = account_id
	        AND savings_accounts_statement.account_number = savings_account_id
	        AND savings_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 09:17:24.252 GMT [80006] LOG:  received fast shutdown request
2023-01-13 09:17:24.254 GMT [80006] LOG:  aborting any active transactions
2023-01-13 09:17:24.259 GMT [80006] LOG:  background worker "logical replication launcher" (PID 80013) exited with exit code 1
2023-01-13 09:17:24.260 GMT [80008] LOG:  shutting down
2023-01-13 09:17:24.321 GMT [80006] LOG:  database system is shut down
2023-01-13 09:17:25.712 GMT [80233] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-13 09:17:25.712 GMT [80233] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-13 09:17:25.714 GMT [80233] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-13 09:17:25.719 GMT [80234] LOG:  database system was shut down at 2023-01-13 09:17:25 GMT
2023-01-13 09:17:25.726 GMT [80233] LOG:  database system is ready to accept connections
2023-01-13 09:17:26.692 GMT [80272] ERROR:  parameter name "account_id" used more than once
2023-01-13 09:17:26.692 GMT [80272] CONTEXT:  compilation of PL/pgSQL function "view_credit_statement" near line 1
2023-01-13 09:17:26.692 GMT [80272] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_credit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statement.account_id, credit_accounts_statement.account_number, credit_accounts_statement.starting_date, credit_accounts_statement.end_date, credit_accounts_statement.amount
	        FROM client.credit_accounts_statement
	        WHERE credit_accounts_statement.account_id = account_id
	        AND credit_accounts_statement.account_number = account_number
	        AND credit_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 09:17:26.693 GMT [80272] ERROR:  parameter name "account_id" used more than once
2023-01-13 09:17:26.693 GMT [80272] CONTEXT:  compilation of PL/pgSQL function "view_savings_statement" near line 1
2023-01-13 09:17:26.693 GMT [80272] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_savings_statement(account_id INT, savings_account_id INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT savings_accounts_statement.account_id, savings_accounts_statement.account_number, savings_accounts_statement.starting_date, savings_accounts_statement.end_date, savings_accounts_statement.amount
	        FROM client.savings_accounts_statement
	        WHERE savings_accounts_statement.account_id = account_id
	        AND savings_accounts_statement.account_number = savings_account_id
	        AND savings_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 09:18:11.781 GMT [80233] LOG:  received fast shutdown request
2023-01-13 09:18:11.783 GMT [80233] LOG:  aborting any active transactions
2023-01-13 09:18:11.788 GMT [80233] LOG:  background worker "logical replication launcher" (PID 80240) exited with exit code 1
2023-01-13 09:18:11.788 GMT [80235] LOG:  shutting down
2023-01-13 09:18:11.845 GMT [80233] LOG:  database system is shut down
2023-01-13 09:18:13.236 GMT [80488] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-13 09:18:13.236 GMT [80488] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-13 09:18:13.237 GMT [80488] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-13 09:18:13.243 GMT [80489] LOG:  database system was shut down at 2023-01-13 09:18:12 GMT
2023-01-13 09:18:13.250 GMT [80488] LOG:  database system is ready to accept connections
2023-01-13 09:18:14.157 GMT [80527] ERROR:  parameter name "account_id" used more than once
2023-01-13 09:18:14.157 GMT [80527] CONTEXT:  compilation of PL/pgSQL function "view_credit_statement" near line 1
2023-01-13 09:18:14.157 GMT [80527] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_credit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statement.account_id, credit_accounts_statement.account_number, credit_accounts_statement.starting_date, credit_accounts_statement.end_date, credit_accounts_statement.amount
	        FROM client.credit_accounts_statement
	        WHERE credit_accounts_statement.account_id = account_id
	        AND credit_accounts_statement.account_number = account_number
	        AND credit_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 09:18:14.158 GMT [80527] ERROR:  parameter name "account_id" used more than once
2023-01-13 09:18:14.158 GMT [80527] CONTEXT:  compilation of PL/pgSQL function "view_savings_statement" near line 1
2023-01-13 09:18:14.158 GMT [80527] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_savings_statement(account_id INT, savings_account_id INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT savings_accounts_statement.account_id, savings_accounts_statement.account_number, savings_accounts_statement.starting_date, savings_accounts_statement.end_date, savings_accounts_statement.amount
	        FROM client.savings_accounts_statement
	        WHERE savings_accounts_statement.account_id = account_id
	        AND savings_accounts_statement.account_number = savings_account_id
	        AND savings_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 09:18:14.200 GMT [80527] ERROR:  column "overdraft_limit" of relation "debit_account" does not exist at character 73
2023-01-13 09:18:14.200 GMT [80527] STATEMENT:  INSERT INTO debit_account (account_number, account_id, current_balance, overdraft_limit, interest_rate)
	VALUES ('12938693', 1, 100.00, 2000.00, 4.22);
2023-01-13 09:19:03.772 GMT [80488] LOG:  received fast shutdown request
2023-01-13 09:19:03.775 GMT [80488] LOG:  aborting any active transactions
2023-01-13 09:19:03.781 GMT [80488] LOG:  background worker "logical replication launcher" (PID 80495) exited with exit code 1
2023-01-13 09:19:03.782 GMT [80490] LOG:  shutting down
2023-01-13 09:19:03.852 GMT [80488] LOG:  database system is shut down
2023-01-13 09:19:05.425 GMT [80764] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-13 09:19:05.425 GMT [80764] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-13 09:19:05.427 GMT [80764] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-13 09:19:05.432 GMT [80765] LOG:  database system was shut down at 2023-01-13 09:19:05 GMT
2023-01-13 09:19:05.440 GMT [80764] LOG:  database system is ready to accept connections
2023-01-13 09:19:06.360 GMT [80803] ERROR:  parameter name "account_id" used more than once
2023-01-13 09:19:06.360 GMT [80803] CONTEXT:  compilation of PL/pgSQL function "view_credit_statement" near line 1
2023-01-13 09:19:06.360 GMT [80803] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_credit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statement.account_id, credit_accounts_statement.account_number, credit_accounts_statement.starting_date, credit_accounts_statement.end_date, credit_accounts_statement.amount
	        FROM client.credit_accounts_statement
	        WHERE credit_accounts_statement.account_id = account_id
	        AND credit_accounts_statement.account_number = account_number
	        AND credit_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 09:19:06.361 GMT [80803] ERROR:  parameter name "account_id" used more than once
2023-01-13 09:19:06.361 GMT [80803] CONTEXT:  compilation of PL/pgSQL function "view_savings_statement" near line 1
2023-01-13 09:19:06.361 GMT [80803] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_savings_statement(account_id INT, savings_account_id INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT savings_accounts_statement.account_id, savings_accounts_statement.account_number, savings_accounts_statement.starting_date, savings_accounts_statement.end_date, savings_accounts_statement.amount
	        FROM client.savings_accounts_statement
	        WHERE savings_accounts_statement.account_id = account_id
	        AND savings_accounts_statement.account_number = savings_account_id
	        AND savings_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 09:22:13.337 GMT [80764] LOG:  received fast shutdown request
2023-01-13 09:22:13.339 GMT [80764] LOG:  aborting any active transactions
2023-01-13 09:22:13.345 GMT [80764] LOG:  background worker "logical replication launcher" (PID 80771) exited with exit code 1
2023-01-13 09:22:13.346 GMT [80766] LOG:  shutting down
2023-01-13 09:22:13.412 GMT [80764] LOG:  database system is shut down
2023-01-13 09:22:14.991 GMT [81414] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-13 09:22:14.991 GMT [81414] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-13 09:22:14.992 GMT [81414] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-13 09:22:14.997 GMT [81415] LOG:  database system was shut down at 2023-01-13 09:22:14 GMT
2023-01-13 09:22:15.004 GMT [81414] LOG:  database system is ready to accept connections
2023-01-13 09:22:15.998 GMT [81450] ERROR:  parameter name "account_id" used more than once
2023-01-13 09:22:15.998 GMT [81450] CONTEXT:  compilation of PL/pgSQL function "view_credit_statement" near line 1
2023-01-13 09:22:15.998 GMT [81450] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_credit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statement.account_id, credit_accounts_statement.account_number, credit_accounts_statement.starting_date, credit_accounts_statement.end_date, credit_accounts_statement.amount
	        FROM client.credit_accounts_statement
	        WHERE credit_accounts_statement.account_id = account_id
	        AND credit_accounts_statement.account_number = account_number
	        AND credit_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 09:22:15.999 GMT [81450] ERROR:  parameter name "account_id" used more than once
2023-01-13 09:22:15.999 GMT [81450] CONTEXT:  compilation of PL/pgSQL function "view_savings_statement" near line 1
2023-01-13 09:22:15.999 GMT [81450] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_savings_statement(account_id INT, savings_account_id INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT savings_accounts_statement.account_id, savings_accounts_statement.account_number, savings_accounts_statement.starting_date, savings_accounts_statement.end_date, savings_accounts_statement.amount
	        FROM client.savings_accounts_statement
	        WHERE savings_accounts_statement.account_id = account_id
	        AND savings_accounts_statement.account_number = savings_account_id
	        AND savings_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 09:22:16.025 GMT [81450] ERROR:  syntax error at or near "SELECT" at character 39
2023-01-13 09:22:16.025 GMT [81450] STATEMENT:  SELECT * FROM client.view_accounts(1)
	SELECT * FROM client.debit_accounts;
2023-01-13 09:22:24.159 GMT [81414] LOG:  received fast shutdown request
2023-01-13 09:22:24.162 GMT [81414] LOG:  aborting any active transactions
2023-01-13 09:22:24.170 GMT [81414] LOG:  background worker "logical replication launcher" (PID 81421) exited with exit code 1
2023-01-13 09:22:24.171 GMT [81416] LOG:  shutting down
2023-01-13 09:22:24.227 GMT [81414] LOG:  database system is shut down
2023-01-13 09:22:25.667 GMT [81555] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-13 09:22:25.668 GMT [81555] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-13 09:22:25.669 GMT [81555] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-13 09:22:25.674 GMT [81556] LOG:  database system was shut down at 2023-01-13 09:22:25 GMT
2023-01-13 09:22:25.680 GMT [81555] LOG:  database system is ready to accept connections
2023-01-13 09:22:26.643 GMT [81591] ERROR:  parameter name "account_id" used more than once
2023-01-13 09:22:26.643 GMT [81591] CONTEXT:  compilation of PL/pgSQL function "view_credit_statement" near line 1
2023-01-13 09:22:26.643 GMT [81591] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_credit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statement.account_id, credit_accounts_statement.account_number, credit_accounts_statement.starting_date, credit_accounts_statement.end_date, credit_accounts_statement.amount
	        FROM client.credit_accounts_statement
	        WHERE credit_accounts_statement.account_id = account_id
	        AND credit_accounts_statement.account_number = account_number
	        AND credit_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 09:22:26.645 GMT [81591] ERROR:  parameter name "account_id" used more than once
2023-01-13 09:22:26.645 GMT [81591] CONTEXT:  compilation of PL/pgSQL function "view_savings_statement" near line 1
2023-01-13 09:22:26.645 GMT [81591] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_savings_statement(account_id INT, savings_account_id INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT savings_accounts_statement.account_id, savings_accounts_statement.account_number, savings_accounts_statement.starting_date, savings_accounts_statement.end_date, savings_accounts_statement.amount
	        FROM client.savings_accounts_statement
	        WHERE savings_accounts_statement.account_id = account_id
	        AND savings_accounts_statement.account_number = savings_account_id
	        AND savings_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 09:22:58.703 GMT [81555] LOG:  received fast shutdown request
2023-01-13 09:22:58.707 GMT [81555] LOG:  aborting any active transactions
2023-01-13 09:22:58.714 GMT [81555] LOG:  background worker "logical replication launcher" (PID 81562) exited with exit code 1
2023-01-13 09:22:58.714 GMT [81557] LOG:  shutting down
2023-01-13 09:22:58.787 GMT [81555] LOG:  database system is shut down
2023-01-13 09:23:00.253 GMT [81762] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-13 09:23:00.253 GMT [81762] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-13 09:23:00.255 GMT [81762] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-13 09:23:00.260 GMT [81763] LOG:  database system was shut down at 2023-01-13 09:22:59 GMT
2023-01-13 09:23:00.267 GMT [81762] LOG:  database system is ready to accept connections
2023-01-13 09:23:01.221 GMT [81801] ERROR:  parameter name "account_id" used more than once
2023-01-13 09:23:01.221 GMT [81801] CONTEXT:  compilation of PL/pgSQL function "view_credit_statement" near line 1
2023-01-13 09:23:01.221 GMT [81801] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_credit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statement.account_id, credit_accounts_statement.account_number, credit_accounts_statement.starting_date, credit_accounts_statement.end_date, credit_accounts_statement.amount
	        FROM client.credit_accounts_statement
	        WHERE credit_accounts_statement.account_id = account_id
	        AND credit_accounts_statement.account_number = account_number
	        AND credit_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 09:23:01.222 GMT [81801] ERROR:  parameter name "account_id" used more than once
2023-01-13 09:23:01.222 GMT [81801] CONTEXT:  compilation of PL/pgSQL function "view_savings_statement" near line 1
2023-01-13 09:23:01.222 GMT [81801] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_savings_statement(account_id INT, savings_account_id INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT savings_accounts_statement.account_id, savings_accounts_statement.account_number, savings_accounts_statement.starting_date, savings_accounts_statement.end_date, savings_accounts_statement.amount
	        FROM client.savings_accounts_statement
	        WHERE savings_accounts_statement.account_id = account_id
	        AND savings_accounts_statement.account_number = savings_account_id
	        AND savings_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 09:23:19.034 GMT [81762] LOG:  received fast shutdown request
2023-01-13 09:23:19.036 GMT [81762] LOG:  aborting any active transactions
2023-01-13 09:23:19.055 GMT [81762] LOG:  background worker "logical replication launcher" (PID 81769) exited with exit code 1
2023-01-13 09:23:19.064 GMT [81764] LOG:  shutting down
2023-01-13 09:23:19.162 GMT [81762] LOG:  database system is shut down
2023-01-13 09:23:20.531 GMT [81948] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-13 09:23:20.531 GMT [81948] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-13 09:23:20.534 GMT [81948] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-13 09:23:20.539 GMT [81949] LOG:  database system was shut down at 2023-01-13 09:23:20 GMT
2023-01-13 09:23:20.546 GMT [81948] LOG:  database system is ready to accept connections
2023-01-13 09:23:21.535 GMT [81984] ERROR:  parameter name "account_id" used more than once
2023-01-13 09:23:21.535 GMT [81984] CONTEXT:  compilation of PL/pgSQL function "view_credit_statement" near line 1
2023-01-13 09:23:21.535 GMT [81984] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_credit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statement.account_id, credit_accounts_statement.account_number, credit_accounts_statement.starting_date, credit_accounts_statement.end_date, credit_accounts_statement.amount
	        FROM client.credit_accounts_statement
	        WHERE credit_accounts_statement.account_id = account_id
	        AND credit_accounts_statement.account_number = account_number
	        AND credit_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 09:23:21.539 GMT [81984] ERROR:  parameter name "account_id" used more than once
2023-01-13 09:23:21.539 GMT [81984] CONTEXT:  compilation of PL/pgSQL function "view_savings_statement" near line 1
2023-01-13 09:23:21.539 GMT [81984] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_savings_statement(account_id INT, savings_account_id INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT savings_accounts_statement.account_id, savings_accounts_statement.account_number, savings_accounts_statement.starting_date, savings_accounts_statement.end_date, savings_accounts_statement.amount
	        FROM client.savings_accounts_statement
	        WHERE savings_accounts_statement.account_id = account_id
	        AND savings_accounts_statement.account_number = savings_account_id
	        AND savings_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 09:24:05.262 GMT [81948] LOG:  received fast shutdown request
2023-01-13 09:24:05.264 GMT [81948] LOG:  aborting any active transactions
2023-01-13 09:24:05.270 GMT [81948] LOG:  background worker "logical replication launcher" (PID 81955) exited with exit code 1
2023-01-13 09:24:05.271 GMT [81950] LOG:  shutting down
2023-01-13 09:24:05.329 GMT [81948] LOG:  database system is shut down
2023-01-13 09:24:06.810 GMT [82186] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-13 09:24:06.811 GMT [82186] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-13 09:24:06.813 GMT [82186] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-13 09:24:06.819 GMT [82187] LOG:  database system was shut down at 2023-01-13 09:24:06 GMT
2023-01-13 09:24:06.824 GMT [82186] LOG:  database system is ready to accept connections
2023-01-13 09:24:07.769 GMT [82225] ERROR:  parameter name "account_id" used more than once
2023-01-13 09:24:07.769 GMT [82225] CONTEXT:  compilation of PL/pgSQL function "view_credit_statement" near line 1
2023-01-13 09:24:07.769 GMT [82225] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_credit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statement.account_id, credit_accounts_statement.account_number, credit_accounts_statement.starting_date, credit_accounts_statement.end_date, credit_accounts_statement.amount
	        FROM client.credit_accounts_statement
	        WHERE credit_accounts_statement.account_id = account_id
	        AND credit_accounts_statement.account_number = account_number
	        AND credit_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 09:24:07.770 GMT [82225] ERROR:  parameter name "account_id" used more than once
2023-01-13 09:24:07.770 GMT [82225] CONTEXT:  compilation of PL/pgSQL function "view_savings_statement" near line 1
2023-01-13 09:24:07.770 GMT [82225] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_savings_statement(account_id INT, savings_account_id INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT savings_accounts_statement.account_id, savings_accounts_statement.account_number, savings_accounts_statement.starting_date, savings_accounts_statement.end_date, savings_accounts_statement.amount
	        FROM client.savings_accounts_statement
	        WHERE savings_accounts_statement.account_id = account_id
	        AND savings_accounts_statement.account_number = savings_account_id
	        AND savings_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 09:25:25.764 GMT [82186] LOG:  received fast shutdown request
2023-01-13 09:25:25.767 GMT [82186] LOG:  aborting any active transactions
2023-01-13 09:25:25.772 GMT [82186] LOG:  background worker "logical replication launcher" (PID 82193) exited with exit code 1
2023-01-13 09:25:25.773 GMT [82188] LOG:  shutting down
2023-01-13 09:25:25.836 GMT [82186] LOG:  database system is shut down
2023-01-13 09:25:27.335 GMT [82550] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-13 09:25:27.336 GMT [82550] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-13 09:25:27.337 GMT [82550] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-13 09:25:27.342 GMT [82551] LOG:  database system was shut down at 2023-01-13 09:25:26 GMT
2023-01-13 09:25:27.350 GMT [82550] LOG:  database system is ready to accept connections
2023-01-13 09:25:28.261 GMT [82586] ERROR:  parameter name "account_id" used more than once
2023-01-13 09:25:28.261 GMT [82586] CONTEXT:  compilation of PL/pgSQL function "view_credit_statement" near line 1
2023-01-13 09:25:28.261 GMT [82586] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_credit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statement.account_id, credit_accounts_statement.account_number, credit_accounts_statement.starting_date, credit_accounts_statement.end_date, credit_accounts_statement.amount
	        FROM client.credit_accounts_statement
	        WHERE credit_accounts_statement.account_id = account_id
	        AND credit_accounts_statement.account_number = account_number
	        AND credit_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 09:25:28.263 GMT [82586] ERROR:  parameter name "account_id" used more than once
2023-01-13 09:25:28.263 GMT [82586] CONTEXT:  compilation of PL/pgSQL function "view_savings_statement" near line 1
2023-01-13 09:25:28.263 GMT [82586] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_savings_statement(account_id INT, savings_account_id INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT savings_accounts_statement.account_id, savings_accounts_statement.account_number, savings_accounts_statement.starting_date, savings_accounts_statement.end_date, savings_accounts_statement.amount
	        FROM client.savings_accounts_statement
	        WHERE savings_accounts_statement.account_id = account_id
	        AND savings_accounts_statement.account_number = savings_account_id
	        AND savings_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 09:25:28.316 GMT [82586] ERROR:  column "debit_account_id" does not exist at character 118
2023-01-13 09:25:28.316 GMT [82586] QUERY:  INSERT INTO debit_statement (starting_date, end_date, amount, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, debit_account_id)
2023-01-13 09:25:28.316 GMT [82586] CONTEXT:  PL/pgSQL function open_debit_account(integer) line 10 at SQL statement
2023-01-13 09:25:28.316 GMT [82586] STATEMENT:  SELECT * FROM client.open_debit_account(1);
2023-01-13 09:26:15.160 GMT [82550] LOG:  received fast shutdown request
2023-01-13 09:26:15.162 GMT [82550] LOG:  aborting any active transactions
2023-01-13 09:26:15.169 GMT [82550] LOG:  background worker "logical replication launcher" (PID 82557) exited with exit code 1
2023-01-13 09:26:15.170 GMT [82552] LOG:  shutting down
2023-01-13 09:26:15.235 GMT [82550] LOG:  database system is shut down
2023-01-13 09:26:16.753 GMT [82823] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-13 09:26:16.753 GMT [82823] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-13 09:26:16.755 GMT [82823] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-13 09:26:16.759 GMT [82824] LOG:  database system was shut down at 2023-01-13 09:26:16 GMT
2023-01-13 09:26:16.767 GMT [82823] LOG:  database system is ready to accept connections
2023-01-13 09:26:17.848 GMT [82866] ERROR:  parameter name "account_id" used more than once
2023-01-13 09:26:17.848 GMT [82866] CONTEXT:  compilation of PL/pgSQL function "view_credit_statement" near line 1
2023-01-13 09:26:17.848 GMT [82866] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_credit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statement.account_id, credit_accounts_statement.account_number, credit_accounts_statement.starting_date, credit_accounts_statement.end_date, credit_accounts_statement.amount
	        FROM client.credit_accounts_statement
	        WHERE credit_accounts_statement.account_id = account_id
	        AND credit_accounts_statement.account_number = account_number
	        AND credit_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 09:26:17.850 GMT [82866] ERROR:  parameter name "account_id" used more than once
2023-01-13 09:26:17.850 GMT [82866] CONTEXT:  compilation of PL/pgSQL function "view_savings_statement" near line 1
2023-01-13 09:26:17.850 GMT [82866] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_savings_statement(account_id INT, savings_account_id INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT savings_accounts_statement.account_id, savings_accounts_statement.account_number, savings_accounts_statement.starting_date, savings_accounts_statement.end_date, savings_accounts_statement.amount
	        FROM client.savings_accounts_statement
	        WHERE savings_accounts_statement.account_id = account_id
	        AND savings_accounts_statement.account_number = savings_account_id
	        AND savings_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 09:26:17.890 GMT [82866] ERROR:  column "account_id" of relation "debit_overdraft" does not exist at character 79
2023-01-13 09:26:17.890 GMT [82866] QUERY:  INSERT INTO debit_overdraft (overdraft_usage, overdraft_limit, interest_rate, account_id) VALUES (0, 0, 0.01, debit_account_number)
2023-01-13 09:26:17.890 GMT [82866] CONTEXT:  PL/pgSQL function open_debit_account(integer) line 11 at SQL statement
2023-01-13 09:26:17.890 GMT [82866] STATEMENT:  SELECT * FROM client.open_debit_account(1);
2023-01-13 09:26:36.652 GMT [82823] LOG:  received fast shutdown request
2023-01-13 09:26:36.654 GMT [82823] LOG:  aborting any active transactions
2023-01-13 09:26:36.658 GMT [82823] LOG:  background worker "logical replication launcher" (PID 82830) exited with exit code 1
2023-01-13 09:26:36.660 GMT [82825] LOG:  shutting down
2023-01-13 09:26:36.733 GMT [82823] LOG:  database system is shut down
2023-01-13 09:26:38.100 GMT [82999] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-13 09:26:38.100 GMT [82999] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-13 09:26:38.102 GMT [82999] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-13 09:26:38.106 GMT [83001] LOG:  database system was shut down at 2023-01-13 09:26:37 GMT
2023-01-13 09:26:38.113 GMT [82999] LOG:  database system is ready to accept connections
2023-01-13 09:26:39.027 GMT [83038] ERROR:  parameter name "account_id" used more than once
2023-01-13 09:26:39.027 GMT [83038] CONTEXT:  compilation of PL/pgSQL function "view_credit_statement" near line 1
2023-01-13 09:26:39.027 GMT [83038] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_credit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statement.account_id, credit_accounts_statement.account_number, credit_accounts_statement.starting_date, credit_accounts_statement.end_date, credit_accounts_statement.amount
	        FROM client.credit_accounts_statement
	        WHERE credit_accounts_statement.account_id = account_id
	        AND credit_accounts_statement.account_number = account_number
	        AND credit_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 09:26:39.028 GMT [83038] ERROR:  parameter name "account_id" used more than once
2023-01-13 09:26:39.028 GMT [83038] CONTEXT:  compilation of PL/pgSQL function "view_savings_statement" near line 1
2023-01-13 09:26:39.028 GMT [83038] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_savings_statement(account_id INT, savings_account_id INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT savings_accounts_statement.account_id, savings_accounts_statement.account_number, savings_accounts_statement.starting_date, savings_accounts_statement.end_date, savings_accounts_statement.amount
	        FROM client.savings_accounts_statement
	        WHERE savings_accounts_statement.account_id = account_id
	        AND savings_accounts_statement.account_number = savings_account_id
	        AND savings_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 09:26:39.056 GMT [83038] ERROR:  column "rowcount" does not exist at character 22
2023-01-13 09:26:39.056 GMT [83038] QUERY:  passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END
2023-01-13 09:26:39.056 GMT [83038] CONTEXT:  PL/pgSQL function open_debit_account(integer) line 13 at assignment
2023-01-13 09:26:39.056 GMT [83038] STATEMENT:  SELECT * FROM client.open_debit_account(1);
2023-01-13 09:27:18.501 GMT [82999] LOG:  received fast shutdown request
2023-01-13 09:27:18.504 GMT [82999] LOG:  aborting any active transactions
2023-01-13 09:27:18.508 GMT [82999] LOG:  background worker "logical replication launcher" (PID 83008) exited with exit code 1
2023-01-13 09:27:18.512 GMT [83003] LOG:  shutting down
2023-01-13 09:27:18.574 GMT [82999] LOG:  database system is shut down
2023-01-13 09:27:20.146 GMT [83230] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-13 09:27:20.147 GMT [83230] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-13 09:27:20.149 GMT [83230] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-13 09:27:20.154 GMT [83231] LOG:  database system was shut down at 2023-01-13 09:27:19 GMT
2023-01-13 09:27:20.163 GMT [83230] LOG:  database system is ready to accept connections
2023-01-13 09:27:21.151 GMT [83273] ERROR:  parameter name "account_id" used more than once
2023-01-13 09:27:21.151 GMT [83273] CONTEXT:  compilation of PL/pgSQL function "view_credit_statement" near line 1
2023-01-13 09:27:21.151 GMT [83273] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_credit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statement.account_id, credit_accounts_statement.account_number, credit_accounts_statement.starting_date, credit_accounts_statement.end_date, credit_accounts_statement.amount
	        FROM client.credit_accounts_statement
	        WHERE credit_accounts_statement.account_id = account_id
	        AND credit_accounts_statement.account_number = account_number
	        AND credit_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 09:27:21.153 GMT [83273] ERROR:  parameter name "account_id" used more than once
2023-01-13 09:27:21.153 GMT [83273] CONTEXT:  compilation of PL/pgSQL function "view_savings_statement" near line 1
2023-01-13 09:27:21.153 GMT [83273] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_savings_statement(account_id INT, savings_account_id INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT savings_accounts_statement.account_id, savings_accounts_statement.account_number, savings_accounts_statement.starting_date, savings_accounts_statement.end_date, savings_accounts_statement.amount
	        FROM client.savings_accounts_statement
	        WHERE savings_accounts_statement.account_id = account_id
	        AND savings_accounts_statement.account_number = savings_account_id
	        AND savings_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 11:30:58.509 GMT [4587] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-13 11:30:58.514 GMT [4587] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-13 11:30:58.516 GMT [4587] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-13 11:30:58.521 GMT [4588] LOG:  database system was shut down at 2023-01-13 11:30:58 GMT
2023-01-13 11:30:58.527 GMT [4587] LOG:  database system is ready to accept connections
2023-01-13 11:30:59.655 GMT [4638] ERROR:  parameter name "account_id" used more than once
2023-01-13 11:30:59.655 GMT [4638] CONTEXT:  compilation of PL/pgSQL function "view_credit_statement" near line 1
2023-01-13 11:30:59.655 GMT [4638] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_credit_statement(account_id INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statement.account_id, credit_accounts_statement.account_number, credit_accounts_statement.starting_date, credit_accounts_statement.end_date, credit_accounts_statement.amount
	        FROM client.credit_accounts_statement
	        WHERE credit_accounts_statement.account_id = account_id
	        AND credit_accounts_statement.account_number = account_number
	        AND credit_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 11:30:59.657 GMT [4638] ERROR:  parameter name "account_id" used more than once
2023-01-13 11:30:59.657 GMT [4638] CONTEXT:  compilation of PL/pgSQL function "view_savings_statement" near line 1
2023-01-13 11:30:59.657 GMT [4638] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_savings_statement(account_id INT, savings_account_id INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT savings_accounts_statement.account_id, savings_accounts_statement.account_number, savings_accounts_statement.starting_date, savings_accounts_statement.end_date, savings_accounts_statement.amount
	        FROM client.savings_accounts_statement
	        WHERE savings_accounts_statement.account_id = account_id
	        AND savings_accounts_statement.account_number = savings_account_id
	        AND savings_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-13 11:34:29.551 GMT [4587] LOG:  received fast shutdown request
2023-01-13 11:34:29.552 GMT [4587] LOG:  aborting any active transactions
2023-01-13 11:34:29.561 GMT [4587] LOG:  background worker "logical replication launcher" (PID 4594) exited with exit code 1
2023-01-13 11:34:29.562 GMT [4589] LOG:  shutting down
2023-01-13 11:34:29.630 GMT [4587] LOG:  database system is shut down
2023-01-13 11:34:31.048 GMT [5520] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-13 11:34:31.048 GMT [5520] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-13 11:34:31.050 GMT [5520] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-13 11:34:31.055 GMT [5521] LOG:  database system was shut down at 2023-01-13 11:34:30 GMT
2023-01-13 11:34:31.062 GMT [5520] LOG:  database system is ready to accept connections
2023-01-13 13:52:23.126 GMT [5520] LOG:  received fast shutdown request
2023-01-13 13:52:23.129 GMT [5520] LOG:  aborting any active transactions
2023-01-13 13:52:23.138 GMT [5520] LOG:  background worker "logical replication launcher" (PID 5527) exited with exit code 1
2023-01-13 13:52:23.139 GMT [5522] LOG:  shutting down
2023-01-13 13:52:23.154 GMT [5520] LOG:  database system is shut down
2023-01-13 13:52:27.111 GMT [23019] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-13 13:52:27.112 GMT [23019] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-13 13:52:27.114 GMT [23019] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-13 13:52:27.119 GMT [23020] LOG:  database system was shut down at 2023-01-13 13:52:26 GMT
2023-01-13 13:52:27.125 GMT [23019] LOG:  database system is ready to accept connections
2023-01-13 13:52:28.011 GMT [23060] ERROR:  column online_account.account_id does not exist at character 172
2023-01-13 13:52:28.011 GMT [23060] STATEMENT:  CREATE OR REPLACE VIEW staff.customers AS
	    SELECT online_account.account_id, customer.first_name, customer.last_name
	    FROM online_account
	    INNER JOIN customer ON online_account.account_id = customer.account_id;
2023-01-13 13:52:28.013 GMT [23060] ERROR:  syntax error at or near "RETURN" at character 692
2023-01-13 13:52:28.013 GMT [23060] STATEMENT:  CREATE OR REPLACE FUNCTION staff.view_outstanding_credit_applications()
	RETURNS TABLE(first_name TEXT, last_name TEXT, account_number INT) AS $$
	BEGIN
	    RETURN QUERY SELECT customers.first_name, customers.last_name, credit_account_applications.account_number
	    FROM staff.customers
	    INNER JOIN staff.accounts ON customers.account_id = accounts.account_id
	    INNER JOIN staff.credit_card_applications ON accounts.account_number = credit_card_applications.account_number
	    WHERE credit_card_applications.application_status = 'PENDING';
	
	CREATE OR REPLACE FUNCTION staff.view_outstanding_loan_applications()
	RETURNS TABLE(first_name TEXT, last_name TEXT, loan_id INT) AS $$
	BEGIN
	    RETURN QUERY SELECT customers.first_name, customers.last_name, loan_applications.id
	    FROM staff.customers
	    INNER JOIN staff.loan_applications ON loan_applications.account_id = customers.account_id
	    WHERE loan_applications.application_status = 'PENDING';
	CREATE SCHEMA IF NOT EXISTS client;
	SET search_path TO public, client;
	CREATE OR REPLACE VIEW client.accounts AS
	    SELECT account_number, account_id FROM account;
	CREATE OR REPLACE VIEW client.debit_accounts AS
	    SELECT account.account_id, account.account_number, debit_account.current_balance, debit_account.interest_rate, debit_overdraft.overdraft_limit, debit_overdraft.overdraft_usage, debit_overdraft.interest_rate AS overdraft_interest_rate
	    FROM account
	    INNER JOIN debit_account ON account.account_number = debit_account.account_number
	    INNER JOIN debit_overdraft ON account.account_number = debit_overdraft.account_number;
	CREATE OR REPLACE VIEW client.debit_accounts_statements AS
	    SELECT debit_accounts.account_id, debit_accounts.account_number, debit_statement.id, debit_statement.starting_date, debit_statement.end_date, debit_statement.amount
	    FROM debit_accounts
	    INNER JOIN debit_statement ON debit_accounts.account_number = debit_statement.account_number;
	CREATE OR REPLACE VIEW client.debit_accounts_statement AS
	    SELECT debit_accounts_statements.account_id, debit_accounts_statements.account_number, debit_accounts_statements.id, debit_accounts_statements.starting_date, debit_accounts_statements.end_date, debit_accounts_statements.amount AS total_amount, transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date
	    FROM debit_accounts_statements
	    INNER JOIN transaction ON debit_accounts_statements.id = transaction.debit_statement_id;
	CREATE OR REPLACE VIEW client.credit_accounts AS
	    SELECT account.account_id, account.account_number, credit_account.outstanding_balance, credit_account.credit_limit, credit_account.interest_rate, credit_account_application.application_status
	    FROM account
	    INNER JOIN credit_account ON account.account_number = credit_account.account_number
	    INNER JOIN credit_account_application ON account.account_number = credit_account_application.account_number;
	CREATE OR REPLACE VIEW client.credit_accounts_statements AS
	    SELECT credit_accounts.account_id, credit_accounts.account_number, credit_statement.id, credit_statement.starting_date, credit_statement.end_date, credit_statement.amount, credit_statement.minimum_payment, credit_statement.minimum_payment_due_date
	    FROM credit_accounts
	    INNER JOIN credit_statement ON credit_accounts.account_number = credit_statement.account_number;
	CREATE OR REPLACE VIEW client.credit_accounts_statement AS
	    SELECT credit_accounts_statements.account_id, credit_accounts_statements.account_number, credit_accounts_statements.id, credit_accounts_statements.starting_date, credit_accounts_statements.end_date, credit_accounts_statements.amount AS total_amount, credit_accounts_statements.minimum_payment, credit_accounts_statements.minimum_payment_due_date, transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date
	    FROM credit_accounts_statements
	    INNER JOIN transaction ON credit_accounts_statements.id = transaction.credit_statement_id;
	CREATE OR REPLACE VIEW client.savings_accounts AS
	    SELECT account.account_id, account.account_number, savings_account.current_balance, savings_account.interest_rate
	    FROM account
	    INNER JOIN savings_account ON account.account_number = savings_account.account_number;
	CREATE OR REPLACE VIEW client.savings_accounts_statements AS
	    SELECT savings_accounts.account_id, savings_accounts.account_number, savings_statement.id, savings_statement.starting_date, savings_statement.end_date, savings_statement.amount
	    FROM savings_accounts
	    INNER JOIN savings_statement ON savings_accounts.account_number = savings_statement.account_number;
	CREATE OR REPLACE VIEW client.loans AS
	    SELECT loan.account_id, loan.id, loan.amount, loan.interest_rate, loan.loan_type, loan.end_date, loan_application.application_status
	    FROM loan
	    INNER JOIN loan_application ON loan.id = loan_application.loan_id;
	CREATE OR REPLACE VIEW client.loan_statements AS
	    SELECT loans.account_id, loans.id, loan_statement.id, loan_statement.starting_date, loan_statement.end_date, loan_statement.amount, loan_statement.minimum_payment, loan_statement.minimum_payment_due_date
	    FROM loans
	    INNER JOIN loan_statement ON loans.id = loan_statement.loan_id;
	CREATE OR REPLACE VIEW client.loan_applications AS
	    SELECT loan.acccount_id, loan_application.id, loan_application.application_status, loan_application.loan_id
	    FROM loan_application
	    INNER JOIN loan ON loan_application.loan_id = loan.id;
	CREATE OR REPLACE FUNCTION client.update_personal_information(account_identifier INT, first_name TEXT, last_name TEXT, date_of_birth DATE, phone_number TEXT, email_address TEXT, address_street TEXT, address_city TEXT, address_county TEXT, address_postcode TEXT, account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	BEGIN
	    UPDATE customer SET first_name = first_name, last_name = last_name, date_of_birth = date_of_birth, phone_number = phone_number, email_address = email_address, address_street = address_street, address_city = address_city, address_county = address_county, address_postcode = address_postcode
	    WHERE id = (SELECT customer_id FROM online_account WHERE id = account_identifier);
	
	    -- INSERT INTO management_log (log_description, log_date, account_id) VALUES ('Updated personal information', CURRENT_DATE, account_identifier);
	    passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
	    RETURN passed;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.update_password(account_identifier INT, new_password TEXT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	BEGIN
	    UPDATE user_login SET password = md5(new_password)
	    WHERE account_id = account_identifier;
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Updated password', CURRENT_DATE);
	    passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
	    RETURN passed;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.update_email(account_identifier INT, new_email TEXT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE ROW_COUNT INT;
	BEGIN
	    UPDATE user_login SET email = new_email
	    WHERE account_id = account_identifier;
	
	    GET DIAGNOSTICS ROW_COUNT = ROW_COUNT;
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Updated email', CURRENT_DATE);
	    passed = CASE WHEN ROW_COUNT = 1 THEN TRUE ELSE FALSE END;
	    RETURN passed;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.open_debit_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE debit_account_number INT;
	DECLARE next_account_number INT;
	DECLARE ROW_COUNT INT;
	BEGIN
	
	    SELECT get_next_account_number() INTO next_account_number;
	
	    INSERT INTO debit_account (account_number, account_id, current_balance, interest_rate) VALUES (next_account_number ,account_id, 0, 0.01) RETURNING account_number INTO debit_account_number;
	    GET DIAGNOSTICS ROW_COUNT = ROW_COUNT;
	    INSERT INTO debit_statement (starting_date, end_date, amount, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, debit_account_number);
	    INSERT INTO debit_overdraft (overdraft_usage, overdraft_limit, interest_rate, account_number) VALUES (0, 0, 0.01, debit_account_number);
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened debit account', CURRENT_DATE);
	    passed = CASE WHEN ROW_COUNT = 1 THEN TRUE ELSE FALSE END;
	    passed = TRUE;
	    RETURN passed;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.open_credit_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE credit_account_number INT;
	DECLARE next_account_number INT;
	BEGIN
	
	    SELECT get_next_account_number() INTO next_account_number;
	
	    INSERT INTO credit_account (account_number, outstanding_balance, credit_limit, interest_rate, account_id) VALUES (next_account_number ,0, 0, 24.9, account_id) RETURNING account_number INTO credit_account_number;
	    INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_number);
	    INSERT INTO credit_account_application (credit_account_id, application_status) VALUES (credit_account_number, 'PENDING');
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened credit account', CURRENT_DATE);
	END
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.open_savings_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE savings_account_id INT;
	DECLARE next_account_number INT;
	DECLARE ROW_COUNT INT;
	BEGIN
	
	    SELECT get_next_account_number() INTO next_account_number;
	
	    INSERT INTO savings_account (account_number, account_id, current_balance, interest_rate) VALUES (next_account_number ,account_id, 0, 0.01) RETURNING account_number INTO savings_account_id;
	    GET DIAGNOSTICS ROW_COUNT = ROW_COUNT;
	    INSERT INTO savings_statement (starting_date, end_date, amount, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, savings_account_id);
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened savings account', CURRENT_DATE);
	    passed = CASE WHEN ROW_COUNT = 1 THEN TRUE ELSE FALSE END;
	    RETURN passed;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.open_loan(account_id INT, loan_amount INT, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE loan_id INT;
	DECLARE ROW_COUNT INT;
	BEGIN
	    INSERT INTO loan (account_id, loan_amount, loan_end_date, loan_type, loan_interest_rate) VALUES (account_id, loan_amount, loan_end_date, loan_type, loan_interest_rate) RETURNING id INTO loan_id;
	    GET DIAGNOSTICS ROW_COUNT = ROW_COUNT;
	    INSERT INTO loan_statement (starting_date, end_date, amount, account_id) VALUES (CURRENT_DATE, CURRENT_DATE, 0, loan_id);
	    INSERT INTO loan_application (loan_id, application_status) VALUES (loan_id, 'PENDING');
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened loan', CURRENT_DATE);
	    passed = CASE WHEN ROW_COUNT = 1 THEN TRUE ELSE FALSE END;
	    RETURN passed;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.view_personal_information(account_id INT)
	RETURNS TABLE (first_name TEXT, last_name TEXT, email TEXT, phone_number TEXT, address TEXT, city TEXT, country TEXT, postal_code TEXT) AS $$
	BEGIN
	    RETURN QUERY
	        SELECT first_name, last_name, email, phone_number, address, city, country, postal_code
	            FROM customer
	        INNER JOIN account ON account.customer_id = customer.id
	        WHERE account.id = account_id;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.view_accounts(account_identifier INT)
	RETURNS TABLE (account_number INT, account_id INT, balance NUMERIC, interest_rate NUMERIC, account_type TEXT) AS $$
	
	BEGIN
	
	    RETURN QUERY
	        SELECT account.*, COALESCE(debit_accounts.current_balance, credit_accounts.outstanding_balance, savings_accounts.current_balance) AS balance,
	            COALESCE(debit_accounts.interest_rate, credit_accounts.interest_rate, savings_accounts.interest_rate) AS interest_rate,
	            get_account_type(account.account_number) AS account_type
	            FROM account
	            LEFT JOIN client.credit_accounts ON account.account_number = credit_accounts.account_number
	            LEFT JOIN client.debit_accounts ON account.account_number = debit_accounts.account_number
	            LEFT JOIN client.savings_accounts ON account.account_number = savings_accounts.account_number
	            WHERE account.account_id = account_identifier;
	
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.view_debit_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, overdraft_limit NUMERIC, overdraft_usage NUMERIC, overdraft_interest_rate NUMERIC, external_account_number INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed debit accounts', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT * FROM client.debit_accounts WHERE account_id = account_id;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.view_credit_accounts(account_id INT)
	RETURNS TABLE (id INT, outstanding_balance NUMERIC, credit_limit NUMERIC, interest_rate NUMERIC, application_status TEXT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit accounts', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT * FROM client.credit_accounts WHERE account_id = account_id;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.view_savings_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, external_account_number INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings accounts', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT * FROM client.savings_accounts WHERE account_id = account_id;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.view_loans(account_id INT)
	RETURNS TABLE (id INT, loan_amount NUMERIC, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC, application_status TEXT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed loans', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT * FROM client.loans WHERE account_id = account_id;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.view_savings_statements(account_identifier INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Viewed savings statements', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT savings_accounts_statements.account_id, savings_accounts_statements.account_number, savings_accounts_statements.starting_date, savings_accounts_statements.end_date, savings_accounts_statements.amount
	        FROM client.savings_accounts_statements
	        WHERE savings_accounts_statements.account_number = account_number
	        AND savings_accounts_statements.account_id = account_identifier;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.view_debit_statements(account_identifier INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Viewed debit statements', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT debit_accounts_statements.account_id, debit_accounts_statements.account_number, debit_accounts_statements.starting_date, debit_accounts_statements.end_date, debit_accounts_statements.amount
	        FROM client.debit_accounts_statements
	        WHERE debit_accounts_statements.account_number = account_number
	        AND debit_accounts_statements.account_id = account_identifier;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.view_credit_statements(account_identifier INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Viewed credit statements', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statements.account_id, credit_accounts_statements.account_number, credit_accounts_statements.starting_date, credit_accounts_statements.end_date, credit_accounts_statements.amount
	        FROM client.credit_accounts_statements
	        WHERE credit_accounts_statements.account_number = account_number
	        AND credit_accounts_statements.account_id = account_identifier;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.view_debit_statement(account_identifier INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Viewed debit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT debit_accounts_statement.account_id, debit_accounts_statement.account_number, debit_accounts_statement.starting_date, debit_accounts_statement.end_date, debit_accounts_statement.amount
	        FROM client.debit_accounts_statement
	        WHERE debit_accounts_statement.account_id = account_identifier
	        AND debit_accounts_statement.account_number = account_number
	        AND debit_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.view_credit_statement(account_identifier INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statement.account_id, credit_accounts_statement.account_number, credit_accounts_statement.starting_date, credit_accounts_statement.end_date, credit_accounts_statement.amount
	        FROM client.credit_accounts_statement
	        WHERE credit_accounts_statement.account_id = account_identifier
	        AND credit_accounts_statement.account_number = account_number
	        AND credit_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.view_savings_statement(account_identifier INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT savings_accounts_statement.account_id, savings_accounts_statement.account_number, savings_accounts_statement.starting_date, savings_accounts_statement.end_date, savings_accounts_statement.amount
	        FROM client.savings_accounts_statement
	        WHERE savings_accounts_statement.account_id = account_identifier
	        AND savings_accounts_statement.account_number = account_number
	        AND savings_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
	CREATE SCHEMA IF NOT EXISTS unauthenticated;
	SET search_path TO unauthenticated, public;
	
	CREATE OR REPLACE VIEW unauthenticated.unauthenticated_personal_information AS
	SELECT id, md5(first_name) AS first_name, md5(last_name) AS last_name, md5(email_address) AS email_address
	FROM customer;
	
	CREATE OR REPLACE VIEW unauthenticated.unauthenticated_login AS
	SELECT md5(username) AS username FROM user_login;
	
	CREATE OR REPLACE FUNCTION unauthenticated.create_personal_info(first_name TEXT, last_name TEXT, date_of_birth DATE, phone_number TEXT, email_address TEXT, address_street TEXT, address_city TEXT, address_county TEXT, address_postcode TEXT)
	RETURNS INT AS $$
	DECLARE customer_id INT;
	BEGIN
	    IF NOT EXISTS (SELECT FROM unauthenticated.unauthenticated_personal_information WHERE md5(first_name) = first_name AND md5(last_name) = last_name AND md5(email_address) = email_address) THEN
	        INSERT INTO customer
	        VALUES (first_name, last_name, date_of_birth, phone_number, email_address, address_street, address_city, address_county, address_postcode)
	        RETURNING id INTO customer_id;
	
	        INSERT INTO management_log (log_description, log_date) VALUES ('New customer created', now());
	    ELSE
	        RAISE NOTICE 'CUSTOMER INFORMATION ALREADY PRESENT';
	        SELECT id INTO customer_id FROM unauthenticated.unauthenticated_personal_information WHERE md5(first_name) = first_name AND md5(last_name) = last_name AND md5(email_address) = email_address;
	    END IF;
	    RETURN customer_id;
	END;
	$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION unauthenticated.create_online_account_details(customer_id INT, first_name TEXT, last_name TEXT, email_address TEXT, question_choice_ids INT[], question_answers TEXT[])
	RETURNS INT AS $$
	DECLARE account_id INT;
	DECLARE online_account_id INT;
	DECLARE question_choice_id INT;
	BEGIN
	    IF NOT EXISTS (SELECT FROM user_login WHERE username = username) THEN
	        INSERT INTO online_account (date_opened, sort_code, customer_id)
	        VALUES ((SELECT now()), (SELECT num FROM GENERATE_SERIES(1, 6) AS s(num) LIMIT 1), customer_id)
	        RETURNING id INTO account_id;
	
	        INSERT INTO user_login (account_id, username, password)
	        VALUES (account_id, username, md5(password))
	        RETURNING id INTO online_account_id;
	
	        FOR i IN 0..2 LOOP
	            
	            INSERT INTO user_login_security_question (question_choice_id, login_id)
	            VALUES (question_choice_ids[i], online_account_id)
	            RETURNING id INTO question_choice_id;
	
	            INSERT INTO security_question_answer (answer, question_id)
	            VALUES (question_answers[i], question_choice_id);
	
	        END LOOP;
	
	
	        INSERT INTO authentication_log (log_description, log_date, account_id) VALUES ('New online account created', now(), account_id);
	
	        RETURN account_id;
	    ELSE
	        RAISE NOTICE 'USERNAME ALREADY TAKEN';
	        RETURN NULL;
	
	    END IF;
	    RETURN success;
	END;
	$$ LANGUAGE plpgsql;
	
	INSERT INTO customer (first_name, last_name, date_of_birth, phone_number, email_address, address_street, address_city, address_county, address_postcode)
	VALUES ('John', 'Smith', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('Jane', 'Doe', '1990-01-01', '01234567890', 'test@gmail.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Bloggs', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('John', 'Bloggs', '1990-01-01', '01234567890', 'hello@yahoo.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('Jane', 'Bloggs', '1990-01-01', '01234567890', 'test@outlook.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Doe', '1990-01-01', '01234567890', 'hello@outlook.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('John', 'Doe', '1990-01-01', '01234567890', 'mybankemail@icloud.com', '1 My Bank Street', 'My Bank City', 'My Bank County', 'MB1 1NK'),
	('Jane', 'Smith', '1990-01-01', '01234567890', 'bankemail@outlook.com', '1 Bank Street', 'Bank City', 'Bank County', 'BA1 1NK'),
	('Joe', 'Smith', '1990-01-01', '01234567890', 'example@icloud.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX');
	
	INSERT INTO online_account (date_opened, sort_code, customer_id)
	VALUES ('2020-01-01', '123456', 1),
	('2019-01-01', '126485', 2),
	('2018-01-01', '128475', 3),
	('2017-01-01', '129476', 4),
	('2016-01-01', '120386', 5),
	('2017-02-03', '127385', 6),
	('2018-02-04', '128256', 7),
	('2020-01-01', '129386', 8),
	('2020-01-01', '120386', 9);
	
	INSERT INTO user_login (account_id, username, password)
	VALUES (1, 'johnsmith', 'b29af57c2b3bba21e9df0cece40952c6'),
	(2, 'janedoe', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(3, 'joebloggs', 'b29af57c2b3bba21e9df0cece40952c6'),
	(4, 'johnbloggs', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(5, 'janebloggs', 'b29af57c2b3bba21e9df0cece40952c6'),
	(6, 'joedoe', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(7, 'johndoe', 'b29af57c2b3bba21e9df0cece40952c6'),
	(8, 'joesmith', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(9, 'janesmith', 'b29af57c2b3bba21e9df0cece40952c6');
	
	INSERT INTO security_question_option (question_description)
	VALUES ('What is your favourite colour?'),
	('What is your favourite food?'),
	('What is your favourite animal?'),
	('What is your favourite sport?'),
	('What is your favourite movie?'),
	('What is your favourite book?'),
	('What is your favourite song?'),
	('What is your favourite band?'),
	('What is your favourite game?'),
	('What is your favourite TV show?');
	
	INSERT INTO user_login_security_question (question_choice_id, login_id)
	VALUES (1, 1),
	(2, 2),
	(3, 3),
	(4, 4),
	(5, 5),
	(6, 6),
	(7, 7),
	(8, 8),
	(9, 9);
	
	INSERT INTO security_question_answer (question_answer, question_id)
	VALUES ('Red', 1),
	('Blue', 2),
	('Green', 3),
	('Yellow', 4),
	('Orange', 5),
	('Purple', 6),
	('Pink', 7),
	('Black', 8),
	('White', 9);
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
2023-01-13 13:53:15.752 GMT [23019] LOG:  received fast shutdown request
2023-01-13 13:53:15.753 GMT [23019] LOG:  aborting any active transactions
2023-01-13 13:53:15.759 GMT [23019] LOG:  background worker "logical replication launcher" (PID 23026) exited with exit code 1
2023-01-13 13:53:15.759 GMT [23021] LOG:  shutting down
2023-01-13 13:53:15.808 GMT [23019] LOG:  database system is shut down
2023-01-13 13:53:17.091 GMT [23309] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-13 13:53:17.091 GMT [23309] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-13 13:53:17.093 GMT [23309] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-13 13:53:17.098 GMT [23310] LOG:  database system was shut down at 2023-01-13 13:53:16 GMT
2023-01-13 13:53:17.103 GMT [23309] LOG:  database system is ready to accept connections
2023-01-13 13:53:17.948 GMT [23338] ERROR:  column customer.account_id does not exist at character 198
2023-01-13 13:53:17.948 GMT [23338] STATEMENT:  CREATE OR REPLACE VIEW staff.customers AS
	    SELECT online_account.id as account_id, customer.first_name, customer.last_name
	    FROM online_account
	    INNER JOIN customer ON online_account.id = customer.account_id;
2023-01-13 13:53:17.950 GMT [23338] ERROR:  syntax error at or near "RETURN" at character 692
2023-01-13 13:53:17.950 GMT [23338] STATEMENT:  CREATE OR REPLACE FUNCTION staff.view_outstanding_credit_applications()
	RETURNS TABLE(first_name TEXT, last_name TEXT, account_number INT) AS $$
	BEGIN
	    RETURN QUERY SELECT customers.first_name, customers.last_name, credit_account_applications.account_number
	    FROM staff.customers
	    INNER JOIN staff.accounts ON customers.account_id = accounts.account_id
	    INNER JOIN staff.credit_card_applications ON accounts.account_number = credit_card_applications.account_number
	    WHERE credit_card_applications.application_status = 'PENDING';
	
	CREATE OR REPLACE FUNCTION staff.view_outstanding_loan_applications()
	RETURNS TABLE(first_name TEXT, last_name TEXT, loan_id INT) AS $$
	BEGIN
	    RETURN QUERY SELECT customers.first_name, customers.last_name, loan_applications.id
	    FROM staff.customers
	    INNER JOIN staff.loan_applications ON loan_applications.account_id = customers.account_id
	    WHERE loan_applications.application_status = 'PENDING';
	CREATE SCHEMA IF NOT EXISTS client;
	SET search_path TO public, client;
	CREATE OR REPLACE VIEW client.accounts AS
	    SELECT account_number, account_id FROM account;
	CREATE OR REPLACE VIEW client.debit_accounts AS
	    SELECT account.account_id, account.account_number, debit_account.current_balance, debit_account.interest_rate, debit_overdraft.overdraft_limit, debit_overdraft.overdraft_usage, debit_overdraft.interest_rate AS overdraft_interest_rate
	    FROM account
	    INNER JOIN debit_account ON account.account_number = debit_account.account_number
	    INNER JOIN debit_overdraft ON account.account_number = debit_overdraft.account_number;
	CREATE OR REPLACE VIEW client.debit_accounts_statements AS
	    SELECT debit_accounts.account_id, debit_accounts.account_number, debit_statement.id, debit_statement.starting_date, debit_statement.end_date, debit_statement.amount
	    FROM debit_accounts
	    INNER JOIN debit_statement ON debit_accounts.account_number = debit_statement.account_number;
	CREATE OR REPLACE VIEW client.debit_accounts_statement AS
	    SELECT debit_accounts_statements.account_id, debit_accounts_statements.account_number, debit_accounts_statements.id, debit_accounts_statements.starting_date, debit_accounts_statements.end_date, debit_accounts_statements.amount AS total_amount, transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date
	    FROM debit_accounts_statements
	    INNER JOIN transaction ON debit_accounts_statements.id = transaction.debit_statement_id;
	CREATE OR REPLACE VIEW client.credit_accounts AS
	    SELECT account.account_id, account.account_number, credit_account.outstanding_balance, credit_account.credit_limit, credit_account.interest_rate, credit_account_application.application_status
	    FROM account
	    INNER JOIN credit_account ON account.account_number = credit_account.account_number
	    INNER JOIN credit_account_application ON account.account_number = credit_account_application.account_number;
	CREATE OR REPLACE VIEW client.credit_accounts_statements AS
	    SELECT credit_accounts.account_id, credit_accounts.account_number, credit_statement.id, credit_statement.starting_date, credit_statement.end_date, credit_statement.amount, credit_statement.minimum_payment, credit_statement.minimum_payment_due_date
	    FROM credit_accounts
	    INNER JOIN credit_statement ON credit_accounts.account_number = credit_statement.account_number;
	CREATE OR REPLACE VIEW client.credit_accounts_statement AS
	    SELECT credit_accounts_statements.account_id, credit_accounts_statements.account_number, credit_accounts_statements.id, credit_accounts_statements.starting_date, credit_accounts_statements.end_date, credit_accounts_statements.amount AS total_amount, credit_accounts_statements.minimum_payment, credit_accounts_statements.minimum_payment_due_date, transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date
	    FROM credit_accounts_statements
	    INNER JOIN transaction ON credit_accounts_statements.id = transaction.credit_statement_id;
	CREATE OR REPLACE VIEW client.savings_accounts AS
	    SELECT account.account_id, account.account_number, savings_account.current_balance, savings_account.interest_rate
	    FROM account
	    INNER JOIN savings_account ON account.account_number = savings_account.account_number;
	CREATE OR REPLACE VIEW client.savings_accounts_statements AS
	    SELECT savings_accounts.account_id, savings_accounts.account_number, savings_statement.id, savings_statement.starting_date, savings_statement.end_date, savings_statement.amount
	    FROM savings_accounts
	    INNER JOIN savings_statement ON savings_accounts.account_number = savings_statement.account_number;
	CREATE OR REPLACE VIEW client.loans AS
	    SELECT loan.account_id, loan.id, loan.amount, loan.interest_rate, loan.loan_type, loan.end_date, loan_application.application_status
	    FROM loan
	    INNER JOIN loan_application ON loan.id = loan_application.loan_id;
	CREATE OR REPLACE VIEW client.loan_statements AS
	    SELECT loans.account_id, loans.id, loan_statement.id, loan_statement.starting_date, loan_statement.end_date, loan_statement.amount, loan_statement.minimum_payment, loan_statement.minimum_payment_due_date
	    FROM loans
	    INNER JOIN loan_statement ON loans.id = loan_statement.loan_id;
	CREATE OR REPLACE VIEW client.loan_applications AS
	    SELECT loan.acccount_id, loan_application.id, loan_application.application_status, loan_application.loan_id
	    FROM loan_application
	    INNER JOIN loan ON loan_application.loan_id = loan.id;
	CREATE OR REPLACE FUNCTION client.update_personal_information(account_identifier INT, first_name TEXT, last_name TEXT, date_of_birth DATE, phone_number TEXT, email_address TEXT, address_street TEXT, address_city TEXT, address_county TEXT, address_postcode TEXT, account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	BEGIN
	    UPDATE customer SET first_name = first_name, last_name = last_name, date_of_birth = date_of_birth, phone_number = phone_number, email_address = email_address, address_street = address_street, address_city = address_city, address_county = address_county, address_postcode = address_postcode
	    WHERE id = (SELECT customer_id FROM online_account WHERE id = account_identifier);
	
	    -- INSERT INTO management_log (log_description, log_date, account_id) VALUES ('Updated personal information', CURRENT_DATE, account_identifier);
	    passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
	    RETURN passed;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.update_password(account_identifier INT, new_password TEXT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	BEGIN
	    UPDATE user_login SET password = md5(new_password)
	    WHERE account_id = account_identifier;
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Updated password', CURRENT_DATE);
	    passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
	    RETURN passed;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.update_email(account_identifier INT, new_email TEXT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE ROW_COUNT INT;
	BEGIN
	    UPDATE user_login SET email = new_email
	    WHERE account_id = account_identifier;
	
	    GET DIAGNOSTICS ROW_COUNT = ROW_COUNT;
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Updated email', CURRENT_DATE);
	    passed = CASE WHEN ROW_COUNT = 1 THEN TRUE ELSE FALSE END;
	    RETURN passed;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.open_debit_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE debit_account_number INT;
	DECLARE next_account_number INT;
	DECLARE ROW_COUNT INT;
	BEGIN
	
	    SELECT get_next_account_number() INTO next_account_number;
	
	    INSERT INTO debit_account (account_number, account_id, current_balance, interest_rate) VALUES (next_account_number ,account_id, 0, 0.01) RETURNING account_number INTO debit_account_number;
	    GET DIAGNOSTICS ROW_COUNT = ROW_COUNT;
	    INSERT INTO debit_statement (starting_date, end_date, amount, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, debit_account_number);
	    INSERT INTO debit_overdraft (overdraft_usage, overdraft_limit, interest_rate, account_number) VALUES (0, 0, 0.01, debit_account_number);
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened debit account', CURRENT_DATE);
	    passed = CASE WHEN ROW_COUNT = 1 THEN TRUE ELSE FALSE END;
	    passed = TRUE;
	    RETURN passed;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.open_credit_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE credit_account_number INT;
	DECLARE next_account_number INT;
	BEGIN
	
	    SELECT get_next_account_number() INTO next_account_number;
	
	    INSERT INTO credit_account (account_number, outstanding_balance, credit_limit, interest_rate, account_id) VALUES (next_account_number ,0, 0, 24.9, account_id) RETURNING account_number INTO credit_account_number;
	    INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_number);
	    INSERT INTO credit_account_application (credit_account_id, application_status) VALUES (credit_account_number, 'PENDING');
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened credit account', CURRENT_DATE);
	END
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.open_savings_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE savings_account_id INT;
	DECLARE next_account_number INT;
	DECLARE ROW_COUNT INT;
	BEGIN
	
	    SELECT get_next_account_number() INTO next_account_number;
	
	    INSERT INTO savings_account (account_number, account_id, current_balance, interest_rate) VALUES (next_account_number ,account_id, 0, 0.01) RETURNING account_number INTO savings_account_id;
	    GET DIAGNOSTICS ROW_COUNT = ROW_COUNT;
	    INSERT INTO savings_statement (starting_date, end_date, amount, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, savings_account_id);
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened savings account', CURRENT_DATE);
	    passed = CASE WHEN ROW_COUNT = 1 THEN TRUE ELSE FALSE END;
	    RETURN passed;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.open_loan(account_id INT, loan_amount INT, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE loan_id INT;
	DECLARE ROW_COUNT INT;
	BEGIN
	    INSERT INTO loan (account_id, loan_amount, loan_end_date, loan_type, loan_interest_rate) VALUES (account_id, loan_amount, loan_end_date, loan_type, loan_interest_rate) RETURNING id INTO loan_id;
	    GET DIAGNOSTICS ROW_COUNT = ROW_COUNT;
	    INSERT INTO loan_statement (starting_date, end_date, amount, account_id) VALUES (CURRENT_DATE, CURRENT_DATE, 0, loan_id);
	    INSERT INTO loan_application (loan_id, application_status) VALUES (loan_id, 'PENDING');
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened loan', CURRENT_DATE);
	    passed = CASE WHEN ROW_COUNT = 1 THEN TRUE ELSE FALSE END;
	    RETURN passed;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.view_personal_information(account_id INT)
	RETURNS TABLE (first_name TEXT, last_name TEXT, email TEXT, phone_number TEXT, address TEXT, city TEXT, country TEXT, postal_code TEXT) AS $$
	BEGIN
	    RETURN QUERY
	        SELECT first_name, last_name, email, phone_number, address, city, country, postal_code
	            FROM customer
	        INNER JOIN account ON account.customer_id = customer.id
	        WHERE account.id = account_id;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.view_accounts(account_identifier INT)
	RETURNS TABLE (account_number INT, account_id INT, balance NUMERIC, interest_rate NUMERIC, account_type TEXT) AS $$
	
	BEGIN
	
	    RETURN QUERY
	        SELECT account.*, COALESCE(debit_accounts.current_balance, credit_accounts.outstanding_balance, savings_accounts.current_balance) AS balance,
	            COALESCE(debit_accounts.interest_rate, credit_accounts.interest_rate, savings_accounts.interest_rate) AS interest_rate,
	            get_account_type(account.account_number) AS account_type
	            FROM account
	            LEFT JOIN client.credit_accounts ON account.account_number = credit_accounts.account_number
	            LEFT JOIN client.debit_accounts ON account.account_number = debit_accounts.account_number
	            LEFT JOIN client.savings_accounts ON account.account_number = savings_accounts.account_number
	            WHERE account.account_id = account_identifier;
	
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.view_debit_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, overdraft_limit NUMERIC, overdraft_usage NUMERIC, overdraft_interest_rate NUMERIC, external_account_number INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed debit accounts', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT * FROM client.debit_accounts WHERE account_id = account_id;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.view_credit_accounts(account_id INT)
	RETURNS TABLE (id INT, outstanding_balance NUMERIC, credit_limit NUMERIC, interest_rate NUMERIC, application_status TEXT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit accounts', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT * FROM client.credit_accounts WHERE account_id = account_id;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.view_savings_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, external_account_number INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings accounts', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT * FROM client.savings_accounts WHERE account_id = account_id;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.view_loans(account_id INT)
	RETURNS TABLE (id INT, loan_amount NUMERIC, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC, application_status TEXT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed loans', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT * FROM client.loans WHERE account_id = account_id;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.view_savings_statements(account_identifier INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Viewed savings statements', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT savings_accounts_statements.account_id, savings_accounts_statements.account_number, savings_accounts_statements.starting_date, savings_accounts_statements.end_date, savings_accounts_statements.amount
	        FROM client.savings_accounts_statements
	        WHERE savings_accounts_statements.account_number = account_number
	        AND savings_accounts_statements.account_id = account_identifier;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.view_debit_statements(account_identifier INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Viewed debit statements', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT debit_accounts_statements.account_id, debit_accounts_statements.account_number, debit_accounts_statements.starting_date, debit_accounts_statements.end_date, debit_accounts_statements.amount
	        FROM client.debit_accounts_statements
	        WHERE debit_accounts_statements.account_number = account_number
	        AND debit_accounts_statements.account_id = account_identifier;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.view_credit_statements(account_identifier INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Viewed credit statements', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statements.account_id, credit_accounts_statements.account_number, credit_accounts_statements.starting_date, credit_accounts_statements.end_date, credit_accounts_statements.amount
	        FROM client.credit_accounts_statements
	        WHERE credit_accounts_statements.account_number = account_number
	        AND credit_accounts_statements.account_id = account_identifier;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.view_debit_statement(account_identifier INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Viewed debit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT debit_accounts_statement.account_id, debit_accounts_statement.account_number, debit_accounts_statement.starting_date, debit_accounts_statement.end_date, debit_accounts_statement.amount
	        FROM client.debit_accounts_statement
	        WHERE debit_accounts_statement.account_id = account_identifier
	        AND debit_accounts_statement.account_number = account_number
	        AND debit_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.view_credit_statement(account_identifier INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statement.account_id, credit_accounts_statement.account_number, credit_accounts_statement.starting_date, credit_accounts_statement.end_date, credit_accounts_statement.amount
	        FROM client.credit_accounts_statement
	        WHERE credit_accounts_statement.account_id = account_identifier
	        AND credit_accounts_statement.account_number = account_number
	        AND credit_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.view_savings_statement(account_identifier INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT savings_accounts_statement.account_id, savings_accounts_statement.account_number, savings_accounts_statement.starting_date, savings_accounts_statement.end_date, savings_accounts_statement.amount
	        FROM client.savings_accounts_statement
	        WHERE savings_accounts_statement.account_id = account_identifier
	        AND savings_accounts_statement.account_number = account_number
	        AND savings_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
	CREATE SCHEMA IF NOT EXISTS unauthenticated;
	SET search_path TO unauthenticated, public;
	
	CREATE OR REPLACE VIEW unauthenticated.unauthenticated_personal_information AS
	SELECT id, md5(first_name) AS first_name, md5(last_name) AS last_name, md5(email_address) AS email_address
	FROM customer;
	
	CREATE OR REPLACE VIEW unauthenticated.unauthenticated_login AS
	SELECT md5(username) AS username FROM user_login;
	
	CREATE OR REPLACE FUNCTION unauthenticated.create_personal_info(first_name TEXT, last_name TEXT, date_of_birth DATE, phone_number TEXT, email_address TEXT, address_street TEXT, address_city TEXT, address_county TEXT, address_postcode TEXT)
	RETURNS INT AS $$
	DECLARE customer_id INT;
	BEGIN
	    IF NOT EXISTS (SELECT FROM unauthenticated.unauthenticated_personal_information WHERE md5(first_name) = first_name AND md5(last_name) = last_name AND md5(email_address) = email_address) THEN
	        INSERT INTO customer
	        VALUES (first_name, last_name, date_of_birth, phone_number, email_address, address_street, address_city, address_county, address_postcode)
	        RETURNING id INTO customer_id;
	
	        INSERT INTO management_log (log_description, log_date) VALUES ('New customer created', now());
	    ELSE
	        RAISE NOTICE 'CUSTOMER INFORMATION ALREADY PRESENT';
	        SELECT id INTO customer_id FROM unauthenticated.unauthenticated_personal_information WHERE md5(first_name) = first_name AND md5(last_name) = last_name AND md5(email_address) = email_address;
	    END IF;
	    RETURN customer_id;
	END;
	$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION unauthenticated.create_online_account_details(customer_id INT, first_name TEXT, last_name TEXT, email_address TEXT, question_choice_ids INT[], question_answers TEXT[])
	RETURNS INT AS $$
	DECLARE account_id INT;
	DECLARE online_account_id INT;
	DECLARE question_choice_id INT;
	BEGIN
	    IF NOT EXISTS (SELECT FROM user_login WHERE username = username) THEN
	        INSERT INTO online_account (date_opened, sort_code, customer_id)
	        VALUES ((SELECT now()), (SELECT num FROM GENERATE_SERIES(1, 6) AS s(num) LIMIT 1), customer_id)
	        RETURNING id INTO account_id;
	
	        INSERT INTO user_login (account_id, username, password)
	        VALUES (account_id, username, md5(password))
	        RETURNING id INTO online_account_id;
	
	        FOR i IN 0..2 LOOP
	            
	            INSERT INTO user_login_security_question (question_choice_id, login_id)
	            VALUES (question_choice_ids[i], online_account_id)
	            RETURNING id INTO question_choice_id;
	
	            INSERT INTO security_question_answer (answer, question_id)
	            VALUES (question_answers[i], question_choice_id);
	
	        END LOOP;
	
	
	        INSERT INTO authentication_log (log_description, log_date, account_id) VALUES ('New online account created', now(), account_id);
	
	        RETURN account_id;
	    ELSE
	        RAISE NOTICE 'USERNAME ALREADY TAKEN';
	        RETURN NULL;
	
	    END IF;
	    RETURN success;
	END;
	$$ LANGUAGE plpgsql;
	
	INSERT INTO customer (first_name, last_name, date_of_birth, phone_number, email_address, address_street, address_city, address_county, address_postcode)
	VALUES ('John', 'Smith', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('Jane', 'Doe', '1990-01-01', '01234567890', 'test@gmail.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Bloggs', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('John', 'Bloggs', '1990-01-01', '01234567890', 'hello@yahoo.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('Jane', 'Bloggs', '1990-01-01', '01234567890', 'test@outlook.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Doe', '1990-01-01', '01234567890', 'hello@outlook.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('John', 'Doe', '1990-01-01', '01234567890', 'mybankemail@icloud.com', '1 My Bank Street', 'My Bank City', 'My Bank County', 'MB1 1NK'),
	('Jane', 'Smith', '1990-01-01', '01234567890', 'bankemail@outlook.com', '1 Bank Street', 'Bank City', 'Bank County', 'BA1 1NK'),
	('Joe', 'Smith', '1990-01-01', '01234567890', 'example@icloud.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX');
	
	INSERT INTO online_account (date_opened, sort_code, customer_id)
	VALUES ('2020-01-01', '123456', 1),
	('2019-01-01', '126485', 2),
	('2018-01-01', '128475', 3),
	('2017-01-01', '129476', 4),
	('2016-01-01', '120386', 5),
	('2017-02-03', '127385', 6),
	('2018-02-04', '128256', 7),
	('2020-01-01', '129386', 8),
	('2020-01-01', '120386', 9);
	
	INSERT INTO user_login (account_id, username, password)
	VALUES (1, 'johnsmith', 'b29af57c2b3bba21e9df0cece40952c6'),
	(2, 'janedoe', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(3, 'joebloggs', 'b29af57c2b3bba21e9df0cece40952c6'),
	(4, 'johnbloggs', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(5, 'janebloggs', 'b29af57c2b3bba21e9df0cece40952c6'),
	(6, 'joedoe', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(7, 'johndoe', 'b29af57c2b3bba21e9df0cece40952c6'),
	(8, 'joesmith', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(9, 'janesmith', 'b29af57c2b3bba21e9df0cece40952c6');
	
	INSERT INTO security_question_option (question_description)
	VALUES ('What is your favourite colour?'),
	('What is your favourite food?'),
	('What is your favourite animal?'),
	('What is your favourite sport?'),
	('What is your favourite movie?'),
	('What is your favourite book?'),
	('What is your favourite song?'),
	('What is your favourite band?'),
	('What is your favourite game?'),
	('What is your favourite TV show?');
	
	INSERT INTO user_login_security_question (question_choice_id, login_id)
	VALUES (1, 1),
	(2, 2),
	(3, 3),
	(4, 4),
	(5, 5),
	(6, 6),
	(7, 7),
	(8, 8),
	(9, 9);
	
	INSERT INTO security_question_answer (question_answer, question_id)
	VALUES ('Red', 1),
	('Blue', 2),
	('Green', 3),
	('Yellow', 4),
	('Orange', 5),
	('Purple', 6),
	('Pink', 7),
	('Black', 8),
	('White', 9);
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
2023-01-13 13:53:36.521 GMT [23309] LOG:  received fast shutdown request
2023-01-13 13:53:36.524 GMT [23309] LOG:  aborting any active transactions
2023-01-13 13:53:36.527 GMT [23309] LOG:  background worker "logical replication launcher" (PID 23316) exited with exit code 1
2023-01-13 13:53:36.529 GMT [23311] LOG:  shutting down
2023-01-13 13:53:36.579 GMT [23309] LOG:  database system is shut down
2023-01-13 13:53:37.997 GMT [23477] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-13 13:53:37.997 GMT [23477] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-13 13:53:38.001 GMT [23477] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-13 13:53:38.010 GMT [23478] LOG:  database system was shut down at 2023-01-13 13:53:37 GMT
2023-01-13 13:53:38.017 GMT [23477] LOG:  database system is ready to accept connections
2023-01-13 13:53:38.947 GMT [23516] ERROR:  relation "customers" does not exist at character 167
2023-01-13 13:53:38.947 GMT [23516] STATEMENT:  CREATE OR REPLACE VIEW staff.customers AS
	    SELECT online_account.id as account_id, customer.first_name, customers.last_name
	    FROM online_account
	    INNER JOIN customers ON online_account.id = customers.account_id;
2023-01-13 13:53:38.948 GMT [23516] ERROR:  syntax error at or near "RETURN" at character 692
2023-01-13 13:53:38.948 GMT [23516] STATEMENT:  CREATE OR REPLACE FUNCTION staff.view_outstanding_credit_applications()
	RETURNS TABLE(first_name TEXT, last_name TEXT, account_number INT) AS $$
	BEGIN
	    RETURN QUERY SELECT customers.first_name, customers.last_name, credit_account_applications.account_number
	    FROM staff.customers
	    INNER JOIN staff.accounts ON customers.account_id = accounts.account_id
	    INNER JOIN staff.credit_card_applications ON accounts.account_number = credit_card_applications.account_number
	    WHERE credit_card_applications.application_status = 'PENDING';
	
	CREATE OR REPLACE FUNCTION staff.view_outstanding_loan_applications()
	RETURNS TABLE(first_name TEXT, last_name TEXT, loan_id INT) AS $$
	BEGIN
	    RETURN QUERY SELECT customers.first_name, customers.last_name, loan_applications.id
	    FROM staff.customers
	    INNER JOIN staff.loan_applications ON loan_applications.account_id = customers.account_id
	    WHERE loan_applications.application_status = 'PENDING';
	CREATE SCHEMA IF NOT EXISTS client;
	SET search_path TO public, client;
	CREATE OR REPLACE VIEW client.accounts AS
	    SELECT account_number, account_id FROM account;
	CREATE OR REPLACE VIEW client.debit_accounts AS
	    SELECT account.account_id, account.account_number, debit_account.current_balance, debit_account.interest_rate, debit_overdraft.overdraft_limit, debit_overdraft.overdraft_usage, debit_overdraft.interest_rate AS overdraft_interest_rate
	    FROM account
	    INNER JOIN debit_account ON account.account_number = debit_account.account_number
	    INNER JOIN debit_overdraft ON account.account_number = debit_overdraft.account_number;
	CREATE OR REPLACE VIEW client.debit_accounts_statements AS
	    SELECT debit_accounts.account_id, debit_accounts.account_number, debit_statement.id, debit_statement.starting_date, debit_statement.end_date, debit_statement.amount
	    FROM debit_accounts
	    INNER JOIN debit_statement ON debit_accounts.account_number = debit_statement.account_number;
	CREATE OR REPLACE VIEW client.debit_accounts_statement AS
	    SELECT debit_accounts_statements.account_id, debit_accounts_statements.account_number, debit_accounts_statements.id, debit_accounts_statements.starting_date, debit_accounts_statements.end_date, debit_accounts_statements.amount AS total_amount, transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date
	    FROM debit_accounts_statements
	    INNER JOIN transaction ON debit_accounts_statements.id = transaction.debit_statement_id;
	CREATE OR REPLACE VIEW client.credit_accounts AS
	    SELECT account.account_id, account.account_number, credit_account.outstanding_balance, credit_account.credit_limit, credit_account.interest_rate, credit_account_application.application_status
	    FROM account
	    INNER JOIN credit_account ON account.account_number = credit_account.account_number
	    INNER JOIN credit_account_application ON account.account_number = credit_account_application.account_number;
	CREATE OR REPLACE VIEW client.credit_accounts_statements AS
	    SELECT credit_accounts.account_id, credit_accounts.account_number, credit_statement.id, credit_statement.starting_date, credit_statement.end_date, credit_statement.amount, credit_statement.minimum_payment, credit_statement.minimum_payment_due_date
	    FROM credit_accounts
	    INNER JOIN credit_statement ON credit_accounts.account_number = credit_statement.account_number;
	CREATE OR REPLACE VIEW client.credit_accounts_statement AS
	    SELECT credit_accounts_statements.account_id, credit_accounts_statements.account_number, credit_accounts_statements.id, credit_accounts_statements.starting_date, credit_accounts_statements.end_date, credit_accounts_statements.amount AS total_amount, credit_accounts_statements.minimum_payment, credit_accounts_statements.minimum_payment_due_date, transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date
	    FROM credit_accounts_statements
	    INNER JOIN transaction ON credit_accounts_statements.id = transaction.credit_statement_id;
	CREATE OR REPLACE VIEW client.savings_accounts AS
	    SELECT account.account_id, account.account_number, savings_account.current_balance, savings_account.interest_rate
	    FROM account
	    INNER JOIN savings_account ON account.account_number = savings_account.account_number;
	CREATE OR REPLACE VIEW client.savings_accounts_statements AS
	    SELECT savings_accounts.account_id, savings_accounts.account_number, savings_statement.id, savings_statement.starting_date, savings_statement.end_date, savings_statement.amount
	    FROM savings_accounts
	    INNER JOIN savings_statement ON savings_accounts.account_number = savings_statement.account_number;
	CREATE OR REPLACE VIEW client.loans AS
	    SELECT loan.account_id, loan.id, loan.amount, loan.interest_rate, loan.loan_type, loan.end_date, loan_application.application_status
	    FROM loan
	    INNER JOIN loan_application ON loan.id = loan_application.loan_id;
	CREATE OR REPLACE VIEW client.loan_statements AS
	    SELECT loans.account_id, loans.id, loan_statement.id, loan_statement.starting_date, loan_statement.end_date, loan_statement.amount, loan_statement.minimum_payment, loan_statement.minimum_payment_due_date
	    FROM loans
	    INNER JOIN loan_statement ON loans.id = loan_statement.loan_id;
	CREATE OR REPLACE VIEW client.loan_applications AS
	    SELECT loan.acccount_id, loan_application.id, loan_application.application_status, loan_application.loan_id
	    FROM loan_application
	    INNER JOIN loan ON loan_application.loan_id = loan.id;
	CREATE OR REPLACE FUNCTION client.update_personal_information(account_identifier INT, first_name TEXT, last_name TEXT, date_of_birth DATE, phone_number TEXT, email_address TEXT, address_street TEXT, address_city TEXT, address_county TEXT, address_postcode TEXT, account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	BEGIN
	    UPDATE customer SET first_name = first_name, last_name = last_name, date_of_birth = date_of_birth, phone_number = phone_number, email_address = email_address, address_street = address_street, address_city = address_city, address_county = address_county, address_postcode = address_postcode
	    WHERE id = (SELECT customer_id FROM online_account WHERE id = account_identifier);
	
	    -- INSERT INTO management_log (log_description, log_date, account_id) VALUES ('Updated personal information', CURRENT_DATE, account_identifier);
	    passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
	    RETURN passed;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.update_password(account_identifier INT, new_password TEXT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	BEGIN
	    UPDATE user_login SET password = md5(new_password)
	    WHERE account_id = account_identifier;
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Updated password', CURRENT_DATE);
	    passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
	    RETURN passed;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.update_email(account_identifier INT, new_email TEXT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE ROW_COUNT INT;
	BEGIN
	    UPDATE user_login SET email = new_email
	    WHERE account_id = account_identifier;
	
	    GET DIAGNOSTICS ROW_COUNT = ROW_COUNT;
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Updated email', CURRENT_DATE);
	    passed = CASE WHEN ROW_COUNT = 1 THEN TRUE ELSE FALSE END;
	    RETURN passed;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.open_debit_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE debit_account_number INT;
	DECLARE next_account_number INT;
	DECLARE ROW_COUNT INT;
	BEGIN
	
	    SELECT get_next_account_number() INTO next_account_number;
	
	    INSERT INTO debit_account (account_number, account_id, current_balance, interest_rate) VALUES (next_account_number ,account_id, 0, 0.01) RETURNING account_number INTO debit_account_number;
	    GET DIAGNOSTICS ROW_COUNT = ROW_COUNT;
	    INSERT INTO debit_statement (starting_date, end_date, amount, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, debit_account_number);
	    INSERT INTO debit_overdraft (overdraft_usage, overdraft_limit, interest_rate, account_number) VALUES (0, 0, 0.01, debit_account_number);
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened debit account', CURRENT_DATE);
	    passed = CASE WHEN ROW_COUNT = 1 THEN TRUE ELSE FALSE END;
	    passed = TRUE;
	    RETURN passed;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.open_credit_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE credit_account_number INT;
	DECLARE next_account_number INT;
	BEGIN
	
	    SELECT get_next_account_number() INTO next_account_number;
	
	    INSERT INTO credit_account (account_number, outstanding_balance, credit_limit, interest_rate, account_id) VALUES (next_account_number ,0, 0, 24.9, account_id) RETURNING account_number INTO credit_account_number;
	    INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_number);
	    INSERT INTO credit_account_application (credit_account_id, application_status) VALUES (credit_account_number, 'PENDING');
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened credit account', CURRENT_DATE);
	END
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.open_savings_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE savings_account_id INT;
	DECLARE next_account_number INT;
	DECLARE ROW_COUNT INT;
	BEGIN
	
	    SELECT get_next_account_number() INTO next_account_number;
	
	    INSERT INTO savings_account (account_number, account_id, current_balance, interest_rate) VALUES (next_account_number ,account_id, 0, 0.01) RETURNING account_number INTO savings_account_id;
	    GET DIAGNOSTICS ROW_COUNT = ROW_COUNT;
	    INSERT INTO savings_statement (starting_date, end_date, amount, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, savings_account_id);
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened savings account', CURRENT_DATE);
	    passed = CASE WHEN ROW_COUNT = 1 THEN TRUE ELSE FALSE END;
	    RETURN passed;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.open_loan(account_id INT, loan_amount INT, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE loan_id INT;
	DECLARE ROW_COUNT INT;
	BEGIN
	    INSERT INTO loan (account_id, loan_amount, loan_end_date, loan_type, loan_interest_rate) VALUES (account_id, loan_amount, loan_end_date, loan_type, loan_interest_rate) RETURNING id INTO loan_id;
	    GET DIAGNOSTICS ROW_COUNT = ROW_COUNT;
	    INSERT INTO loan_statement (starting_date, end_date, amount, account_id) VALUES (CURRENT_DATE, CURRENT_DATE, 0, loan_id);
	    INSERT INTO loan_application (loan_id, application_status) VALUES (loan_id, 'PENDING');
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened loan', CURRENT_DATE);
	    passed = CASE WHEN ROW_COUNT = 1 THEN TRUE ELSE FALSE END;
	    RETURN passed;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.view_personal_information(account_id INT)
	RETURNS TABLE (first_name TEXT, last_name TEXT, email TEXT, phone_number TEXT, address TEXT, city TEXT, country TEXT, postal_code TEXT) AS $$
	BEGIN
	    RETURN QUERY
	        SELECT first_name, last_name, email, phone_number, address, city, country, postal_code
	            FROM customer
	        INNER JOIN account ON account.customer_id = customer.id
	        WHERE account.id = account_id;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.view_accounts(account_identifier INT)
	RETURNS TABLE (account_number INT, account_id INT, balance NUMERIC, interest_rate NUMERIC, account_type TEXT) AS $$
	
	BEGIN
	
	    RETURN QUERY
	        SELECT account.*, COALESCE(debit_accounts.current_balance, credit_accounts.outstanding_balance, savings_accounts.current_balance) AS balance,
	            COALESCE(debit_accounts.interest_rate, credit_accounts.interest_rate, savings_accounts.interest_rate) AS interest_rate,
	            get_account_type(account.account_number) AS account_type
	            FROM account
	            LEFT JOIN client.credit_accounts ON account.account_number = credit_accounts.account_number
	            LEFT JOIN client.debit_accounts ON account.account_number = debit_accounts.account_number
	            LEFT JOIN client.savings_accounts ON account.account_number = savings_accounts.account_number
	            WHERE account.account_id = account_identifier;
	
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.view_debit_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, overdraft_limit NUMERIC, overdraft_usage NUMERIC, overdraft_interest_rate NUMERIC, external_account_number INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed debit accounts', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT * FROM client.debit_accounts WHERE account_id = account_id;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.view_credit_accounts(account_id INT)
	RETURNS TABLE (id INT, outstanding_balance NUMERIC, credit_limit NUMERIC, interest_rate NUMERIC, application_status TEXT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit accounts', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT * FROM client.credit_accounts WHERE account_id = account_id;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.view_savings_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, external_account_number INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings accounts', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT * FROM client.savings_accounts WHERE account_id = account_id;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.view_loans(account_id INT)
	RETURNS TABLE (id INT, loan_amount NUMERIC, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC, application_status TEXT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed loans', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT * FROM client.loans WHERE account_id = account_id;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.view_savings_statements(account_identifier INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Viewed savings statements', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT savings_accounts_statements.account_id, savings_accounts_statements.account_number, savings_accounts_statements.starting_date, savings_accounts_statements.end_date, savings_accounts_statements.amount
	        FROM client.savings_accounts_statements
	        WHERE savings_accounts_statements.account_number = account_number
	        AND savings_accounts_statements.account_id = account_identifier;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.view_debit_statements(account_identifier INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Viewed debit statements', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT debit_accounts_statements.account_id, debit_accounts_statements.account_number, debit_accounts_statements.starting_date, debit_accounts_statements.end_date, debit_accounts_statements.amount
	        FROM client.debit_accounts_statements
	        WHERE debit_accounts_statements.account_number = account_number
	        AND debit_accounts_statements.account_id = account_identifier;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.view_credit_statements(account_identifier INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Viewed credit statements', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statements.account_id, credit_accounts_statements.account_number, credit_accounts_statements.starting_date, credit_accounts_statements.end_date, credit_accounts_statements.amount
	        FROM client.credit_accounts_statements
	        WHERE credit_accounts_statements.account_number = account_number
	        AND credit_accounts_statements.account_id = account_identifier;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.view_debit_statement(account_identifier INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Viewed debit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT debit_accounts_statement.account_id, debit_accounts_statement.account_number, debit_accounts_statement.starting_date, debit_accounts_statement.end_date, debit_accounts_statement.amount
	        FROM client.debit_accounts_statement
	        WHERE debit_accounts_statement.account_id = account_identifier
	        AND debit_accounts_statement.account_number = account_number
	        AND debit_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.view_credit_statement(account_identifier INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statement.account_id, credit_accounts_statement.account_number, credit_accounts_statement.starting_date, credit_accounts_statement.end_date, credit_accounts_statement.amount
	        FROM client.credit_accounts_statement
	        WHERE credit_accounts_statement.account_id = account_identifier
	        AND credit_accounts_statement.account_number = account_number
	        AND credit_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.view_savings_statement(account_identifier INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT savings_accounts_statement.account_id, savings_accounts_statement.account_number, savings_accounts_statement.starting_date, savings_accounts_statement.end_date, savings_accounts_statement.amount
	        FROM client.savings_accounts_statement
	        WHERE savings_accounts_statement.account_id = account_identifier
	        AND savings_accounts_statement.account_number = account_number
	        AND savings_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
	CREATE SCHEMA IF NOT EXISTS unauthenticated;
	SET search_path TO unauthenticated, public;
	
	CREATE OR REPLACE VIEW unauthenticated.unauthenticated_personal_information AS
	SELECT id, md5(first_name) AS first_name, md5(last_name) AS last_name, md5(email_address) AS email_address
	FROM customer;
	
	CREATE OR REPLACE VIEW unauthenticated.unauthenticated_login AS
	SELECT md5(username) AS username FROM user_login;
	
	CREATE OR REPLACE FUNCTION unauthenticated.create_personal_info(first_name TEXT, last_name TEXT, date_of_birth DATE, phone_number TEXT, email_address TEXT, address_street TEXT, address_city TEXT, address_county TEXT, address_postcode TEXT)
	RETURNS INT AS $$
	DECLARE customer_id INT;
	BEGIN
	    IF NOT EXISTS (SELECT FROM unauthenticated.unauthenticated_personal_information WHERE md5(first_name) = first_name AND md5(last_name) = last_name AND md5(email_address) = email_address) THEN
	        INSERT INTO customer
	        VALUES (first_name, last_name, date_of_birth, phone_number, email_address, address_street, address_city, address_county, address_postcode)
	        RETURNING id INTO customer_id;
	
	        INSERT INTO management_log (log_description, log_date) VALUES ('New customer created', now());
	    ELSE
	        RAISE NOTICE 'CUSTOMER INFORMATION ALREADY PRESENT';
	        SELECT id INTO customer_id FROM unauthenticated.unauthenticated_personal_information WHERE md5(first_name) = first_name AND md5(last_name) = last_name AND md5(email_address) = email_address;
	    END IF;
	    RETURN customer_id;
	END;
	$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION unauthenticated.create_online_account_details(customer_id INT, first_name TEXT, last_name TEXT, email_address TEXT, question_choice_ids INT[], question_answers TEXT[])
	RETURNS INT AS $$
	DECLARE account_id INT;
	DECLARE online_account_id INT;
	DECLARE question_choice_id INT;
	BEGIN
	    IF NOT EXISTS (SELECT FROM user_login WHERE username = username) THEN
	        INSERT INTO online_account (date_opened, sort_code, customer_id)
	        VALUES ((SELECT now()), (SELECT num FROM GENERATE_SERIES(1, 6) AS s(num) LIMIT 1), customer_id)
	        RETURNING id INTO account_id;
	
	        INSERT INTO user_login (account_id, username, password)
	        VALUES (account_id, username, md5(password))
	        RETURNING id INTO online_account_id;
	
	        FOR i IN 0..2 LOOP
	            
	            INSERT INTO user_login_security_question (question_choice_id, login_id)
	            VALUES (question_choice_ids[i], online_account_id)
	            RETURNING id INTO question_choice_id;
	
	            INSERT INTO security_question_answer (answer, question_id)
	            VALUES (question_answers[i], question_choice_id);
	
	        END LOOP;
	
	
	        INSERT INTO authentication_log (log_description, log_date, account_id) VALUES ('New online account created', now(), account_id);
	
	        RETURN account_id;
	    ELSE
	        RAISE NOTICE 'USERNAME ALREADY TAKEN';
	        RETURN NULL;
	
	    END IF;
	    RETURN success;
	END;
	$$ LANGUAGE plpgsql;
	
	INSERT INTO customer (first_name, last_name, date_of_birth, phone_number, email_address, address_street, address_city, address_county, address_postcode)
	VALUES ('John', 'Smith', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('Jane', 'Doe', '1990-01-01', '01234567890', 'test@gmail.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Bloggs', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('John', 'Bloggs', '1990-01-01', '01234567890', 'hello@yahoo.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('Jane', 'Bloggs', '1990-01-01', '01234567890', 'test@outlook.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Doe', '1990-01-01', '01234567890', 'hello@outlook.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('John', 'Doe', '1990-01-01', '01234567890', 'mybankemail@icloud.com', '1 My Bank Street', 'My Bank City', 'My Bank County', 'MB1 1NK'),
	('Jane', 'Smith', '1990-01-01', '01234567890', 'bankemail@outlook.com', '1 Bank Street', 'Bank City', 'Bank County', 'BA1 1NK'),
	('Joe', 'Smith', '1990-01-01', '01234567890', 'example@icloud.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX');
	
	INSERT INTO online_account (date_opened, sort_code, customer_id)
	VALUES ('2020-01-01', '123456', 1),
	('2019-01-01', '126485', 2),
	('2018-01-01', '128475', 3),
	('2017-01-01', '129476', 4),
	('2016-01-01', '120386', 5),
	('2017-02-03', '127385', 6),
	('2018-02-04', '128256', 7),
	('2020-01-01', '129386', 8),
	('2020-01-01', '120386', 9);
	
	INSERT INTO user_login (account_id, username, password)
	VALUES (1, 'johnsmith', 'b29af57c2b3bba21e9df0cece40952c6'),
	(2, 'janedoe', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(3, 'joebloggs', 'b29af57c2b3bba21e9df0cece40952c6'),
	(4, 'johnbloggs', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(5, 'janebloggs', 'b29af57c2b3bba21e9df0cece40952c6'),
	(6, 'joedoe', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(7, 'johndoe', 'b29af57c2b3bba21e9df0cece40952c6'),
	(8, 'joesmith', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(9, 'janesmith', 'b29af57c2b3bba21e9df0cece40952c6');
	
	INSERT INTO security_question_option (question_description)
	VALUES ('What is your favourite colour?'),
	('What is your favourite food?'),
	('What is your favourite animal?'),
	('What is your favourite sport?'),
	('What is your favourite movie?'),
	('What is your favourite book?'),
	('What is your favourite song?'),
	('What is your favourite band?'),
	('What is your favourite game?'),
	('What is your favourite TV show?');
	
	INSERT INTO user_login_security_question (question_choice_id, login_id)
	VALUES (1, 1),
	(2, 2),
	(3, 3),
	(4, 4),
	(5, 5),
	(6, 6),
	(7, 7),
	(8, 8),
	(9, 9);
	
	INSERT INTO security_question_answer (question_answer, question_id)
	VALUES ('Red', 1),
	('Blue', 2),
	('Green', 3),
	('Yellow', 4),
	('Orange', 5),
	('Purple', 6),
	('Pink', 7),
	('Black', 8),
	('White', 9);
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
2023-01-13 13:53:47.595 GMT [23477] LOG:  received fast shutdown request
2023-01-13 13:53:47.597 GMT [23477] LOG:  aborting any active transactions
2023-01-13 13:53:47.599 GMT [23477] LOG:  background worker "logical replication launcher" (PID 23484) exited with exit code 1
2023-01-13 13:53:47.602 GMT [23479] LOG:  shutting down
2023-01-13 13:53:47.660 GMT [23477] LOG:  database system is shut down
2023-01-13 13:53:48.922 GMT [23622] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-13 13:53:48.923 GMT [23622] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-13 13:53:48.925 GMT [23622] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-13 13:53:48.931 GMT [23626] LOG:  database system was shut down at 2023-01-13 13:53:48 GMT
2023-01-13 13:53:48.939 GMT [23622] LOG:  database system is ready to accept connections
2023-01-13 13:53:49.833 GMT [23661] ERROR:  relation "staff.customers" does not exist at character 167
2023-01-13 13:53:49.833 GMT [23661] STATEMENT:  CREATE OR REPLACE VIEW staff.customers AS
	    SELECT online_account.id as account_id, customer.first_name, customers.last_name
	    FROM online_account
	    INNER JOIN staff.customers ON online_account.id = customers.account_id;
2023-01-13 13:53:49.835 GMT [23661] ERROR:  syntax error at or near "RETURN" at character 692
2023-01-13 13:53:49.835 GMT [23661] STATEMENT:  CREATE OR REPLACE FUNCTION staff.view_outstanding_credit_applications()
	RETURNS TABLE(first_name TEXT, last_name TEXT, account_number INT) AS $$
	BEGIN
	    RETURN QUERY SELECT customers.first_name, customers.last_name, credit_account_applications.account_number
	    FROM staff.customers
	    INNER JOIN staff.accounts ON customers.account_id = accounts.account_id
	    INNER JOIN staff.credit_card_applications ON accounts.account_number = credit_card_applications.account_number
	    WHERE credit_card_applications.application_status = 'PENDING';
	
	CREATE OR REPLACE FUNCTION staff.view_outstanding_loan_applications()
	RETURNS TABLE(first_name TEXT, last_name TEXT, loan_id INT) AS $$
	BEGIN
	    RETURN QUERY SELECT customers.first_name, customers.last_name, loan_applications.id
	    FROM staff.customers
	    INNER JOIN staff.loan_applications ON loan_applications.account_id = customers.account_id
	    WHERE loan_applications.application_status = 'PENDING';
	CREATE SCHEMA IF NOT EXISTS client;
	SET search_path TO public, client;
	CREATE OR REPLACE VIEW client.accounts AS
	    SELECT account_number, account_id FROM account;
	CREATE OR REPLACE VIEW client.debit_accounts AS
	    SELECT account.account_id, account.account_number, debit_account.current_balance, debit_account.interest_rate, debit_overdraft.overdraft_limit, debit_overdraft.overdraft_usage, debit_overdraft.interest_rate AS overdraft_interest_rate
	    FROM account
	    INNER JOIN debit_account ON account.account_number = debit_account.account_number
	    INNER JOIN debit_overdraft ON account.account_number = debit_overdraft.account_number;
	CREATE OR REPLACE VIEW client.debit_accounts_statements AS
	    SELECT debit_accounts.account_id, debit_accounts.account_number, debit_statement.id, debit_statement.starting_date, debit_statement.end_date, debit_statement.amount
	    FROM debit_accounts
	    INNER JOIN debit_statement ON debit_accounts.account_number = debit_statement.account_number;
	CREATE OR REPLACE VIEW client.debit_accounts_statement AS
	    SELECT debit_accounts_statements.account_id, debit_accounts_statements.account_number, debit_accounts_statements.id, debit_accounts_statements.starting_date, debit_accounts_statements.end_date, debit_accounts_statements.amount AS total_amount, transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date
	    FROM debit_accounts_statements
	    INNER JOIN transaction ON debit_accounts_statements.id = transaction.debit_statement_id;
	CREATE OR REPLACE VIEW client.credit_accounts AS
	    SELECT account.account_id, account.account_number, credit_account.outstanding_balance, credit_account.credit_limit, credit_account.interest_rate, credit_account_application.application_status
	    FROM account
	    INNER JOIN credit_account ON account.account_number = credit_account.account_number
	    INNER JOIN credit_account_application ON account.account_number = credit_account_application.account_number;
	CREATE OR REPLACE VIEW client.credit_accounts_statements AS
	    SELECT credit_accounts.account_id, credit_accounts.account_number, credit_statement.id, credit_statement.starting_date, credit_statement.end_date, credit_statement.amount, credit_statement.minimum_payment, credit_statement.minimum_payment_due_date
	    FROM credit_accounts
	    INNER JOIN credit_statement ON credit_accounts.account_number = credit_statement.account_number;
	CREATE OR REPLACE VIEW client.credit_accounts_statement AS
	    SELECT credit_accounts_statements.account_id, credit_accounts_statements.account_number, credit_accounts_statements.id, credit_accounts_statements.starting_date, credit_accounts_statements.end_date, credit_accounts_statements.amount AS total_amount, credit_accounts_statements.minimum_payment, credit_accounts_statements.minimum_payment_due_date, transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date
	    FROM credit_accounts_statements
	    INNER JOIN transaction ON credit_accounts_statements.id = transaction.credit_statement_id;
	CREATE OR REPLACE VIEW client.savings_accounts AS
	    SELECT account.account_id, account.account_number, savings_account.current_balance, savings_account.interest_rate
	    FROM account
	    INNER JOIN savings_account ON account.account_number = savings_account.account_number;
	CREATE OR REPLACE VIEW client.savings_accounts_statements AS
	    SELECT savings_accounts.account_id, savings_accounts.account_number, savings_statement.id, savings_statement.starting_date, savings_statement.end_date, savings_statement.amount
	    FROM savings_accounts
	    INNER JOIN savings_statement ON savings_accounts.account_number = savings_statement.account_number;
	CREATE OR REPLACE VIEW client.loans AS
	    SELECT loan.account_id, loan.id, loan.amount, loan.interest_rate, loan.loan_type, loan.end_date, loan_application.application_status
	    FROM loan
	    INNER JOIN loan_application ON loan.id = loan_application.loan_id;
	CREATE OR REPLACE VIEW client.loan_statements AS
	    SELECT loans.account_id, loans.id, loan_statement.id, loan_statement.starting_date, loan_statement.end_date, loan_statement.amount, loan_statement.minimum_payment, loan_statement.minimum_payment_due_date
	    FROM loans
	    INNER JOIN loan_statement ON loans.id = loan_statement.loan_id;
	CREATE OR REPLACE VIEW client.loan_applications AS
	    SELECT loan.acccount_id, loan_application.id, loan_application.application_status, loan_application.loan_id
	    FROM loan_application
	    INNER JOIN loan ON loan_application.loan_id = loan.id;
	CREATE OR REPLACE FUNCTION client.update_personal_information(account_identifier INT, first_name TEXT, last_name TEXT, date_of_birth DATE, phone_number TEXT, email_address TEXT, address_street TEXT, address_city TEXT, address_county TEXT, address_postcode TEXT, account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	BEGIN
	    UPDATE customer SET first_name = first_name, last_name = last_name, date_of_birth = date_of_birth, phone_number = phone_number, email_address = email_address, address_street = address_street, address_city = address_city, address_county = address_county, address_postcode = address_postcode
	    WHERE id = (SELECT customer_id FROM online_account WHERE id = account_identifier);
	
	    -- INSERT INTO management_log (log_description, log_date, account_id) VALUES ('Updated personal information', CURRENT_DATE, account_identifier);
	    passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
	    RETURN passed;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.update_password(account_identifier INT, new_password TEXT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	BEGIN
	    UPDATE user_login SET password = md5(new_password)
	    WHERE account_id = account_identifier;
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Updated password', CURRENT_DATE);
	    passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
	    RETURN passed;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.update_email(account_identifier INT, new_email TEXT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE ROW_COUNT INT;
	BEGIN
	    UPDATE user_login SET email = new_email
	    WHERE account_id = account_identifier;
	
	    GET DIAGNOSTICS ROW_COUNT = ROW_COUNT;
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Updated email', CURRENT_DATE);
	    passed = CASE WHEN ROW_COUNT = 1 THEN TRUE ELSE FALSE END;
	    RETURN passed;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.open_debit_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE debit_account_number INT;
	DECLARE next_account_number INT;
	DECLARE ROW_COUNT INT;
	BEGIN
	
	    SELECT get_next_account_number() INTO next_account_number;
	
	    INSERT INTO debit_account (account_number, account_id, current_balance, interest_rate) VALUES (next_account_number ,account_id, 0, 0.01) RETURNING account_number INTO debit_account_number;
	    GET DIAGNOSTICS ROW_COUNT = ROW_COUNT;
	    INSERT INTO debit_statement (starting_date, end_date, amount, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, debit_account_number);
	    INSERT INTO debit_overdraft (overdraft_usage, overdraft_limit, interest_rate, account_number) VALUES (0, 0, 0.01, debit_account_number);
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened debit account', CURRENT_DATE);
	    passed = CASE WHEN ROW_COUNT = 1 THEN TRUE ELSE FALSE END;
	    passed = TRUE;
	    RETURN passed;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.open_credit_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE credit_account_number INT;
	DECLARE next_account_number INT;
	BEGIN
	
	    SELECT get_next_account_number() INTO next_account_number;
	
	    INSERT INTO credit_account (account_number, outstanding_balance, credit_limit, interest_rate, account_id) VALUES (next_account_number ,0, 0, 24.9, account_id) RETURNING account_number INTO credit_account_number;
	    INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_number);
	    INSERT INTO credit_account_application (credit_account_id, application_status) VALUES (credit_account_number, 'PENDING');
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened credit account', CURRENT_DATE);
	END
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.open_savings_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE savings_account_id INT;
	DECLARE next_account_number INT;
	DECLARE ROW_COUNT INT;
	BEGIN
	
	    SELECT get_next_account_number() INTO next_account_number;
	
	    INSERT INTO savings_account (account_number, account_id, current_balance, interest_rate) VALUES (next_account_number ,account_id, 0, 0.01) RETURNING account_number INTO savings_account_id;
	    GET DIAGNOSTICS ROW_COUNT = ROW_COUNT;
	    INSERT INTO savings_statement (starting_date, end_date, amount, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, savings_account_id);
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened savings account', CURRENT_DATE);
	    passed = CASE WHEN ROW_COUNT = 1 THEN TRUE ELSE FALSE END;
	    RETURN passed;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.open_loan(account_id INT, loan_amount INT, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE loan_id INT;
	DECLARE ROW_COUNT INT;
	BEGIN
	    INSERT INTO loan (account_id, loan_amount, loan_end_date, loan_type, loan_interest_rate) VALUES (account_id, loan_amount, loan_end_date, loan_type, loan_interest_rate) RETURNING id INTO loan_id;
	    GET DIAGNOSTICS ROW_COUNT = ROW_COUNT;
	    INSERT INTO loan_statement (starting_date, end_date, amount, account_id) VALUES (CURRENT_DATE, CURRENT_DATE, 0, loan_id);
	    INSERT INTO loan_application (loan_id, application_status) VALUES (loan_id, 'PENDING');
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened loan', CURRENT_DATE);
	    passed = CASE WHEN ROW_COUNT = 1 THEN TRUE ELSE FALSE END;
	    RETURN passed;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.view_personal_information(account_id INT)
	RETURNS TABLE (first_name TEXT, last_name TEXT, email TEXT, phone_number TEXT, address TEXT, city TEXT, country TEXT, postal_code TEXT) AS $$
	BEGIN
	    RETURN QUERY
	        SELECT first_name, last_name, email, phone_number, address, city, country, postal_code
	            FROM customer
	        INNER JOIN account ON account.customer_id = customer.id
	        WHERE account.id = account_id;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.view_accounts(account_identifier INT)
	RETURNS TABLE (account_number INT, account_id INT, balance NUMERIC, interest_rate NUMERIC, account_type TEXT) AS $$
	
	BEGIN
	
	    RETURN QUERY
	        SELECT account.*, COALESCE(debit_accounts.current_balance, credit_accounts.outstanding_balance, savings_accounts.current_balance) AS balance,
	            COALESCE(debit_accounts.interest_rate, credit_accounts.interest_rate, savings_accounts.interest_rate) AS interest_rate,
	            get_account_type(account.account_number) AS account_type
	            FROM account
	            LEFT JOIN client.credit_accounts ON account.account_number = credit_accounts.account_number
	            LEFT JOIN client.debit_accounts ON account.account_number = debit_accounts.account_number
	            LEFT JOIN client.savings_accounts ON account.account_number = savings_accounts.account_number
	            WHERE account.account_id = account_identifier;
	
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.view_debit_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, overdraft_limit NUMERIC, overdraft_usage NUMERIC, overdraft_interest_rate NUMERIC, external_account_number INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed debit accounts', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT * FROM client.debit_accounts WHERE account_id = account_id;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.view_credit_accounts(account_id INT)
	RETURNS TABLE (id INT, outstanding_balance NUMERIC, credit_limit NUMERIC, interest_rate NUMERIC, application_status TEXT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit accounts', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT * FROM client.credit_accounts WHERE account_id = account_id;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.view_savings_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, external_account_number INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings accounts', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT * FROM client.savings_accounts WHERE account_id = account_id;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.view_loans(account_id INT)
	RETURNS TABLE (id INT, loan_amount NUMERIC, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC, application_status TEXT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed loans', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT * FROM client.loans WHERE account_id = account_id;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.view_savings_statements(account_identifier INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Viewed savings statements', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT savings_accounts_statements.account_id, savings_accounts_statements.account_number, savings_accounts_statements.starting_date, savings_accounts_statements.end_date, savings_accounts_statements.amount
	        FROM client.savings_accounts_statements
	        WHERE savings_accounts_statements.account_number = account_number
	        AND savings_accounts_statements.account_id = account_identifier;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.view_debit_statements(account_identifier INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Viewed debit statements', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT debit_accounts_statements.account_id, debit_accounts_statements.account_number, debit_accounts_statements.starting_date, debit_accounts_statements.end_date, debit_accounts_statements.amount
	        FROM client.debit_accounts_statements
	        WHERE debit_accounts_statements.account_number = account_number
	        AND debit_accounts_statements.account_id = account_identifier;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.view_credit_statements(account_identifier INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Viewed credit statements', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statements.account_id, credit_accounts_statements.account_number, credit_accounts_statements.starting_date, credit_accounts_statements.end_date, credit_accounts_statements.amount
	        FROM client.credit_accounts_statements
	        WHERE credit_accounts_statements.account_number = account_number
	        AND credit_accounts_statements.account_id = account_identifier;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.view_debit_statement(account_identifier INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Viewed debit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT debit_accounts_statement.account_id, debit_accounts_statement.account_number, debit_accounts_statement.starting_date, debit_accounts_statement.end_date, debit_accounts_statement.amount
	        FROM client.debit_accounts_statement
	        WHERE debit_accounts_statement.account_id = account_identifier
	        AND debit_accounts_statement.account_number = account_number
	        AND debit_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.view_credit_statement(account_identifier INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statement.account_id, credit_accounts_statement.account_number, credit_accounts_statement.starting_date, credit_accounts_statement.end_date, credit_accounts_statement.amount
	        FROM client.credit_accounts_statement
	        WHERE credit_accounts_statement.account_id = account_identifier
	        AND credit_accounts_statement.account_number = account_number
	        AND credit_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.view_savings_statement(account_identifier INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT savings_accounts_statement.account_id, savings_accounts_statement.account_number, savings_accounts_statement.starting_date, savings_accounts_statement.end_date, savings_accounts_statement.amount
	        FROM client.savings_accounts_statement
	        WHERE savings_accounts_statement.account_id = account_identifier
	        AND savings_accounts_statement.account_number = account_number
	        AND savings_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
	CREATE SCHEMA IF NOT EXISTS unauthenticated;
	SET search_path TO unauthenticated, public;
	
	CREATE OR REPLACE VIEW unauthenticated.unauthenticated_personal_information AS
	SELECT id, md5(first_name) AS first_name, md5(last_name) AS last_name, md5(email_address) AS email_address
	FROM customer;
	
	CREATE OR REPLACE VIEW unauthenticated.unauthenticated_login AS
	SELECT md5(username) AS username FROM user_login;
	
	CREATE OR REPLACE FUNCTION unauthenticated.create_personal_info(first_name TEXT, last_name TEXT, date_of_birth DATE, phone_number TEXT, email_address TEXT, address_street TEXT, address_city TEXT, address_county TEXT, address_postcode TEXT)
	RETURNS INT AS $$
	DECLARE customer_id INT;
	BEGIN
	    IF NOT EXISTS (SELECT FROM unauthenticated.unauthenticated_personal_information WHERE md5(first_name) = first_name AND md5(last_name) = last_name AND md5(email_address) = email_address) THEN
	        INSERT INTO customer
	        VALUES (first_name, last_name, date_of_birth, phone_number, email_address, address_street, address_city, address_county, address_postcode)
	        RETURNING id INTO customer_id;
	
	        INSERT INTO management_log (log_description, log_date) VALUES ('New customer created', now());
	    ELSE
	        RAISE NOTICE 'CUSTOMER INFORMATION ALREADY PRESENT';
	        SELECT id INTO customer_id FROM unauthenticated.unauthenticated_personal_information WHERE md5(first_name) = first_name AND md5(last_name) = last_name AND md5(email_address) = email_address;
	    END IF;
	    RETURN customer_id;
	END;
	$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION unauthenticated.create_online_account_details(customer_id INT, first_name TEXT, last_name TEXT, email_address TEXT, question_choice_ids INT[], question_answers TEXT[])
	RETURNS INT AS $$
	DECLARE account_id INT;
	DECLARE online_account_id INT;
	DECLARE question_choice_id INT;
	BEGIN
	    IF NOT EXISTS (SELECT FROM user_login WHERE username = username) THEN
	        INSERT INTO online_account (date_opened, sort_code, customer_id)
	        VALUES ((SELECT now()), (SELECT num FROM GENERATE_SERIES(1, 6) AS s(num) LIMIT 1), customer_id)
	        RETURNING id INTO account_id;
	
	        INSERT INTO user_login (account_id, username, password)
	        VALUES (account_id, username, md5(password))
	        RETURNING id INTO online_account_id;
	
	        FOR i IN 0..2 LOOP
	            
	            INSERT INTO user_login_security_question (question_choice_id, login_id)
	            VALUES (question_choice_ids[i], online_account_id)
	            RETURNING id INTO question_choice_id;
	
	            INSERT INTO security_question_answer (answer, question_id)
	            VALUES (question_answers[i], question_choice_id);
	
	        END LOOP;
	
	
	        INSERT INTO authentication_log (log_description, log_date, account_id) VALUES ('New online account created', now(), account_id);
	
	        RETURN account_id;
	    ELSE
	        RAISE NOTICE 'USERNAME ALREADY TAKEN';
	        RETURN NULL;
	
	    END IF;
	    RETURN success;
	END;
	$$ LANGUAGE plpgsql;
	
	INSERT INTO customer (first_name, last_name, date_of_birth, phone_number, email_address, address_street, address_city, address_county, address_postcode)
	VALUES ('John', 'Smith', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('Jane', 'Doe', '1990-01-01', '01234567890', 'test@gmail.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Bloggs', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('John', 'Bloggs', '1990-01-01', '01234567890', 'hello@yahoo.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('Jane', 'Bloggs', '1990-01-01', '01234567890', 'test@outlook.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Doe', '1990-01-01', '01234567890', 'hello@outlook.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('John', 'Doe', '1990-01-01', '01234567890', 'mybankemail@icloud.com', '1 My Bank Street', 'My Bank City', 'My Bank County', 'MB1 1NK'),
	('Jane', 'Smith', '1990-01-01', '01234567890', 'bankemail@outlook.com', '1 Bank Street', 'Bank City', 'Bank County', 'BA1 1NK'),
	('Joe', 'Smith', '1990-01-01', '01234567890', 'example@icloud.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX');
	
	INSERT INTO online_account (date_opened, sort_code, customer_id)
	VALUES ('2020-01-01', '123456', 1),
	('2019-01-01', '126485', 2),
	('2018-01-01', '128475', 3),
	('2017-01-01', '129476', 4),
	('2016-01-01', '120386', 5),
	('2017-02-03', '127385', 6),
	('2018-02-04', '128256', 7),
	('2020-01-01', '129386', 8),
	('2020-01-01', '120386', 9);
	
	INSERT INTO user_login (account_id, username, password)
	VALUES (1, 'johnsmith', 'b29af57c2b3bba21e9df0cece40952c6'),
	(2, 'janedoe', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(3, 'joebloggs', 'b29af57c2b3bba21e9df0cece40952c6'),
	(4, 'johnbloggs', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(5, 'janebloggs', 'b29af57c2b3bba21e9df0cece40952c6'),
	(6, 'joedoe', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(7, 'johndoe', 'b29af57c2b3bba21e9df0cece40952c6'),
	(8, 'joesmith', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(9, 'janesmith', 'b29af57c2b3bba21e9df0cece40952c6');
	
	INSERT INTO security_question_option (question_description)
	VALUES ('What is your favourite colour?'),
	('What is your favourite food?'),
	('What is your favourite animal?'),
	('What is your favourite sport?'),
	('What is your favourite movie?'),
	('What is your favourite book?'),
	('What is your favourite song?'),
	('What is your favourite band?'),
	('What is your favourite game?'),
	('What is your favourite TV show?');
	
	INSERT INTO user_login_security_question (question_choice_id, login_id)
	VALUES (1, 1),
	(2, 2),
	(3, 3),
	(4, 4),
	(5, 5),
	(6, 6),
	(7, 7),
	(8, 8),
	(9, 9);
	
	INSERT INTO security_question_answer (question_answer, question_id)
	VALUES ('Red', 1),
	('Blue', 2),
	('Green', 3),
	('Yellow', 4),
	('Orange', 5),
	('Purple', 6),
	('Pink', 7),
	('Black', 8),
	('White', 9);
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
2023-01-13 14:00:04.691 GMT [23622] LOG:  received fast shutdown request
2023-01-13 14:00:04.692 GMT [23622] LOG:  aborting any active transactions
2023-01-13 14:00:04.698 GMT [23622] LOG:  background worker "logical replication launcher" (PID 23632) exited with exit code 1
2023-01-13 14:00:04.698 GMT [23627] LOG:  shutting down
2023-01-13 14:00:04.717 GMT [23622] LOG:  database system is shut down
2023-01-13 14:00:05.998 GMT [24764] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-13 14:00:05.999 GMT [24764] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-13 14:00:06.001 GMT [24764] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-13 14:00:06.006 GMT [24765] LOG:  database system was shut down at 2023-01-13 14:00:05 GMT
2023-01-13 14:00:06.013 GMT [24764] LOG:  database system is ready to accept connections
2023-01-13 14:00:06.873 GMT [24793] ERROR:  missing FROM-clause entry for table "customers" at character 108
2023-01-13 14:00:06.873 GMT [24793] STATEMENT:  CREATE OR REPLACE VIEW staff.customers AS
	    SELECT online_account.id as account_id, customer.first_name, customers.last_name
	    FROM online_account
	    INNER JOIN customer ON customer.id = online_account.customer_id;
2023-01-13 14:00:06.875 GMT [24793] ERROR:  syntax error at or near "RETURN" at character 692
2023-01-13 14:00:06.875 GMT [24793] STATEMENT:  CREATE OR REPLACE FUNCTION staff.view_outstanding_credit_applications()
	RETURNS TABLE(first_name TEXT, last_name TEXT, account_number INT) AS $$
	BEGIN
	    RETURN QUERY SELECT customers.first_name, customers.last_name, credit_account_applications.account_number
	    FROM staff.customers
	    INNER JOIN staff.accounts ON customers.account_id = accounts.account_id
	    INNER JOIN staff.credit_card_applications ON accounts.account_number = credit_card_applications.account_number
	    WHERE credit_card_applications.application_status = 'PENDING';
	
	CREATE OR REPLACE FUNCTION staff.view_outstanding_loan_applications()
	RETURNS TABLE(first_name TEXT, last_name TEXT, loan_id INT) AS $$
	BEGIN
	    RETURN QUERY SELECT customers.first_name, customers.last_name, loan_applications.id
	    FROM staff.customers
	    INNER JOIN staff.loan_applications ON loan_applications.account_id = customers.account_id
	    WHERE loan_applications.application_status = 'PENDING';
	CREATE SCHEMA IF NOT EXISTS client;
	SET search_path TO public, client;
	CREATE OR REPLACE VIEW client.accounts AS
	    SELECT account_number, account_id FROM account;
	CREATE OR REPLACE VIEW client.debit_accounts AS
	    SELECT account.account_id, account.account_number, debit_account.current_balance, debit_account.interest_rate, debit_overdraft.overdraft_limit, debit_overdraft.overdraft_usage, debit_overdraft.interest_rate AS overdraft_interest_rate
	    FROM account
	    INNER JOIN debit_account ON account.account_number = debit_account.account_number
	    INNER JOIN debit_overdraft ON account.account_number = debit_overdraft.account_number;
	CREATE OR REPLACE VIEW client.debit_accounts_statements AS
	    SELECT debit_accounts.account_id, debit_accounts.account_number, debit_statement.id, debit_statement.starting_date, debit_statement.end_date, debit_statement.amount
	    FROM debit_accounts
	    INNER JOIN debit_statement ON debit_accounts.account_number = debit_statement.account_number;
	CREATE OR REPLACE VIEW client.debit_accounts_statement AS
	    SELECT debit_accounts_statements.account_id, debit_accounts_statements.account_number, debit_accounts_statements.id, debit_accounts_statements.starting_date, debit_accounts_statements.end_date, debit_accounts_statements.amount AS total_amount, transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date
	    FROM debit_accounts_statements
	    INNER JOIN transaction ON debit_accounts_statements.id = transaction.debit_statement_id;
	CREATE OR REPLACE VIEW client.credit_accounts AS
	    SELECT account.account_id, account.account_number, credit_account.outstanding_balance, credit_account.credit_limit, credit_account.interest_rate, credit_account_application.application_status
	    FROM account
	    INNER JOIN credit_account ON account.account_number = credit_account.account_number
	    INNER JOIN credit_account_application ON account.account_number = credit_account_application.account_number;
	CREATE OR REPLACE VIEW client.credit_accounts_statements AS
	    SELECT credit_accounts.account_id, credit_accounts.account_number, credit_statement.id, credit_statement.starting_date, credit_statement.end_date, credit_statement.amount, credit_statement.minimum_payment, credit_statement.minimum_payment_due_date
	    FROM credit_accounts
	    INNER JOIN credit_statement ON credit_accounts.account_number = credit_statement.account_number;
	CREATE OR REPLACE VIEW client.credit_accounts_statement AS
	    SELECT credit_accounts_statements.account_id, credit_accounts_statements.account_number, credit_accounts_statements.id, credit_accounts_statements.starting_date, credit_accounts_statements.end_date, credit_accounts_statements.amount AS total_amount, credit_accounts_statements.minimum_payment, credit_accounts_statements.minimum_payment_due_date, transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date
	    FROM credit_accounts_statements
	    INNER JOIN transaction ON credit_accounts_statements.id = transaction.credit_statement_id;
	CREATE OR REPLACE VIEW client.savings_accounts AS
	    SELECT account.account_id, account.account_number, savings_account.current_balance, savings_account.interest_rate
	    FROM account
	    INNER JOIN savings_account ON account.account_number = savings_account.account_number;
	CREATE OR REPLACE VIEW client.savings_accounts_statements AS
	    SELECT savings_accounts.account_id, savings_accounts.account_number, savings_statement.id, savings_statement.starting_date, savings_statement.end_date, savings_statement.amount
	    FROM savings_accounts
	    INNER JOIN savings_statement ON savings_accounts.account_number = savings_statement.account_number;
	CREATE OR REPLACE VIEW client.loans AS
	    SELECT loan.account_id, loan.id, loan.amount, loan.interest_rate, loan.loan_type, loan.end_date, loan_application.application_status
	    FROM loan
	    INNER JOIN loan_application ON loan.id = loan_application.loan_id;
	CREATE OR REPLACE VIEW client.loan_statements AS
	    SELECT loans.account_id, loans.id, loan_statement.id, loan_statement.starting_date, loan_statement.end_date, loan_statement.amount, loan_statement.minimum_payment, loan_statement.minimum_payment_due_date
	    FROM loans
	    INNER JOIN loan_statement ON loans.id = loan_statement.loan_id;
	CREATE OR REPLACE VIEW client.loan_applications AS
	    SELECT loan.acccount_id, loan_application.id, loan_application.application_status, loan_application.loan_id
	    FROM loan_application
	    INNER JOIN loan ON loan_application.loan_id = loan.id;
	CREATE OR REPLACE FUNCTION client.update_personal_information(account_identifier INT, first_name TEXT, last_name TEXT, date_of_birth DATE, phone_number TEXT, email_address TEXT, address_street TEXT, address_city TEXT, address_county TEXT, address_postcode TEXT, account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	BEGIN
	    UPDATE customer SET first_name = first_name, last_name = last_name, date_of_birth = date_of_birth, phone_number = phone_number, email_address = email_address, address_street = address_street, address_city = address_city, address_county = address_county, address_postcode = address_postcode
	    WHERE id = (SELECT customer_id FROM online_account WHERE id = account_identifier);
	
	    -- INSERT INTO management_log (log_description, log_date, account_id) VALUES ('Updated personal information', CURRENT_DATE, account_identifier);
	    passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
	    RETURN passed;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.update_password(account_identifier INT, new_password TEXT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	BEGIN
	    UPDATE user_login SET password = md5(new_password)
	    WHERE account_id = account_identifier;
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Updated password', CURRENT_DATE);
	    passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
	    RETURN passed;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.update_email(account_identifier INT, new_email TEXT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE ROW_COUNT INT;
	BEGIN
	    UPDATE user_login SET email = new_email
	    WHERE account_id = account_identifier;
	
	    GET DIAGNOSTICS ROW_COUNT = ROW_COUNT;
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Updated email', CURRENT_DATE);
	    passed = CASE WHEN ROW_COUNT = 1 THEN TRUE ELSE FALSE END;
	    RETURN passed;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.open_debit_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE debit_account_number INT;
	DECLARE next_account_number INT;
	DECLARE ROW_COUNT INT;
	BEGIN
	
	    SELECT get_next_account_number() INTO next_account_number;
	
	    INSERT INTO debit_account (account_number, account_id, current_balance, interest_rate) VALUES (next_account_number ,account_id, 0, 0.01) RETURNING account_number INTO debit_account_number;
	    GET DIAGNOSTICS ROW_COUNT = ROW_COUNT;
	    INSERT INTO debit_statement (starting_date, end_date, amount, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, debit_account_number);
	    INSERT INTO debit_overdraft (overdraft_usage, overdraft_limit, interest_rate, account_number) VALUES (0, 0, 0.01, debit_account_number);
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened debit account', CURRENT_DATE);
	    passed = CASE WHEN ROW_COUNT = 1 THEN TRUE ELSE FALSE END;
	    passed = TRUE;
	    RETURN passed;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.open_credit_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE credit_account_number INT;
	DECLARE next_account_number INT;
	BEGIN
	
	    SELECT get_next_account_number() INTO next_account_number;
	
	    INSERT INTO credit_account (account_number, outstanding_balance, credit_limit, interest_rate, account_id) VALUES (next_account_number ,0, 0, 24.9, account_id) RETURNING account_number INTO credit_account_number;
	    INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_number);
	    INSERT INTO credit_account_application (credit_account_id, application_status) VALUES (credit_account_number, 'PENDING');
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened credit account', CURRENT_DATE);
	END
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.open_savings_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE savings_account_id INT;
	DECLARE next_account_number INT;
	DECLARE ROW_COUNT INT;
	BEGIN
	
	    SELECT get_next_account_number() INTO next_account_number;
	
	    INSERT INTO savings_account (account_number, account_id, current_balance, interest_rate) VALUES (next_account_number ,account_id, 0, 0.01) RETURNING account_number INTO savings_account_id;
	    GET DIAGNOSTICS ROW_COUNT = ROW_COUNT;
	    INSERT INTO savings_statement (starting_date, end_date, amount, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, savings_account_id);
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened savings account', CURRENT_DATE);
	    passed = CASE WHEN ROW_COUNT = 1 THEN TRUE ELSE FALSE END;
	    RETURN passed;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.open_loan(account_id INT, loan_amount INT, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE loan_id INT;
	DECLARE ROW_COUNT INT;
	BEGIN
	    INSERT INTO loan (account_id, loan_amount, loan_end_date, loan_type, loan_interest_rate) VALUES (account_id, loan_amount, loan_end_date, loan_type, loan_interest_rate) RETURNING id INTO loan_id;
	    GET DIAGNOSTICS ROW_COUNT = ROW_COUNT;
	    INSERT INTO loan_statement (starting_date, end_date, amount, account_id) VALUES (CURRENT_DATE, CURRENT_DATE, 0, loan_id);
	    INSERT INTO loan_application (loan_id, application_status) VALUES (loan_id, 'PENDING');
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened loan', CURRENT_DATE);
	    passed = CASE WHEN ROW_COUNT = 1 THEN TRUE ELSE FALSE END;
	    RETURN passed;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.view_personal_information(account_id INT)
	RETURNS TABLE (first_name TEXT, last_name TEXT, email TEXT, phone_number TEXT, address TEXT, city TEXT, country TEXT, postal_code TEXT) AS $$
	BEGIN
	    RETURN QUERY
	        SELECT first_name, last_name, email, phone_number, address, city, country, postal_code
	            FROM customer
	        INNER JOIN account ON account.customer_id = customer.id
	        WHERE account.id = account_id;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.view_accounts(account_identifier INT)
	RETURNS TABLE (account_number INT, account_id INT, balance NUMERIC, interest_rate NUMERIC, account_type TEXT) AS $$
	
	BEGIN
	
	    RETURN QUERY
	        SELECT account.*, COALESCE(debit_accounts.current_balance, credit_accounts.outstanding_balance, savings_accounts.current_balance) AS balance,
	            COALESCE(debit_accounts.interest_rate, credit_accounts.interest_rate, savings_accounts.interest_rate) AS interest_rate,
	            get_account_type(account.account_number) AS account_type
	            FROM account
	            LEFT JOIN client.credit_accounts ON account.account_number = credit_accounts.account_number
	            LEFT JOIN client.debit_accounts ON account.account_number = debit_accounts.account_number
	            LEFT JOIN client.savings_accounts ON account.account_number = savings_accounts.account_number
	            WHERE account.account_id = account_identifier;
	
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.view_debit_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, overdraft_limit NUMERIC, overdraft_usage NUMERIC, overdraft_interest_rate NUMERIC, external_account_number INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed debit accounts', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT * FROM client.debit_accounts WHERE account_id = account_id;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.view_credit_accounts(account_id INT)
	RETURNS TABLE (id INT, outstanding_balance NUMERIC, credit_limit NUMERIC, interest_rate NUMERIC, application_status TEXT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit accounts', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT * FROM client.credit_accounts WHERE account_id = account_id;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.view_savings_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, external_account_number INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings accounts', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT * FROM client.savings_accounts WHERE account_id = account_id;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.view_loans(account_id INT)
	RETURNS TABLE (id INT, loan_amount NUMERIC, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC, application_status TEXT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed loans', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT * FROM client.loans WHERE account_id = account_id;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.view_savings_statements(account_identifier INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Viewed savings statements', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT savings_accounts_statements.account_id, savings_accounts_statements.account_number, savings_accounts_statements.starting_date, savings_accounts_statements.end_date, savings_accounts_statements.amount
	        FROM client.savings_accounts_statements
	        WHERE savings_accounts_statements.account_number = account_number
	        AND savings_accounts_statements.account_id = account_identifier;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.view_debit_statements(account_identifier INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Viewed debit statements', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT debit_accounts_statements.account_id, debit_accounts_statements.account_number, debit_accounts_statements.starting_date, debit_accounts_statements.end_date, debit_accounts_statements.amount
	        FROM client.debit_accounts_statements
	        WHERE debit_accounts_statements.account_number = account_number
	        AND debit_accounts_statements.account_id = account_identifier;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.view_credit_statements(account_identifier INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Viewed credit statements', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statements.account_id, credit_accounts_statements.account_number, credit_accounts_statements.starting_date, credit_accounts_statements.end_date, credit_accounts_statements.amount
	        FROM client.credit_accounts_statements
	        WHERE credit_accounts_statements.account_number = account_number
	        AND credit_accounts_statements.account_id = account_identifier;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.view_debit_statement(account_identifier INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Viewed debit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT debit_accounts_statement.account_id, debit_accounts_statement.account_number, debit_accounts_statement.starting_date, debit_accounts_statement.end_date, debit_accounts_statement.amount
	        FROM client.debit_accounts_statement
	        WHERE debit_accounts_statement.account_id = account_identifier
	        AND debit_accounts_statement.account_number = account_number
	        AND debit_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.view_credit_statement(account_identifier INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statement.account_id, credit_accounts_statement.account_number, credit_accounts_statement.starting_date, credit_accounts_statement.end_date, credit_accounts_statement.amount
	        FROM client.credit_accounts_statement
	        WHERE credit_accounts_statement.account_id = account_identifier
	        AND credit_accounts_statement.account_number = account_number
	        AND credit_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.view_savings_statement(account_identifier INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT savings_accounts_statement.account_id, savings_accounts_statement.account_number, savings_accounts_statement.starting_date, savings_accounts_statement.end_date, savings_accounts_statement.amount
	        FROM client.savings_accounts_statement
	        WHERE savings_accounts_statement.account_id = account_identifier
	        AND savings_accounts_statement.account_number = account_number
	        AND savings_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
	CREATE SCHEMA IF NOT EXISTS unauthenticated;
	SET search_path TO unauthenticated, public;
	
	CREATE OR REPLACE VIEW unauthenticated.unauthenticated_personal_information AS
	SELECT id, md5(first_name) AS first_name, md5(last_name) AS last_name, md5(email_address) AS email_address
	FROM customer;
	
	CREATE OR REPLACE VIEW unauthenticated.unauthenticated_login AS
	SELECT md5(username) AS username FROM user_login;
	
	CREATE OR REPLACE FUNCTION unauthenticated.create_personal_info(first_name TEXT, last_name TEXT, date_of_birth DATE, phone_number TEXT, email_address TEXT, address_street TEXT, address_city TEXT, address_county TEXT, address_postcode TEXT)
	RETURNS INT AS $$
	DECLARE customer_id INT;
	BEGIN
	    IF NOT EXISTS (SELECT FROM unauthenticated.unauthenticated_personal_information WHERE md5(first_name) = first_name AND md5(last_name) = last_name AND md5(email_address) = email_address) THEN
	        INSERT INTO customer
	        VALUES (first_name, last_name, date_of_birth, phone_number, email_address, address_street, address_city, address_county, address_postcode)
	        RETURNING id INTO customer_id;
	
	        INSERT INTO management_log (log_description, log_date) VALUES ('New customer created', now());
	    ELSE
	        RAISE NOTICE 'CUSTOMER INFORMATION ALREADY PRESENT';
	        SELECT id INTO customer_id FROM unauthenticated.unauthenticated_personal_information WHERE md5(first_name) = first_name AND md5(last_name) = last_name AND md5(email_address) = email_address;
	    END IF;
	    RETURN customer_id;
	END;
	$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION unauthenticated.create_online_account_details(customer_id INT, first_name TEXT, last_name TEXT, email_address TEXT, question_choice_ids INT[], question_answers TEXT[])
	RETURNS INT AS $$
	DECLARE account_id INT;
	DECLARE online_account_id INT;
	DECLARE question_choice_id INT;
	BEGIN
	    IF NOT EXISTS (SELECT FROM user_login WHERE username = username) THEN
	        INSERT INTO online_account (date_opened, sort_code, customer_id)
	        VALUES ((SELECT now()), (SELECT num FROM GENERATE_SERIES(1, 6) AS s(num) LIMIT 1), customer_id)
	        RETURNING id INTO account_id;
	
	        INSERT INTO user_login (account_id, username, password)
	        VALUES (account_id, username, md5(password))
	        RETURNING id INTO online_account_id;
	
	        FOR i IN 0..2 LOOP
	            
	            INSERT INTO user_login_security_question (question_choice_id, login_id)
	            VALUES (question_choice_ids[i], online_account_id)
	            RETURNING id INTO question_choice_id;
	
	            INSERT INTO security_question_answer (answer, question_id)
	            VALUES (question_answers[i], question_choice_id);
	
	        END LOOP;
	
	
	        INSERT INTO authentication_log (log_description, log_date, account_id) VALUES ('New online account created', now(), account_id);
	
	        RETURN account_id;
	    ELSE
	        RAISE NOTICE 'USERNAME ALREADY TAKEN';
	        RETURN NULL;
	
	    END IF;
	    RETURN success;
	END;
	$$ LANGUAGE plpgsql;
	
	INSERT INTO customer (first_name, last_name, date_of_birth, phone_number, email_address, address_street, address_city, address_county, address_postcode)
	VALUES ('John', 'Smith', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('Jane', 'Doe', '1990-01-01', '01234567890', 'test@gmail.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Bloggs', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('John', 'Bloggs', '1990-01-01', '01234567890', 'hello@yahoo.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('Jane', 'Bloggs', '1990-01-01', '01234567890', 'test@outlook.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Doe', '1990-01-01', '01234567890', 'hello@outlook.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('John', 'Doe', '1990-01-01', '01234567890', 'mybankemail@icloud.com', '1 My Bank Street', 'My Bank City', 'My Bank County', 'MB1 1NK'),
	('Jane', 'Smith', '1990-01-01', '01234567890', 'bankemail@outlook.com', '1 Bank Street', 'Bank City', 'Bank County', 'BA1 1NK'),
	('Joe', 'Smith', '1990-01-01', '01234567890', 'example@icloud.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX');
	
	INSERT INTO online_account (date_opened, sort_code, customer_id)
	VALUES ('2020-01-01', '123456', 1),
	('2019-01-01', '126485', 2),
	('2018-01-01', '128475', 3),
	('2017-01-01', '129476', 4),
	('2016-01-01', '120386', 5),
	('2017-02-03', '127385', 6),
	('2018-02-04', '128256', 7),
	('2020-01-01', '129386', 8),
	('2020-01-01', '120386', 9);
	
	INSERT INTO user_login (account_id, username, password)
	VALUES (1, 'johnsmith', 'b29af57c2b3bba21e9df0cece40952c6'),
	(2, 'janedoe', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(3, 'joebloggs', 'b29af57c2b3bba21e9df0cece40952c6'),
	(4, 'johnbloggs', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(5, 'janebloggs', 'b29af57c2b3bba21e9df0cece40952c6'),
	(6, 'joedoe', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(7, 'johndoe', 'b29af57c2b3bba21e9df0cece40952c6'),
	(8, 'joesmith', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(9, 'janesmith', 'b29af57c2b3bba21e9df0cece40952c6');
	
	INSERT INTO security_question_option (question_description)
	VALUES ('What is your favourite colour?'),
	('What is your favourite food?'),
	('What is your favourite animal?'),
	('What is your favourite sport?'),
	('What is your favourite movie?'),
	('What is your favourite book?'),
	('What is your favourite song?'),
	('What is your favourite band?'),
	('What is your favourite game?'),
	('What is your favourite TV show?');
	
	INSERT INTO user_login_security_question (question_choice_id, login_id)
	VALUES (1, 1),
	(2, 2),
	(3, 3),
	(4, 4),
	(5, 5),
	(6, 6),
	(7, 7),
	(8, 8),
	(9, 9);
	
	INSERT INTO security_question_answer (question_answer, question_id)
	VALUES ('Red', 1),
	('Blue', 2),
	('Green', 3),
	('Yellow', 4),
	('Orange', 5),
	('Purple', 6),
	('Pink', 7),
	('Black', 8),
	('White', 9);
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
2023-01-13 14:00:16.895 GMT [24764] LOG:  received fast shutdown request
2023-01-13 14:00:16.897 GMT [24764] LOG:  aborting any active transactions
2023-01-13 14:00:16.902 GMT [24764] LOG:  background worker "logical replication launcher" (PID 24771) exited with exit code 1
2023-01-13 14:00:16.902 GMT [24766] LOG:  shutting down
2023-01-13 14:00:16.953 GMT [24764] LOG:  database system is shut down
2023-01-13 14:00:18.330 GMT [24912] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-13 14:00:18.331 GMT [24912] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-13 14:00:18.333 GMT [24912] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-13 14:00:18.338 GMT [24913] LOG:  database system was shut down at 2023-01-13 14:00:18 GMT
2023-01-13 14:00:18.344 GMT [24912] LOG:  database system is ready to accept connections
2023-01-13 14:00:19.239 GMT [24951] ERROR:  syntax error at or near "RETURN" at character 692
2023-01-13 14:00:19.239 GMT [24951] STATEMENT:  CREATE OR REPLACE FUNCTION staff.view_outstanding_credit_applications()
	RETURNS TABLE(first_name TEXT, last_name TEXT, account_number INT) AS $$
	BEGIN
	    RETURN QUERY SELECT customers.first_name, customers.last_name, credit_account_applications.account_number
	    FROM staff.customers
	    INNER JOIN staff.accounts ON customers.account_id = accounts.account_id
	    INNER JOIN staff.credit_card_applications ON accounts.account_number = credit_card_applications.account_number
	    WHERE credit_card_applications.application_status = 'PENDING';
	
	CREATE OR REPLACE FUNCTION staff.view_outstanding_loan_applications()
	RETURNS TABLE(first_name TEXT, last_name TEXT, loan_id INT) AS $$
	BEGIN
	    RETURN QUERY SELECT customers.first_name, customers.last_name, loan_applications.id
	    FROM staff.customers
	    INNER JOIN staff.loan_applications ON loan_applications.account_id = customers.account_id
	    WHERE loan_applications.application_status = 'PENDING';
	CREATE SCHEMA IF NOT EXISTS client;
	SET search_path TO public, client;
	CREATE OR REPLACE VIEW client.accounts AS
	    SELECT account_number, account_id FROM account;
	CREATE OR REPLACE VIEW client.debit_accounts AS
	    SELECT account.account_id, account.account_number, debit_account.current_balance, debit_account.interest_rate, debit_overdraft.overdraft_limit, debit_overdraft.overdraft_usage, debit_overdraft.interest_rate AS overdraft_interest_rate
	    FROM account
	    INNER JOIN debit_account ON account.account_number = debit_account.account_number
	    INNER JOIN debit_overdraft ON account.account_number = debit_overdraft.account_number;
	CREATE OR REPLACE VIEW client.debit_accounts_statements AS
	    SELECT debit_accounts.account_id, debit_accounts.account_number, debit_statement.id, debit_statement.starting_date, debit_statement.end_date, debit_statement.amount
	    FROM debit_accounts
	    INNER JOIN debit_statement ON debit_accounts.account_number = debit_statement.account_number;
	CREATE OR REPLACE VIEW client.debit_accounts_statement AS
	    SELECT debit_accounts_statements.account_id, debit_accounts_statements.account_number, debit_accounts_statements.id, debit_accounts_statements.starting_date, debit_accounts_statements.end_date, debit_accounts_statements.amount AS total_amount, transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date
	    FROM debit_accounts_statements
	    INNER JOIN transaction ON debit_accounts_statements.id = transaction.debit_statement_id;
	CREATE OR REPLACE VIEW client.credit_accounts AS
	    SELECT account.account_id, account.account_number, credit_account.outstanding_balance, credit_account.credit_limit, credit_account.interest_rate, credit_account_application.application_status
	    FROM account
	    INNER JOIN credit_account ON account.account_number = credit_account.account_number
	    INNER JOIN credit_account_application ON account.account_number = credit_account_application.account_number;
	CREATE OR REPLACE VIEW client.credit_accounts_statements AS
	    SELECT credit_accounts.account_id, credit_accounts.account_number, credit_statement.id, credit_statement.starting_date, credit_statement.end_date, credit_statement.amount, credit_statement.minimum_payment, credit_statement.minimum_payment_due_date
	    FROM credit_accounts
	    INNER JOIN credit_statement ON credit_accounts.account_number = credit_statement.account_number;
	CREATE OR REPLACE VIEW client.credit_accounts_statement AS
	    SELECT credit_accounts_statements.account_id, credit_accounts_statements.account_number, credit_accounts_statements.id, credit_accounts_statements.starting_date, credit_accounts_statements.end_date, credit_accounts_statements.amount AS total_amount, credit_accounts_statements.minimum_payment, credit_accounts_statements.minimum_payment_due_date, transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date
	    FROM credit_accounts_statements
	    INNER JOIN transaction ON credit_accounts_statements.id = transaction.credit_statement_id;
	CREATE OR REPLACE VIEW client.savings_accounts AS
	    SELECT account.account_id, account.account_number, savings_account.current_balance, savings_account.interest_rate
	    FROM account
	    INNER JOIN savings_account ON account.account_number = savings_account.account_number;
	CREATE OR REPLACE VIEW client.savings_accounts_statements AS
	    SELECT savings_accounts.account_id, savings_accounts.account_number, savings_statement.id, savings_statement.starting_date, savings_statement.end_date, savings_statement.amount
	    FROM savings_accounts
	    INNER JOIN savings_statement ON savings_accounts.account_number = savings_statement.account_number;
	CREATE OR REPLACE VIEW client.loans AS
	    SELECT loan.account_id, loan.id, loan.amount, loan.interest_rate, loan.loan_type, loan.end_date, loan_application.application_status
	    FROM loan
	    INNER JOIN loan_application ON loan.id = loan_application.loan_id;
	CREATE OR REPLACE VIEW client.loan_statements AS
	    SELECT loans.account_id, loans.id, loan_statement.id, loan_statement.starting_date, loan_statement.end_date, loan_statement.amount, loan_statement.minimum_payment, loan_statement.minimum_payment_due_date
	    FROM loans
	    INNER JOIN loan_statement ON loans.id = loan_statement.loan_id;
	CREATE OR REPLACE VIEW client.loan_applications AS
	    SELECT loan.acccount_id, loan_application.id, loan_application.application_status, loan_application.loan_id
	    FROM loan_application
	    INNER JOIN loan ON loan_application.loan_id = loan.id;
	CREATE OR REPLACE FUNCTION client.update_personal_information(account_identifier INT, first_name TEXT, last_name TEXT, date_of_birth DATE, phone_number TEXT, email_address TEXT, address_street TEXT, address_city TEXT, address_county TEXT, address_postcode TEXT, account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	BEGIN
	    UPDATE customer SET first_name = first_name, last_name = last_name, date_of_birth = date_of_birth, phone_number = phone_number, email_address = email_address, address_street = address_street, address_city = address_city, address_county = address_county, address_postcode = address_postcode
	    WHERE id = (SELECT customer_id FROM online_account WHERE id = account_identifier);
	
	    -- INSERT INTO management_log (log_description, log_date, account_id) VALUES ('Updated personal information', CURRENT_DATE, account_identifier);
	    passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
	    RETURN passed;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.update_password(account_identifier INT, new_password TEXT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	BEGIN
	    UPDATE user_login SET password = md5(new_password)
	    WHERE account_id = account_identifier;
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Updated password', CURRENT_DATE);
	    passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
	    RETURN passed;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.update_email(account_identifier INT, new_email TEXT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE ROW_COUNT INT;
	BEGIN
	    UPDATE user_login SET email = new_email
	    WHERE account_id = account_identifier;
	
	    GET DIAGNOSTICS ROW_COUNT = ROW_COUNT;
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Updated email', CURRENT_DATE);
	    passed = CASE WHEN ROW_COUNT = 1 THEN TRUE ELSE FALSE END;
	    RETURN passed;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.open_debit_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE debit_account_number INT;
	DECLARE next_account_number INT;
	DECLARE ROW_COUNT INT;
	BEGIN
	
	    SELECT get_next_account_number() INTO next_account_number;
	
	    INSERT INTO debit_account (account_number, account_id, current_balance, interest_rate) VALUES (next_account_number ,account_id, 0, 0.01) RETURNING account_number INTO debit_account_number;
	    GET DIAGNOSTICS ROW_COUNT = ROW_COUNT;
	    INSERT INTO debit_statement (starting_date, end_date, amount, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, debit_account_number);
	    INSERT INTO debit_overdraft (overdraft_usage, overdraft_limit, interest_rate, account_number) VALUES (0, 0, 0.01, debit_account_number);
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened debit account', CURRENT_DATE);
	    passed = CASE WHEN ROW_COUNT = 1 THEN TRUE ELSE FALSE END;
	    passed = TRUE;
	    RETURN passed;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.open_credit_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE credit_account_number INT;
	DECLARE next_account_number INT;
	BEGIN
	
	    SELECT get_next_account_number() INTO next_account_number;
	
	    INSERT INTO credit_account (account_number, outstanding_balance, credit_limit, interest_rate, account_id) VALUES (next_account_number ,0, 0, 24.9, account_id) RETURNING account_number INTO credit_account_number;
	    INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_number);
	    INSERT INTO credit_account_application (credit_account_id, application_status) VALUES (credit_account_number, 'PENDING');
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened credit account', CURRENT_DATE);
	END
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.open_savings_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE savings_account_id INT;
	DECLARE next_account_number INT;
	DECLARE ROW_COUNT INT;
	BEGIN
	
	    SELECT get_next_account_number() INTO next_account_number;
	
	    INSERT INTO savings_account (account_number, account_id, current_balance, interest_rate) VALUES (next_account_number ,account_id, 0, 0.01) RETURNING account_number INTO savings_account_id;
	    GET DIAGNOSTICS ROW_COUNT = ROW_COUNT;
	    INSERT INTO savings_statement (starting_date, end_date, amount, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, savings_account_id);
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened savings account', CURRENT_DATE);
	    passed = CASE WHEN ROW_COUNT = 1 THEN TRUE ELSE FALSE END;
	    RETURN passed;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.open_loan(account_id INT, loan_amount INT, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE loan_id INT;
	DECLARE ROW_COUNT INT;
	BEGIN
	    INSERT INTO loan (account_id, loan_amount, loan_end_date, loan_type, loan_interest_rate) VALUES (account_id, loan_amount, loan_end_date, loan_type, loan_interest_rate) RETURNING id INTO loan_id;
	    GET DIAGNOSTICS ROW_COUNT = ROW_COUNT;
	    INSERT INTO loan_statement (starting_date, end_date, amount, account_id) VALUES (CURRENT_DATE, CURRENT_DATE, 0, loan_id);
	    INSERT INTO loan_application (loan_id, application_status) VALUES (loan_id, 'PENDING');
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened loan', CURRENT_DATE);
	    passed = CASE WHEN ROW_COUNT = 1 THEN TRUE ELSE FALSE END;
	    RETURN passed;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.view_personal_information(account_id INT)
	RETURNS TABLE (first_name TEXT, last_name TEXT, email TEXT, phone_number TEXT, address TEXT, city TEXT, country TEXT, postal_code TEXT) AS $$
	BEGIN
	    RETURN QUERY
	        SELECT first_name, last_name, email, phone_number, address, city, country, postal_code
	            FROM customer
	        INNER JOIN account ON account.customer_id = customer.id
	        WHERE account.id = account_id;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.view_accounts(account_identifier INT)
	RETURNS TABLE (account_number INT, account_id INT, balance NUMERIC, interest_rate NUMERIC, account_type TEXT) AS $$
	
	BEGIN
	
	    RETURN QUERY
	        SELECT account.*, COALESCE(debit_accounts.current_balance, credit_accounts.outstanding_balance, savings_accounts.current_balance) AS balance,
	            COALESCE(debit_accounts.interest_rate, credit_accounts.interest_rate, savings_accounts.interest_rate) AS interest_rate,
	            get_account_type(account.account_number) AS account_type
	            FROM account
	            LEFT JOIN client.credit_accounts ON account.account_number = credit_accounts.account_number
	            LEFT JOIN client.debit_accounts ON account.account_number = debit_accounts.account_number
	            LEFT JOIN client.savings_accounts ON account.account_number = savings_accounts.account_number
	            WHERE account.account_id = account_identifier;
	
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.view_debit_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, overdraft_limit NUMERIC, overdraft_usage NUMERIC, overdraft_interest_rate NUMERIC, external_account_number INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed debit accounts', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT * FROM client.debit_accounts WHERE account_id = account_id;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.view_credit_accounts(account_id INT)
	RETURNS TABLE (id INT, outstanding_balance NUMERIC, credit_limit NUMERIC, interest_rate NUMERIC, application_status TEXT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit accounts', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT * FROM client.credit_accounts WHERE account_id = account_id;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.view_savings_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, external_account_number INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings accounts', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT * FROM client.savings_accounts WHERE account_id = account_id;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.view_loans(account_id INT)
	RETURNS TABLE (id INT, loan_amount NUMERIC, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC, application_status TEXT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed loans', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT * FROM client.loans WHERE account_id = account_id;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.view_savings_statements(account_identifier INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Viewed savings statements', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT savings_accounts_statements.account_id, savings_accounts_statements.account_number, savings_accounts_statements.starting_date, savings_accounts_statements.end_date, savings_accounts_statements.amount
	        FROM client.savings_accounts_statements
	        WHERE savings_accounts_statements.account_number = account_number
	        AND savings_accounts_statements.account_id = account_identifier;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.view_debit_statements(account_identifier INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Viewed debit statements', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT debit_accounts_statements.account_id, debit_accounts_statements.account_number, debit_accounts_statements.starting_date, debit_accounts_statements.end_date, debit_accounts_statements.amount
	        FROM client.debit_accounts_statements
	        WHERE debit_accounts_statements.account_number = account_number
	        AND debit_accounts_statements.account_id = account_identifier;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.view_credit_statements(account_identifier INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Viewed credit statements', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statements.account_id, credit_accounts_statements.account_number, credit_accounts_statements.starting_date, credit_accounts_statements.end_date, credit_accounts_statements.amount
	        FROM client.credit_accounts_statements
	        WHERE credit_accounts_statements.account_number = account_number
	        AND credit_accounts_statements.account_id = account_identifier;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.view_debit_statement(account_identifier INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Viewed debit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT debit_accounts_statement.account_id, debit_accounts_statement.account_number, debit_accounts_statement.starting_date, debit_accounts_statement.end_date, debit_accounts_statement.amount
	        FROM client.debit_accounts_statement
	        WHERE debit_accounts_statement.account_id = account_identifier
	        AND debit_accounts_statement.account_number = account_number
	        AND debit_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.view_credit_statement(account_identifier INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statement.account_id, credit_accounts_statement.account_number, credit_accounts_statement.starting_date, credit_accounts_statement.end_date, credit_accounts_statement.amount
	        FROM client.credit_accounts_statement
	        WHERE credit_accounts_statement.account_id = account_identifier
	        AND credit_accounts_statement.account_number = account_number
	        AND credit_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
	CREATE OR REPLACE FUNCTION client.view_savings_statement(account_identifier INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT savings_accounts_statement.account_id, savings_accounts_statement.account_number, savings_accounts_statement.starting_date, savings_accounts_statement.end_date, savings_accounts_statement.amount
	        FROM client.savings_accounts_statement
	        WHERE savings_accounts_statement.account_id = account_identifier
	        AND savings_accounts_statement.account_number = account_number
	        AND savings_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
	CREATE SCHEMA IF NOT EXISTS unauthenticated;
	SET search_path TO unauthenticated, public;
	
	CREATE OR REPLACE VIEW unauthenticated.unauthenticated_personal_information AS
	SELECT id, md5(first_name) AS first_name, md5(last_name) AS last_name, md5(email_address) AS email_address
	FROM customer;
	
	CREATE OR REPLACE VIEW unauthenticated.unauthenticated_login AS
	SELECT md5(username) AS username FROM user_login;
	
	CREATE OR REPLACE FUNCTION unauthenticated.create_personal_info(first_name TEXT, last_name TEXT, date_of_birth DATE, phone_number TEXT, email_address TEXT, address_street TEXT, address_city TEXT, address_county TEXT, address_postcode TEXT)
	RETURNS INT AS $$
	DECLARE customer_id INT;
	BEGIN
	    IF NOT EXISTS (SELECT FROM unauthenticated.unauthenticated_personal_information WHERE md5(first_name) = first_name AND md5(last_name) = last_name AND md5(email_address) = email_address) THEN
	        INSERT INTO customer
	        VALUES (first_name, last_name, date_of_birth, phone_number, email_address, address_street, address_city, address_county, address_postcode)
	        RETURNING id INTO customer_id;
	
	        INSERT INTO management_log (log_description, log_date) VALUES ('New customer created', now());
	    ELSE
	        RAISE NOTICE 'CUSTOMER INFORMATION ALREADY PRESENT';
	        SELECT id INTO customer_id FROM unauthenticated.unauthenticated_personal_information WHERE md5(first_name) = first_name AND md5(last_name) = last_name AND md5(email_address) = email_address;
	    END IF;
	    RETURN customer_id;
	END;
	$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION unauthenticated.create_online_account_details(customer_id INT, first_name TEXT, last_name TEXT, email_address TEXT, question_choice_ids INT[], question_answers TEXT[])
	RETURNS INT AS $$
	DECLARE account_id INT;
	DECLARE online_account_id INT;
	DECLARE question_choice_id INT;
	BEGIN
	    IF NOT EXISTS (SELECT FROM user_login WHERE username = username) THEN
	        INSERT INTO online_account (date_opened, sort_code, customer_id)
	        VALUES ((SELECT now()), (SELECT num FROM GENERATE_SERIES(1, 6) AS s(num) LIMIT 1), customer_id)
	        RETURNING id INTO account_id;
	
	        INSERT INTO user_login (account_id, username, password)
	        VALUES (account_id, username, md5(password))
	        RETURNING id INTO online_account_id;
	
	        FOR i IN 0..2 LOOP
	            
	            INSERT INTO user_login_security_question (question_choice_id, login_id)
	            VALUES (question_choice_ids[i], online_account_id)
	            RETURNING id INTO question_choice_id;
	
	            INSERT INTO security_question_answer (answer, question_id)
	            VALUES (question_answers[i], question_choice_id);
	
	        END LOOP;
	
	
	        INSERT INTO authentication_log (log_description, log_date, account_id) VALUES ('New online account created', now(), account_id);
	
	        RETURN account_id;
	    ELSE
	        RAISE NOTICE 'USERNAME ALREADY TAKEN';
	        RETURN NULL;
	
	    END IF;
	    RETURN success;
	END;
	$$ LANGUAGE plpgsql;
	
	INSERT INTO customer (first_name, last_name, date_of_birth, phone_number, email_address, address_street, address_city, address_county, address_postcode)
	VALUES ('John', 'Smith', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('Jane', 'Doe', '1990-01-01', '01234567890', 'test@gmail.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Bloggs', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('John', 'Bloggs', '1990-01-01', '01234567890', 'hello@yahoo.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('Jane', 'Bloggs', '1990-01-01', '01234567890', 'test@outlook.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Doe', '1990-01-01', '01234567890', 'hello@outlook.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('John', 'Doe', '1990-01-01', '01234567890', 'mybankemail@icloud.com', '1 My Bank Street', 'My Bank City', 'My Bank County', 'MB1 1NK'),
	('Jane', 'Smith', '1990-01-01', '01234567890', 'bankemail@outlook.com', '1 Bank Street', 'Bank City', 'Bank County', 'BA1 1NK'),
	('Joe', 'Smith', '1990-01-01', '01234567890', 'example@icloud.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX');
	
	INSERT INTO online_account (date_opened, sort_code, customer_id)
	VALUES ('2020-01-01', '123456', 1),
	('2019-01-01', '126485', 2),
	('2018-01-01', '128475', 3),
	('2017-01-01', '129476', 4),
	('2016-01-01', '120386', 5),
	('2017-02-03', '127385', 6),
	('2018-02-04', '128256', 7),
	('2020-01-01', '129386', 8),
	('2020-01-01', '120386', 9);
	
	INSERT INTO user_login (account_id, username, password)
	VALUES (1, 'johnsmith', 'b29af57c2b3bba21e9df0cece40952c6'),
	(2, 'janedoe', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(3, 'joebloggs', 'b29af57c2b3bba21e9df0cece40952c6'),
	(4, 'johnbloggs', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(5, 'janebloggs', 'b29af57c2b3bba21e9df0cece40952c6'),
	(6, 'joedoe', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(7, 'johndoe', 'b29af57c2b3bba21e9df0cece40952c6'),
	(8, 'joesmith', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(9, 'janesmith', 'b29af57c2b3bba21e9df0cece40952c6');
	
	INSERT INTO security_question_option (question_description)
	VALUES ('What is your favourite colour?'),
	('What is your favourite food?'),
	('What is your favourite animal?'),
	('What is your favourite sport?'),
	('What is your favourite movie?'),
	('What is your favourite book?'),
	('What is your favourite song?'),
	('What is your favourite band?'),
	('What is your favourite game?'),
	('What is your favourite TV show?');
	
	INSERT INTO user_login_security_question (question_choice_id, login_id)
	VALUES (1, 1),
	(2, 2),
	(3, 3),
	(4, 4),
	(5, 5),
	(6, 6),
	(7, 7),
	(8, 8),
	(9, 9);
	
	INSERT INTO security_question_answer (question_answer, question_id)
	VALUES ('Red', 1),
	('Blue', 2),
	('Green', 3),
	('Yellow', 4),
	('Orange', 5),
	('Purple', 6),
	('Pink', 7),
	('Black', 8),
	('White', 9);
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
2023-01-13 14:01:14.713 GMT [24912] LOG:  received fast shutdown request
2023-01-13 14:01:14.714 GMT [24912] LOG:  aborting any active transactions
2023-01-13 14:01:14.717 GMT [24912] LOG:  background worker "logical replication launcher" (PID 24919) exited with exit code 1
2023-01-13 14:01:14.724 GMT [24914] LOG:  shutting down
2023-01-13 14:01:14.782 GMT [24912] LOG:  database system is shut down
2023-01-13 14:01:16.188 GMT [25192] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-13 14:01:16.189 GMT [25192] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-13 14:01:16.191 GMT [25192] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-13 14:01:16.197 GMT [25193] LOG:  database system was shut down at 2023-01-13 14:01:15 GMT
2023-01-13 14:01:16.205 GMT [25192] LOG:  database system is ready to accept connections
2023-01-13 14:01:17.412 GMT [25231] ERROR:  column loan_statement.end_date does not exist at character 138
2023-01-13 14:01:17.412 GMT [25231] STATEMENT:  CREATE OR REPLACE VIEW client.loan_statements AS
	    SELECT loans.account_id, loans.id, loan_statement.id, loan_statement.starting_date, loan_statement.end_date, loan_statement.amount, loan_statement.minimum_payment, loan_statement.minimum_payment_due_date
	    FROM loans
	    INNER JOIN loan_statement ON loans.id = loan_statement.loan_id;
2023-01-13 14:01:17.413 GMT [25231] ERROR:  column loan.acccount_id does not exist at character 63
2023-01-13 14:01:17.413 GMT [25231] HINT:  Perhaps you meant to reference the column "loan.account_id".
2023-01-13 14:01:17.413 GMT [25231] STATEMENT:  CREATE OR REPLACE VIEW client.loan_applications AS
	    SELECT loan.acccount_id, loan_application.id, loan_application.application_status, loan_application.loan_id
	    FROM loan_application
	    INNER JOIN loan ON loan_application.loan_id = loan.id;
2023-01-13 14:02:50.740 GMT [25192] LOG:  received fast shutdown request
2023-01-13 14:02:50.742 GMT [25192] LOG:  aborting any active transactions
2023-01-13 14:02:50.746 GMT [25192] LOG:  background worker "logical replication launcher" (PID 25199) exited with exit code 1
2023-01-13 14:02:50.747 GMT [25194] LOG:  shutting down
2023-01-13 14:02:50.799 GMT [25192] LOG:  database system is shut down
2023-01-13 14:02:52.133 GMT [25577] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-13 14:02:52.134 GMT [25577] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-13 14:02:52.136 GMT [25577] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-13 14:02:52.141 GMT [25578] LOG:  database system was shut down at 2023-01-13 14:02:51 GMT
2023-01-13 14:02:52.147 GMT [25577] LOG:  database system is ready to accept connections
2023-01-13 14:02:53.064 GMT [25613] ERROR:  column loan_statement.minimum_payment does not exist at character 161
2023-01-13 14:02:53.064 GMT [25613] STATEMENT:  CREATE OR REPLACE VIEW client.loan_statements AS
	    SELECT loans.account_id, loans.id, loan_statement.id, loan_statement.starting_date, loan_statement.amount, loan_statement.minimum_payment, loan_statement.minimum_payment_due_date
	    FROM loans
	    INNER JOIN loan_statement ON loans.id = loan_statement.loan_id;
2023-01-13 14:02:53.065 GMT [25613] ERROR:  column loan.acccount_id does not exist at character 63
2023-01-13 14:02:53.065 GMT [25613] HINT:  Perhaps you meant to reference the column "loan.account_id".
2023-01-13 14:02:53.065 GMT [25613] STATEMENT:  CREATE OR REPLACE VIEW client.loan_applications AS
	    SELECT loan.acccount_id, loan_application.id, loan_application.application_status, loan_application.loan_id
	    FROM loan_application
	    INNER JOIN loan ON loan_application.loan_id = loan.id;
2023-01-13 14:03:18.177 GMT [25577] LOG:  received fast shutdown request
2023-01-13 14:03:18.178 GMT [25577] LOG:  aborting any active transactions
2023-01-13 14:03:18.184 GMT [25577] LOG:  background worker "logical replication launcher" (PID 25584) exited with exit code 1
2023-01-13 14:03:18.184 GMT [25579] LOG:  shutting down
2023-01-13 14:03:18.243 GMT [25577] LOG:  database system is shut down
2023-01-13 14:03:19.623 GMT [25790] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-13 14:03:19.624 GMT [25790] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-13 14:03:19.625 GMT [25790] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-13 14:03:19.630 GMT [25791] LOG:  database system was shut down at 2023-01-13 14:03:19 GMT
2023-01-13 14:03:19.637 GMT [25790] LOG:  database system is ready to accept connections
2023-01-13 14:03:20.528 GMT [25826] ERROR:  column "id" specified more than once
2023-01-13 14:03:20.528 GMT [25826] STATEMENT:  CREATE OR REPLACE VIEW client.loan_statements AS
	    SELECT loans.account_id, loans.id, loan_statement.id, loan_statement.starting_date, loan_statement.amount
	    FROM loans
	    INNER JOIN loan_statement ON loans.id = loan_statement.loan_id;
2023-01-13 14:03:20.529 GMT [25826] ERROR:  column loan.acccount_id does not exist at character 63
2023-01-13 14:03:20.529 GMT [25826] HINT:  Perhaps you meant to reference the column "loan.account_id".
2023-01-13 14:03:20.529 GMT [25826] STATEMENT:  CREATE OR REPLACE VIEW client.loan_applications AS
	    SELECT loan.acccount_id, loan_application.id, loan_application.application_status, loan_application.loan_id
	    FROM loan_application
	    INNER JOIN loan ON loan_application.loan_id = loan.id;
2023-01-13 14:03:41.271 GMT [25790] LOG:  received fast shutdown request
2023-01-13 14:03:41.278 GMT [25790] LOG:  aborting any active transactions
2023-01-13 14:03:41.289 GMT [25790] LOG:  background worker "logical replication launcher" (PID 25797) exited with exit code 1
2023-01-13 14:03:41.289 GMT [25792] LOG:  shutting down
2023-01-13 14:03:41.353 GMT [25790] LOG:  database system is shut down
2023-01-13 14:03:42.598 GMT [25969] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-13 14:03:42.598 GMT [25969] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-13 14:03:42.600 GMT [25969] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-13 14:03:42.604 GMT [25970] LOG:  database system was shut down at 2023-01-13 14:03:42 GMT
2023-01-13 14:03:42.611 GMT [25969] LOG:  database system is ready to accept connections
2023-01-13 14:03:43.410 GMT [25995] ERROR:  column loan.acccount_id does not exist at character 63
2023-01-13 14:03:43.410 GMT [25995] HINT:  Perhaps you meant to reference the column "loan.account_id".
2023-01-13 14:03:43.410 GMT [25995] STATEMENT:  CREATE OR REPLACE VIEW client.loan_applications AS
	    SELECT loan.acccount_id, loan_application.id, loan_application.application_status, loan_application.loan_id
	    FROM loan_application
	    INNER JOIN loan ON loan_application.loan_id = loan.id;
2023-01-13 14:04:11.861 GMT [25969] LOG:  received fast shutdown request
2023-01-13 14:04:11.863 GMT [25969] LOG:  aborting any active transactions
2023-01-13 14:04:11.869 GMT [25969] LOG:  background worker "logical replication launcher" (PID 25976) exited with exit code 1
2023-01-13 14:04:11.869 GMT [25971] LOG:  shutting down
2023-01-13 14:04:11.918 GMT [25969] LOG:  database system is shut down
2023-01-13 14:04:13.168 GMT [26162] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-13 14:04:13.168 GMT [26162] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-13 14:04:13.170 GMT [26162] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-13 14:04:13.174 GMT [26163] LOG:  database system was shut down at 2023-01-13 14:04:12 GMT
2023-01-13 14:04:13.182 GMT [26162] LOG:  database system is ready to accept connections
2023-01-13 14:04:14.026 GMT [26188] ERROR:  column loan.acccount_id does not exist at character 63
2023-01-13 14:04:14.026 GMT [26188] HINT:  Perhaps you meant to reference the column "loan.account_id".
2023-01-13 14:04:14.026 GMT [26188] STATEMENT:  CREATE OR REPLACE VIEW client.loan_applications AS
	    SELECT loan.acccount_id, loan_application.id, loan_application.application_status, loan_application.loan_id
	    FROM loan_application
	    INNER JOIN loan ON loan_application.loan_id = loan.id;
2023-01-13 14:05:05.404 GMT [26162] LOG:  received fast shutdown request
2023-01-13 14:05:05.406 GMT [26162] LOG:  aborting any active transactions
2023-01-13 14:05:05.411 GMT [26162] LOG:  background worker "logical replication launcher" (PID 26169) exited with exit code 1
2023-01-13 14:05:05.411 GMT [26164] LOG:  shutting down
2023-01-13 14:05:05.463 GMT [26162] LOG:  database system is shut down
2023-01-13 14:05:06.625 GMT [26421] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-13 14:05:06.625 GMT [26421] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-13 14:05:06.627 GMT [26421] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-13 14:05:06.631 GMT [26422] LOG:  database system was shut down at 2023-01-13 14:05:06 GMT
2023-01-13 14:05:06.638 GMT [26421] LOG:  database system is ready to accept connections
2023-01-13 15:11:12.170 GMT [26421] LOG:  received smart shutdown request
2023-01-13 15:11:12.183 GMT [26421] LOG:  received SIGHUP, reloading configuration files
2023-01-13 15:11:12.183 GMT [26421] LOG:  background worker "logical replication launcher" (PID 26428) exited with exit code 1
2023-01-13 15:11:12.184 GMT [26423] LOG:  shutting down
2023-01-13 15:11:12.227 GMT [26421] LOG:  database system is shut down
2023-01-14 17:54:16.757 GMT [22079] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-14 17:54:16.760 GMT [22079] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-14 17:54:16.761 GMT [22079] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-14 17:54:16.766 GMT [22080] LOG:  database system was shut down at 2023-01-14 17:54:16 GMT
2023-01-14 17:54:16.772 GMT [22079] LOG:  database system is ready to accept connections
2023-01-14 17:54:17.639 GMT [22119] ERROR:  syntax error at or near "SELECT" at character 468
2023-01-14 17:54:17.639 GMT [22119] STATEMENT:  CREATE OR REPLACE FUNCTION client.get_or_create_statement(account_identifier INT, account_number INT)
	RETURNS INT AS $$
	DECLARE statement_id BOOLEAN;
	BEGIN
	    CASE WHEN EXISTS (SELECT * FROM client.debit_accounts WHERE account_id = account_identifier AND account_number = account_number) THEN
	        IF EXISTS (SELECT * FROM debit_statement WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date) THEN
	            return SELECT id INTO statement_id FROM debit_account WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date;
	        ELSE 
	            INSERT INTO debit_statement (account_number, starting_date, end_date, amount) VALUES (account_number, now()::date, now()::date + 30, 0);
	            return SELECT id INTO statement_id FROM debit_account WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date;
	        END IF;
	    WHEN EXISTS (SELECT * FROM client.credit_accounts WHERE account_id = account_identifier AND account_number = account_number) THEN
	        IF EXISTS (SELECT * FROM credit_statement WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date) THEN
	            return SELECT id INTO statement_id FROM credit_account WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date;
	        ELSE 
	            INSERT INTO credit_statement (account_number, starting_date, end_date, amount) VALUES (account_number, now()::date, now()::date + 30, 0);
	            return SELECT id INTO statement_id FROM credit_account WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date;
	        END IF;
	    WHEN EXISTS (SELECT * FROM client.savings_accounts WHERE account_id = account_identifier AND account_number = account_number) THEN
	        IF EXISTS (SELECT * FROM savings_statement WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date) THEN
	            return SELECT id INTO statement_id FROM savings_account WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date;
	        ELSE 
	            INSERT INTO savings_statement (account_number, starting_date, end_date, amount) VALUES (account_number, now()::date, now()::date + 30, 0);
	            return SELECT id INTO statement_id FROM savings_account WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date;
	        END IF;
	    END CASE;
	END;
	$$ LANGUAGE plpgsql;
2023-01-14 17:54:17.642 GMT [22119] ERROR:  syntax error at or near ";" at character 941
2023-01-14 17:54:17.642 GMT [22119] STATEMENT:  CREATE OR REPLACE FUNCTION client.initiate_transfer(account_identifier INT, account_number INT, transfer_amount NUMERIC, transfer_account_number INT, transfer_account_sort_code TEXT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE internal_account_id INT;
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Initiated transfer', CURRENT_DATE);
	
	    SELECT account_id INTO internal_account_id FROM client.accounts
	    WHERE account_number = transfer_account_number AND sort_code = transfer_account_sort_code;
	
	    IF internal_account_id IS NULL THEN
	       RAISE NOTICE 'EXTERNAL TRANSFER TO ACCOUNT %', transfer_account_number;
	       
	    ELSE
	        RAISE NOTICE 'INTERNAL TRANSFER TO ACCOUNT %', transfer_account_number;
	        SELECT * FROM client.place_transaction_into_account(account_identifier, account_number, transfer_account_number, transfer_amount) INTO passed;
	
	END;
	$$ LANGUAGE plpgsql;
2023-01-14 17:54:17.662 GMT [22119] ERROR:  syntax error at or near "client" at character 1
2023-01-14 17:54:17.662 GMT [22119] STATEMENT:  client.open_savings_account(1);
2023-01-14 17:54:17.663 GMT [22119] ERROR:  syntax error at or near "client" at character 1
2023-01-14 17:54:17.663 GMT [22119] STATEMENT:  client.open_savings_account(2);
2023-01-14 17:54:17.663 GMT [22119] ERROR:  syntax error at or near "client" at character 1
2023-01-14 17:54:17.663 GMT [22119] STATEMENT:  client.open_savings_account(3);
2023-01-14 17:54:17.663 GMT [22119] ERROR:  syntax error at or near "client" at character 1
2023-01-14 17:54:17.663 GMT [22119] STATEMENT:  client.open_savings_account(4);
2023-01-14 17:54:17.663 GMT [22119] ERROR:  syntax error at or near "client" at character 1
2023-01-14 17:54:17.663 GMT [22119] STATEMENT:  client.open_debit_account(1);
2023-01-14 17:54:17.663 GMT [22119] ERROR:  syntax error at or near "client" at character 1
2023-01-14 17:54:17.663 GMT [22119] STATEMENT:  client.open_debit_account(2);
2023-01-14 17:54:17.663 GMT [22119] ERROR:  syntax error at or near "client" at character 1
2023-01-14 17:54:17.663 GMT [22119] STATEMENT:  client.open_debit_account(3);
2023-01-14 17:54:17.663 GMT [22119] ERROR:  syntax error at or near "client" at character 1
2023-01-14 17:54:17.663 GMT [22119] STATEMENT:  client.open_debit_account(4);
2023-01-14 17:54:17.664 GMT [22119] ERROR:  syntax error at or near "client" at character 1
2023-01-14 17:54:17.664 GMT [22119] STATEMENT:  client.open_credit_account(1);
2023-01-14 17:54:17.664 GMT [22119] ERROR:  syntax error at or near "client" at character 1
2023-01-14 17:54:17.664 GMT [22119] STATEMENT:  client.open_credit_account(2);
2023-01-14 17:54:17.664 GMT [22119] ERROR:  syntax error at or near "client" at character 1
2023-01-14 17:54:17.664 GMT [22119] STATEMENT:  client.open_credit_account(3);
2023-01-14 17:54:17.664 GMT [22119] ERROR:  syntax error at or near "client" at character 1
2023-01-14 17:54:17.664 GMT [22119] STATEMENT:  client.open_credit_account(4);
2023-01-14 17:55:14.302 GMT [22079] LOG:  received fast shutdown request
2023-01-14 17:55:14.304 GMT [22079] LOG:  aborting any active transactions
2023-01-14 17:55:14.309 GMT [22079] LOG:  background worker "logical replication launcher" (PID 22086) exited with exit code 1
2023-01-14 17:55:14.309 GMT [22081] LOG:  shutting down
2023-01-14 17:55:14.354 GMT [22079] LOG:  database system is shut down
2023-01-14 17:55:15.691 GMT [22391] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-14 17:55:15.692 GMT [22391] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-14 17:55:15.693 GMT [22391] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-14 17:55:15.699 GMT [22392] LOG:  database system was shut down at 2023-01-14 17:55:15 GMT
2023-01-14 17:55:15.705 GMT [22391] LOG:  database system is ready to accept connections
2023-01-14 17:55:16.619 GMT [22430] ERROR:  syntax error at or near "SELECT" at character 468
2023-01-14 17:55:16.619 GMT [22430] STATEMENT:  CREATE OR REPLACE FUNCTION client.get_or_create_statement(account_identifier INT, account_number INT)
	RETURNS INT AS $$
	DECLARE statement_id BOOLEAN;
	BEGIN
	    CASE WHEN EXISTS (SELECT * FROM client.debit_accounts WHERE account_id = account_identifier AND account_number = account_number) THEN
	        IF EXISTS (SELECT * FROM debit_statement WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date) THEN
	            return SELECT id INTO statement_id FROM debit_account WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date;
	        ELSE 
	            INSERT INTO debit_statement (account_number, starting_date, end_date, amount) VALUES (account_number, now()::date, now()::date + 30, 0);
	            return SELECT id INTO statement_id FROM debit_account WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date;
	        END IF;
	    WHEN EXISTS (SELECT * FROM client.credit_accounts WHERE account_id = account_identifier AND account_number = account_number) THEN
	        IF EXISTS (SELECT * FROM credit_statement WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date) THEN
	            return SELECT id INTO statement_id FROM credit_account WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date;
	        ELSE 
	            INSERT INTO credit_statement (account_number, starting_date, end_date, amount) VALUES (account_number, now()::date, now()::date + 30, 0);
	            return SELECT id INTO statement_id FROM credit_account WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date;
	        END IF;
	    WHEN EXISTS (SELECT * FROM client.savings_accounts WHERE account_id = account_identifier AND account_number = account_number) THEN
	        IF EXISTS (SELECT * FROM savings_statement WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date) THEN
	            return SELECT id INTO statement_id FROM savings_account WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date;
	        ELSE 
	            INSERT INTO savings_statement (account_number, starting_date, end_date, amount) VALUES (account_number, now()::date, now()::date + 30, 0);
	            return SELECT id INTO statement_id FROM savings_account WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date;
	        END IF;
	    END CASE;
	END;
	$$ LANGUAGE plpgsql;
2023-01-14 17:55:16.621 GMT [22430] ERROR:  syntax error at or near ";" at character 941
2023-01-14 17:55:16.621 GMT [22430] STATEMENT:  CREATE OR REPLACE FUNCTION client.initiate_transfer(account_identifier INT, account_number INT, transfer_amount NUMERIC, transfer_account_number INT, transfer_account_sort_code TEXT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE internal_account_id INT;
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Initiated transfer', CURRENT_DATE);
	
	    SELECT account_id INTO internal_account_id FROM client.accounts
	    WHERE account_number = transfer_account_number AND sort_code = transfer_account_sort_code;
	
	    IF internal_account_id IS NULL THEN
	       RAISE NOTICE 'EXTERNAL TRANSFER TO ACCOUNT %', transfer_account_number;
	       
	    ELSE
	        RAISE NOTICE 'INTERNAL TRANSFER TO ACCOUNT %', transfer_account_number;
	        SELECT * FROM client.place_transaction_into_account(account_identifier, account_number, transfer_account_number, transfer_amount) INTO passed;
	
	END;
	$$ LANGUAGE plpgsql;
2023-01-14 17:55:16.669 GMT [22430] ERROR:  syntax error at or near "client" at character 1
2023-01-14 17:55:16.669 GMT [22430] STATEMENT:  client.open_savings_account(1);
2023-01-14 17:55:16.672 GMT [22430] ERROR:  syntax error at or near "client" at character 1
2023-01-14 17:55:16.672 GMT [22430] STATEMENT:  client.open_savings_account(2);
2023-01-14 17:55:16.673 GMT [22430] ERROR:  syntax error at or near "client" at character 1
2023-01-14 17:55:16.673 GMT [22430] STATEMENT:  client.open_savings_account(3);
2023-01-14 17:55:16.673 GMT [22430] ERROR:  syntax error at or near "client" at character 1
2023-01-14 17:55:16.673 GMT [22430] STATEMENT:  client.open_savings_account(4);
2023-01-14 17:55:16.673 GMT [22430] ERROR:  syntax error at or near "client" at character 1
2023-01-14 17:55:16.673 GMT [22430] STATEMENT:  client.open_debit_account(1);
2023-01-14 17:55:16.673 GMT [22430] ERROR:  syntax error at or near "client" at character 1
2023-01-14 17:55:16.673 GMT [22430] STATEMENT:  client.open_debit_account(2);
2023-01-14 17:55:16.673 GMT [22430] ERROR:  syntax error at or near "client" at character 1
2023-01-14 17:55:16.673 GMT [22430] STATEMENT:  client.open_debit_account(3);
2023-01-14 17:55:16.674 GMT [22430] ERROR:  syntax error at or near "client" at character 1
2023-01-14 17:55:16.674 GMT [22430] STATEMENT:  client.open_debit_account(4);
2023-01-14 17:55:16.674 GMT [22430] ERROR:  syntax error at or near "client" at character 1
2023-01-14 17:55:16.674 GMT [22430] STATEMENT:  client.open_credit_account(1);
2023-01-14 17:55:16.674 GMT [22430] ERROR:  syntax error at or near "client" at character 1
2023-01-14 17:55:16.674 GMT [22430] STATEMENT:  client.open_credit_account(2);
2023-01-14 17:55:16.674 GMT [22430] ERROR:  syntax error at or near "client" at character 1
2023-01-14 17:55:16.674 GMT [22430] STATEMENT:  client.open_credit_account(3);
2023-01-14 17:55:16.674 GMT [22430] ERROR:  syntax error at or near "client" at character 1
2023-01-14 17:55:16.674 GMT [22430] STATEMENT:  client.open_credit_account(4);
2023-01-14 17:56:25.220 GMT [22391] LOG:  received fast shutdown request
2023-01-14 17:56:25.222 GMT [22391] LOG:  aborting any active transactions
2023-01-14 17:56:25.227 GMT [22391] LOG:  background worker "logical replication launcher" (PID 22398) exited with exit code 1
2023-01-14 17:56:25.227 GMT [22393] LOG:  shutting down
2023-01-14 17:56:25.278 GMT [22391] LOG:  database system is shut down
2023-01-14 17:56:26.691 GMT [22696] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-14 17:56:26.692 GMT [22696] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-14 17:56:26.693 GMT [22696] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-14 17:56:26.702 GMT [22697] LOG:  database system was shut down at 2023-01-14 17:56:26 GMT
2023-01-14 17:56:26.708 GMT [22696] LOG:  database system is ready to accept connections
2023-01-14 17:56:27.622 GMT [22735] ERROR:  syntax error at or near "SELECT" at character 468
2023-01-14 17:56:27.622 GMT [22735] STATEMENT:  CREATE OR REPLACE FUNCTION client.get_or_create_statement(account_identifier INT, account_number INT)
	RETURNS INT AS $$
	DECLARE statement_id BOOLEAN;
	BEGIN
	    CASE WHEN EXISTS (SELECT * FROM client.debit_accounts WHERE account_id = account_identifier AND account_number = account_number) THEN
	        IF EXISTS (SELECT * FROM debit_statement WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date) THEN
	            return SELECT id INTO statement_id FROM debit_account WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date;
	        ELSE 
	            INSERT INTO debit_statement (account_number, starting_date, end_date, amount) VALUES (account_number, now()::date, now()::date + 30, 0);
	            return SELECT id INTO statement_id FROM debit_account WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date;
	        END IF;
	    WHEN EXISTS (SELECT * FROM client.credit_accounts WHERE account_id = account_identifier AND account_number = account_number) THEN
	        IF EXISTS (SELECT * FROM credit_statement WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date) THEN
	            return SELECT id INTO statement_id FROM credit_account WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date;
	        ELSE 
	            INSERT INTO credit_statement (account_number, starting_date, end_date, amount) VALUES (account_number, now()::date, now()::date + 30, 0);
	            return SELECT id INTO statement_id FROM credit_account WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date;
	        END IF;
	    WHEN EXISTS (SELECT * FROM client.savings_accounts WHERE account_id = account_identifier AND account_number = account_number) THEN
	        IF EXISTS (SELECT * FROM savings_statement WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date) THEN
	            return SELECT id INTO statement_id FROM savings_account WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date;
	        ELSE 
	            INSERT INTO savings_statement (account_number, starting_date, end_date, amount) VALUES (account_number, now()::date, now()::date + 30, 0);
	            return SELECT id INTO statement_id FROM savings_account WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date;
	        END IF;
	    END CASE;
	END;
	$$ LANGUAGE plpgsql;
2023-01-14 17:56:27.625 GMT [22735] ERROR:  syntax error at or near ";" at character 941
2023-01-14 17:56:27.625 GMT [22735] STATEMENT:  CREATE OR REPLACE FUNCTION client.initiate_transfer(account_identifier INT, account_number INT, transfer_amount NUMERIC, transfer_account_number INT, transfer_account_sort_code TEXT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE internal_account_id INT;
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Initiated transfer', CURRENT_DATE);
	
	    SELECT account_id INTO internal_account_id FROM client.accounts
	    WHERE account_number = transfer_account_number AND sort_code = transfer_account_sort_code;
	
	    IF internal_account_id IS NULL THEN
	       RAISE NOTICE 'EXTERNAL TRANSFER TO ACCOUNT %', transfer_account_number;
	       
	    ELSE
	        RAISE NOTICE 'INTERNAL TRANSFER TO ACCOUNT %', transfer_account_number;
	        SELECT * FROM client.place_transaction_into_account(account_identifier, account_number, transfer_account_number, transfer_amount) INTO passed;
	
	END;
	$$ LANGUAGE plpgsql;
2023-01-14 17:56:27.660 GMT [22735] ERROR:  syntax error at or near "PERFORM" at character 1
2023-01-14 17:56:27.660 GMT [22735] STATEMENT:  PERFORM SELECT * FROM client.open_savings_account(1);
2023-01-14 17:56:27.661 GMT [22735] ERROR:  syntax error at or near "client" at character 1
2023-01-14 17:56:27.661 GMT [22735] STATEMENT:  client.open_savings_account(1);
2023-01-14 17:56:27.661 GMT [22735] ERROR:  syntax error at or near "client" at character 1
2023-01-14 17:56:27.661 GMT [22735] STATEMENT:  client.open_savings_account(2);
2023-01-14 17:56:27.662 GMT [22735] ERROR:  syntax error at or near "client" at character 1
2023-01-14 17:56:27.662 GMT [22735] STATEMENT:  client.open_savings_account(3);
2023-01-14 17:56:27.662 GMT [22735] ERROR:  syntax error at or near "client" at character 1
2023-01-14 17:56:27.662 GMT [22735] STATEMENT:  client.open_savings_account(4);
2023-01-14 17:56:27.662 GMT [22735] ERROR:  syntax error at or near "client" at character 1
2023-01-14 17:56:27.662 GMT [22735] STATEMENT:  client.open_debit_account(1);
2023-01-14 17:56:27.662 GMT [22735] ERROR:  syntax error at or near "client" at character 1
2023-01-14 17:56:27.662 GMT [22735] STATEMENT:  client.open_debit_account(2);
2023-01-14 17:56:27.662 GMT [22735] ERROR:  syntax error at or near "client" at character 1
2023-01-14 17:56:27.662 GMT [22735] STATEMENT:  client.open_debit_account(3);
2023-01-14 17:56:27.662 GMT [22735] ERROR:  syntax error at or near "client" at character 1
2023-01-14 17:56:27.662 GMT [22735] STATEMENT:  client.open_debit_account(4);
2023-01-14 17:56:27.662 GMT [22735] ERROR:  syntax error at or near "client" at character 1
2023-01-14 17:56:27.662 GMT [22735] STATEMENT:  client.open_credit_account(1);
2023-01-14 17:56:27.663 GMT [22735] ERROR:  syntax error at or near "client" at character 1
2023-01-14 17:56:27.663 GMT [22735] STATEMENT:  client.open_credit_account(2);
2023-01-14 17:56:27.663 GMT [22735] ERROR:  syntax error at or near "client" at character 1
2023-01-14 17:56:27.663 GMT [22735] STATEMENT:  client.open_credit_account(3);
2023-01-14 17:56:27.663 GMT [22735] ERROR:  syntax error at or near "client" at character 1
2023-01-14 17:56:27.663 GMT [22735] STATEMENT:  client.open_credit_account(4);
2023-01-14 17:57:53.029 GMT [22696] LOG:  received fast shutdown request
2023-01-14 17:57:53.031 GMT [22696] LOG:  aborting any active transactions
2023-01-14 17:57:53.036 GMT [22696] LOG:  background worker "logical replication launcher" (PID 22703) exited with exit code 1
2023-01-14 17:57:53.036 GMT [22698] LOG:  shutting down
2023-01-14 17:57:53.085 GMT [22696] LOG:  database system is shut down
2023-01-14 17:57:54.435 GMT [23137] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-14 17:57:54.435 GMT [23137] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-14 17:57:54.436 GMT [23137] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-14 17:57:54.441 GMT [23138] LOG:  database system was shut down at 2023-01-14 17:57:54 GMT
2023-01-14 17:57:54.452 GMT [23137] LOG:  database system is ready to accept connections
2023-01-14 17:57:55.350 GMT [23172] ERROR:  syntax error at or near "SELECT" at character 468
2023-01-14 17:57:55.350 GMT [23172] STATEMENT:  CREATE OR REPLACE FUNCTION client.get_or_create_statement(account_identifier INT, account_number INT)
	RETURNS INT AS $$
	DECLARE statement_id BOOLEAN;
	BEGIN
	    CASE WHEN EXISTS (SELECT * FROM client.debit_accounts WHERE account_id = account_identifier AND account_number = account_number) THEN
	        IF EXISTS (SELECT * FROM debit_statement WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date) THEN
	            return SELECT id INTO statement_id FROM debit_account WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date;
	        ELSE 
	            INSERT INTO debit_statement (account_number, starting_date, end_date, amount) VALUES (account_number, now()::date, now()::date + 30, 0);
	            return SELECT id INTO statement_id FROM debit_account WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date;
	        END IF;
	    WHEN EXISTS (SELECT * FROM client.credit_accounts WHERE account_id = account_identifier AND account_number = account_number) THEN
	        IF EXISTS (SELECT * FROM credit_statement WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date) THEN
	            return SELECT id INTO statement_id FROM credit_account WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date;
	        ELSE 
	            INSERT INTO credit_statement (account_number, starting_date, end_date, amount) VALUES (account_number, now()::date, now()::date + 30, 0);
	            return SELECT id INTO statement_id FROM credit_account WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date;
	        END IF;
	    WHEN EXISTS (SELECT * FROM client.savings_accounts WHERE account_id = account_identifier AND account_number = account_number) THEN
	        IF EXISTS (SELECT * FROM savings_statement WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date) THEN
	            return SELECT id INTO statement_id FROM savings_account WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date;
	        ELSE 
	            INSERT INTO savings_statement (account_number, starting_date, end_date, amount) VALUES (account_number, now()::date, now()::date + 30, 0);
	            return SELECT id INTO statement_id FROM savings_account WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date;
	        END IF;
	    END CASE;
	END;
	$$ LANGUAGE plpgsql;
2023-01-14 17:57:55.354 GMT [23172] ERROR:  syntax error at or near ";" at character 941
2023-01-14 17:57:55.354 GMT [23172] STATEMENT:  CREATE OR REPLACE FUNCTION client.initiate_transfer(account_identifier INT, account_number INT, transfer_amount NUMERIC, transfer_account_number INT, transfer_account_sort_code TEXT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE internal_account_id INT;
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Initiated transfer', CURRENT_DATE);
	
	    SELECT account_id INTO internal_account_id FROM client.accounts
	    WHERE account_number = transfer_account_number AND sort_code = transfer_account_sort_code;
	
	    IF internal_account_id IS NULL THEN
	       RAISE NOTICE 'EXTERNAL TRANSFER TO ACCOUNT %', transfer_account_number;
	       
	    ELSE
	        RAISE NOTICE 'INTERNAL TRANSFER TO ACCOUNT %', transfer_account_number;
	        SELECT * FROM client.place_transaction_into_account(account_identifier, account_number, transfer_account_number, transfer_amount) INTO passed;
	
	END;
	$$ LANGUAGE plpgsql;
2023-01-14 17:57:55.390 GMT [23172] ERROR:  duplicate key value violates unique constraint "savings_account_pkey"
2023-01-14 17:57:55.390 GMT [23172] DETAIL:  Key (account_number)=(10000000) already exists.
2023-01-14 17:57:55.390 GMT [23172] CONTEXT:  SQL statement "INSERT INTO savings_account (account_number, account_id, current_balance, interest_rate) VALUES (next_account_number ,account_id, 0, 0.01) RETURNING account_number"
	PL/pgSQL function open_savings_account(integer) line 10 at SQL statement
2023-01-14 17:57:55.390 GMT [23172] STATEMENT:  SELECT * FROM client.open_savings_account(1);
2023-01-14 17:57:55.391 GMT [23172] ERROR:  duplicate key value violates unique constraint "savings_account_pkey"
2023-01-14 17:57:55.391 GMT [23172] DETAIL:  Key (account_number)=(10000000) already exists.
2023-01-14 17:57:55.391 GMT [23172] CONTEXT:  SQL statement "INSERT INTO savings_account (account_number, account_id, current_balance, interest_rate) VALUES (next_account_number ,account_id, 0, 0.01) RETURNING account_number"
	PL/pgSQL function open_savings_account(integer) line 10 at SQL statement
2023-01-14 17:57:55.391 GMT [23172] STATEMENT:  SELECT * FROM client.open_savings_account(2);
2023-01-14 17:57:55.391 GMT [23172] ERROR:  duplicate key value violates unique constraint "savings_account_pkey"
2023-01-14 17:57:55.391 GMT [23172] DETAIL:  Key (account_number)=(10000000) already exists.
2023-01-14 17:57:55.391 GMT [23172] CONTEXT:  SQL statement "INSERT INTO savings_account (account_number, account_id, current_balance, interest_rate) VALUES (next_account_number ,account_id, 0, 0.01) RETURNING account_number"
	PL/pgSQL function open_savings_account(integer) line 10 at SQL statement
2023-01-14 17:57:55.391 GMT [23172] STATEMENT:  SELECT * FROM client.open_savings_account(3);
2023-01-14 17:57:55.391 GMT [23172] ERROR:  duplicate key value violates unique constraint "savings_account_pkey"
2023-01-14 17:57:55.391 GMT [23172] DETAIL:  Key (account_number)=(10000000) already exists.
2023-01-14 17:57:55.391 GMT [23172] CONTEXT:  SQL statement "INSERT INTO savings_account (account_number, account_id, current_balance, interest_rate) VALUES (next_account_number ,account_id, 0, 0.01) RETURNING account_number"
	PL/pgSQL function open_savings_account(integer) line 10 at SQL statement
2023-01-14 17:57:55.391 GMT [23172] STATEMENT:  SELECT * FROM client.open_savings_account(4);
2023-01-14 17:57:55.399 GMT [23172] ERROR:  column "credit_account_id" of relation "credit_account_application" does not exist at character 41
2023-01-14 17:57:55.399 GMT [23172] QUERY:  INSERT INTO credit_account_application (credit_account_id, application_status) VALUES (credit_account_number, 'PENDING')
2023-01-14 17:57:55.399 GMT [23172] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 11 at SQL statement
2023-01-14 17:57:55.399 GMT [23172] STATEMENT:  SELECT * FROM client.open_credit_account(1);
2023-01-14 17:57:55.400 GMT [23172] ERROR:  column "credit_account_id" of relation "credit_account_application" does not exist at character 41
2023-01-14 17:57:55.400 GMT [23172] QUERY:  INSERT INTO credit_account_application (credit_account_id, application_status) VALUES (credit_account_number, 'PENDING')
2023-01-14 17:57:55.400 GMT [23172] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 11 at SQL statement
2023-01-14 17:57:55.400 GMT [23172] STATEMENT:  SELECT * FROM client.open_credit_account(2);
2023-01-14 17:57:55.401 GMT [23172] ERROR:  column "credit_account_id" of relation "credit_account_application" does not exist at character 41
2023-01-14 17:57:55.401 GMT [23172] QUERY:  INSERT INTO credit_account_application (credit_account_id, application_status) VALUES (credit_account_number, 'PENDING')
2023-01-14 17:57:55.401 GMT [23172] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 11 at SQL statement
2023-01-14 17:57:55.401 GMT [23172] STATEMENT:  SELECT * FROM client.open_credit_account(3);
2023-01-14 17:57:55.401 GMT [23172] ERROR:  column "credit_account_id" of relation "credit_account_application" does not exist at character 41
2023-01-14 17:57:55.401 GMT [23172] QUERY:  INSERT INTO credit_account_application (credit_account_id, application_status) VALUES (credit_account_number, 'PENDING')
2023-01-14 17:57:55.401 GMT [23172] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 11 at SQL statement
2023-01-14 17:57:55.401 GMT [23172] STATEMENT:  SELECT * FROM client.open_credit_account(4);
2023-01-14 17:59:11.313 GMT [23137] LOG:  received fast shutdown request
2023-01-14 17:59:11.316 GMT [23137] LOG:  aborting any active transactions
2023-01-14 17:59:11.319 GMT [23137] LOG:  background worker "logical replication launcher" (PID 23144) exited with exit code 1
2023-01-14 17:59:11.323 GMT [23139] LOG:  shutting down
2023-01-14 17:59:11.372 GMT [23137] LOG:  database system is shut down
2023-01-14 17:59:12.819 GMT [23496] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-14 17:59:12.820 GMT [23496] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-14 17:59:12.821 GMT [23496] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-14 17:59:12.827 GMT [23497] LOG:  database system was shut down at 2023-01-14 17:59:12 GMT
2023-01-14 17:59:12.833 GMT [23496] LOG:  database system is ready to accept connections
2023-01-14 17:59:13.708 GMT [23532] ERROR:  syntax error at or near "SELECT" at character 468
2023-01-14 17:59:13.708 GMT [23532] STATEMENT:  CREATE OR REPLACE FUNCTION client.get_or_create_statement(account_identifier INT, account_number INT)
	RETURNS INT AS $$
	DECLARE statement_id BOOLEAN;
	BEGIN
	    CASE WHEN EXISTS (SELECT * FROM client.debit_accounts WHERE account_id = account_identifier AND account_number = account_number) THEN
	        IF EXISTS (SELECT * FROM debit_statement WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date) THEN
	            return SELECT id INTO statement_id FROM debit_account WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date;
	        ELSE 
	            INSERT INTO debit_statement (account_number, starting_date, end_date, amount) VALUES (account_number, now()::date, now()::date + 30, 0);
	            return SELECT id INTO statement_id FROM debit_account WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date;
	        END IF;
	    WHEN EXISTS (SELECT * FROM client.credit_accounts WHERE account_id = account_identifier AND account_number = account_number) THEN
	        IF EXISTS (SELECT * FROM credit_statement WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date) THEN
	            return SELECT id INTO statement_id FROM credit_account WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date;
	        ELSE 
	            INSERT INTO credit_statement (account_number, starting_date, end_date, amount) VALUES (account_number, now()::date, now()::date + 30, 0);
	            return SELECT id INTO statement_id FROM credit_account WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date;
	        END IF;
	    WHEN EXISTS (SELECT * FROM client.savings_accounts WHERE account_id = account_identifier AND account_number = account_number) THEN
	        IF EXISTS (SELECT * FROM savings_statement WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date) THEN
	            return SELECT id INTO statement_id FROM savings_account WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date;
	        ELSE 
	            INSERT INTO savings_statement (account_number, starting_date, end_date, amount) VALUES (account_number, now()::date, now()::date + 30, 0);
	            return SELECT id INTO statement_id FROM savings_account WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date;
	        END IF;
	    END CASE;
	END;
	$$ LANGUAGE plpgsql;
2023-01-14 17:59:13.712 GMT [23532] ERROR:  syntax error at or near ";" at character 941
2023-01-14 17:59:13.712 GMT [23532] STATEMENT:  CREATE OR REPLACE FUNCTION client.initiate_transfer(account_identifier INT, account_number INT, transfer_amount NUMERIC, transfer_account_number INT, transfer_account_sort_code TEXT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE internal_account_id INT;
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Initiated transfer', CURRENT_DATE);
	
	    SELECT account_id INTO internal_account_id FROM client.accounts
	    WHERE account_number = transfer_account_number AND sort_code = transfer_account_sort_code;
	
	    IF internal_account_id IS NULL THEN
	       RAISE NOTICE 'EXTERNAL TRANSFER TO ACCOUNT %', transfer_account_number;
	       
	    ELSE
	        RAISE NOTICE 'INTERNAL TRANSFER TO ACCOUNT %', transfer_account_number;
	        SELECT * FROM client.place_transaction_into_account(account_identifier, account_number, transfer_account_number, transfer_amount) INTO passed;
	
	END;
	$$ LANGUAGE plpgsql;
2023-01-14 17:59:13.766 GMT [23532] ERROR:  column "credit_account_id" of relation "credit_account_application" does not exist at character 41
2023-01-14 17:59:13.766 GMT [23532] QUERY:  INSERT INTO credit_account_application (credit_account_id, application_status) VALUES (credit_account_number, 'PENDING')
2023-01-14 17:59:13.766 GMT [23532] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 11 at SQL statement
2023-01-14 17:59:13.766 GMT [23532] STATEMENT:  SELECT * FROM client.open_credit_account(1);
2023-01-14 17:59:13.767 GMT [23532] ERROR:  column "credit_account_id" of relation "credit_account_application" does not exist at character 41
2023-01-14 17:59:13.767 GMT [23532] QUERY:  INSERT INTO credit_account_application (credit_account_id, application_status) VALUES (credit_account_number, 'PENDING')
2023-01-14 17:59:13.767 GMT [23532] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 11 at SQL statement
2023-01-14 17:59:13.767 GMT [23532] STATEMENT:  SELECT * FROM client.open_credit_account(2);
2023-01-14 17:59:13.769 GMT [23532] ERROR:  column "credit_account_id" of relation "credit_account_application" does not exist at character 41
2023-01-14 17:59:13.769 GMT [23532] QUERY:  INSERT INTO credit_account_application (credit_account_id, application_status) VALUES (credit_account_number, 'PENDING')
2023-01-14 17:59:13.769 GMT [23532] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 11 at SQL statement
2023-01-14 17:59:13.769 GMT [23532] STATEMENT:  SELECT * FROM client.open_credit_account(3);
2023-01-14 17:59:13.769 GMT [23532] ERROR:  column "credit_account_id" of relation "credit_account_application" does not exist at character 41
2023-01-14 17:59:13.769 GMT [23532] QUERY:  INSERT INTO credit_account_application (credit_account_id, application_status) VALUES (credit_account_number, 'PENDING')
2023-01-14 17:59:13.769 GMT [23532] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 11 at SQL statement
2023-01-14 17:59:13.769 GMT [23532] STATEMENT:  SELECT * FROM client.open_credit_account(4);
2023-01-14 18:00:03.661 GMT [23496] LOG:  received fast shutdown request
2023-01-14 18:00:03.663 GMT [23496] LOG:  aborting any active transactions
2023-01-14 18:00:03.667 GMT [23496] LOG:  background worker "logical replication launcher" (PID 23503) exited with exit code 1
2023-01-14 18:00:03.667 GMT [23498] LOG:  shutting down
2023-01-14 18:00:03.719 GMT [23496] LOG:  database system is shut down
2023-01-14 18:00:04.908 GMT [23761] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-14 18:00:04.909 GMT [23761] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-14 18:00:04.910 GMT [23761] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-14 18:00:04.914 GMT [23762] LOG:  database system was shut down at 2023-01-14 18:00:04 GMT
2023-01-14 18:00:04.920 GMT [23761] LOG:  database system is ready to accept connections
2023-01-14 18:00:05.745 GMT [23790] ERROR:  syntax error at or near "SELECT" at character 468
2023-01-14 18:00:05.745 GMT [23790] STATEMENT:  CREATE OR REPLACE FUNCTION client.get_or_create_statement(account_identifier INT, account_number INT)
	RETURNS INT AS $$
	DECLARE statement_id BOOLEAN;
	BEGIN
	    CASE WHEN EXISTS (SELECT * FROM client.debit_accounts WHERE account_id = account_identifier AND account_number = account_number) THEN
	        IF EXISTS (SELECT * FROM debit_statement WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date) THEN
	            return SELECT id INTO statement_id FROM debit_account WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date;
	        ELSE 
	            INSERT INTO debit_statement (account_number, starting_date, end_date, amount) VALUES (account_number, now()::date, now()::date + 30, 0);
	            return SELECT id INTO statement_id FROM debit_account WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date;
	        END IF;
	    WHEN EXISTS (SELECT * FROM client.credit_accounts WHERE account_id = account_identifier AND account_number = account_number) THEN
	        IF EXISTS (SELECT * FROM credit_statement WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date) THEN
	            return SELECT id INTO statement_id FROM credit_account WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date;
	        ELSE 
	            INSERT INTO credit_statement (account_number, starting_date, end_date, amount) VALUES (account_number, now()::date, now()::date + 30, 0);
	            return SELECT id INTO statement_id FROM credit_account WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date;
	        END IF;
	    WHEN EXISTS (SELECT * FROM client.savings_accounts WHERE account_id = account_identifier AND account_number = account_number) THEN
	        IF EXISTS (SELECT * FROM savings_statement WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date) THEN
	            return SELECT id INTO statement_id FROM savings_account WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date;
	        ELSE 
	            INSERT INTO savings_statement (account_number, starting_date, end_date, amount) VALUES (account_number, now()::date, now()::date + 30, 0);
	            return SELECT id INTO statement_id FROM savings_account WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date;
	        END IF;
	    END CASE;
	END;
	$$ LANGUAGE plpgsql;
2023-01-14 18:00:05.747 GMT [23790] ERROR:  syntax error at or near ";" at character 941
2023-01-14 18:00:05.747 GMT [23790] STATEMENT:  CREATE OR REPLACE FUNCTION client.initiate_transfer(account_identifier INT, account_number INT, transfer_amount NUMERIC, transfer_account_number INT, transfer_account_sort_code TEXT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE internal_account_id INT;
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Initiated transfer', CURRENT_DATE);
	
	    SELECT account_id INTO internal_account_id FROM client.accounts
	    WHERE account_number = transfer_account_number AND sort_code = transfer_account_sort_code;
	
	    IF internal_account_id IS NULL THEN
	       RAISE NOTICE 'EXTERNAL TRANSFER TO ACCOUNT %', transfer_account_number;
	       
	    ELSE
	        RAISE NOTICE 'INTERNAL TRANSFER TO ACCOUNT %', transfer_account_number;
	        SELECT * FROM client.place_transaction_into_account(account_identifier, account_number, transfer_account_number, transfer_amount) INTO passed;
	
	END;
	$$ LANGUAGE plpgsql;
2023-01-14 18:00:05.802 GMT [23790] ERROR:  column "credit_account_number" of relation "credit_account_application" does not exist at character 41
2023-01-14 18:00:05.802 GMT [23790] QUERY:  INSERT INTO credit_account_application (credit_account_number, application_status) VALUES (credit_account_number, 'PENDING')
2023-01-14 18:00:05.802 GMT [23790] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 11 at SQL statement
2023-01-14 18:00:05.802 GMT [23790] STATEMENT:  SELECT * FROM client.open_credit_account(1);
2023-01-14 18:00:05.803 GMT [23790] ERROR:  column "credit_account_number" of relation "credit_account_application" does not exist at character 41
2023-01-14 18:00:05.803 GMT [23790] QUERY:  INSERT INTO credit_account_application (credit_account_number, application_status) VALUES (credit_account_number, 'PENDING')
2023-01-14 18:00:05.803 GMT [23790] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 11 at SQL statement
2023-01-14 18:00:05.803 GMT [23790] STATEMENT:  SELECT * FROM client.open_credit_account(2);
2023-01-14 18:00:05.804 GMT [23790] ERROR:  column "credit_account_number" of relation "credit_account_application" does not exist at character 41
2023-01-14 18:00:05.804 GMT [23790] QUERY:  INSERT INTO credit_account_application (credit_account_number, application_status) VALUES (credit_account_number, 'PENDING')
2023-01-14 18:00:05.804 GMT [23790] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 11 at SQL statement
2023-01-14 18:00:05.804 GMT [23790] STATEMENT:  SELECT * FROM client.open_credit_account(3);
2023-01-14 18:00:05.805 GMT [23790] ERROR:  column "credit_account_number" of relation "credit_account_application" does not exist at character 41
2023-01-14 18:00:05.805 GMT [23790] QUERY:  INSERT INTO credit_account_application (credit_account_number, application_status) VALUES (credit_account_number, 'PENDING')
2023-01-14 18:00:05.805 GMT [23790] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 11 at SQL statement
2023-01-14 18:00:05.805 GMT [23790] STATEMENT:  SELECT * FROM client.open_credit_account(4);
2023-01-14 18:00:38.257 GMT [23761] LOG:  received fast shutdown request
2023-01-14 18:00:38.259 GMT [23761] LOG:  aborting any active transactions
2023-01-14 18:00:38.263 GMT [23761] LOG:  background worker "logical replication launcher" (PID 23768) exited with exit code 1
2023-01-14 18:00:38.267 GMT [23763] LOG:  shutting down
2023-01-14 18:00:38.314 GMT [23761] LOG:  database system is shut down
2023-01-14 18:00:39.750 GMT [23967] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-14 18:00:39.751 GMT [23967] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-14 18:00:39.755 GMT [23967] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-14 18:00:39.759 GMT [23968] LOG:  database system was shut down at 2023-01-14 18:00:39 GMT
2023-01-14 18:00:39.773 GMT [23967] LOG:  database system is ready to accept connections
2023-01-14 18:00:40.631 GMT [24006] ERROR:  syntax error at or near "SELECT" at character 468
2023-01-14 18:00:40.631 GMT [24006] STATEMENT:  CREATE OR REPLACE FUNCTION client.get_or_create_statement(account_identifier INT, account_number INT)
	RETURNS INT AS $$
	DECLARE statement_id BOOLEAN;
	BEGIN
	    CASE WHEN EXISTS (SELECT * FROM client.debit_accounts WHERE account_id = account_identifier AND account_number = account_number) THEN
	        IF EXISTS (SELECT * FROM debit_statement WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date) THEN
	            return SELECT id INTO statement_id FROM debit_account WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date;
	        ELSE 
	            INSERT INTO debit_statement (account_number, starting_date, end_date, amount) VALUES (account_number, now()::date, now()::date + 30, 0);
	            return SELECT id INTO statement_id FROM debit_account WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date;
	        END IF;
	    WHEN EXISTS (SELECT * FROM client.credit_accounts WHERE account_id = account_identifier AND account_number = account_number) THEN
	        IF EXISTS (SELECT * FROM credit_statement WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date) THEN
	            return SELECT id INTO statement_id FROM credit_account WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date;
	        ELSE 
	            INSERT INTO credit_statement (account_number, starting_date, end_date, amount) VALUES (account_number, now()::date, now()::date + 30, 0);
	            return SELECT id INTO statement_id FROM credit_account WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date;
	        END IF;
	    WHEN EXISTS (SELECT * FROM client.savings_accounts WHERE account_id = account_identifier AND account_number = account_number) THEN
	        IF EXISTS (SELECT * FROM savings_statement WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date) THEN
	            return SELECT id INTO statement_id FROM savings_account WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date;
	        ELSE 
	            INSERT INTO savings_statement (account_number, starting_date, end_date, amount) VALUES (account_number, now()::date, now()::date + 30, 0);
	            return SELECT id INTO statement_id FROM savings_account WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date;
	        END IF;
	    END CASE;
	END;
	$$ LANGUAGE plpgsql;
2023-01-14 18:00:40.636 GMT [24006] ERROR:  syntax error at or near ";" at character 941
2023-01-14 18:00:40.636 GMT [24006] STATEMENT:  CREATE OR REPLACE FUNCTION client.initiate_transfer(account_identifier INT, account_number INT, transfer_amount NUMERIC, transfer_account_number INT, transfer_account_sort_code TEXT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE internal_account_id INT;
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Initiated transfer', CURRENT_DATE);
	
	    SELECT account_id INTO internal_account_id FROM client.accounts
	    WHERE account_number = transfer_account_number AND sort_code = transfer_account_sort_code;
	
	    IF internal_account_id IS NULL THEN
	       RAISE NOTICE 'EXTERNAL TRANSFER TO ACCOUNT %', transfer_account_number;
	       
	    ELSE
	        RAISE NOTICE 'INTERNAL TRANSFER TO ACCOUNT %', transfer_account_number;
	        SELECT * FROM client.place_transaction_into_account(account_identifier, account_number, transfer_account_number, transfer_amount) INTO passed;
	
	END;
	$$ LANGUAGE plpgsql;
2023-01-14 18:00:40.700 GMT [24006] ERROR:  control reached end of function without RETURN
2023-01-14 18:00:40.700 GMT [24006] CONTEXT:  PL/pgSQL function open_credit_account(integer)
2023-01-14 18:00:40.700 GMT [24006] STATEMENT:  SELECT * FROM client.open_credit_account(1);
2023-01-14 18:00:40.702 GMT [24006] ERROR:  control reached end of function without RETURN
2023-01-14 18:00:40.702 GMT [24006] CONTEXT:  PL/pgSQL function open_credit_account(integer)
2023-01-14 18:00:40.702 GMT [24006] STATEMENT:  SELECT * FROM client.open_credit_account(2);
2023-01-14 18:00:40.703 GMT [24006] ERROR:  control reached end of function without RETURN
2023-01-14 18:00:40.703 GMT [24006] CONTEXT:  PL/pgSQL function open_credit_account(integer)
2023-01-14 18:00:40.703 GMT [24006] STATEMENT:  SELECT * FROM client.open_credit_account(3);
2023-01-14 18:00:40.705 GMT [24006] ERROR:  control reached end of function without RETURN
2023-01-14 18:00:40.705 GMT [24006] CONTEXT:  PL/pgSQL function open_credit_account(integer)
2023-01-14 18:00:40.705 GMT [24006] STATEMENT:  SELECT * FROM client.open_credit_account(4);
2023-01-14 18:01:21.524 GMT [23967] LOG:  received fast shutdown request
2023-01-14 18:01:21.526 GMT [23967] LOG:  aborting any active transactions
2023-01-14 18:01:21.529 GMT [23967] LOG:  background worker "logical replication launcher" (PID 23974) exited with exit code 1
2023-01-14 18:01:21.534 GMT [23969] LOG:  shutting down
2023-01-14 18:01:21.586 GMT [23967] LOG:  database system is shut down
2023-01-14 18:01:22.870 GMT [24263] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-14 18:01:22.871 GMT [24263] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-14 18:01:22.872 GMT [24263] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-14 18:01:22.881 GMT [24264] LOG:  database system was shut down at 2023-01-14 18:01:22 GMT
2023-01-14 18:01:22.888 GMT [24263] LOG:  database system is ready to accept connections
2023-01-14 18:01:23.674 GMT [24289] ERROR:  syntax error at or near "SELECT" at character 468
2023-01-14 18:01:23.674 GMT [24289] STATEMENT:  CREATE OR REPLACE FUNCTION client.get_or_create_statement(account_identifier INT, account_number INT)
	RETURNS INT AS $$
	DECLARE statement_id BOOLEAN;
	BEGIN
	    CASE WHEN EXISTS (SELECT * FROM client.debit_accounts WHERE account_id = account_identifier AND account_number = account_number) THEN
	        IF EXISTS (SELECT * FROM debit_statement WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date) THEN
	            return SELECT id INTO statement_id FROM debit_account WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date;
	        ELSE 
	            INSERT INTO debit_statement (account_number, starting_date, end_date, amount) VALUES (account_number, now()::date, now()::date + 30, 0);
	            return SELECT id INTO statement_id FROM debit_account WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date;
	        END IF;
	    WHEN EXISTS (SELECT * FROM client.credit_accounts WHERE account_id = account_identifier AND account_number = account_number) THEN
	        IF EXISTS (SELECT * FROM credit_statement WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date) THEN
	            return SELECT id INTO statement_id FROM credit_account WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date;
	        ELSE 
	            INSERT INTO credit_statement (account_number, starting_date, end_date, amount) VALUES (account_number, now()::date, now()::date + 30, 0);
	            return SELECT id INTO statement_id FROM credit_account WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date;
	        END IF;
	    WHEN EXISTS (SELECT * FROM client.savings_accounts WHERE account_id = account_identifier AND account_number = account_number) THEN
	        IF EXISTS (SELECT * FROM savings_statement WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date) THEN
	            return SELECT id INTO statement_id FROM savings_account WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date;
	        ELSE 
	            INSERT INTO savings_statement (account_number, starting_date, end_date, amount) VALUES (account_number, now()::date, now()::date + 30, 0);
	            return SELECT id INTO statement_id FROM savings_account WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date;
	        END IF;
	    END CASE;
	END;
	$$ LANGUAGE plpgsql;
2023-01-14 18:01:23.676 GMT [24289] ERROR:  syntax error at or near ";" at character 941
2023-01-14 18:01:23.676 GMT [24289] STATEMENT:  CREATE OR REPLACE FUNCTION client.initiate_transfer(account_identifier INT, account_number INT, transfer_amount NUMERIC, transfer_account_number INT, transfer_account_sort_code TEXT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE internal_account_id INT;
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Initiated transfer', CURRENT_DATE);
	
	    SELECT account_id INTO internal_account_id FROM client.accounts
	    WHERE account_number = transfer_account_number AND sort_code = transfer_account_sort_code;
	
	    IF internal_account_id IS NULL THEN
	       RAISE NOTICE 'EXTERNAL TRANSFER TO ACCOUNT %', transfer_account_number;
	       
	    ELSE
	        RAISE NOTICE 'INTERNAL TRANSFER TO ACCOUNT %', transfer_account_number;
	        SELECT * FROM client.place_transaction_into_account(account_identifier, account_number, transfer_account_number, transfer_amount) INTO passed;
	
	END;
	$$ LANGUAGE plpgsql;
2023-01-14 18:01:46.723 GMT [24263] LOG:  received fast shutdown request
2023-01-14 18:01:46.725 GMT [24263] LOG:  aborting any active transactions
2023-01-14 18:01:46.734 GMT [24263] LOG:  background worker "logical replication launcher" (PID 24270) exited with exit code 1
2023-01-14 18:01:46.734 GMT [24265] LOG:  shutting down
2023-01-14 18:01:46.795 GMT [24263] LOG:  database system is shut down
2023-01-14 18:01:48.221 GMT [24451] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-14 18:01:48.221 GMT [24451] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-14 18:01:48.223 GMT [24451] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-14 18:01:48.227 GMT [24452] LOG:  database system was shut down at 2023-01-14 18:01:47 GMT
2023-01-14 18:01:48.233 GMT [24451] LOG:  database system is ready to accept connections
2023-01-14 18:01:49.115 GMT [24487] ERROR:  syntax error at or near "SELECT" at character 468
2023-01-14 18:01:49.115 GMT [24487] STATEMENT:  CREATE OR REPLACE FUNCTION client.get_or_create_statement(account_identifier INT, account_number INT)
	RETURNS INT AS $$
	DECLARE statement_id BOOLEAN;
	BEGIN
	    CASE WHEN EXISTS (SELECT * FROM client.debit_accounts WHERE account_id = account_identifier AND account_number = account_number) THEN
	        IF EXISTS (SELECT * FROM debit_statement WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date) THEN
	            return SELECT id INTO statement_id FROM debit_account WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date;
	        ELSE 
	            INSERT INTO debit_statement (account_number, starting_date, end_date, amount) VALUES (account_number, now()::date, now()::date + 30, 0);
	            return SELECT id INTO statement_id FROM debit_account WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date;
	        END IF;
	    WHEN EXISTS (SELECT * FROM client.credit_accounts WHERE account_id = account_identifier AND account_number = account_number) THEN
	        IF EXISTS (SELECT * FROM credit_statement WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date) THEN
	            return SELECT id INTO statement_id FROM credit_account WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date;
	        ELSE 
	            INSERT INTO credit_statement (account_number, starting_date, end_date, amount) VALUES (account_number, now()::date, now()::date + 30, 0);
	            return SELECT id INTO statement_id FROM credit_account WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date;
	        END IF;
	    WHEN EXISTS (SELECT * FROM client.savings_accounts WHERE account_id = account_identifier AND account_number = account_number) THEN
	        IF EXISTS (SELECT * FROM savings_statement WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date) THEN
	            return SELECT id INTO statement_id FROM savings_account WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date;
	        ELSE 
	            INSERT INTO savings_statement (account_number, starting_date, end_date, amount) VALUES (account_number, now()::date, now()::date + 30, 0);
	            return SELECT id INTO statement_id FROM savings_account WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date;
	        END IF;
	    END CASE;
	END;
	$$ LANGUAGE plpgsql;
2023-01-14 18:01:49.118 GMT [24487] ERROR:  syntax error at or near ";" at character 941
2023-01-14 18:01:49.118 GMT [24487] STATEMENT:  CREATE OR REPLACE FUNCTION client.initiate_transfer(account_identifier INT, account_number INT, transfer_amount NUMERIC, transfer_account_number INT, transfer_account_sort_code TEXT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE internal_account_id INT;
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Initiated transfer', CURRENT_DATE);
	
	    SELECT account_id INTO internal_account_id FROM client.accounts
	    WHERE account_number = transfer_account_number AND sort_code = transfer_account_sort_code;
	
	    IF internal_account_id IS NULL THEN
	       RAISE NOTICE 'EXTERNAL TRANSFER TO ACCOUNT %', transfer_account_number;
	       
	    ELSE
	        RAISE NOTICE 'INTERNAL TRANSFER TO ACCOUNT %', transfer_account_number;
	        SELECT * FROM client.place_transaction_into_account(account_identifier, account_number, transfer_account_number, transfer_amount) INTO passed;
	
	END;
	$$ LANGUAGE plpgsql;
2023-01-14 18:02:08.141 GMT [24451] LOG:  received fast shutdown request
2023-01-14 18:02:08.143 GMT [24451] LOG:  aborting any active transactions
2023-01-14 18:02:08.145 GMT [24451] LOG:  background worker "logical replication launcher" (PID 24458) exited with exit code 1
2023-01-14 18:02:08.150 GMT [24453] LOG:  shutting down
2023-01-14 18:02:08.198 GMT [24451] LOG:  database system is shut down
2023-01-14 18:02:09.466 GMT [24637] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-14 18:02:09.466 GMT [24637] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-14 18:02:09.468 GMT [24637] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-14 18:02:09.474 GMT [24638] LOG:  database system was shut down at 2023-01-14 18:02:09 GMT
2023-01-14 18:02:09.480 GMT [24637] LOG:  database system is ready to accept connections
2023-01-14 18:02:10.343 GMT [24666] ERROR:  syntax error at or near "SELECT" at character 468
2023-01-14 18:02:10.343 GMT [24666] STATEMENT:  CREATE OR REPLACE FUNCTION client.get_or_create_statement(account_identifier INT, account_number INT)
	RETURNS INT AS $$
	DECLARE statement_id BOOLEAN;
	BEGIN
	    CASE WHEN EXISTS (SELECT * FROM client.debit_accounts WHERE account_id = account_identifier AND account_number = account_number) THEN
	        IF EXISTS (SELECT * FROM debit_statement WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date) THEN
	            return SELECT id INTO statement_id FROM debit_account WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date;
	        ELSE 
	            INSERT INTO debit_statement (account_number, starting_date, end_date, amount) VALUES (account_number, now()::date, now()::date + 30, 0);
	            return SELECT id INTO statement_id FROM debit_account WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date;
	        END IF;
	    WHEN EXISTS (SELECT * FROM client.credit_accounts WHERE account_id = account_identifier AND account_number = account_number) THEN
	        IF EXISTS (SELECT * FROM credit_statement WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date) THEN
	            return SELECT id INTO statement_id FROM credit_account WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date;
	        ELSE 
	            INSERT INTO credit_statement (account_number, starting_date, end_date, amount) VALUES (account_number, now()::date, now()::date + 30, 0);
	            return SELECT id INTO statement_id FROM credit_account WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date;
	        END IF;
	    WHEN EXISTS (SELECT * FROM client.savings_accounts WHERE account_id = account_identifier AND account_number = account_number) THEN
	        IF EXISTS (SELECT * FROM savings_statement WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date) THEN
	            return SELECT id INTO statement_id FROM savings_account WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date;
	        ELSE 
	            INSERT INTO savings_statement (account_number, starting_date, end_date, amount) VALUES (account_number, now()::date, now()::date + 30, 0);
	            return SELECT id INTO statement_id FROM savings_account WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date;
	        END IF;
	    END CASE;
	END;
	$$ LANGUAGE plpgsql;
2023-01-14 18:02:10.346 GMT [24666] ERROR:  syntax error at or near ";" at character 941
2023-01-14 18:02:10.346 GMT [24666] STATEMENT:  CREATE OR REPLACE FUNCTION client.initiate_transfer(account_identifier INT, account_number INT, transfer_amount NUMERIC, transfer_account_number INT, transfer_account_sort_code TEXT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE internal_account_id INT;
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Initiated transfer', CURRENT_DATE);
	
	    SELECT account_id INTO internal_account_id FROM client.accounts
	    WHERE account_number = transfer_account_number AND sort_code = transfer_account_sort_code;
	
	    IF internal_account_id IS NULL THEN
	       RAISE NOTICE 'EXTERNAL TRANSFER TO ACCOUNT %', transfer_account_number;
	       
	    ELSE
	        RAISE NOTICE 'INTERNAL TRANSFER TO ACCOUNT %', transfer_account_number;
	        SELECT * FROM client.place_transaction_into_account(account_identifier, account_number, transfer_account_number, transfer_amount) INTO passed;
	
	END;
	$$ LANGUAGE plpgsql;
2023-01-14 18:03:06.118 GMT [24637] LOG:  received fast shutdown request
2023-01-14 18:03:06.122 GMT [24637] LOG:  aborting any active transactions
2023-01-14 18:03:06.126 GMT [24637] LOG:  background worker "logical replication launcher" (PID 24644) exited with exit code 1
2023-01-14 18:03:06.127 GMT [24639] LOG:  shutting down
2023-01-14 18:03:06.173 GMT [24637] LOG:  database system is shut down
2023-01-14 18:03:07.884 GMT [24924] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-14 18:03:07.885 GMT [24924] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-14 18:03:07.887 GMT [24924] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-14 18:03:07.891 GMT [24925] LOG:  database system was shut down at 2023-01-14 18:03:07 GMT
2023-01-14 18:03:07.897 GMT [24924] LOG:  database system is ready to accept connections
2023-01-14 18:03:08.763 GMT [24963] ERROR:  syntax error at or near "SELECT" at character 468
2023-01-14 18:03:08.763 GMT [24963] STATEMENT:  CREATE OR REPLACE FUNCTION client.get_or_create_statement(account_identifier INT, account_number INT)
	RETURNS INT AS $$
	DECLARE statement_id BOOLEAN;
	BEGIN
	    CASE WHEN EXISTS (SELECT * FROM client.debit_accounts WHERE account_id = account_identifier AND account_number = account_number) THEN
	        IF EXISTS (SELECT * FROM debit_statement WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date) THEN
	            return SELECT id INTO statement_id FROM debit_account WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date;
	        ELSE 
	            INSERT INTO debit_statement (account_number, starting_date, end_date, amount) VALUES (account_number, now()::date, now()::date + 30, 0);
	            return SELECT id INTO statement_id FROM debit_account WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date;
	        END IF;
	    WHEN EXISTS (SELECT * FROM client.credit_accounts WHERE account_id = account_identifier AND account_number = account_number) THEN
	        IF EXISTS (SELECT * FROM credit_statement WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date) THEN
	            return SELECT id INTO statement_id FROM credit_account WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date;
	        ELSE 
	            INSERT INTO credit_statement (account_number, starting_date, end_date, amount) VALUES (account_number, now()::date, now()::date + 30, 0);
	            return SELECT id INTO statement_id FROM credit_account WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date;
	        END IF;
	    WHEN EXISTS (SELECT * FROM client.savings_accounts WHERE account_id = account_identifier AND account_number = account_number) THEN
	        IF EXISTS (SELECT * FROM savings_statement WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date) THEN
	            return SELECT id INTO statement_id FROM savings_account WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date;
	        ELSE 
	            INSERT INTO savings_statement (account_number, starting_date, end_date, amount) VALUES (account_number, now()::date, now()::date + 30, 0);
	            return SELECT id INTO statement_id FROM savings_account WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date;
	        END IF;
	    END CASE;
	END;
	$$ LANGUAGE plpgsql;
2023-01-14 18:03:08.769 GMT [24963] ERROR:  syntax error at or near ";" at character 941
2023-01-14 18:03:08.769 GMT [24963] STATEMENT:  CREATE OR REPLACE FUNCTION client.initiate_transfer(account_identifier INT, account_number INT, transfer_amount NUMERIC, transfer_account_number INT, transfer_account_sort_code TEXT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE internal_account_id INT;
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Initiated transfer', CURRENT_DATE);
	
	    SELECT account_id INTO internal_account_id FROM client.accounts
	    WHERE account_number = transfer_account_number AND sort_code = transfer_account_sort_code;
	
	    IF internal_account_id IS NULL THEN
	       RAISE NOTICE 'EXTERNAL TRANSFER TO ACCOUNT %', transfer_account_number;
	       
	    ELSE
	        RAISE NOTICE 'INTERNAL TRANSFER TO ACCOUNT %', transfer_account_number;
	        SELECT * FROM client.place_transaction_into_account(account_identifier, account_number, transfer_account_number, transfer_amount) INTO passed;
	
	END;
	$$ LANGUAGE plpgsql;
2023-01-14 18:06:12.752 GMT [24924] LOG:  received fast shutdown request
2023-01-14 18:06:12.755 GMT [24924] LOG:  aborting any active transactions
2023-01-14 18:06:12.757 GMT [24924] LOG:  background worker "logical replication launcher" (PID 24931) exited with exit code 1
2023-01-14 18:06:12.761 GMT [24926] LOG:  shutting down
2023-01-14 18:06:12.813 GMT [24924] LOG:  database system is shut down
2023-01-14 18:06:14.501 GMT [25674] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-14 18:06:14.501 GMT [25674] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-14 18:06:14.503 GMT [25674] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-14 18:06:14.508 GMT [25675] LOG:  database system was shut down at 2023-01-14 18:06:14 GMT
2023-01-14 18:06:14.514 GMT [25674] LOG:  database system is ready to accept connections
2023-01-14 18:06:15.417 GMT [25710] ERROR:  syntax error at or near "SELECT" at character 468
2023-01-14 18:06:15.417 GMT [25710] STATEMENT:  CREATE OR REPLACE FUNCTION client.get_or_create_statement(account_identifier INT, account_number INT)
	RETURNS INT AS $$
	DECLARE statement_id BOOLEAN;
	BEGIN
	    CASE WHEN EXISTS (SELECT * FROM client.debit_accounts WHERE account_id = account_identifier AND account_number = account_number) THEN
	        IF EXISTS (SELECT * FROM debit_statement WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date) THEN
	            return SELECT id INTO statement_id FROM debit_account WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date;
	        ELSE 
	            INSERT INTO debit_statement (account_number, starting_date, end_date, amount) VALUES (account_number, now()::date, now()::date + 30, 0);
	            return SELECT id INTO statement_id FROM debit_account WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date;
	        END IF;
	    WHEN EXISTS (SELECT * FROM client.credit_accounts WHERE account_id = account_identifier AND account_number = account_number) THEN
	        IF EXISTS (SELECT * FROM credit_statement WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date) THEN
	            return SELECT id INTO statement_id FROM credit_account WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date;
	        ELSE 
	            INSERT INTO credit_statement (account_number, starting_date, end_date, amount) VALUES (account_number, now()::date, now()::date + 30, 0);
	            return SELECT id INTO statement_id FROM credit_account WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date;
	        END IF;
	    WHEN EXISTS (SELECT * FROM client.savings_accounts WHERE account_id = account_identifier AND account_number = account_number) THEN
	        IF EXISTS (SELECT * FROM savings_statement WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date) THEN
	            return SELECT id INTO statement_id FROM savings_account WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date;
	        ELSE 
	            INSERT INTO savings_statement (account_number, starting_date, end_date, amount) VALUES (account_number, now()::date, now()::date + 30, 0);
	            return SELECT id INTO statement_id FROM savings_account WHERE account_number = account_number AND starting_date <= now()::date AND end_date >= now()::date;
	        END IF;
	    END CASE;
	END;
	$$ LANGUAGE plpgsql;
2023-01-14 18:06:15.421 GMT [25710] ERROR:  syntax error at or near ";" at character 941
2023-01-14 18:06:15.421 GMT [25710] STATEMENT:  CREATE OR REPLACE FUNCTION client.initiate_transfer(account_identifier INT, account_number INT, transfer_amount NUMERIC, transfer_account_number INT, transfer_account_sort_code TEXT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE internal_account_id INT;
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Initiated transfer', CURRENT_DATE);
	
	    SELECT account_id INTO internal_account_id FROM client.accounts
	    WHERE account_number = transfer_account_number AND sort_code = transfer_account_sort_code;
	
	    IF internal_account_id IS NULL THEN
	       RAISE NOTICE 'EXTERNAL TRANSFER TO ACCOUNT %', transfer_account_number;
	       
	    ELSE
	        RAISE NOTICE 'INTERNAL TRANSFER TO ACCOUNT %', transfer_account_number;
	        SELECT * FROM client.place_transaction_into_account(account_identifier, account_number, transfer_account_number, transfer_amount) INTO passed;
	
	END;
	$$ LANGUAGE plpgsql;
2023-01-14 18:06:15.494 GMT [25710] ERROR:  function client.initiate_transfer(integer, integer, numeric, integer, integer) does not exist at character 15
2023-01-14 18:06:15.494 GMT [25710] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2023-01-14 18:06:15.494 GMT [25710] STATEMENT:  SELECT * FROM client.initiate_transfer(1, 10000000, 100.00, 10000001, 123456);
2023-01-14 18:09:39.523 GMT [25674] LOG:  received fast shutdown request
2023-01-14 18:09:39.525 GMT [25674] LOG:  aborting any active transactions
2023-01-14 18:09:39.529 GMT [25674] LOG:  background worker "logical replication launcher" (PID 25681) exited with exit code 1
2023-01-14 18:09:39.531 GMT [25676] LOG:  shutting down
2023-01-14 18:09:39.582 GMT [25674] LOG:  database system is shut down
2023-01-14 18:09:40.888 GMT [26413] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-14 18:09:40.889 GMT [26413] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-14 18:09:40.892 GMT [26413] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-14 18:09:40.900 GMT [26414] LOG:  database system was shut down at 2023-01-14 18:09:40 GMT
2023-01-14 18:09:40.906 GMT [26413] LOG:  database system is ready to accept connections
2023-01-14 18:09:41.800 GMT [26439] ERROR:  syntax error at or near ";" at character 941
2023-01-14 18:09:41.800 GMT [26439] STATEMENT:  CREATE OR REPLACE FUNCTION client.initiate_transfer(account_identifier INT, account_number INT, transfer_amount NUMERIC, transfer_account_number INT, transfer_account_sort_code TEXT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE internal_account_id INT;
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Initiated transfer', CURRENT_DATE);
	
	    SELECT account_id INTO internal_account_id FROM client.accounts
	    WHERE account_number = transfer_account_number AND sort_code = transfer_account_sort_code;
	
	    IF internal_account_id IS NULL THEN
	       RAISE NOTICE 'EXTERNAL TRANSFER TO ACCOUNT %', transfer_account_number;
	       
	    ELSE
	        RAISE NOTICE 'INTERNAL TRANSFER TO ACCOUNT %', transfer_account_number;
	        SELECT * FROM client.place_transaction_into_account(account_identifier, account_number, transfer_account_number, transfer_amount) INTO passed;
	
	END;
	$$ LANGUAGE plpgsql;
2023-01-14 18:09:41.876 GMT [26439] ERROR:  function client.initiate_transfer(integer, integer, numeric, integer, integer) does not exist at character 15
2023-01-14 18:09:41.876 GMT [26439] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2023-01-14 18:09:41.876 GMT [26439] STATEMENT:  SELECT * FROM client.initiate_transfer(1, 10000000, 100.00, 10000001, 123456);
2023-01-14 18:10:21.477 GMT [26413] LOG:  received fast shutdown request
2023-01-14 18:10:21.483 GMT [26413] LOG:  aborting any active transactions
2023-01-14 18:10:21.488 GMT [26413] LOG:  background worker "logical replication launcher" (PID 26420) exited with exit code 1
2023-01-14 18:10:21.488 GMT [26415] LOG:  shutting down
2023-01-14 18:10:21.542 GMT [26413] LOG:  database system is shut down
2023-01-14 18:10:22.738 GMT [26648] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-14 18:10:22.739 GMT [26648] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-14 18:10:22.740 GMT [26648] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-14 18:10:22.745 GMT [26649] LOG:  database system was shut down at 2023-01-14 18:10:22 GMT
2023-01-14 18:10:22.751 GMT [26648] LOG:  database system is ready to accept connections
2023-01-14 18:10:23.671 GMT [26677] ERROR:  function client.initiate_transfer(integer, integer, numeric, integer, integer) does not exist at character 15
2023-01-14 18:10:23.671 GMT [26677] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2023-01-14 18:10:23.671 GMT [26677] STATEMENT:  SELECT * FROM client.initiate_transfer(1, 10000000, 100.00, 10000001, 123456);
2023-01-14 18:10:56.578 GMT [26648] LOG:  received fast shutdown request
2023-01-14 18:10:56.580 GMT [26648] LOG:  aborting any active transactions
2023-01-14 18:10:56.585 GMT [26648] LOG:  background worker "logical replication launcher" (PID 26655) exited with exit code 1
2023-01-14 18:10:56.585 GMT [26650] LOG:  shutting down
2023-01-14 18:10:56.644 GMT [26648] LOG:  database system is shut down
2023-01-14 18:10:58.158 GMT [26888] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-14 18:10:58.158 GMT [26888] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-14 18:10:58.159 GMT [26888] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-14 18:10:58.163 GMT [26889] LOG:  database system was shut down at 2023-01-14 18:10:57 GMT
2023-01-14 18:10:58.169 GMT [26888] LOG:  database system is ready to accept connections
2023-01-14 18:10:59.085 GMT [26924] ERROR:  column reference "account_number" is ambiguous at character 75
2023-01-14 18:10:59.085 GMT [26924] DETAIL:  It could refer to either a PL/pgSQL variable or a table column.
2023-01-14 18:10:59.085 GMT [26924] QUERY:  SELECT account_id                          FROM client.accounts
	    WHERE account_number = transfer_account_number AND sort_code = transfer_account_sort_code
2023-01-14 18:10:59.085 GMT [26924] CONTEXT:  PL/pgSQL function client.initiate_transfer(integer,integer,numeric,integer,text) line 7 at SQL statement
2023-01-14 18:10:59.085 GMT [26924] STATEMENT:  SELECT * FROM client.initiate_transfer(1, 10000000, 100.00, 10000001, '123456');
2023-01-14 18:12:42.602 GMT [26888] LOG:  received fast shutdown request
2023-01-14 18:12:42.603 GMT [26888] LOG:  aborting any active transactions
2023-01-14 18:12:42.608 GMT [26888] LOG:  background worker "logical replication launcher" (PID 26895) exited with exit code 1
2023-01-14 18:12:42.608 GMT [26890] LOG:  shutting down
2023-01-14 18:12:42.656 GMT [26888] LOG:  database system is shut down
2023-01-14 18:12:43.842 GMT [27312] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-14 18:12:43.843 GMT [27312] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-14 18:12:43.844 GMT [27312] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-14 18:12:43.849 GMT [27313] LOG:  database system was shut down at 2023-01-14 18:12:43 GMT
2023-01-14 18:12:43.855 GMT [27312] LOG:  database system is ready to accept connections
2023-01-14 18:12:44.767 GMT [27341] ERROR:  operator does not exist: integer = text at character 130
2023-01-14 18:12:44.767 GMT [27341] HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
2023-01-14 18:12:44.767 GMT [27341] QUERY:  SELECT account_id                          FROM client.accounts
	    WHERE account_number = transfer_account_number AND sort_code = transfer_account_sort_code
2023-01-14 18:12:44.767 GMT [27341] CONTEXT:  PL/pgSQL function client.initiate_transfer(integer,integer,numeric,integer,text) line 7 at SQL statement
2023-01-14 18:12:44.767 GMT [27341] STATEMENT:  SELECT * FROM client.initiate_transfer(1, 10000000, 100.00, 10000001, '123456');
2023-01-14 18:15:39.761 GMT [27312] LOG:  received fast shutdown request
2023-01-14 18:15:39.763 GMT [27312] LOG:  aborting any active transactions
2023-01-14 18:15:39.765 GMT [27312] LOG:  background worker "logical replication launcher" (PID 27319) exited with exit code 1
2023-01-14 18:15:39.771 GMT [27314] LOG:  shutting down
2023-01-14 18:15:39.816 GMT [27312] LOG:  database system is shut down
2023-01-14 18:15:41.192 GMT [27962] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-14 18:15:41.192 GMT [27962] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-14 18:15:41.194 GMT [27962] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-14 18:15:41.199 GMT [27963] LOG:  database system was shut down at 2023-01-14 18:15:40 GMT
2023-01-14 18:15:41.205 GMT [27962] LOG:  database system is ready to accept connections
2023-01-14 18:15:42.140 GMT [27997] ERROR:  column "account_number" does not exist at character 73
2023-01-14 18:15:42.140 GMT [27997] QUERY:  SELECT * FROM client.place_transaction_into_account(account_identifier, account_number, transfer_account_number, transfer_amount)
2023-01-14 18:15:42.140 GMT [27997] CONTEXT:  PL/pgSQL function initiate_transfer(integer,integer,numeric,integer,integer) line 15 at SQL statement
2023-01-14 18:15:42.140 GMT [27997] STATEMENT:  SELECT * FROM client.initiate_transfer(1, 10000000, 100.00, 10000001, 123456);
2023-01-14 18:16:09.827 GMT [27962] LOG:  received fast shutdown request
2023-01-14 18:16:09.829 GMT [27962] LOG:  aborting any active transactions
2023-01-14 18:16:09.834 GMT [27962] LOG:  background worker "logical replication launcher" (PID 27969) exited with exit code 1
2023-01-14 18:16:09.834 GMT [27964] LOG:  shutting down
2023-01-14 18:16:09.886 GMT [27962] LOG:  database system is shut down
2023-01-14 18:16:11.014 GMT [28170] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-14 18:16:11.014 GMT [28170] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-14 18:16:11.015 GMT [28170] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-14 18:16:11.019 GMT [28171] LOG:  database system was shut down at 2023-01-14 18:16:10 GMT
2023-01-14 18:16:11.025 GMT [28170] LOG:  database system is ready to accept connections
2023-01-14 18:16:11.889 GMT [28199] ERROR:  column reference "account_number" is ambiguous at character 87
2023-01-14 18:16:11.889 GMT [28199] DETAIL:  It could refer to either a PL/pgSQL variable or a table column.
2023-01-14 18:16:11.889 GMT [28199] QUERY:  EXISTS (SELECT * FROM client.debit_accounts WHERE account_id = account_identifier AND account_number = account_number)
2023-01-14 18:16:11.889 GMT [28199] CONTEXT:  PL/pgSQL function place_transaction_into_account(integer,integer,integer,numeric) line 7 at CASE
	SQL statement "SELECT * FROM client.place_transaction_into_account(account_identifier, orig_account_number, transfer_account_number, transfer_amount)"
	PL/pgSQL function initiate_transfer(integer,integer,numeric,integer,integer) line 15 at SQL statement
2023-01-14 18:16:11.889 GMT [28199] STATEMENT:  SELECT * FROM client.initiate_transfer(1, 10000000, 100.00, 10000001, 123456);
2023-01-14 18:20:38.348 GMT [28170] LOG:  received fast shutdown request
2023-01-14 18:20:38.350 GMT [28170] LOG:  aborting any active transactions
2023-01-14 18:20:38.354 GMT [28170] LOG:  background worker "logical replication launcher" (PID 28177) exited with exit code 1
2023-01-14 18:20:38.354 GMT [28172] LOG:  shutting down
2023-01-14 18:20:38.406 GMT [28170] LOG:  database system is shut down
2023-01-14 18:20:39.640 GMT [29043] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-14 18:20:39.641 GMT [29043] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-14 18:20:39.643 GMT [29043] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-14 18:20:39.647 GMT [29044] LOG:  database system was shut down at 2023-01-14 18:20:39 GMT
2023-01-14 18:20:39.655 GMT [29043] LOG:  database system is ready to accept connections
2023-01-14 18:20:40.564 GMT [29072] ERROR:  column "balance" does not exist at character 46
2023-01-14 18:20:40.564 GMT [29072] QUERY:  UPDATE client.savings_accounts SET balance = balance + transaction_amount WHERE savings_accounts.account_number = orig_account_number
2023-01-14 18:20:40.564 GMT [29072] CONTEXT:  PL/pgSQL function place_transaction_into_account(integer,integer,integer,numeric) line 20 at SQL statement
	SQL statement "SELECT * FROM client.place_transaction_into_account(account_identifier, orig_account_number, transfer_account_number, transfer_amount)"
	PL/pgSQL function initiate_transfer(integer,integer,numeric,integer,integer) line 15 at SQL statement
2023-01-14 18:20:40.564 GMT [29072] STATEMENT:  SELECT * FROM client.initiate_transfer(1, 10000000, 100.00, 10000001, 123456);
2023-01-14 18:22:55.075 GMT [29043] LOG:  received fast shutdown request
2023-01-14 18:22:55.077 GMT [29043] LOG:  aborting any active transactions
2023-01-14 18:22:55.081 GMT [29043] LOG:  background worker "logical replication launcher" (PID 29050) exited with exit code 1
2023-01-14 18:22:55.084 GMT [29045] LOG:  shutting down
2023-01-14 18:22:55.130 GMT [29043] LOG:  database system is shut down
2023-01-14 18:22:56.250 GMT [29628] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-14 18:22:56.250 GMT [29628] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-14 18:22:56.252 GMT [29628] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-14 18:22:56.257 GMT [29629] LOG:  database system was shut down at 2023-01-14 18:22:56 GMT
2023-01-14 18:22:56.262 GMT [29628] LOG:  database system is ready to accept connections
2023-01-14 18:22:57.147 GMT [29657] ERROR:  missing FROM-clause entry for table "savings_accounts" at character 89
2023-01-14 18:22:57.147 GMT [29657] QUERY:  UPDATE savings_account SET current_balance = current_balance + transaction_amount WHERE savings_accounts.account_number = orig_account_number
2023-01-14 18:22:57.147 GMT [29657] CONTEXT:  PL/pgSQL function place_transaction_into_account(integer,integer,integer,numeric) line 20 at SQL statement
	SQL statement "SELECT * FROM client.place_transaction_into_account(account_identifier, orig_account_number, transfer_account_number, transfer_amount)"
	PL/pgSQL function initiate_transfer(integer,integer,numeric,integer,integer) line 15 at SQL statement
2023-01-14 18:22:57.147 GMT [29657] STATEMENT:  SELECT * FROM client.initiate_transfer(1, 10000000, 100.00, 10000001, 123456);
2023-01-14 18:23:54.180 GMT [29628] LOG:  received fast shutdown request
2023-01-14 18:23:54.182 GMT [29628] LOG:  aborting any active transactions
2023-01-14 18:23:54.188 GMT [29628] LOG:  background worker "logical replication launcher" (PID 29635) exited with exit code 1
2023-01-14 18:23:54.190 GMT [29630] LOG:  shutting down
2023-01-14 18:23:54.236 GMT [29628] LOG:  database system is shut down
2023-01-14 18:23:55.473 GMT [29908] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-14 18:23:55.473 GMT [29908] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-14 18:23:55.474 GMT [29908] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-14 18:23:55.479 GMT [29909] LOG:  database system was shut down at 2023-01-14 18:23:55 GMT
2023-01-14 18:23:55.484 GMT [29908] LOG:  database system is ready to accept connections
2023-01-14 18:23:56.440 GMT [29937] ERROR:  column reference "account_number" is ambiguous at character 87
2023-01-14 18:23:56.440 GMT [29937] DETAIL:  It could refer to either a PL/pgSQL variable or a table column.
2023-01-14 18:23:56.440 GMT [29937] QUERY:  EXISTS (SELECT * FROM client.debit_accounts WHERE account_id = account_identifier AND account_number = account_number)
2023-01-14 18:23:56.440 GMT [29937] CONTEXT:  PL/pgSQL function get_or_create_statement(integer,integer) line 4 at CASE
	SQL statement "SELECT * FROM client.get_or_create_statement(account_identifier, orig_account_number)"
	PL/pgSQL function place_transaction_into_account(integer,integer,integer,numeric) line 21 at SQL statement
	SQL statement "SELECT * FROM client.place_transaction_into_account(account_identifier, orig_account_number, transfer_account_number, transfer_amount)"
	PL/pgSQL function initiate_transfer(integer,integer,numeric,integer,integer) line 15 at SQL statement
2023-01-14 18:23:56.440 GMT [29937] STATEMENT:  SELECT * FROM client.initiate_transfer(1, 10000000, 100.00, 10000001, 123456);
2023-01-14 18:28:10.538 GMT [29908] LOG:  received fast shutdown request
2023-01-14 18:28:10.540 GMT [29908] LOG:  aborting any active transactions
2023-01-14 18:28:10.542 GMT [29908] LOG:  background worker "logical replication launcher" (PID 29915) exited with exit code 1
2023-01-14 18:28:10.545 GMT [29910] LOG:  shutting down
2023-01-14 18:28:10.595 GMT [29908] LOG:  database system is shut down
2023-01-14 18:28:11.747 GMT [30845] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-14 18:28:11.747 GMT [30845] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-14 18:28:11.749 GMT [30845] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-14 18:28:11.753 GMT [30846] LOG:  database system was shut down at 2023-01-14 18:28:11 GMT
2023-01-14 18:28:11.758 GMT [30845] LOG:  database system is ready to accept connections
2023-01-14 18:28:12.676 GMT [30871] ERROR:  column "id" does not exist at character 8
2023-01-14 18:28:12.676 GMT [30871] QUERY:  SELECT id                   FROM savings_account WHERE account_number = orig_account_number AND starting_date <= now()::date AND end_date >= now()::date
2023-01-14 18:28:12.676 GMT [30871] CONTEXT:  PL/pgSQL function get_or_create_statement(integer,integer) line 24 at SQL statement
	SQL statement "SELECT * FROM client.get_or_create_statement(account_identifier, orig_account_number)"
	PL/pgSQL function place_transaction_into_account(integer,integer,integer,numeric) line 21 at SQL statement
	SQL statement "SELECT * FROM client.place_transaction_into_account(account_identifier, orig_account_number, transfer_account_number, transfer_amount)"
	PL/pgSQL function initiate_transfer(integer,integer,numeric,integer,integer) line 15 at SQL statement
2023-01-14 18:28:12.676 GMT [30871] STATEMENT:  SELECT * FROM client.initiate_transfer(1, 10000000, 100.00, 10000001, 123456);
2023-01-14 18:29:41.759 GMT [30845] LOG:  received fast shutdown request
2023-01-14 18:29:41.762 GMT [30845] LOG:  aborting any active transactions
2023-01-14 18:29:41.768 GMT [30845] LOG:  background worker "logical replication launcher" (PID 30852) exited with exit code 1
2023-01-14 18:29:41.769 GMT [30847] LOG:  shutting down
2023-01-14 18:29:41.816 GMT [30845] LOG:  database system is shut down
2023-01-14 18:29:43.171 GMT [31219] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-14 18:29:43.171 GMT [31219] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-14 18:29:43.173 GMT [31219] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-14 18:29:43.179 GMT [31223] LOG:  database system was shut down at 2023-01-14 18:29:42 GMT
2023-01-14 18:29:43.189 GMT [31219] LOG:  database system is ready to accept connections
2023-01-14 18:29:44.106 GMT [31248] ERROR:  invalid input syntax for type integer: "t"
2023-01-14 18:29:44.106 GMT [31248] CONTEXT:  PL/pgSQL function get_or_create_statement(integer,integer) while casting return value to function's return type
	SQL statement "SELECT * FROM client.get_or_create_statement(account_identifier, orig_account_number)"
	PL/pgSQL function place_transaction_into_account(integer,integer,integer,numeric) line 21 at SQL statement
	SQL statement "SELECT * FROM client.place_transaction_into_account(account_identifier, orig_account_number, transfer_account_number, transfer_amount)"
	PL/pgSQL function initiate_transfer(integer,integer,numeric,integer,integer) line 15 at SQL statement
2023-01-14 18:29:44.106 GMT [31248] STATEMENT:  SELECT * FROM client.initiate_transfer(1, 10000000, 100.00, 10000001, 123456);
2023-01-14 18:30:50.786 GMT [31219] LOG:  received fast shutdown request
2023-01-14 18:30:50.789 GMT [31219] LOG:  aborting any active transactions
2023-01-14 18:30:50.796 GMT [31219] LOG:  background worker "logical replication launcher" (PID 31229) exited with exit code 1
2023-01-14 18:30:50.798 GMT [31224] LOG:  shutting down
2023-01-14 18:30:50.846 GMT [31219] LOG:  database system is shut down
2023-01-14 18:30:52.158 GMT [31547] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-14 18:30:52.158 GMT [31547] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-14 18:30:52.160 GMT [31547] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-14 18:30:52.164 GMT [31548] LOG:  database system was shut down at 2023-01-14 18:30:51 GMT
2023-01-14 18:30:52.169 GMT [31547] LOG:  database system is ready to accept connections
2023-01-14 18:30:53.067 GMT [31573] ERROR:  column "statement_id" of relation "transaction" does not exist at character 76
2023-01-14 18:30:53.067 GMT [31573] QUERY:  INSERT INTO transaction (origin_account_id, dest_account_id, amount, date, statement_id)
	        VALUES (orig_account_number, transaction_account_number, transaction_amount, statement_id)
2023-01-14 18:30:53.067 GMT [31573] CONTEXT:  PL/pgSQL function place_transaction_into_account(integer,integer,integer,numeric) line 22 at SQL statement
	SQL statement "SELECT * FROM client.place_transaction_into_account(account_identifier, orig_account_number, transfer_account_number, transfer_amount)"
	PL/pgSQL function initiate_transfer(integer,integer,numeric,integer,integer) line 15 at SQL statement
2023-01-14 18:30:53.067 GMT [31573] STATEMENT:  SELECT * FROM client.initiate_transfer(1, 10000000, 100.00, 10000001, 123456);
2023-01-14 18:31:53.158 GMT [31547] LOG:  received fast shutdown request
2023-01-14 18:31:53.160 GMT [31547] LOG:  aborting any active transactions
2023-01-14 18:31:53.166 GMT [31547] LOG:  background worker "logical replication launcher" (PID 31554) exited with exit code 1
2023-01-14 18:31:53.166 GMT [31549] LOG:  shutting down
2023-01-14 18:31:53.217 GMT [31547] LOG:  database system is shut down
2023-01-14 18:31:54.624 GMT [31839] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-14 18:31:54.625 GMT [31839] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-14 18:31:54.626 GMT [31839] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-14 18:31:54.629 GMT [31840] LOG:  database system was shut down at 2023-01-14 18:31:54 GMT
2023-01-14 18:31:54.633 GMT [31839] LOG:  database system is ready to accept connections
2023-01-14 18:31:55.624 GMT [31875] ERROR:  INSERT has more target columns than expressions at character 76
2023-01-14 18:31:55.624 GMT [31875] QUERY:  INSERT INTO transaction (origin_account_id, dest_account_id, amount, date, savings_statement_id)
	        VALUES (orig_account_number, transaction_account_number, transaction_amount, statement_id)
2023-01-14 18:31:55.624 GMT [31875] CONTEXT:  PL/pgSQL function place_transaction_into_account(integer,integer,integer,numeric) line 22 at SQL statement
	SQL statement "SELECT * FROM client.place_transaction_into_account(account_identifier, orig_account_number, transfer_account_number, transfer_amount)"
	PL/pgSQL function initiate_transfer(integer,integer,numeric,integer,integer) line 15 at SQL statement
2023-01-14 18:31:55.624 GMT [31875] STATEMENT:  SELECT * FROM client.initiate_transfer(1, 10000000, 100.00, 10000001, 123456);
2023-01-14 18:32:49.809 GMT [31839] LOG:  received fast shutdown request
2023-01-14 18:32:49.811 GMT [31839] LOG:  aborting any active transactions
2023-01-14 18:32:49.816 GMT [31839] LOG:  background worker "logical replication launcher" (PID 31846) exited with exit code 1
2023-01-14 18:32:49.816 GMT [31841] LOG:  shutting down
2023-01-14 18:32:49.865 GMT [31839] LOG:  database system is shut down
2023-01-14 18:32:51.318 GMT [32136] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-14 18:32:51.318 GMT [32136] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-14 18:32:51.319 GMT [32136] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-14 18:32:51.324 GMT [32137] LOG:  database system was shut down at 2023-01-14 18:32:51 GMT
2023-01-14 18:32:51.330 GMT [32136] LOG:  database system is ready to accept connections
2023-01-14 18:32:52.169 GMT [32172] ERROR:  control reached end of function without RETURN
2023-01-14 18:32:52.169 GMT [32172] CONTEXT:  PL/pgSQL function initiate_transfer(integer,integer,numeric,integer,integer)
2023-01-14 18:32:52.169 GMT [32172] STATEMENT:  SELECT * FROM client.initiate_transfer(1, 10000000, 100.00, 10000001, 123456);
2023-01-14 18:35:32.743 GMT [32136] LOG:  received fast shutdown request
2023-01-14 18:35:32.745 GMT [32136] LOG:  aborting any active transactions
2023-01-14 18:35:32.748 GMT [32136] LOG:  background worker "logical replication launcher" (PID 32143) exited with exit code 1
2023-01-14 18:35:32.752 GMT [32138] LOG:  shutting down
2023-01-14 18:35:32.793 GMT [32136] LOG:  database system is shut down
2023-01-14 18:35:34.026 GMT [32758] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-14 18:35:34.026 GMT [32758] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-14 18:35:34.028 GMT [32758] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-14 18:35:34.033 GMT [32759] LOG:  database system was shut down at 2023-01-14 18:35:33 GMT
2023-01-14 18:35:34.038 GMT [32758] LOG:  database system is ready to accept connections
2023-01-14 18:35:54.300 GMT [32758] LOG:  received fast shutdown request
2023-01-14 18:35:54.302 GMT [32758] LOG:  aborting any active transactions
2023-01-14 18:35:54.305 GMT [32758] LOG:  background worker "logical replication launcher" (PID 32765) exited with exit code 1
2023-01-14 18:35:54.311 GMT [32760] LOG:  shutting down
2023-01-14 18:35:54.362 GMT [32758] LOG:  database system is shut down
2023-01-14 18:35:55.928 GMT [32967] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-14 18:35:55.928 GMT [32967] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-14 18:35:55.930 GMT [32967] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-14 18:35:55.934 GMT [32968] LOG:  database system was shut down at 2023-01-14 18:35:55 GMT
2023-01-14 18:35:55.939 GMT [32967] LOG:  database system is ready to accept connections
2023-01-14 18:41:20.726 GMT [32967] LOG:  received fast shutdown request
2023-01-14 18:41:20.728 GMT [32967] LOG:  aborting any active transactions
2023-01-14 18:41:20.734 GMT [32967] LOG:  background worker "logical replication launcher" (PID 32974) exited with exit code 1
2023-01-14 18:41:20.754 GMT [32969] LOG:  shutting down
2023-01-14 18:41:20.766 GMT [32967] LOG:  database system is shut down
2023-01-14 18:41:21.901 GMT [34005] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-14 18:41:21.902 GMT [34005] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-14 18:41:21.903 GMT [34005] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-14 18:41:21.906 GMT [34006] LOG:  database system was shut down at 2023-01-14 18:41:21 GMT
2023-01-14 18:41:21.911 GMT [34005] LOG:  database system is ready to accept connections
2023-01-14 18:41:22.809 GMT [34034] ERROR:  column reference "account_number" is ambiguous at character 315
2023-01-14 18:41:22.809 GMT [34034] DETAIL:  It could refer to either a PL/pgSQL variable or a table column.
2023-01-14 18:41:22.809 GMT [34034] QUERY:  SELECT savings_accounts_statements.account_id, savings_accounts_statements.account_number, savings_accounts_statements.starting_date, savings_accounts_statements.end_date, savings_accounts_statements.amount
	        FROM client.savings_accounts_statements
	        WHERE savings_accounts_statements.account_number = account_number
	        AND savings_accounts_statements.account_id = account_identifier
2023-01-14 18:41:22.809 GMT [34034] CONTEXT:  PL/pgSQL function view_savings_statements(integer,integer) line 6 at RETURN QUERY
2023-01-14 18:41:22.809 GMT [34034] STATEMENT:  SELECT * FROM client.view_savings_statements(1, 10000000);
2023-01-14 18:44:06.208 GMT [34005] LOG:  received fast shutdown request
2023-01-14 18:44:06.209 GMT [34005] LOG:  aborting any active transactions
2023-01-14 18:44:06.213 GMT [34005] LOG:  background worker "logical replication launcher" (PID 34012) exited with exit code 1
2023-01-14 18:44:06.214 GMT [34007] LOG:  shutting down
2023-01-14 18:44:06.263 GMT [34005] LOG:  database system is shut down
2023-01-14 18:44:07.597 GMT [34542] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-14 18:44:07.597 GMT [34542] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-14 18:44:07.599 GMT [34542] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-14 18:44:07.604 GMT [34543] LOG:  database system was shut down at 2023-01-14 18:44:07 GMT
2023-01-14 18:44:07.609 GMT [34542] LOG:  database system is ready to accept connections
2023-01-14 18:44:08.565 GMT [34577] ERROR:  structure of query does not match function result type
2023-01-14 18:44:08.565 GMT [34577] DETAIL:  Returned type integer does not match expected type date in column 1.
2023-01-14 18:44:08.565 GMT [34577] CONTEXT:  SQL statement "SELECT savings_accounts_statements.account_id, savings_accounts_statements.account_number, savings_accounts_statements.starting_date, savings_accounts_statements.end_date, savings_accounts_statements.amount
	        FROM client.savings_accounts_statements
	        WHERE savings_accounts_statements.account_number = orig_account_number
	        AND savings_accounts_statements.account_id = account_identifier"
	PL/pgSQL function view_savings_statements(integer,integer) line 6 at RETURN QUERY
2023-01-14 18:44:08.565 GMT [34577] STATEMENT:  SELECT * FROM client.view_savings_statements(1, 10000000);
2023-01-14 18:45:34.927 GMT [34542] LOG:  received fast shutdown request
2023-01-14 18:45:34.930 GMT [34542] LOG:  aborting any active transactions
2023-01-14 18:45:34.938 GMT [34542] LOG:  background worker "logical replication launcher" (PID 34549) exited with exit code 1
2023-01-14 18:45:34.938 GMT [34544] LOG:  shutting down
2023-01-14 18:45:34.998 GMT [34542] LOG:  database system is shut down
2023-01-14 18:45:36.245 GMT [34945] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-14 18:45:36.245 GMT [34945] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-14 18:45:36.246 GMT [34945] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-14 18:45:36.252 GMT [34946] LOG:  database system was shut down at 2023-01-14 18:45:36 GMT
2023-01-14 18:45:36.257 GMT [34945] LOG:  database system is ready to accept connections
2023-01-14 18:45:37.223 GMT [34974] ERROR:  structure of query does not match function result type
2023-01-14 18:45:37.223 GMT [34974] DETAIL:  Returned type integer does not match expected type numeric in column 3.
2023-01-14 18:45:37.223 GMT [34974] CONTEXT:  SQL statement "SELECT savings_accounts_statements.starting_date, savings_accounts_statements.end_date, savings_accounts_statements.amount, savings_accounts_statements.account_id
	        FROM client.savings_accounts_statements
	        WHERE savings_accounts_statements.account_number = orig_account_number
	        AND savings_accounts_statements.account_id = account_identifier"
	PL/pgSQL function view_savings_statements(integer,integer) line 6 at RETURN QUERY
2023-01-14 18:45:37.223 GMT [34974] STATEMENT:  SELECT * FROM client.view_savings_statements(1, 10000000);
2023-01-14 18:46:59.153 GMT [34945] LOG:  received fast shutdown request
2023-01-14 18:46:59.155 GMT [34945] LOG:  aborting any active transactions
2023-01-14 18:46:59.159 GMT [34945] LOG:  background worker "logical replication launcher" (PID 34952) exited with exit code 1
2023-01-14 18:46:59.159 GMT [34947] LOG:  shutting down
2023-01-14 18:46:59.209 GMT [34945] LOG:  database system is shut down
2023-01-14 18:47:00.561 GMT [35314] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-14 18:47:00.561 GMT [35314] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-14 18:47:00.563 GMT [35314] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-14 18:47:00.567 GMT [35318] LOG:  database system was shut down at 2023-01-14 18:47:00 GMT
2023-01-14 18:47:00.573 GMT [35314] LOG:  database system is ready to accept connections
2023-01-14 18:47:01.464 GMT [35343] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 165
2023-01-14 18:47:01.464 GMT [35343] HINT:  You will need to rewrite or cast the expression.
2023-01-14 18:47:01.464 GMT [35343] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 18:47:01.464 GMT [35343] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 18:47:01.464 GMT [35343] STATEMENT:  SELECT * FROM client.open_credit_account(1);
2023-01-14 18:47:01.465 GMT [35343] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 165
2023-01-14 18:47:01.465 GMT [35343] HINT:  You will need to rewrite or cast the expression.
2023-01-14 18:47:01.465 GMT [35343] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 18:47:01.465 GMT [35343] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 18:47:01.465 GMT [35343] STATEMENT:  SELECT * FROM client.open_credit_account(2);
2023-01-14 18:47:01.467 GMT [35343] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 165
2023-01-14 18:47:01.467 GMT [35343] HINT:  You will need to rewrite or cast the expression.
2023-01-14 18:47:01.467 GMT [35343] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 18:47:01.467 GMT [35343] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 18:47:01.467 GMT [35343] STATEMENT:  SELECT * FROM client.open_credit_account(3);
2023-01-14 18:47:01.467 GMT [35343] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 165
2023-01-14 18:47:01.467 GMT [35343] HINT:  You will need to rewrite or cast the expression.
2023-01-14 18:47:01.467 GMT [35343] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 18:47:01.467 GMT [35343] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 18:47:01.467 GMT [35343] STATEMENT:  SELECT * FROM client.open_credit_account(4);
2023-01-14 18:51:10.618 GMT [35314] LOG:  received fast shutdown request
2023-01-14 18:51:10.621 GMT [35314] LOG:  aborting any active transactions
2023-01-14 18:51:10.626 GMT [35314] LOG:  background worker "logical replication launcher" (PID 35324) exited with exit code 1
2023-01-14 18:51:10.626 GMT [35319] LOG:  shutting down
2023-01-14 18:51:10.678 GMT [35314] LOG:  database system is shut down
2023-01-14 18:51:11.960 GMT [36190] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-14 18:51:11.960 GMT [36190] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-14 18:51:11.962 GMT [36190] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-14 18:51:11.968 GMT [36191] LOG:  database system was shut down at 2023-01-14 18:51:11 GMT
2023-01-14 18:51:11.974 GMT [36190] LOG:  database system is ready to accept connections
2023-01-14 18:51:12.974 GMT [36216] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 165
2023-01-14 18:51:12.974 GMT [36216] HINT:  You will need to rewrite or cast the expression.
2023-01-14 18:51:12.974 GMT [36216] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 18:51:12.974 GMT [36216] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 18:51:12.974 GMT [36216] STATEMENT:  SELECT * FROM client.open_credit_account(1);
2023-01-14 18:51:12.976 GMT [36216] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 165
2023-01-14 18:51:12.976 GMT [36216] HINT:  You will need to rewrite or cast the expression.
2023-01-14 18:51:12.976 GMT [36216] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 18:51:12.976 GMT [36216] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 18:51:12.976 GMT [36216] STATEMENT:  SELECT * FROM client.open_credit_account(2);
2023-01-14 18:51:12.977 GMT [36216] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 165
2023-01-14 18:51:12.977 GMT [36216] HINT:  You will need to rewrite or cast the expression.
2023-01-14 18:51:12.977 GMT [36216] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 18:51:12.977 GMT [36216] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 18:51:12.977 GMT [36216] STATEMENT:  SELECT * FROM client.open_credit_account(3);
2023-01-14 18:51:12.984 GMT [36216] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 165
2023-01-14 18:51:12.984 GMT [36216] HINT:  You will need to rewrite or cast the expression.
2023-01-14 18:51:12.984 GMT [36216] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 18:51:12.984 GMT [36216] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 18:51:12.984 GMT [36216] STATEMENT:  SELECT * FROM client.open_credit_account(4);
2023-01-14 18:51:55.852 GMT [36190] LOG:  received fast shutdown request
2023-01-14 18:51:55.854 GMT [36190] LOG:  aborting any active transactions
2023-01-14 18:51:55.858 GMT [36190] LOG:  background worker "logical replication launcher" (PID 36197) exited with exit code 1
2023-01-14 18:51:55.860 GMT [36192] LOG:  shutting down
2023-01-14 18:51:55.910 GMT [36190] LOG:  database system is shut down
2023-01-14 18:51:57.408 GMT [36435] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-14 18:51:57.409 GMT [36435] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-14 18:51:57.411 GMT [36435] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-14 18:51:57.416 GMT [36436] LOG:  database system was shut down at 2023-01-14 18:51:57 GMT
2023-01-14 18:51:57.425 GMT [36435] LOG:  database system is ready to accept connections
2023-01-14 18:51:58.413 GMT [36478] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 165
2023-01-14 18:51:58.413 GMT [36478] HINT:  You will need to rewrite or cast the expression.
2023-01-14 18:51:58.413 GMT [36478] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 18:51:58.413 GMT [36478] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 18:51:58.413 GMT [36478] STATEMENT:  SELECT * FROM client.open_credit_account(1);
2023-01-14 18:51:58.414 GMT [36478] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 165
2023-01-14 18:51:58.414 GMT [36478] HINT:  You will need to rewrite or cast the expression.
2023-01-14 18:51:58.414 GMT [36478] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 18:51:58.414 GMT [36478] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 18:51:58.414 GMT [36478] STATEMENT:  SELECT * FROM client.open_credit_account(2);
2023-01-14 18:51:58.415 GMT [36478] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 165
2023-01-14 18:51:58.415 GMT [36478] HINT:  You will need to rewrite or cast the expression.
2023-01-14 18:51:58.415 GMT [36478] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 18:51:58.415 GMT [36478] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 18:51:58.415 GMT [36478] STATEMENT:  SELECT * FROM client.open_credit_account(3);
2023-01-14 18:51:58.416 GMT [36478] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 165
2023-01-14 18:51:58.416 GMT [36478] HINT:  You will need to rewrite or cast the expression.
2023-01-14 18:51:58.416 GMT [36478] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 18:51:58.416 GMT [36478] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 18:51:58.416 GMT [36478] STATEMENT:  SELECT * FROM client.open_credit_account(4);
2023-01-14 18:54:54.364 GMT [36435] LOG:  received fast shutdown request
2023-01-14 18:54:54.366 GMT [36435] LOG:  aborting any active transactions
2023-01-14 18:54:54.372 GMT [36435] LOG:  background worker "logical replication launcher" (PID 36442) exited with exit code 1
2023-01-14 18:54:54.373 GMT [36437] LOG:  shutting down
2023-01-14 18:54:54.429 GMT [36435] LOG:  database system is shut down
2023-01-14 18:54:55.668 GMT [37050] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-14 18:54:55.668 GMT [37050] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-14 18:54:55.670 GMT [37050] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-14 18:54:55.675 GMT [37051] LOG:  database system was shut down at 2023-01-14 18:54:55 GMT
2023-01-14 18:54:55.681 GMT [37050] LOG:  database system is ready to accept connections
2023-01-14 18:54:56.597 GMT [37076] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 165
2023-01-14 18:54:56.597 GMT [37076] HINT:  You will need to rewrite or cast the expression.
2023-01-14 18:54:56.597 GMT [37076] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 18:54:56.597 GMT [37076] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 18:54:56.597 GMT [37076] STATEMENT:  SELECT * FROM client.open_credit_account(1);
2023-01-14 18:54:56.597 GMT [37076] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 165
2023-01-14 18:54:56.597 GMT [37076] HINT:  You will need to rewrite or cast the expression.
2023-01-14 18:54:56.597 GMT [37076] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 18:54:56.597 GMT [37076] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 18:54:56.597 GMT [37076] STATEMENT:  SELECT * FROM client.open_credit_account(2);
2023-01-14 18:54:56.598 GMT [37076] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 165
2023-01-14 18:54:56.598 GMT [37076] HINT:  You will need to rewrite or cast the expression.
2023-01-14 18:54:56.598 GMT [37076] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 18:54:56.598 GMT [37076] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 18:54:56.598 GMT [37076] STATEMENT:  SELECT * FROM client.open_credit_account(3);
2023-01-14 18:54:56.600 GMT [37076] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 165
2023-01-14 18:54:56.600 GMT [37076] HINT:  You will need to rewrite or cast the expression.
2023-01-14 18:54:56.600 GMT [37076] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 18:54:56.600 GMT [37076] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 18:54:56.600 GMT [37076] STATEMENT:  SELECT * FROM client.open_credit_account(4);
2023-01-14 18:55:53.971 GMT [37050] LOG:  received fast shutdown request
2023-01-14 18:55:53.973 GMT [37050] LOG:  aborting any active transactions
2023-01-14 18:55:53.979 GMT [37050] LOG:  background worker "logical replication launcher" (PID 37057) exited with exit code 1
2023-01-14 18:55:53.980 GMT [37052] LOG:  shutting down
2023-01-14 18:55:54.043 GMT [37050] LOG:  database system is shut down
2023-01-14 18:55:55.611 GMT [37339] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-14 18:55:55.611 GMT [37339] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-14 18:55:55.613 GMT [37339] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-14 18:55:55.618 GMT [37340] LOG:  database system was shut down at 2023-01-14 18:55:55 GMT
2023-01-14 18:55:55.625 GMT [37339] LOG:  database system is ready to accept connections
2023-01-14 18:55:56.568 GMT [37375] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 165
2023-01-14 18:55:56.568 GMT [37375] HINT:  You will need to rewrite or cast the expression.
2023-01-14 18:55:56.568 GMT [37375] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 18:55:56.568 GMT [37375] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 18:55:56.568 GMT [37375] STATEMENT:  SELECT * FROM client.open_credit_account(1);
2023-01-14 18:55:56.570 GMT [37375] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 165
2023-01-14 18:55:56.570 GMT [37375] HINT:  You will need to rewrite or cast the expression.
2023-01-14 18:55:56.570 GMT [37375] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 18:55:56.570 GMT [37375] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 18:55:56.570 GMT [37375] STATEMENT:  SELECT * FROM client.open_credit_account(2);
2023-01-14 18:55:56.571 GMT [37375] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 165
2023-01-14 18:55:56.571 GMT [37375] HINT:  You will need to rewrite or cast the expression.
2023-01-14 18:55:56.571 GMT [37375] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 18:55:56.571 GMT [37375] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 18:55:56.571 GMT [37375] STATEMENT:  SELECT * FROM client.open_credit_account(3);
2023-01-14 18:55:56.573 GMT [37375] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 165
2023-01-14 18:55:56.573 GMT [37375] HINT:  You will need to rewrite or cast the expression.
2023-01-14 18:55:56.573 GMT [37375] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 18:55:56.573 GMT [37375] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 18:55:56.573 GMT [37375] STATEMENT:  SELECT * FROM client.open_credit_account(4);
2023-01-14 18:58:19.058 GMT [37339] LOG:  received fast shutdown request
2023-01-14 18:58:19.059 GMT [37339] LOG:  aborting any active transactions
2023-01-14 18:58:19.070 GMT [37339] LOG:  background worker "logical replication launcher" (PID 37346) exited with exit code 1
2023-01-14 18:58:19.070 GMT [37341] LOG:  shutting down
2023-01-14 18:58:19.143 GMT [37339] LOG:  database system is shut down
2023-01-14 18:58:20.601 GMT [37883] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-14 18:58:20.601 GMT [37883] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-14 18:58:20.603 GMT [37883] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-14 18:58:20.607 GMT [37884] LOG:  database system was shut down at 2023-01-14 18:58:20 GMT
2023-01-14 18:58:20.612 GMT [37883] LOG:  database system is ready to accept connections
2023-01-14 18:58:21.432 GMT [37919] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 165
2023-01-14 18:58:21.432 GMT [37919] HINT:  You will need to rewrite or cast the expression.
2023-01-14 18:58:21.432 GMT [37919] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 18:58:21.432 GMT [37919] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 18:58:21.432 GMT [37919] STATEMENT:  SELECT * FROM client.open_credit_account(1);
2023-01-14 18:58:21.433 GMT [37919] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 165
2023-01-14 18:58:21.433 GMT [37919] HINT:  You will need to rewrite or cast the expression.
2023-01-14 18:58:21.433 GMT [37919] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 18:58:21.433 GMT [37919] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 18:58:21.433 GMT [37919] STATEMENT:  SELECT * FROM client.open_credit_account(2);
2023-01-14 18:58:21.434 GMT [37919] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 165
2023-01-14 18:58:21.434 GMT [37919] HINT:  You will need to rewrite or cast the expression.
2023-01-14 18:58:21.434 GMT [37919] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 18:58:21.434 GMT [37919] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 18:58:21.434 GMT [37919] STATEMENT:  SELECT * FROM client.open_credit_account(3);
2023-01-14 18:58:21.435 GMT [37919] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 165
2023-01-14 18:58:21.435 GMT [37919] HINT:  You will need to rewrite or cast the expression.
2023-01-14 18:58:21.435 GMT [37919] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 18:58:21.435 GMT [37919] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 18:58:21.435 GMT [37919] STATEMENT:  SELECT * FROM client.open_credit_account(4);
2023-01-14 18:58:44.525 GMT [37883] LOG:  received fast shutdown request
2023-01-14 18:58:44.527 GMT [37883] LOG:  aborting any active transactions
2023-01-14 18:58:44.533 GMT [37883] LOG:  background worker "logical replication launcher" (PID 37890) exited with exit code 1
2023-01-14 18:58:44.533 GMT [37885] LOG:  shutting down
2023-01-14 18:58:44.588 GMT [37883] LOG:  database system is shut down
2023-01-14 18:58:45.918 GMT [38075] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-14 18:58:45.919 GMT [38075] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-14 18:58:45.921 GMT [38075] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-14 18:58:45.929 GMT [38076] LOG:  database system was shut down at 2023-01-14 18:58:45 GMT
2023-01-14 18:58:45.936 GMT [38075] LOG:  database system is ready to accept connections
2023-01-14 18:58:46.796 GMT [38101] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 165
2023-01-14 18:58:46.796 GMT [38101] HINT:  You will need to rewrite or cast the expression.
2023-01-14 18:58:46.796 GMT [38101] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 18:58:46.796 GMT [38101] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 18:58:46.796 GMT [38101] STATEMENT:  SELECT * FROM client.open_credit_account(1);
2023-01-14 18:58:46.797 GMT [38101] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 165
2023-01-14 18:58:46.797 GMT [38101] HINT:  You will need to rewrite or cast the expression.
2023-01-14 18:58:46.797 GMT [38101] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 18:58:46.797 GMT [38101] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 18:58:46.797 GMT [38101] STATEMENT:  SELECT * FROM client.open_credit_account(2);
2023-01-14 18:58:46.797 GMT [38101] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 165
2023-01-14 18:58:46.797 GMT [38101] HINT:  You will need to rewrite or cast the expression.
2023-01-14 18:58:46.797 GMT [38101] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 18:58:46.797 GMT [38101] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 18:58:46.797 GMT [38101] STATEMENT:  SELECT * FROM client.open_credit_account(3);
2023-01-14 18:58:46.798 GMT [38101] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 165
2023-01-14 18:58:46.798 GMT [38101] HINT:  You will need to rewrite or cast the expression.
2023-01-14 18:58:46.798 GMT [38101] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 18:58:46.798 GMT [38101] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 18:58:46.798 GMT [38101] STATEMENT:  SELECT * FROM client.open_credit_account(4);
2023-01-14 19:00:30.690 GMT [38075] LOG:  received fast shutdown request
2023-01-14 19:00:30.693 GMT [38075] LOG:  aborting any active transactions
2023-01-14 19:00:30.699 GMT [38075] LOG:  background worker "logical replication launcher" (PID 38082) exited with exit code 1
2023-01-14 19:00:30.702 GMT [38077] LOG:  shutting down
2023-01-14 19:00:30.770 GMT [38075] LOG:  database system is shut down
2023-01-14 19:00:32.455 GMT [38496] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-14 19:00:32.455 GMT [38496] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-14 19:00:32.456 GMT [38496] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-14 19:00:32.462 GMT [38497] LOG:  database system was shut down at 2023-01-14 19:00:32 GMT
2023-01-14 19:00:32.468 GMT [38496] LOG:  database system is ready to accept connections
2023-01-14 19:00:33.353 GMT [38532] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 165
2023-01-14 19:00:33.353 GMT [38532] HINT:  You will need to rewrite or cast the expression.
2023-01-14 19:00:33.353 GMT [38532] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 19:00:33.353 GMT [38532] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 19:00:33.353 GMT [38532] STATEMENT:  SELECT * FROM client.open_credit_account(1);
2023-01-14 19:00:33.354 GMT [38532] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 165
2023-01-14 19:00:33.354 GMT [38532] HINT:  You will need to rewrite or cast the expression.
2023-01-14 19:00:33.354 GMT [38532] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 19:00:33.354 GMT [38532] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 19:00:33.354 GMT [38532] STATEMENT:  SELECT * FROM client.open_credit_account(2);
2023-01-14 19:00:33.355 GMT [38532] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 165
2023-01-14 19:00:33.355 GMT [38532] HINT:  You will need to rewrite or cast the expression.
2023-01-14 19:00:33.355 GMT [38532] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 19:00:33.355 GMT [38532] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 19:00:33.355 GMT [38532] STATEMENT:  SELECT * FROM client.open_credit_account(3);
2023-01-14 19:00:33.356 GMT [38532] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 165
2023-01-14 19:00:33.356 GMT [38532] HINT:  You will need to rewrite or cast the expression.
2023-01-14 19:00:33.356 GMT [38532] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 19:00:33.356 GMT [38532] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 19:00:33.356 GMT [38532] STATEMENT:  SELECT * FROM client.open_credit_account(4);
2023-01-14 19:01:04.477 GMT [38496] LOG:  received fast shutdown request
2023-01-14 19:01:04.481 GMT [38496] LOG:  aborting any active transactions
2023-01-14 19:01:04.488 GMT [38496] LOG:  background worker "logical replication launcher" (PID 38503) exited with exit code 1
2023-01-14 19:01:04.489 GMT [38498] LOG:  shutting down
2023-01-14 19:01:04.548 GMT [38496] LOG:  database system is shut down
2023-01-14 19:01:05.885 GMT [38732] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-14 19:01:05.885 GMT [38732] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-14 19:01:05.887 GMT [38732] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-14 19:01:05.893 GMT [38733] LOG:  database system was shut down at 2023-01-14 19:01:05 GMT
2023-01-14 19:01:05.898 GMT [38732] LOG:  database system is ready to accept connections
2023-01-14 19:01:06.801 GMT [38768] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 165
2023-01-14 19:01:06.801 GMT [38768] HINT:  You will need to rewrite or cast the expression.
2023-01-14 19:01:06.801 GMT [38768] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 19:01:06.801 GMT [38768] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 19:01:06.801 GMT [38768] STATEMENT:  SELECT * FROM client.open_credit_account(1);
2023-01-14 19:01:06.802 GMT [38768] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 165
2023-01-14 19:01:06.802 GMT [38768] HINT:  You will need to rewrite or cast the expression.
2023-01-14 19:01:06.802 GMT [38768] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 19:01:06.802 GMT [38768] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 19:01:06.802 GMT [38768] STATEMENT:  SELECT * FROM client.open_credit_account(2);
2023-01-14 19:01:06.804 GMT [38768] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 165
2023-01-14 19:01:06.804 GMT [38768] HINT:  You will need to rewrite or cast the expression.
2023-01-14 19:01:06.804 GMT [38768] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 19:01:06.804 GMT [38768] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 19:01:06.804 GMT [38768] STATEMENT:  SELECT * FROM client.open_credit_account(3);
2023-01-14 19:01:06.807 GMT [38768] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 165
2023-01-14 19:01:06.807 GMT [38768] HINT:  You will need to rewrite or cast the expression.
2023-01-14 19:01:06.807 GMT [38768] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 19:01:06.807 GMT [38768] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 19:01:06.807 GMT [38768] STATEMENT:  SELECT * FROM client.open_credit_account(4);
2023-01-14 19:02:11.546 GMT [38732] LOG:  received fast shutdown request
2023-01-14 19:02:11.548 GMT [38732] LOG:  aborting any active transactions
2023-01-14 19:02:11.551 GMT [38732] LOG:  background worker "logical replication launcher" (PID 38739) exited with exit code 1
2023-01-14 19:02:11.553 GMT [38734] LOG:  shutting down
2023-01-14 19:02:11.602 GMT [38732] LOG:  database system is shut down
2023-01-14 19:02:12.883 GMT [39083] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-14 19:02:12.883 GMT [39083] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-14 19:02:12.885 GMT [39083] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-14 19:02:12.891 GMT [39084] LOG:  database system was shut down at 2023-01-14 19:02:12 GMT
2023-01-14 19:02:12.899 GMT [39083] LOG:  database system is ready to accept connections
2023-01-14 19:02:13.812 GMT [39109] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 165
2023-01-14 19:02:13.812 GMT [39109] HINT:  You will need to rewrite or cast the expression.
2023-01-14 19:02:13.812 GMT [39109] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 19:02:13.812 GMT [39109] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 19:02:13.812 GMT [39109] STATEMENT:  SELECT * FROM client.open_credit_account(1);
2023-01-14 19:02:13.813 GMT [39109] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 165
2023-01-14 19:02:13.813 GMT [39109] HINT:  You will need to rewrite or cast the expression.
2023-01-14 19:02:13.813 GMT [39109] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 19:02:13.813 GMT [39109] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 19:02:13.813 GMT [39109] STATEMENT:  SELECT * FROM client.open_credit_account(2);
2023-01-14 19:02:13.814 GMT [39109] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 165
2023-01-14 19:02:13.814 GMT [39109] HINT:  You will need to rewrite or cast the expression.
2023-01-14 19:02:13.814 GMT [39109] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 19:02:13.814 GMT [39109] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 19:02:13.814 GMT [39109] STATEMENT:  SELECT * FROM client.open_credit_account(3);
2023-01-14 19:02:13.815 GMT [39109] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 165
2023-01-14 19:02:13.815 GMT [39109] HINT:  You will need to rewrite or cast the expression.
2023-01-14 19:02:13.815 GMT [39109] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 19:02:13.815 GMT [39109] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 19:02:13.815 GMT [39109] STATEMENT:  SELECT * FROM client.open_credit_account(4);
2023-01-14 19:03:32.480 GMT [39083] LOG:  received fast shutdown request
2023-01-14 19:03:32.482 GMT [39083] LOG:  aborting any active transactions
2023-01-14 19:03:32.487 GMT [39083] LOG:  background worker "logical replication launcher" (PID 39090) exited with exit code 1
2023-01-14 19:03:32.487 GMT [39085] LOG:  shutting down
2023-01-14 19:03:32.534 GMT [39083] LOG:  database system is shut down
2023-01-14 19:03:33.673 GMT [39430] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-14 19:03:33.673 GMT [39430] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-14 19:03:33.675 GMT [39430] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-14 19:03:33.680 GMT [39431] LOG:  database system was shut down at 2023-01-14 19:03:33 GMT
2023-01-14 19:03:33.685 GMT [39430] LOG:  database system is ready to accept connections
2023-01-14 19:03:34.546 GMT [39456] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 165
2023-01-14 19:03:34.546 GMT [39456] HINT:  You will need to rewrite or cast the expression.
2023-01-14 19:03:34.546 GMT [39456] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 19:03:34.546 GMT [39456] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 19:03:34.546 GMT [39456] STATEMENT:  SELECT * FROM client.open_credit_account(1);
2023-01-14 19:03:34.547 GMT [39456] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 165
2023-01-14 19:03:34.547 GMT [39456] HINT:  You will need to rewrite or cast the expression.
2023-01-14 19:03:34.547 GMT [39456] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 19:03:34.547 GMT [39456] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 19:03:34.547 GMT [39456] STATEMENT:  SELECT * FROM client.open_credit_account(2);
2023-01-14 19:03:34.548 GMT [39456] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 165
2023-01-14 19:03:34.548 GMT [39456] HINT:  You will need to rewrite or cast the expression.
2023-01-14 19:03:34.548 GMT [39456] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 19:03:34.548 GMT [39456] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 19:03:34.548 GMT [39456] STATEMENT:  SELECT * FROM client.open_credit_account(3);
2023-01-14 19:03:34.548 GMT [39456] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 165
2023-01-14 19:03:34.548 GMT [39456] HINT:  You will need to rewrite or cast the expression.
2023-01-14 19:03:34.548 GMT [39456] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 19:03:34.548 GMT [39456] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 19:03:34.548 GMT [39456] STATEMENT:  SELECT * FROM client.open_credit_account(4);
2023-01-14 19:03:34.561 GMT [39456] ERROR:  query has no destination for result data
2023-01-14 19:03:34.561 GMT [39456] HINT:  If you want to discard the results of a SELECT, use PERFORM instead.
2023-01-14 19:03:34.561 GMT [39456] CONTEXT:  PL/pgSQL function get_or_create_statement(integer,integer) line 24 at SQL statement
	SQL statement "SELECT * FROM client.get_or_create_statement(account_identifier, orig_account_number)"
	PL/pgSQL function place_transaction_into_account(integer,integer,integer,numeric) line 21 at SQL statement
	SQL statement "SELECT * FROM client.place_transaction_into_account(account_identifier, orig_account_number, transfer_account_number, transfer_amount)"
	PL/pgSQL function initiate_transfer(integer,integer,numeric,integer,integer) line 16 at SQL statement
2023-01-14 19:03:34.561 GMT [39456] STATEMENT:  SELECT * FROM client.initiate_transfer(1, 10000000, 100.00, 10000001, 123456);
2023-01-14 19:04:51.282 GMT [39430] LOG:  received fast shutdown request
2023-01-14 19:04:51.285 GMT [39430] LOG:  aborting any active transactions
2023-01-14 19:04:51.290 GMT [39430] LOG:  background worker "logical replication launcher" (PID 39437) exited with exit code 1
2023-01-14 19:04:51.291 GMT [39432] LOG:  shutting down
2023-01-14 19:04:51.336 GMT [39430] LOG:  database system is shut down
2023-01-14 19:04:52.845 GMT [39796] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-14 19:04:52.846 GMT [39796] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-14 19:04:52.847 GMT [39796] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-14 19:04:52.852 GMT [39797] LOG:  database system was shut down at 2023-01-14 19:04:52 GMT
2023-01-14 19:04:52.859 GMT [39796] LOG:  database system is ready to accept connections
2023-01-14 19:04:53.739 GMT [39835] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 165
2023-01-14 19:04:53.739 GMT [39835] HINT:  You will need to rewrite or cast the expression.
2023-01-14 19:04:53.739 GMT [39835] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 19:04:53.739 GMT [39835] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 19:04:53.739 GMT [39835] STATEMENT:  SELECT * FROM client.open_credit_account(1);
2023-01-14 19:04:53.741 GMT [39835] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 165
2023-01-14 19:04:53.741 GMT [39835] HINT:  You will need to rewrite or cast the expression.
2023-01-14 19:04:53.741 GMT [39835] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 19:04:53.741 GMT [39835] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 19:04:53.741 GMT [39835] STATEMENT:  SELECT * FROM client.open_credit_account(2);
2023-01-14 19:04:53.742 GMT [39835] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 165
2023-01-14 19:04:53.742 GMT [39835] HINT:  You will need to rewrite or cast the expression.
2023-01-14 19:04:53.742 GMT [39835] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 19:04:53.742 GMT [39835] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 19:04:53.742 GMT [39835] STATEMENT:  SELECT * FROM client.open_credit_account(3);
2023-01-14 19:04:53.743 GMT [39835] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 165
2023-01-14 19:04:53.743 GMT [39835] HINT:  You will need to rewrite or cast the expression.
2023-01-14 19:04:53.743 GMT [39835] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 19:04:53.743 GMT [39835] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 19:04:53.743 GMT [39835] STATEMENT:  SELECT * FROM client.open_credit_account(4);
2023-01-14 19:14:38.432 GMT [39796] LOG:  received fast shutdown request
2023-01-14 19:14:38.434 GMT [39796] LOG:  aborting any active transactions
2023-01-14 19:14:38.438 GMT [39796] LOG:  background worker "logical replication launcher" (PID 39803) exited with exit code 1
2023-01-14 19:14:38.438 GMT [39798] LOG:  shutting down
2023-01-14 19:14:38.455 GMT [39796] LOG:  database system is shut down
2023-01-14 19:14:39.834 GMT [41461] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-14 19:14:39.835 GMT [41461] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-14 19:14:39.836 GMT [41461] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-14 19:14:39.841 GMT [41462] LOG:  database system was shut down at 2023-01-14 19:14:39 GMT
2023-01-14 19:14:39.848 GMT [41461] LOG:  database system is ready to accept connections
2023-01-14 19:14:40.726 GMT [41500] ERROR:  syntax error at or near "SELECT" at character 2155
2023-01-14 19:14:40.726 GMT [41500] STATEMENT:  CREATE OR REPLACE FUNCTION client.get_or_create_statement(account_identifier INT, orig_account_number INT)
	RETURNS INT AS $$
	DECLARE statement_id INT;
	BEGIN
	    CASE WHEN EXISTS (SELECT * FROM client.debit_accounts WHERE account_id = account_identifier AND account_number = orig_account_number) THEN
	        IF EXISTS (SELECT * FROM debit_statement WHERE account_number = orig_account_number AND starting_date <= now()::date AND end_date >= now()::date) THEN
	            SELECT id INTO statement_id FROM debit_statement WHERE account_number = orig_account_number AND starting_date <= now()::date AND end_date >= now()::date;
	            RETURN statement_id;
	        ELSE 
	            INSERT INTO debit_statement (account_number, starting_date, end_date, amount) VALUES (orig_account_number, date_trunc('month', now()::date), now()::date + 30, 0);
	            SELECT id INTO statement_id FROM debit_statement WHERE account_number = orig_account_number AND starting_date <= now()::date AND end_date >= now()::date;
	            RETURN statement_id;
	        END IF;
	    WHEN EXISTS (SELECT * FROM client.credit_accounts WHERE account_id = account_identifier AND account_number = orig_account_number) THEN
	        IF EXISTS (SELECT * FROM credit_statement WHERE account_number = orig_account_number AND starting_date <= now()::date AND end_date >= now()::date) THEN
	            SELECT id INTO statement_id FROM credit_statement WHERE account_number = orig_account_number AND starting_date <= now()::date AND end_date >= now()::date;
	            return statement_id;
	        ELSE 
	            INSERT INTO credit_statement (account_number, starting_date, end_date, amount) VALUES (orig_account_number, date_trunc('month', now()::date), now()::date + 30, 0);
	            SELECT id INTO statement_id FROM credit_statement WHERE account_number = orig_account_number AND starting_date <= now()::date AND end_date >= now()::date;
	            return statement_id;
	        END IF;
	    WHEN EXISTS (SELECT * FROM client.savings_accounts WHERE account_id = account_identifier AND account_number = orig_account_number) THEN
	        RAISE NOTICE 'NUMBER OF STATEMENTS %', SELECT count(*) FROM savings_statement;
	        IF EXISTS (SELECT * FROM savings_statement WHERE account_number = orig_account_number AND starting_date <= now()::date AND end_date >= now()::date) THEN
	            SELECT id INTO statement_id FROM savings_statement WHERE account_number = orig_account_number AND starting_date <= now()::date AND end_date >= now()::date;
	            return statement_id;
	        ELSE
	            INSERT INTO savings_statement (account_number, starting_date, end_date, amount) VALUES (orig_account_number, date_trunc('month', now()::date), now()::date + 30, 0);
	            SELECT id INTO statement_id FROM savings_statement WHERE account_number = orig_account_number AND starting_date <= now()::date AND end_date >= now()::date;
	            return statement_id;
	        END IF;
	    END CASE;
	END;
	$$ LANGUAGE plpgsql;
2023-01-14 19:14:40.780 GMT [41500] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 165
2023-01-14 19:14:40.780 GMT [41500] HINT:  You will need to rewrite or cast the expression.
2023-01-14 19:14:40.780 GMT [41500] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 19:14:40.780 GMT [41500] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 19:14:40.780 GMT [41500] STATEMENT:  SELECT * FROM client.open_credit_account(1);
2023-01-14 19:14:40.781 GMT [41500] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 165
2023-01-14 19:14:40.781 GMT [41500] HINT:  You will need to rewrite or cast the expression.
2023-01-14 19:14:40.781 GMT [41500] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 19:14:40.781 GMT [41500] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 19:14:40.781 GMT [41500] STATEMENT:  SELECT * FROM client.open_credit_account(2);
2023-01-14 19:14:40.782 GMT [41500] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 165
2023-01-14 19:14:40.782 GMT [41500] HINT:  You will need to rewrite or cast the expression.
2023-01-14 19:14:40.782 GMT [41500] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 19:14:40.782 GMT [41500] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 19:14:40.782 GMT [41500] STATEMENT:  SELECT * FROM client.open_credit_account(3);
2023-01-14 19:14:40.782 GMT [41500] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 165
2023-01-14 19:14:40.782 GMT [41500] HINT:  You will need to rewrite or cast the expression.
2023-01-14 19:14:40.782 GMT [41500] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 19:14:40.782 GMT [41500] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 19:14:40.782 GMT [41500] STATEMENT:  SELECT * FROM client.open_credit_account(4);
2023-01-14 19:14:40.792 GMT [41500] ERROR:  function client.get_or_create_statement(integer, integer) does not exist at character 15
2023-01-14 19:14:40.792 GMT [41500] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2023-01-14 19:14:40.792 GMT [41500] QUERY:  SELECT * FROM client.get_or_create_statement(account_identifier, orig_account_number)
2023-01-14 19:14:40.792 GMT [41500] CONTEXT:  PL/pgSQL function place_transaction_into_account(integer,integer,integer,numeric) line 21 at SQL statement
	SQL statement "SELECT * FROM client.place_transaction_into_account(account_identifier, orig_account_number, transfer_account_number, transfer_amount)"
	PL/pgSQL function initiate_transfer(integer,integer,numeric,integer,integer) line 16 at SQL statement
2023-01-14 19:14:40.792 GMT [41500] STATEMENT:  SELECT * FROM client.initiate_transfer(1, 10000000, 100.00, 10000001, 123456);
2023-01-14 19:16:00.502 GMT [41461] LOG:  received fast shutdown request
2023-01-14 19:16:00.504 GMT [41461] LOG:  aborting any active transactions
2023-01-14 19:16:00.507 GMT [41461] LOG:  background worker "logical replication launcher" (PID 41468) exited with exit code 1
2023-01-14 19:16:00.511 GMT [41463] LOG:  shutting down
2023-01-14 19:16:00.555 GMT [41461] LOG:  database system is shut down
2023-01-14 19:16:01.974 GMT [41843] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-14 19:16:01.974 GMT [41843] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-14 19:16:01.976 GMT [41843] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-14 19:16:01.982 GMT [41844] LOG:  database system was shut down at 2023-01-14 19:16:01 GMT
2023-01-14 19:16:01.988 GMT [41843] LOG:  database system is ready to accept connections
2023-01-14 19:16:02.913 GMT [41879] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 165
2023-01-14 19:16:02.913 GMT [41879] HINT:  You will need to rewrite or cast the expression.
2023-01-14 19:16:02.913 GMT [41879] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 19:16:02.913 GMT [41879] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 19:16:02.913 GMT [41879] STATEMENT:  SELECT * FROM client.open_credit_account(1);
2023-01-14 19:16:02.914 GMT [41879] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 165
2023-01-14 19:16:02.914 GMT [41879] HINT:  You will need to rewrite or cast the expression.
2023-01-14 19:16:02.914 GMT [41879] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 19:16:02.914 GMT [41879] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 19:16:02.914 GMT [41879] STATEMENT:  SELECT * FROM client.open_credit_account(2);
2023-01-14 19:16:02.914 GMT [41879] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 165
2023-01-14 19:16:02.914 GMT [41879] HINT:  You will need to rewrite or cast the expression.
2023-01-14 19:16:02.914 GMT [41879] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 19:16:02.914 GMT [41879] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 19:16:02.914 GMT [41879] STATEMENT:  SELECT * FROM client.open_credit_account(3);
2023-01-14 19:16:02.915 GMT [41879] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 165
2023-01-14 19:16:02.915 GMT [41879] HINT:  You will need to rewrite or cast the expression.
2023-01-14 19:16:02.915 GMT [41879] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 19:16:02.915 GMT [41879] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 19:16:02.915 GMT [41879] STATEMENT:  SELECT * FROM client.open_credit_account(4);
2023-01-14 19:18:15.715 GMT [41843] LOG:  received fast shutdown request
2023-01-14 19:18:15.717 GMT [41843] LOG:  aborting any active transactions
2023-01-14 19:18:15.720 GMT [41843] LOG:  background worker "logical replication launcher" (PID 41850) exited with exit code 1
2023-01-14 19:18:15.721 GMT [41845] LOG:  shutting down
2023-01-14 19:18:15.775 GMT [41843] LOG:  database system is shut down
2023-01-14 19:18:17.116 GMT [42331] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-14 19:18:17.116 GMT [42331] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-14 19:18:17.118 GMT [42331] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-14 19:18:17.123 GMT [42332] LOG:  database system was shut down at 2023-01-14 19:18:16 GMT
2023-01-14 19:18:17.128 GMT [42331] LOG:  database system is ready to accept connections
2023-01-14 19:18:18.138 GMT [42370] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 165
2023-01-14 19:18:18.138 GMT [42370] HINT:  You will need to rewrite or cast the expression.
2023-01-14 19:18:18.138 GMT [42370] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 19:18:18.138 GMT [42370] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 19:18:18.138 GMT [42370] STATEMENT:  SELECT * FROM client.open_credit_account(1);
2023-01-14 19:18:18.139 GMT [42370] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 165
2023-01-14 19:18:18.139 GMT [42370] HINT:  You will need to rewrite or cast the expression.
2023-01-14 19:18:18.139 GMT [42370] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 19:18:18.139 GMT [42370] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 19:18:18.139 GMT [42370] STATEMENT:  SELECT * FROM client.open_credit_account(2);
2023-01-14 19:18:18.140 GMT [42370] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 165
2023-01-14 19:18:18.140 GMT [42370] HINT:  You will need to rewrite or cast the expression.
2023-01-14 19:18:18.140 GMT [42370] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 19:18:18.140 GMT [42370] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 19:18:18.140 GMT [42370] STATEMENT:  SELECT * FROM client.open_credit_account(3);
2023-01-14 19:18:18.141 GMT [42370] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 165
2023-01-14 19:18:18.141 GMT [42370] HINT:  You will need to rewrite or cast the expression.
2023-01-14 19:18:18.141 GMT [42370] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 19:18:18.141 GMT [42370] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 19:18:18.141 GMT [42370] STATEMENT:  SELECT * FROM client.open_credit_account(4);
2023-01-14 19:19:04.665 GMT [42331] LOG:  received fast shutdown request
2023-01-14 19:19:04.667 GMT [42331] LOG:  aborting any active transactions
2023-01-14 19:19:04.671 GMT [42331] LOG:  background worker "logical replication launcher" (PID 42338) exited with exit code 1
2023-01-14 19:19:04.671 GMT [42333] LOG:  shutting down
2023-01-14 19:19:04.722 GMT [42331] LOG:  database system is shut down
2023-01-14 19:19:06.005 GMT [42605] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-14 19:19:06.005 GMT [42605] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-14 19:19:06.007 GMT [42605] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-14 19:19:06.012 GMT [42606] LOG:  database system was shut down at 2023-01-14 19:19:05 GMT
2023-01-14 19:19:06.018 GMT [42605] LOG:  database system is ready to accept connections
2023-01-14 19:19:06.947 GMT [42634] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 165
2023-01-14 19:19:06.947 GMT [42634] HINT:  You will need to rewrite or cast the expression.
2023-01-14 19:19:06.947 GMT [42634] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 19:19:06.947 GMT [42634] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 19:19:06.947 GMT [42634] STATEMENT:  SELECT * FROM client.open_credit_account(1);
2023-01-14 19:19:06.948 GMT [42634] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 165
2023-01-14 19:19:06.948 GMT [42634] HINT:  You will need to rewrite or cast the expression.
2023-01-14 19:19:06.948 GMT [42634] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 19:19:06.948 GMT [42634] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 19:19:06.948 GMT [42634] STATEMENT:  SELECT * FROM client.open_credit_account(2);
2023-01-14 19:19:06.949 GMT [42634] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 165
2023-01-14 19:19:06.949 GMT [42634] HINT:  You will need to rewrite or cast the expression.
2023-01-14 19:19:06.949 GMT [42634] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 19:19:06.949 GMT [42634] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 19:19:06.949 GMT [42634] STATEMENT:  SELECT * FROM client.open_credit_account(3);
2023-01-14 19:19:06.951 GMT [42634] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 165
2023-01-14 19:19:06.951 GMT [42634] HINT:  You will need to rewrite or cast the expression.
2023-01-14 19:19:06.951 GMT [42634] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (CURRENT_DATE, CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 19:19:06.951 GMT [42634] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 19:19:06.951 GMT [42634] STATEMENT:  SELECT * FROM client.open_credit_account(4);
2023-01-14 19:21:49.527 GMT [42605] LOG:  received fast shutdown request
2023-01-14 19:21:49.529 GMT [42605] LOG:  aborting any active transactions
2023-01-14 19:21:49.532 GMT [42605] LOG:  background worker "logical replication launcher" (PID 42612) exited with exit code 1
2023-01-14 19:21:49.534 GMT [42607] LOG:  shutting down
2023-01-14 19:21:49.581 GMT [42605] LOG:  database system is shut down
2023-01-14 19:21:51.051 GMT [43236] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-14 19:21:51.051 GMT [43236] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-14 19:21:51.053 GMT [43236] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-14 19:21:51.058 GMT [43237] LOG:  database system was shut down at 2023-01-14 19:21:50 GMT
2023-01-14 19:21:51.066 GMT [43236] LOG:  database system is ready to accept connections
2023-01-14 19:21:51.981 GMT [43275] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 185
2023-01-14 19:21:51.981 GMT [43275] HINT:  You will need to rewrite or cast the expression.
2023-01-14 19:21:51.981 GMT [43275] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (date_trunc('month', now()::date), CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 19:21:51.981 GMT [43275] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 19:21:51.981 GMT [43275] STATEMENT:  SELECT * FROM client.open_credit_account(1);
2023-01-14 19:21:51.982 GMT [43275] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 185
2023-01-14 19:21:51.982 GMT [43275] HINT:  You will need to rewrite or cast the expression.
2023-01-14 19:21:51.982 GMT [43275] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (date_trunc('month', now()::date), CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 19:21:51.982 GMT [43275] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 19:21:51.982 GMT [43275] STATEMENT:  SELECT * FROM client.open_credit_account(2);
2023-01-14 19:21:51.983 GMT [43275] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 185
2023-01-14 19:21:51.983 GMT [43275] HINT:  You will need to rewrite or cast the expression.
2023-01-14 19:21:51.983 GMT [43275] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (date_trunc('month', now()::date), CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 19:21:51.983 GMT [43275] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 19:21:51.983 GMT [43275] STATEMENT:  SELECT * FROM client.open_credit_account(3);
2023-01-14 19:21:51.983 GMT [43275] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 185
2023-01-14 19:21:51.983 GMT [43275] HINT:  You will need to rewrite or cast the expression.
2023-01-14 19:21:51.983 GMT [43275] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (date_trunc('month', now()::date), CURRENT_DATE, 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 19:21:51.983 GMT [43275] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 19:21:51.983 GMT [43275] STATEMENT:  SELECT * FROM client.open_credit_account(4);
2023-01-14 19:24:35.787 GMT [43236] LOG:  received fast shutdown request
2023-01-14 19:24:35.789 GMT [43236] LOG:  aborting any active transactions
2023-01-14 19:24:35.794 GMT [43236] LOG:  background worker "logical replication launcher" (PID 43243) exited with exit code 1
2023-01-14 19:24:35.796 GMT [43238] LOG:  shutting down
2023-01-14 19:24:35.845 GMT [43236] LOG:  database system is shut down
2023-01-14 19:24:37.058 GMT [43853] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-14 19:24:37.058 GMT [43853] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-14 19:24:37.060 GMT [43853] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-14 19:24:37.064 GMT [43854] LOG:  database system was shut down at 2023-01-14 19:24:36 GMT
2023-01-14 19:24:37.070 GMT [43853] LOG:  database system is ready to accept connections
2023-01-14 19:24:37.924 GMT [43882] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 236
2023-01-14 19:24:37.924 GMT [43882] HINT:  You will need to rewrite or cast the expression.
2023-01-14 19:24:37.924 GMT [43882] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (date_trunc('month', now()::date), (date_trunc('month', now()::date)) + interval '1 month - 1 day', 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 19:24:37.924 GMT [43882] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 19:24:37.924 GMT [43882] STATEMENT:  SELECT * FROM client.open_credit_account(1);
2023-01-14 19:24:37.925 GMT [43882] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 236
2023-01-14 19:24:37.925 GMT [43882] HINT:  You will need to rewrite or cast the expression.
2023-01-14 19:24:37.925 GMT [43882] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (date_trunc('month', now()::date), (date_trunc('month', now()::date)) + interval '1 month - 1 day', 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 19:24:37.925 GMT [43882] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 19:24:37.925 GMT [43882] STATEMENT:  SELECT * FROM client.open_credit_account(2);
2023-01-14 19:24:37.926 GMT [43882] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 236
2023-01-14 19:24:37.926 GMT [43882] HINT:  You will need to rewrite or cast the expression.
2023-01-14 19:24:37.926 GMT [43882] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (date_trunc('month', now()::date), (date_trunc('month', now()::date)) + interval '1 month - 1 day', 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 19:24:37.926 GMT [43882] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 19:24:37.926 GMT [43882] STATEMENT:  SELECT * FROM client.open_credit_account(3);
2023-01-14 19:24:37.928 GMT [43882] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 236
2023-01-14 19:24:37.928 GMT [43882] HINT:  You will need to rewrite or cast the expression.
2023-01-14 19:24:37.928 GMT [43882] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (date_trunc('month', now()::date), (date_trunc('month', now()::date)) + interval '1 month - 1 day', 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 19:24:37.928 GMT [43882] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 19:24:37.928 GMT [43882] STATEMENT:  SELECT * FROM client.open_credit_account(4);
2023-01-14 21:13:24.008 GMT [43853] LOG:  received fast shutdown request
2023-01-14 21:13:24.011 GMT [43853] LOG:  aborting any active transactions
2023-01-14 21:13:24.016 GMT [43853] LOG:  background worker "logical replication launcher" (PID 43860) exited with exit code 1
2023-01-14 21:13:24.017 GMT [43855] LOG:  shutting down
2023-01-14 21:13:24.031 GMT [43853] LOG:  database system is shut down
2023-01-14 21:13:27.951 GMT [59113] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-14 21:13:27.951 GMT [59113] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-14 21:13:27.953 GMT [59113] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-14 21:13:27.957 GMT [59114] LOG:  database system was shut down at 2023-01-14 21:13:27 GMT
2023-01-14 21:13:27.963 GMT [59113] LOG:  database system is ready to accept connections
2023-01-14 21:13:28.853 GMT [59147] ERROR:  syntax error at or near "DECLARE" at character 2447
2023-01-14 21:13:28.853 GMT [59147] STATEMENT:  CREATE OR REPLACE FUNCTION client.place_transaction_out_of_account(orig_account_number INT, transaction_account_number INT, transaction_amount NUMERIC)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE statement_id INT;
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Placed transaction out of account', CURRENT_DATE);
	
	    CASE WHEN EXISTS (SELECT * FROM client.debit_accounts WHERE account_number = orig_account_number) THEN
	        UPDATE debit_account SET current_balance = current_balance + transaction_amount WHERE debit_account.account_number = orig_account_number;
	        SELECT * FROM client.get_or_create_statement(account_identifier, orig_account_number) INTO statement_id;
	        INSERT INTO transaction (origin_account_id, dest_account_id, amount, date, debit_statement_id)
	        VALUES (orig_account_number, transaction_account_number, transaction_amount, now(), statement_id);
	
	    WHEN EXISTS (SELECT * FROM client.credit_accounts WHERE account_number = orig_account_number) THEN
	        UPDATE credit_account SET outstanding_balance = outstanding_balance + transaction_amount WHERE credit_account.account_number = orig_account_number;
	        SELECT * FROM client.get_or_create_statement(account_identifier, orig_account_number) INTO statement_id;
	        INSERT INTO transaction (origin_account_id, dest_account_id, amount, date, credit_statement_id)
	        VALUES (orig_account_number, transaction_account_number, transaction_amount, now(), statement_id);
	
	    WHEN EXISTS (SELECT * FROM client.savings_accounts WHERE account_number = orig_account_number) THEN
	        UPDATE savings_account SET current_balance = current_balance + transaction_amount WHERE savings_account.account_number = orig_account_number;
	        SELECT * FROM client.get_or_create_statement(account_identifier, orig_account_number) INTO statement_id;
	        INSERT INTO transaction (origin_account_id, dest_account_id, amount, date, savings_statement_id)
	        VALUES (orig_account_number, transaction_account_number, transaction_amount, now(), statement_id);
	    ELSE
	        RAISE NOTICE 'Account does not exist';
	        RETURN FALSE;
	    END CASE;
	    RETURN TRUE;
	END;
	
	CREATE OR REPLACE FUNCTION client.initiate_transfer(account_identifier INT, orig_account_number INT, transfer_amount NUMERIC, transfer_account_number INT, transfer_account_sort_code INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-14 21:13:28.853 GMT [59147] ERROR:  syntax error at or near "INT" at character 29
2023-01-14 21:13:28.853 GMT [59147] STATEMENT:  DECLARE internal_account_id INT;
2023-01-14 21:13:28.853 GMT [59147] ERROR:  syntax error at or near "INT" at character 19
2023-01-14 21:13:28.853 GMT [59147] STATEMENT:  DECLARE ROW_COUNT INT;
2023-01-14 21:13:28.854 GMT [59147] ERROR:  syntax error at or near "INSERT" at character 11
2023-01-14 21:13:28.854 GMT [59147] STATEMENT:  BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Initiated transfer', CURRENT_DATE);
2023-01-14 21:13:28.854 GMT [59147] ERROR:  column "transfer_account_number" does not exist at character 92
2023-01-14 21:13:28.854 GMT [59147] STATEMENT:  SELECT account_id INTO internal_account_id FROM client.accounts
	    WHERE account_number = transfer_account_number AND sort_code = transfer_account_sort_code;
2023-01-14 21:13:28.855 GMT [59147] ERROR:  syntax error at or near "IF" at character 1
2023-01-14 21:13:28.855 GMT [59147] STATEMENT:  IF internal_account_id IS NULL THEN
	       RAISE NOTICE 'EXTERNAL TRANSFER TO ACCOUNT %', transfer_account_number;
2023-01-14 21:13:28.855 GMT [59147] ERROR:  syntax error at or near "ELSE" at character 1
2023-01-14 21:13:28.855 GMT [59147] STATEMENT:  ELSE
	        RAISE NOTICE 'INTERNAL TRANSFER TO ACCOUNT %', transfer_account_number;
2023-01-14 21:13:28.855 GMT [59147] ERROR:  syntax error at or near "INTO" at character 136
2023-01-14 21:13:28.855 GMT [59147] STATEMENT:  SELECT * FROM client.place_transaction_into_account(account_identifier, orig_account_number, transfer_account_number, transfer_amount) INTO passed;
2023-01-14 21:13:28.856 GMT [59147] ERROR:  syntax error at or near "GET" at character 1
2023-01-14 21:13:28.856 GMT [59147] STATEMENT:  GET DIAGNOSTICS ROW_COUNT = ROW_COUNT;
2023-01-14 21:13:28.856 GMT [59147] ERROR:  syntax error at or near "passed" at character 1
2023-01-14 21:13:28.856 GMT [59147] STATEMENT:  passed = CASE WHEN ROW_COUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-14 21:13:28.856 GMT [59147] ERROR:  syntax error at or near "IF" at character 5
2023-01-14 21:13:28.856 GMT [59147] STATEMENT:  END IF;
2023-01-14 21:13:28.856 GMT [59147] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-14 21:13:28.856 GMT [59147] STATEMENT:  RETURN passed;
2023-01-14 21:13:28.856 GMT [59147] WARNING:  there is no transaction in progress
2023-01-14 21:13:28.857 GMT [59147] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE SCHEMA IF NOT EXISTS unauthenticated;
	SET search_path TO unauthenticated, public;
	
	-- Allows an unauthenticated user to match hashes to hashes of personal information contained in the customer table
	CREATE OR REPLACE VIEW unauthenticated.unauthenticated_personal_information AS
	SELECT id, md5(first_name) AS first_name, md5(last_name) AS last_name, md5(email_address) AS email_address
	FROM customer;
	
	-- Allows an unauthenticated user to view hashes of usernames contained in the user_login table
	CREATE OR REPLACE VIEW unauthenticated.unauthenticated_login AS
	SELECT md5(username) AS username FROM user_login;
	
	-- Allows a user to insert personal information into the online banking system
	CREATE OR REPLACE FUNCTION unauthenticated.create_personal_info(first_name TEXT, last_name TEXT, date_of_birth DATE, phone_number TEXT, email_address TEXT, address_street TEXT, address_city TEXT, address_county TEXT, address_postcode TEXT)
	RETURNS INT AS $$" at character 1
2023-01-14 21:13:28.857 GMT [59147] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE SCHEMA IF NOT EXISTS unauthenticated;
	SET search_path TO unauthenticated, public;
	
	-- Allows an unauthenticated user to match hashes to hashes of personal information contained in the customer table
	CREATE OR REPLACE VIEW unauthenticated.unauthenticated_personal_information AS
	SELECT id, md5(first_name) AS first_name, md5(last_name) AS last_name, md5(email_address) AS email_address
	FROM customer;
	
	-- Allows an unauthenticated user to view hashes of usernames contained in the user_login table
	CREATE OR REPLACE VIEW unauthenticated.unauthenticated_login AS
	SELECT md5(username) AS username FROM user_login;
	
	-- Allows a user to insert personal information into the online banking system
	CREATE OR REPLACE FUNCTION unauthenticated.create_personal_info(first_name TEXT, last_name TEXT, date_of_birth DATE, phone_number TEXT, email_address TEXT, address_street TEXT, address_city TEXT, address_county TEXT, address_postcode TEXT)
	RETURNS INT AS $$
	DECLARE customer_id INT;
2023-01-14 21:13:28.857 GMT [59147] ERROR:  syntax error at or near "IF" at character 11
2023-01-14 21:13:28.857 GMT [59147] STATEMENT:  BEGIN
	    IF NOT EXISTS (SELECT FROM unauthenticated.unauthenticated_personal_information WHERE md5(first_name) = first_name AND md5(last_name) = last_name AND md5(email_address) = email_address) THEN
	        INSERT INTO customer
	        VALUES (first_name, last_name, date_of_birth, phone_number, email_address, address_street, address_city, address_county, address_postcode)
	        RETURNING id INTO customer_id;
2023-01-14 21:13:28.858 GMT [59147] ERROR:  syntax error at or near "ELSE" at character 1
2023-01-14 21:13:28.858 GMT [59147] STATEMENT:  ELSE
	        RAISE NOTICE 'CUSTOMER INFORMATION ALREADY PRESENT';
2023-01-14 21:13:28.859 GMT [59147] ERROR:  relation "unauthenticated.unauthenticated_personal_information" does not exist at character 33
2023-01-14 21:13:28.859 GMT [59147] STATEMENT:  SELECT id INTO customer_id FROM unauthenticated.unauthenticated_personal_information WHERE md5(first_name) = first_name AND md5(last_name) = last_name AND md5(email_address) = email_address;
2023-01-14 21:13:28.859 GMT [59147] ERROR:  syntax error at or near "IF" at character 5
2023-01-14 21:13:28.859 GMT [59147] STATEMENT:  END IF;
2023-01-14 21:13:28.859 GMT [59147] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-14 21:13:28.859 GMT [59147] STATEMENT:  RETURN customer_id;
2023-01-14 21:13:28.859 GMT [59147] WARNING:  there is no transaction in progress
2023-01-14 21:13:28.859 GMT [59147] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	-- Allows an unauthenticated user to create an online account
	CREATE OR REPLACE FUNCTION unauthenticated.create_online_account_details(customer_id INT, first_name TEXT, last_name TEXT, email_address TEXT, question_choice_ids INT[], question_answers TEXT[])
	RETURNS INT AS $$" at character 1
2023-01-14 21:13:28.859 GMT [59147] STATEMENT:  $$ LANGUAGE plpgsql;
	
	-- Allows an unauthenticated user to create an online account
	CREATE OR REPLACE FUNCTION unauthenticated.create_online_account_details(customer_id INT, first_name TEXT, last_name TEXT, email_address TEXT, question_choice_ids INT[], question_answers TEXT[])
	RETURNS INT AS $$
	DECLARE account_id INT;
2023-01-14 21:13:28.859 GMT [59147] ERROR:  syntax error at or near "INT" at character 27
2023-01-14 21:13:28.859 GMT [59147] STATEMENT:  DECLARE online_account_id INT;
2023-01-14 21:13:28.860 GMT [59147] ERROR:  syntax error at or near "INT" at character 28
2023-01-14 21:13:28.860 GMT [59147] STATEMENT:  DECLARE question_choice_id INT;
2023-01-14 21:13:28.860 GMT [59147] ERROR:  syntax error at or near "IF" at character 11
2023-01-14 21:13:28.860 GMT [59147] STATEMENT:  BEGIN
	    IF NOT EXISTS (SELECT FROM user_login WHERE username = username) THEN
	        INSERT INTO online_account (date_opened, sort_code, customer_id)
	        VALUES ((SELECT now()), (SELECT num FROM GENERATE_SERIES(1, 6) AS s(num) LIMIT 1), customer_id)
	        RETURNING id INTO account_id;
2023-01-14 21:13:28.860 GMT [59147] ERROR:  syntax error at or near "INTO" at character 131
2023-01-14 21:13:28.860 GMT [59147] STATEMENT:  INSERT INTO user_login (account_id, username, password)
	        VALUES (account_id, username, md5(password))
	        RETURNING id INTO online_account_id;
2023-01-14 21:13:28.860 GMT [59147] ERROR:  syntax error at or near "FOR" at character 1
2023-01-14 21:13:28.860 GMT [59147] STATEMENT:  FOR i IN 0..2 LOOP
	            
	            INSERT INTO user_login_security_question (question_choice_id, login_id)
	            VALUES (question_choice_ids[i], online_account_id)
	            RETURNING id INTO question_choice_id;
2023-01-14 21:13:28.860 GMT [59147] ERROR:  column "answer" of relation "security_question_answer" does not exist at character 39
2023-01-14 21:13:28.860 GMT [59147] STATEMENT:  INSERT INTO security_question_answer (answer, question_id)
	            VALUES (question_answers[i], question_choice_id);
2023-01-14 21:13:28.860 GMT [59147] ERROR:  syntax error at or near "LOOP" at character 5
2023-01-14 21:13:28.860 GMT [59147] STATEMENT:  END LOOP;
2023-01-14 21:13:28.861 GMT [59147] ERROR:  column "account_id" does not exist at character 117
2023-01-14 21:13:28.861 GMT [59147] HINT:  There is a column named "account_id" in table "authentication_log", but it cannot be referenced from this part of the query.
2023-01-14 21:13:28.861 GMT [59147] STATEMENT:  INSERT INTO authentication_log (log_description, log_date, account_id) VALUES ('New online account created', now(), account_id);
2023-01-14 21:13:28.861 GMT [59147] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-14 21:13:28.861 GMT [59147] STATEMENT:  RETURN account_id;
2023-01-14 21:13:28.861 GMT [59147] ERROR:  syntax error at or near "ELSE" at character 1
2023-01-14 21:13:28.861 GMT [59147] STATEMENT:  ELSE
	        RAISE NOTICE 'USERNAME ALREADY TAKEN';
2023-01-14 21:13:28.861 GMT [59147] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-14 21:13:28.861 GMT [59147] STATEMENT:  RETURN NULL;
2023-01-14 21:13:28.861 GMT [59147] ERROR:  syntax error at or near "IF" at character 5
2023-01-14 21:13:28.861 GMT [59147] STATEMENT:  END IF;
2023-01-14 21:13:28.862 GMT [59147] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-14 21:13:28.862 GMT [59147] STATEMENT:  RETURN success;
2023-01-14 21:13:28.862 GMT [59147] WARNING:  there is no transaction in progress
2023-01-14 21:13:28.862 GMT [59147] ERROR:  unterminated dollar-quoted string at or near "$$ LANGUAGE plpgsql;
	
	
	
	
	
	-- sample data for customers
	INSERT INTO customer (first_name, last_name, date_of_birth, phone_number, email_address, address_street, address_city, address_county, address_postcode)
	VALUES ('John', 'Smith', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('Jane', 'Doe', '1990-01-01', '01234567890', 'test@gmail.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Bloggs', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('John', 'Bloggs', '1990-01-01', '01234567890', 'hello@yahoo.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('Jane', 'Bloggs', '1990-01-01', '01234567890', 'test@outlook.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Doe', '1990-01-01', '01234567890', 'hello@outlook.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('John', 'Doe', '1990-01-01', '01234567890', 'mybankemail@icloud.com', '1 My Bank Street', 'My Bank City', 'My Bank County', 'MB1 1NK'),
	('Jane', 'Smith', '1990-01-01', '01234567890', 'bankemail@outlook.com', '1 Bank Street', 'Bank City', 'Bank County', 'BA1 1NK'),
	('Joe', 'Smith', '1990-01-01', '01234567890', 'example@icloud.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX');
	
	-- sample data for online account
	INSERT INTO online_account (date_opened, sort_code, customer_id)
	VALUES ('2020-01-01', '123456', 1),
	('2019-01-01', '126485', 2),
	('2018-01-01', '128475', 3),
	('2017-01-01', '129476', 4),
	('2016-01-01', '120386', 5),
	('2017-02-03', '127385', 6),
	('2018-02-04', '128256', 7),
	('2020-01-01', '129386', 8),
	('2020-01-01', '120386', 9);
	
	-- sample data for user login
	INSERT INTO user_login (account_id, username, password)
	VALUES (1, 'johnsmith', 'b29af57c2b3bba21e9df0cece40952c6'),
	(2, 'janedoe', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(3, 'joebloggs', 'b29af57c2b3bba21e9df0cece40952c6'),
	(4, 'johnbloggs', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(5, 'janebloggs', 'b29af57c2b3bba21e9df0cece40952c6'),
	(6, 'joedoe', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(7, 'johndoe', 'b29af57c2b3bba21e9df0cece40952c6'),
	(8, 'joesmith', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(9, 'janesmith', 'b29af57c2b3bba21e9df0cece40952c6');
	
	-- sample data for security question option
	INSERT INTO security_question_option (question_description)
	VALUES ('What is your favourite colour?'),
	('What is your favourite food?'),
	('What is your favourite animal?'),
	('What is your favourite sport?'),
	('What is your favourite movie?'),
	('What is your favourite book?'),
	('What is your favourite song?'),
	('What is your favourite band?'),
	('What is your favourite game?'),
	('What is your favourite TV show?');
	
	--sample data for user login security question
	INSERT INTO user_login_security_question (question_choice_id, login_id)
	VALUES (1, 1),
	(2, 2),
	(3, 3),
	(4, 4),
	(5, 5),
	(6, 6),
	(7, 7),
	(8, 8),
	(9, 9);
	
	-- sample data for security question answer
	INSERT INTO security_question_answer (question_answer, question_id)
	VALUES ('Red', 1),
	('Blue', 2),
	('Green', 3),
	('Yellow', 4),
	('Orange', 5),
	('Purple', 6),
	('Pink', 7),
	('Black', 8),
	('White', 9);
	
	SELECT * FROM savings_statement;
	
	
	SELECT * FROM client.open_savings_account(1);
	
	--sample data for savings account
	SELECT * FROM client.open_savings_account(1);
	SELECT * FROM client.open_savings_account(2);
	SELECT * FROM client.open_savings_account(3);
	SELECT * FROM client.open_savings_account(4);
	
	SELECT * FROM client.open_debit_account(1);
	SELECT * FROM client.open_debit_account(2);
	SELECT * FROM client.open_debit_account(3);
	SELECT * FROM client.open_debit_account(4);
	
	SELECT * FROM client.open_credit_account(1);
	SELECT * FROM client.open_credit_account(2);
	SELECT * FROM client.open_credit_account(3);
	SELECT * FROM client.open_credit_account(4);
	
	SELECT * FROM client.view_accounts(1);
	
	SELECT * FROM client.initiate_transfer(1, 10000000, 100.00, 10000001, 123456);
	
	SELECT * FROM client.view_accounts(1);
	
	
	
	SELECT * FROM client.view_savings_statements(1, 10000000);
	
	SELECT * FROM savings_statement;
	
	-- -- sample data for savings account
	-- INSERT INTO savings_account (current_balance, interest_rate, account_id)
	-- VALUES (2000.00, 2.05, 1),
	-- (1000.00, 2.05, 2),
	-- (5000.00, 2.05, 3),
	-- (10000.00, 2.05, 4),
	-- (20000.00, 2.05, 5),
	-- (50000.00, 2.05, 6),
	-- (100000.00, 2.05, 7),
	-- (200000.00, 2.05, 8);
	
	-- -- sample data for credit account
	-- INSERT INTO credit_account (outstanding_balance, credit_limit, interest_rate, account_id)
	-- VALUES (55.43, 2000.00, 4.22, 1),
	-- (100.00, 1000.00, 4.22, 2),
	-- (200.00, 5000.00, 4.22, 3),
	-- (300.00, 10000.00, 4.22, 4),
	-- (400.00, 20000.00, 4.22, 5),
	-- (500.00, 50000.00, 4.22, 6),
	-- (600.00, 100000.00, 4.22, 7),
	-- (700.00, 200000.00, 4.22, 8);
	
	-- -- sample data for debit account
	-- INSERT INTO debit_account (current_balance, interest_rate, account_id)
	-- VALUES (3465.43, 0.05, 1),
	-- (1000.00, 0.05, 1),
	-- (5000.00, 0.05, 2),
	-- (10000.00, 0.05, 3),
	-- (20000.00, 0.05, 4),
	-- (50000.00, 0.05, 5),
	-- (100000.00, 0.05, 6),
	-- (200000.00, 0.05, 9);
	
	-- -- sample data for loan
	-- INSERT INTO loan (loan_end_date, loan_amount, loan_type, account_id)
	-- VALUES ('2024-01-01', 10000, 'vehicle', 8),
	-- ('2023-03-04', 300000, 'mortgage', 8),
	-- ('2035-03-03', 400000, 'mortgage', 1),
	-- ('2025-04-05', 25000, 'vehicle', 1),
	-- ('2026-05-05', 34000, 'vehicle', 1),
	-- ('2023-06-07', 500000, 'mortgage', 2),
	-- ('2026-04-04', 60000, 'vehicle', 2),
	-- ('2024-03-03', 70000, 'vehicle', 2),
	-- ('2023-02-02', 800000, 'mortgage', 3),
	-- ('2022-01-01', 90000, 'vehicle', 3),
	-- ('2021-01-01', 100000, 'vehicle', 3),
	-- ('2020-01-01', 110000, 'mortgage', 4),
	-- ('2020-01-01', 12000, 'vehicle', 4),
	-- ('2020-01-01', 13000, 'vehicle', 4),
	-- ('2020-01-01', 140000, 'mortgage', 5),
	-- ('2020-01-01', 15000, 'vehicle', 5),
	-- ('2020-01-01', 16000, 'vehicle', 5),
	-- ('2020-01-01', 170000, 'mortgage', 6),
	-- ('2020-01-01', 18000, 'vehicle', 6),
	-- ('2020-01-01', 19000, 'vehicle', 6),
	-- ('2020-01-01', 200000, 'mortgage', 7),
	-- ('2020-01-01', 21000, 'vehicle', 7),
	-- ('2020-01-01', 22000, 'vehicle', 7);
	
	-- CREATE SCHEMA IF NOT EXISTS staff;
	
	-- SET search_path TO public, staff;" at character 1
2023-01-14 21:13:28.862 GMT [59147] STATEMENT:  $$ LANGUAGE plpgsql;
	
	
	
	
	
	-- sample data for customers
	INSERT INTO customer (first_name, last_name, date_of_birth, phone_number, email_address, address_street, address_city, address_county, address_postcode)
	VALUES ('John', 'Smith', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('Jane', 'Doe', '1990-01-01', '01234567890', 'test@gmail.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Bloggs', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('John', 'Bloggs', '1990-01-01', '01234567890', 'hello@yahoo.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('Jane', 'Bloggs', '1990-01-01', '01234567890', 'test@outlook.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Doe', '1990-01-01', '01234567890', 'hello@outlook.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('John', 'Doe', '1990-01-01', '01234567890', 'mybankemail@icloud.com', '1 My Bank Street', 'My Bank City', 'My Bank County', 'MB1 1NK'),
	('Jane', 'Smith', '1990-01-01', '01234567890', 'bankemail@outlook.com', '1 Bank Street', 'Bank City', 'Bank County', 'BA1 1NK'),
	('Joe', 'Smith', '1990-01-01', '01234567890', 'example@icloud.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX');
	
	-- sample data for online account
	INSERT INTO online_account (date_opened, sort_code, customer_id)
	VALUES ('2020-01-01', '123456', 1),
	('2019-01-01', '126485', 2),
	('2018-01-01', '128475', 3),
	('2017-01-01', '129476', 4),
	('2016-01-01', '120386', 5),
	('2017-02-03', '127385', 6),
	('2018-02-04', '128256', 7),
	('2020-01-01', '129386', 8),
	('2020-01-01', '120386', 9);
	
	-- sample data for user login
	INSERT INTO user_login (account_id, username, password)
	VALUES (1, 'johnsmith', 'b29af57c2b3bba21e9df0cece40952c6'),
	(2, 'janedoe', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(3, 'joebloggs', 'b29af57c2b3bba21e9df0cece40952c6'),
	(4, 'johnbloggs', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(5, 'janebloggs', 'b29af57c2b3bba21e9df0cece40952c6'),
	(6, 'joedoe', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(7, 'johndoe', 'b29af57c2b3bba21e9df0cece40952c6'),
	(8, 'joesmith', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(9, 'janesmith', 'b29af57c2b3bba21e9df0cece40952c6');
	
	-- sample data for security question option
	INSERT INTO security_question_option (question_description)
	VALUES ('What is your favourite colour?'),
	('What is your favourite food?'),
	('What is your favourite animal?'),
	('What is your favourite sport?'),
	('What is your favourite movie?'),
	('What is your favourite book?'),
	('What is your favourite song?'),
	('What is your favourite band?'),
	('What is your favourite game?'),
	('What is your favourite TV show?');
	
	--sample data for user login security question
	INSERT INTO user_login_security_question (question_choice_id, login_id)
	VALUES (1, 1),
	(2, 2),
	(3, 3),
	(4, 4),
	(5, 5),
	(6, 6),
	(7, 7),
	(8, 8),
	(9, 9);
	
	-- sample data for security question answer
	INSERT INTO security_question_answer (question_answer, question_id)
	VALUES ('Red', 1),
	('Blue', 2),
	('Green', 3),
	('Yellow', 4),
	('Orange', 5),
	('Purple', 6),
	('Pink', 7),
	('Black', 8),
	('White', 9);
	
	SELECT * FROM savings_statement;
	
	
	SELECT * FROM client.open_savings_account(1);
	
	--sample data for savings account
	SELECT * FROM client.open_savings_account(1);
	SELECT * FROM client.open_savings_account(2);
	SELECT * FROM client.open_savings_account(3);
	SELECT * FROM client.open_savings_account(4);
	
	SELECT * FROM client.open_debit_account(1);
	SELECT * FROM client.open_debit_account(2);
	SELECT * FROM client.open_debit_account(3);
	SELECT * FROM client.open_debit_account(4);
	
	SELECT * FROM client.open_credit_account(1);
	SELECT * FROM client.open_credit_account(2);
	SELECT * FROM client.open_credit_account(3);
	SELECT * FROM client.open_credit_account(4);
	
	SELECT * FROM client.view_accounts(1);
	
	SELECT * FROM client.initiate_transfer(1, 10000000, 100.00, 10000001, 123456);
	
	SELECT * FROM client.view_accounts(1);
	
	
	
	SELECT * FROM client.view_savings_statements(1, 10000000);
	
	SELECT * FROM savings_statement;
	
	-- -- sample data for savings account
	-- INSERT INTO savings_account (current_balance, interest_rate, account_id)
	-- VALUES (2000.00, 2.05, 1),
	-- (1000.00, 2.05, 2),
	-- (5000.00, 2.05, 3),
	-- (10000.00, 2.05, 4),
	-- (20000.00, 2.05, 5),
	-- (50000.00, 2.05, 6),
	-- (100000.00, 2.05, 7),
	-- (200000.00, 2.05, 8);
	
	-- -- sample data for credit account
	-- INSERT INTO credit_account (outstanding_balance, credit_limit, interest_rate, account_id)
	-- VALUES (55.43, 2000.00, 4.22, 1),
	-- (100.00, 1000.00, 4.22, 2),
	-- (200.00, 5000.00, 4.22, 3),
	-- (300.00, 10000.00, 4.22, 4),
	-- (400.00, 20000.00, 4.22, 5),
	-- (500.00, 50000.00, 4.22, 6),
	-- (600.00, 100000.00, 4.22, 7),
	-- (700.00, 200000.00, 4.22, 8);
	
	-- -- sample data for debit account
	-- INSERT INTO debit_account (current_balance, interest_rate, account_id)
	-- VALUES (3465.43, 0.05, 1),
	-- (1000.00, 0.05, 1),
	-- (5000.00, 0.05, 2),
	-- (10000.00, 0.05, 3),
	-- (20000.00, 0.05, 4),
	-- (50000.00, 0.05, 5),
	-- (100000.00, 0.05, 6),
	-- (200000.00, 0.05, 9);
	
	-- -- sample data for loan
	-- INSERT INTO loan (loan_end_date, loan_amount, loan_type, account_id)
	-- VALUES ('2024-01-01', 10000, 'vehicle', 8),
	-- ('2023-03-04', 300000, 'mortgage', 8),
	-- ('2035-03-03', 400000, 'mortgage', 1),
	-- ('2025-04-05', 25000, 'vehicle', 1),
	-- ('2026-05-05', 34000, 'vehicle', 1),
	-- ('2023-06-07', 500000, 'mortgage', 2),
	-- ('2026-04-04', 60000, 'vehicle', 2),
	-- ('2024-03-03', 70000, 'vehicle', 2),
	-- ('2023-02-02', 800000, 'mortgage', 3),
	-- ('2022-01-01', 90000, 'vehicle', 3),
	-- ('2021-01-01', 100000, 'vehicle', 3),
	-- ('2020-01-01', 110000, 'mortgage', 4),
	-- ('2020-01-01', 12000, 'vehicle', 4),
	-- ('2020-01-01', 13000, 'vehicle', 4),
	-- ('2020-01-01', 140000, 'mortgage', 5),
	-- ('2020-01-01', 15000, 'vehicle', 5),
	-- ('2020-01-01', 16000, 'vehicle', 5),
	-- ('2020-01-01', 170000, 'mortgage', 6),
	-- ('2020-01-01', 18000, 'vehicle', 6),
	-- ('2020-01-01', 19000, 'vehicle', 6),
	-- ('2020-01-01', 200000, 'mortgage', 7),
	-- ('2020-01-01', 21000, 'vehicle', 7),
	-- ('2020-01-01', 22000, 'vehicle', 7);
	
	-- CREATE SCHEMA IF NOT EXISTS staff;
	
	-- SET search_path TO public, staff;
2023-01-14 21:14:00.648 GMT [59113] LOG:  received fast shutdown request
2023-01-14 21:14:00.650 GMT [59113] LOG:  aborting any active transactions
2023-01-14 21:14:00.653 GMT [59113] LOG:  background worker "logical replication launcher" (PID 59120) exited with exit code 1
2023-01-14 21:14:00.656 GMT [59115] LOG:  shutting down
2023-01-14 21:14:00.702 GMT [59113] LOG:  database system is shut down
2023-01-14 21:14:01.987 GMT [59342] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-14 21:14:01.989 GMT [59342] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-14 21:14:01.991 GMT [59342] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-14 21:14:01.995 GMT [59343] LOG:  database system was shut down at 2023-01-14 21:14:01 GMT
2023-01-14 21:14:02.001 GMT [59342] LOG:  database system is ready to accept connections
2023-01-14 21:14:02.905 GMT [59368] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 236
2023-01-14 21:14:02.905 GMT [59368] HINT:  You will need to rewrite or cast the expression.
2023-01-14 21:14:02.905 GMT [59368] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (date_trunc('month', now()::date), (date_trunc('month', now()::date)) + interval '1 month - 1 day', 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 21:14:02.905 GMT [59368] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 21:14:02.905 GMT [59368] STATEMENT:  SELECT * FROM client.open_credit_account(1);
2023-01-14 21:14:02.906 GMT [59368] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 236
2023-01-14 21:14:02.906 GMT [59368] HINT:  You will need to rewrite or cast the expression.
2023-01-14 21:14:02.906 GMT [59368] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (date_trunc('month', now()::date), (date_trunc('month', now()::date)) + interval '1 month - 1 day', 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 21:14:02.906 GMT [59368] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 21:14:02.906 GMT [59368] STATEMENT:  SELECT * FROM client.open_credit_account(2);
2023-01-14 21:14:02.908 GMT [59368] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 236
2023-01-14 21:14:02.908 GMT [59368] HINT:  You will need to rewrite or cast the expression.
2023-01-14 21:14:02.908 GMT [59368] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (date_trunc('month', now()::date), (date_trunc('month', now()::date)) + interval '1 month - 1 day', 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 21:14:02.908 GMT [59368] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 21:14:02.908 GMT [59368] STATEMENT:  SELECT * FROM client.open_credit_account(3);
2023-01-14 21:14:02.910 GMT [59368] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 236
2023-01-14 21:14:02.910 GMT [59368] HINT:  You will need to rewrite or cast the expression.
2023-01-14 21:14:02.910 GMT [59368] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (date_trunc('month', now()::date), (date_trunc('month', now()::date)) + interval '1 month - 1 day', 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 21:14:02.910 GMT [59368] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 21:14:02.910 GMT [59368] STATEMENT:  SELECT * FROM client.open_credit_account(4);
2023-01-14 21:14:31.001 GMT [59342] LOG:  received fast shutdown request
2023-01-14 21:14:31.003 GMT [59342] LOG:  aborting any active transactions
2023-01-14 21:14:31.007 GMT [59342] LOG:  background worker "logical replication launcher" (PID 59349) exited with exit code 1
2023-01-14 21:14:31.007 GMT [59344] LOG:  shutting down
2023-01-14 21:14:31.060 GMT [59342] LOG:  database system is shut down
2023-01-14 21:14:32.170 GMT [59553] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-14 21:14:32.170 GMT [59553] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-14 21:14:32.172 GMT [59553] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-14 21:14:32.176 GMT [59554] LOG:  database system was shut down at 2023-01-14 21:14:31 GMT
2023-01-14 21:14:32.183 GMT [59553] LOG:  database system is ready to accept connections
2023-01-14 21:14:33.076 GMT [59582] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 236
2023-01-14 21:14:33.076 GMT [59582] HINT:  You will need to rewrite or cast the expression.
2023-01-14 21:14:33.076 GMT [59582] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (date_trunc('month', now()::date), (date_trunc('month', now()::date)) + interval '1 month - 1 day', 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 21:14:33.076 GMT [59582] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 21:14:33.076 GMT [59582] STATEMENT:  SELECT * FROM client.open_credit_account(1);
2023-01-14 21:14:33.077 GMT [59582] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 236
2023-01-14 21:14:33.077 GMT [59582] HINT:  You will need to rewrite or cast the expression.
2023-01-14 21:14:33.077 GMT [59582] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (date_trunc('month', now()::date), (date_trunc('month', now()::date)) + interval '1 month - 1 day', 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 21:14:33.077 GMT [59582] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 21:14:33.077 GMT [59582] STATEMENT:  SELECT * FROM client.open_credit_account(2);
2023-01-14 21:14:33.077 GMT [59582] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 236
2023-01-14 21:14:33.077 GMT [59582] HINT:  You will need to rewrite or cast the expression.
2023-01-14 21:14:33.077 GMT [59582] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (date_trunc('month', now()::date), (date_trunc('month', now()::date)) + interval '1 month - 1 day', 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 21:14:33.077 GMT [59582] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 21:14:33.077 GMT [59582] STATEMENT:  SELECT * FROM client.open_credit_account(3);
2023-01-14 21:14:33.078 GMT [59582] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 236
2023-01-14 21:14:33.078 GMT [59582] HINT:  You will need to rewrite or cast the expression.
2023-01-14 21:14:33.078 GMT [59582] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (date_trunc('month', now()::date), (date_trunc('month', now()::date)) + interval '1 month - 1 day', 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 21:14:33.078 GMT [59582] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 21:14:33.078 GMT [59582] STATEMENT:  SELECT * FROM client.open_credit_account(4);
2023-01-14 21:16:49.574 GMT [59553] LOG:  received fast shutdown request
2023-01-14 21:16:49.576 GMT [59553] LOG:  aborting any active transactions
2023-01-14 21:16:49.578 GMT [59553] LOG:  background worker "logical replication launcher" (PID 59560) exited with exit code 1
2023-01-14 21:16:49.580 GMT [59555] LOG:  shutting down
2023-01-14 21:16:49.626 GMT [59553] LOG:  database system is shut down
2023-01-14 21:16:50.680 GMT [60102] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-14 21:16:50.681 GMT [60102] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-14 21:16:50.682 GMT [60102] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-14 21:16:50.687 GMT [60103] LOG:  database system was shut down at 2023-01-14 21:16:50 GMT
2023-01-14 21:16:50.693 GMT [60102] LOG:  database system is ready to accept connections
2023-01-14 21:16:51.456 GMT [60131] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 236
2023-01-14 21:16:51.456 GMT [60131] HINT:  You will need to rewrite or cast the expression.
2023-01-14 21:16:51.456 GMT [60131] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (date_trunc('month', now()::date), (date_trunc('month', now()::date)) + interval '1 month - 1 day', 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 21:16:51.456 GMT [60131] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 21:16:51.456 GMT [60131] STATEMENT:  SELECT * FROM client.open_credit_account(1);
2023-01-14 21:16:51.457 GMT [60131] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 236
2023-01-14 21:16:51.457 GMT [60131] HINT:  You will need to rewrite or cast the expression.
2023-01-14 21:16:51.457 GMT [60131] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (date_trunc('month', now()::date), (date_trunc('month', now()::date)) + interval '1 month - 1 day', 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 21:16:51.457 GMT [60131] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 21:16:51.457 GMT [60131] STATEMENT:  SELECT * FROM client.open_credit_account(2);
2023-01-14 21:16:51.457 GMT [60131] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 236
2023-01-14 21:16:51.457 GMT [60131] HINT:  You will need to rewrite or cast the expression.
2023-01-14 21:16:51.457 GMT [60131] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (date_trunc('month', now()::date), (date_trunc('month', now()::date)) + interval '1 month - 1 day', 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 21:16:51.457 GMT [60131] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 21:16:51.457 GMT [60131] STATEMENT:  SELECT * FROM client.open_credit_account(3);
2023-01-14 21:16:51.458 GMT [60131] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 236
2023-01-14 21:16:51.458 GMT [60131] HINT:  You will need to rewrite or cast the expression.
2023-01-14 21:16:51.458 GMT [60131] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (date_trunc('month', now()::date), (date_trunc('month', now()::date)) + interval '1 month - 1 day', 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 21:16:51.458 GMT [60131] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 21:16:51.458 GMT [60131] STATEMENT:  SELECT * FROM client.open_credit_account(4);
2023-01-14 21:16:51.465 GMT [60131] ERROR:  column "account_identifier" does not exist at character 76
2023-01-14 21:16:51.465 GMT [60131] QUERY:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Placed transaction out of account', CURRENT_DATE)
2023-01-14 21:16:51.465 GMT [60131] CONTEXT:  PL/pgSQL function place_transaction_out_of_account(integer,integer,numeric) line 5 at SQL statement
	SQL statement "SELECT * FROM client.place_transaction_out_of_account(transfer_account_number, orig_account_number, transfer_amount)"
	PL/pgSQL function initiate_transfer(integer,integer,numeric,integer,integer) line 17 at SQL statement
2023-01-14 21:16:51.465 GMT [60131] STATEMENT:  SELECT * FROM client.initiate_transfer(1, 10000000, 100.00, 10000001, 123456);
2023-01-14 21:17:36.247 GMT [60102] LOG:  received fast shutdown request
2023-01-14 21:17:36.249 GMT [60102] LOG:  aborting any active transactions
2023-01-14 21:17:36.254 GMT [60102] LOG:  background worker "logical replication launcher" (PID 60109) exited with exit code 1
2023-01-14 21:17:36.254 GMT [60104] LOG:  shutting down
2023-01-14 21:17:36.299 GMT [60102] LOG:  database system is shut down
2023-01-14 21:17:37.523 GMT [60381] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-14 21:17:37.527 GMT [60381] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-14 21:17:37.529 GMT [60381] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-14 21:17:37.532 GMT [60383] LOG:  database system was shut down at 2023-01-14 21:17:37 GMT
2023-01-14 21:17:37.538 GMT [60381] LOG:  database system is ready to accept connections
2023-01-14 21:17:38.472 GMT [60413] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 236
2023-01-14 21:17:38.472 GMT [60413] HINT:  You will need to rewrite or cast the expression.
2023-01-14 21:17:38.472 GMT [60413] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (date_trunc('month', now()::date), (date_trunc('month', now()::date)) + interval '1 month - 1 day', 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 21:17:38.472 GMT [60413] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 21:17:38.472 GMT [60413] STATEMENT:  SELECT * FROM client.open_credit_account(1);
2023-01-14 21:17:38.473 GMT [60413] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 236
2023-01-14 21:17:38.473 GMT [60413] HINT:  You will need to rewrite or cast the expression.
2023-01-14 21:17:38.473 GMT [60413] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (date_trunc('month', now()::date), (date_trunc('month', now()::date)) + interval '1 month - 1 day', 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 21:17:38.473 GMT [60413] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 21:17:38.473 GMT [60413] STATEMENT:  SELECT * FROM client.open_credit_account(2);
2023-01-14 21:17:38.474 GMT [60413] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 236
2023-01-14 21:17:38.474 GMT [60413] HINT:  You will need to rewrite or cast the expression.
2023-01-14 21:17:38.474 GMT [60413] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (date_trunc('month', now()::date), (date_trunc('month', now()::date)) + interval '1 month - 1 day', 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 21:17:38.474 GMT [60413] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 21:17:38.474 GMT [60413] STATEMENT:  SELECT * FROM client.open_credit_account(3);
2023-01-14 21:17:38.475 GMT [60413] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 236
2023-01-14 21:17:38.475 GMT [60413] HINT:  You will need to rewrite or cast the expression.
2023-01-14 21:17:38.475 GMT [60413] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (date_trunc('month', now()::date), (date_trunc('month', now()::date)) + interval '1 month - 1 day', 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 21:17:38.475 GMT [60413] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 21:17:38.475 GMT [60413] STATEMENT:  SELECT * FROM client.open_credit_account(4);
2023-01-14 21:17:38.491 GMT [60413] ERROR:  column "account_identifier" does not exist at character 46
2023-01-14 21:17:38.491 GMT [60413] QUERY:  SELECT * FROM client.get_or_create_statement(account_identifier, orig_account_number)
2023-01-14 21:17:38.491 GMT [60413] CONTEXT:  PL/pgSQL function place_transaction_out_of_account(integer,integer,numeric) line 20 at SQL statement
	SQL statement "SELECT * FROM client.place_transaction_out_of_account(transfer_account_number, orig_account_number, transfer_amount)"
	PL/pgSQL function initiate_transfer(integer,integer,numeric,integer,integer) line 17 at SQL statement
2023-01-14 21:17:38.491 GMT [60413] STATEMENT:  SELECT * FROM client.initiate_transfer(1, 10000000, 100.00, 10000001, 123456);
2023-01-14 21:21:12.009 GMT [60381] LOG:  received fast shutdown request
2023-01-14 21:21:12.010 GMT [60381] LOG:  aborting any active transactions
2023-01-14 21:21:12.016 GMT [60381] LOG:  background worker "logical replication launcher" (PID 60389) exited with exit code 1
2023-01-14 21:21:12.017 GMT [60384] LOG:  shutting down
2023-01-14 21:21:12.060 GMT [60381] LOG:  database system is shut down
2023-01-14 21:21:13.252 GMT [61171] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-14 21:21:13.253 GMT [61171] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-14 21:21:13.254 GMT [61171] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-14 21:21:13.259 GMT [61172] LOG:  database system was shut down at 2023-01-14 21:21:12 GMT
2023-01-14 21:21:13.265 GMT [61171] LOG:  database system is ready to accept connections
2023-01-14 21:21:14.088 GMT [61200] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 236
2023-01-14 21:21:14.088 GMT [61200] HINT:  You will need to rewrite or cast the expression.
2023-01-14 21:21:14.088 GMT [61200] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (date_trunc('month', now()::date), (date_trunc('month', now()::date)) + interval '1 month - 1 day', 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 21:21:14.088 GMT [61200] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 21:21:14.088 GMT [61200] STATEMENT:  SELECT * FROM client.open_credit_account(1);
2023-01-14 21:21:14.089 GMT [61200] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 236
2023-01-14 21:21:14.089 GMT [61200] HINT:  You will need to rewrite or cast the expression.
2023-01-14 21:21:14.089 GMT [61200] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (date_trunc('month', now()::date), (date_trunc('month', now()::date)) + interval '1 month - 1 day', 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 21:21:14.089 GMT [61200] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 21:21:14.089 GMT [61200] STATEMENT:  SELECT * FROM client.open_credit_account(2);
2023-01-14 21:21:14.090 GMT [61200] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 236
2023-01-14 21:21:14.090 GMT [61200] HINT:  You will need to rewrite or cast the expression.
2023-01-14 21:21:14.090 GMT [61200] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (date_trunc('month', now()::date), (date_trunc('month', now()::date)) + interval '1 month - 1 day', 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 21:21:14.090 GMT [61200] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 21:21:14.090 GMT [61200] STATEMENT:  SELECT * FROM client.open_credit_account(3);
2023-01-14 21:21:14.091 GMT [61200] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 236
2023-01-14 21:21:14.091 GMT [61200] HINT:  You will need to rewrite or cast the expression.
2023-01-14 21:21:14.091 GMT [61200] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (date_trunc('month', now()::date), (date_trunc('month', now()::date)) + interval '1 month - 1 day', 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 21:21:14.091 GMT [61200] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 21:21:14.091 GMT [61200] STATEMENT:  SELECT * FROM client.open_credit_account(4);
2023-01-14 21:21:14.103 GMT [61200] ERROR:  column "account_identifier" does not exist at character 46
2023-01-14 21:21:14.103 GMT [61200] QUERY:  SELECT * FROM client.get_or_create_statement(account_identifier, orig_account_number)
2023-01-14 21:21:14.103 GMT [61200] CONTEXT:  PL/pgSQL function place_transaction_out_of_account(integer,integer,integer,numeric) line 20 at SQL statement
	SQL statement "SELECT * FROM client.place_transaction_out_of_account(account_identifier, transfer_account_number, orig_account_number, transfer_amount)"
	PL/pgSQL function initiate_transfer(integer,integer,numeric,integer,integer) line 17 at SQL statement
2023-01-14 21:21:14.103 GMT [61200] STATEMENT:  SELECT * FROM client.initiate_transfer(1, 10000000, 100.00, 10000001, 123456);
2023-01-14 21:23:19.933 GMT [61171] LOG:  received fast shutdown request
2023-01-14 21:23:19.935 GMT [61171] LOG:  aborting any active transactions
2023-01-14 21:23:19.940 GMT [61171] LOG:  background worker "logical replication launcher" (PID 61178) exited with exit code 1
2023-01-14 21:23:19.941 GMT [61173] LOG:  shutting down
2023-01-14 21:23:19.991 GMT [61171] LOG:  database system is shut down
2023-01-14 21:23:21.135 GMT [61690] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-14 21:23:21.135 GMT [61690] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-14 21:23:21.137 GMT [61690] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-14 21:23:21.142 GMT [61691] LOG:  database system was shut down at 2023-01-14 21:23:20 GMT
2023-01-14 21:23:21.147 GMT [61690] LOG:  database system is ready to accept connections
2023-01-14 21:23:21.989 GMT [61716] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 236
2023-01-14 21:23:21.989 GMT [61716] HINT:  You will need to rewrite or cast the expression.
2023-01-14 21:23:21.989 GMT [61716] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (date_trunc('month', now()::date), (date_trunc('month', now()::date)) + interval '1 month - 1 day', 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 21:23:21.989 GMT [61716] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 21:23:21.989 GMT [61716] STATEMENT:  SELECT * FROM client.open_credit_account(1);
2023-01-14 21:23:21.990 GMT [61716] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 236
2023-01-14 21:23:21.990 GMT [61716] HINT:  You will need to rewrite or cast the expression.
2023-01-14 21:23:21.990 GMT [61716] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (date_trunc('month', now()::date), (date_trunc('month', now()::date)) + interval '1 month - 1 day', 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 21:23:21.990 GMT [61716] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 21:23:21.990 GMT [61716] STATEMENT:  SELECT * FROM client.open_credit_account(2);
2023-01-14 21:23:21.990 GMT [61716] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 236
2023-01-14 21:23:21.990 GMT [61716] HINT:  You will need to rewrite or cast the expression.
2023-01-14 21:23:21.990 GMT [61716] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (date_trunc('month', now()::date), (date_trunc('month', now()::date)) + interval '1 month - 1 day', 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 21:23:21.990 GMT [61716] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 21:23:21.990 GMT [61716] STATEMENT:  SELECT * FROM client.open_credit_account(3);
2023-01-14 21:23:21.990 GMT [61716] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 236
2023-01-14 21:23:21.990 GMT [61716] HINT:  You will need to rewrite or cast the expression.
2023-01-14 21:23:21.990 GMT [61716] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (date_trunc('month', now()::date), (date_trunc('month', now()::date)) + interval '1 month - 1 day', 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 21:23:21.990 GMT [61716] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 21:23:21.990 GMT [61716] STATEMENT:  SELECT * FROM client.open_credit_account(4);
2023-01-14 21:23:21.997 GMT [61716] ERROR:  column "account_identifier" does not exist at character 76
2023-01-14 21:23:21.997 GMT [61716] QUERY:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Placed transaction out of account', CURRENT_DATE)
2023-01-14 21:23:21.997 GMT [61716] CONTEXT:  PL/pgSQL function place_transaction_out_of_account(integer,integer,integer,numeric) line 5 at SQL statement
	SQL statement "SELECT * FROM client.place_transaction_out_of_account(account_identifier, transfer_account_number, orig_account_number, transfer_amount)"
	PL/pgSQL function initiate_transfer(integer,integer,numeric,integer,integer) line 17 at SQL statement
2023-01-14 21:23:21.997 GMT [61716] STATEMENT:  SELECT * FROM client.initiate_transfer(1, 10000000, 100.00, 10000001, 123456);
2023-01-14 21:23:46.681 GMT [61690] LOG:  received fast shutdown request
2023-01-14 21:23:46.683 GMT [61690] LOG:  aborting any active transactions
2023-01-14 21:23:46.687 GMT [61690] LOG:  background worker "logical replication launcher" (PID 61697) exited with exit code 1
2023-01-14 21:23:46.687 GMT [61692] LOG:  shutting down
2023-01-14 21:23:46.736 GMT [61690] LOG:  database system is shut down
2023-01-14 21:23:47.917 GMT [61878] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-14 21:23:47.917 GMT [61878] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-14 21:23:47.919 GMT [61878] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-14 21:23:47.925 GMT [61879] LOG:  database system was shut down at 2023-01-14 21:23:47 GMT
2023-01-14 21:23:47.931 GMT [61878] LOG:  database system is ready to accept connections
2023-01-14 21:23:48.768 GMT [61907] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 236
2023-01-14 21:23:48.768 GMT [61907] HINT:  You will need to rewrite or cast the expression.
2023-01-14 21:23:48.768 GMT [61907] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (date_trunc('month', now()::date), (date_trunc('month', now()::date)) + interval '1 month - 1 day', 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 21:23:48.768 GMT [61907] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 21:23:48.768 GMT [61907] STATEMENT:  SELECT * FROM client.open_credit_account(1);
2023-01-14 21:23:48.771 GMT [61907] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 236
2023-01-14 21:23:48.771 GMT [61907] HINT:  You will need to rewrite or cast the expression.
2023-01-14 21:23:48.771 GMT [61907] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (date_trunc('month', now()::date), (date_trunc('month', now()::date)) + interval '1 month - 1 day', 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 21:23:48.771 GMT [61907] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 21:23:48.771 GMT [61907] STATEMENT:  SELECT * FROM client.open_credit_account(2);
2023-01-14 21:23:48.772 GMT [61907] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 236
2023-01-14 21:23:48.772 GMT [61907] HINT:  You will need to rewrite or cast the expression.
2023-01-14 21:23:48.772 GMT [61907] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (date_trunc('month', now()::date), (date_trunc('month', now()::date)) + interval '1 month - 1 day', 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 21:23:48.772 GMT [61907] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 21:23:48.772 GMT [61907] STATEMENT:  SELECT * FROM client.open_credit_account(3);
2023-01-14 21:23:48.773 GMT [61907] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 236
2023-01-14 21:23:48.773 GMT [61907] HINT:  You will need to rewrite or cast the expression.
2023-01-14 21:23:48.773 GMT [61907] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (date_trunc('month', now()::date), (date_trunc('month', now()::date)) + interval '1 month - 1 day', 0, 0, CURRENT_DATE, credit_account_number)
2023-01-14 21:23:48.773 GMT [61907] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-14 21:23:48.773 GMT [61907] STATEMENT:  SELECT * FROM client.open_credit_account(4);
2023-01-15 21:44:14.031 GMT [61878] LOG:  received smart shutdown request
2023-01-15 21:44:14.050 GMT [61878] LOG:  background worker "logical replication launcher" (PID 61885) exited with exit code 1
2023-01-15 21:44:14.052 GMT [61878] LOG:  received SIGHUP, reloading configuration files
2023-01-15 21:44:14.061 GMT [61880] LOG:  shutting down
2023-01-15 21:44:14.164 GMT [61878] LOG:  database system is shut down
2023-01-16 16:17:17.518 GMT [33664] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 16:17:17.520 GMT [33664] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 16:17:17.521 GMT [33664] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 16:17:17.526 GMT [33665] LOG:  database system was shut down at 2023-01-16 16:17:17 GMT
2023-01-16 16:17:17.532 GMT [33664] LOG:  database system is ready to accept connections
2023-01-16 16:17:18.279 GMT [33690] ERROR:  column pending_transaction.origin_account_id does not exist at character 88
2023-01-16 16:17:18.279 GMT [33690] STATEMENT:  CREATE OR REPLACE VIEW bank.pending_transactions AS
	    SELECT pending_transaction.id, pending_transaction.origin_account_id, transaction.dest_account_id, transaction.sort_code, transaction.amount, transaction.date, get_account_type(transaction.origin_account_id) AS origin_account_type
	    FROM pending_transaction
	    INNER JOIN transaction ON pending_transaction.id = transaction.id;
2023-01-16 16:17:18.282 GMT [33690] ERROR:  syntax error at or near "ELIF" at character 577
2023-01-16 16:17:18.282 GMT [33690] STATEMENT:  CREATE OR REPLACE FUNCTION bank.verify_transaction_type(pending_transaction_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE transaction_approved BOOLEAN;
	BEGIN
	    -- check pending transaction exists
	    IF EXISTS (SELECT * FROM bank.pending_transactions) THEN
	        --check is it is a transfer
	        IF EXISTS (SELECT * FROM bank.pending_transactions WHERE id = pending_transaction_id AND is_transfer = TRUE) THEN
	            RAISE NOTICE 'Transfer transaction';
	            SELECT * FROM verify_transaction_amounts(pending_transaction_id, TRUE) INTO transaction_approved;
	        ELIF EXISTS (SELECT * FROM bank.pending_transactions WHERE id = pending_transaction_id AND is_transfer = FALSE) THEN
	            RAISE NOTICE 'Payment transaction';
	            SELECT * FROM verify_transaction_amounts(pending_transaction_id, FALSE) INTO transaction_approved;
	        ELSE
	            RAISE NOTICE 'Unknown transaction type';
	            transaction_approved = FALSE;
	        END IF;
	    ELSE
	        RAISE NOTICE 'Transaction does not exist';
	        transaction_approved = FALSE;
	    END IF;
	    RETURN transaction_approved;
	END;
	$$ LANGUAGE plpgsql;
2023-01-16 16:17:18.282 GMT [33690] ERROR:  syntax error at or near "RETURN" at character 1898
2023-01-16 16:17:18.282 GMT [33690] STATEMENT:  CREATE OR REPLACE FUNCTION bank.verify_transaction(pending_transaction_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE transaction_approved BOOLEAN;
	DECLARE account_type TEXT;
	BEGIN
	    -- check pending transaction exists
	    IF verify_transaction_type(pending_transaction_id) = TRUE THEN
	        RAISE NOTICE 'Transaction approved';
	        transaction_approved = TRUE;
	    ELSE
	        RAISE NOTICE 'Transaction not approved';
	        transaction_approved = FALSE;
	    END IF;
	    RETURN transaction_approved;
	END;
	
	CREATE SCHEMA IF NOT EXISTS staff;
	SET search_path TO public, staff, client;
	
	CREATE OR REPLACE VIEW staff.accounts AS
	    SELECT account.account_number, account.account_id, online_account.sort_code
	    FROM account
	    INNER JOIN online_account ON account.account_id = online_account.id;
	
	CREATE OR REPLACE VIEW staff.credit_account_applications AS
	    SELECT credit_account_application.id, credit_account_application.application_status, credit_account.account_number, credit_account.outstanding_balance, credit_account.credit_limit, credit_account.interest_rate
	    FROM credit_account_application
	    INNER JOIN credit_account ON credit_account_application.account_number = credit_account.account_number;
	
	CREATE OR REPLACE VIEW staff.loan_applications AS
	    SELECT loan_application.id, loan_application.application_status, loan.id as loan_id, loan.amount, loan.end_date, loan.loan_type, loan.interest_rate, loan.account_id
	    FROM loan_application
	    INNER JOIN loan ON loan_application.loan_id = loan.id;
	
	CREATE OR REPLACE VIEW staff.customers AS
	    SELECT online_account.id as account_id, customer.first_name, customer.last_name
	    FROM online_account
	    INNER JOIN customer ON customer.id = online_account.customer_id;
	
	CREATE OR REPLACE FUNCTION staff.view_outstanding_credit_applications()
	RETURNS TABLE(first_name TEXT, last_name TEXT, account_number INT) AS $$
	BEGIN
	    RETURN QUERY SELECT customers.first_name, customers.last_name, credit_account_applications.account_number
	    FROM staff.customers
	    INNER JOIN staff.accounts ON customers.account_id = accounts.account_id
	    INNER JOIN staff.credit_card_applications ON accounts.account_number = credit_card_applications.account_number
	    WHERE credit_card_applications.application_status = 'PENDING';
	END;
2023-01-16 16:17:18.282 GMT [33690] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION staff.view_outstanding_loan_applications()
	RETURNS TABLE(first_name TEXT, last_name TEXT, loan_id INT) AS $$" at character 1
2023-01-16 16:17:18.282 GMT [33690] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION staff.view_outstanding_loan_applications()
	RETURNS TABLE(first_name TEXT, last_name TEXT, loan_id INT) AS $$
	BEGIN
	    RETURN QUERY SELECT customers.first_name, customers.last_name, loan_applications.id
	    FROM staff.customers
	    INNER JOIN staff.loan_applications ON loan_applications.account_id = customers.account_id
	    WHERE loan_applications.application_status = 'PENDING';
2023-01-16 16:17:18.282 GMT [33690] WARNING:  there is no transaction in progress
2023-01-16 16:17:18.283 GMT [33690] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	
	CREATE SCHEMA IF NOT EXISTS client;
	SET search_path TO public, client;
	
	
	CREATE OR REPLACE VIEW client.accounts AS
	    SELECT account.account_number, account.account_id, online_account.sort_code FROM account
	    INNER JOIN online_account ON account.account_id = online_account.id;
	
	CREATE OR REPLACE VIEW client.debit_accounts AS
	    SELECT account.account_id, account.account_number, debit_account.current_balance, debit_account.interest_rate, debit_overdraft.overdraft_limit, debit_overdraft.overdraft_usage, debit_overdraft.interest_rate AS overdraft_interest_rate
	    FROM client.accounts
	    INNER JOIN debit_account ON account.account_number = debit_account.account_number
	    INNER JOIN debit_overdraft ON account.account_number = debit_overdraft.account_number;
	
	CREATE OR REPLACE VIEW client.debit_accounts_statements AS
	    SELECT debit_accounts.account_id, debit_accounts.account_number, debit_statement.id, debit_statement.starting_date, debit_statement.end_date, debit_statement.amount
	    FROM debit_accounts
	    INNER JOIN debit_statement ON debit_accounts.account_number = debit_statement.account_number;
	
	CREATE OR REPLACE VIEW client.debit_accounts_statement AS
	    SELECT debit_accounts_statements.account_id, debit_accounts_statements.account_number, debit_accounts_statements.id, debit_accounts_statements.starting_date, debit_accounts_statements.end_date, debit_accounts_statements.amount AS total_amount, transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date
	    FROM debit_accounts_statements
	    INNER JOIN transaction ON debit_accounts_statements.id = transaction.debit_statement_id;
	
	CREATE OR REPLACE VIEW client.credit_accounts AS
	    SELECT account.account_id, account.account_number, credit_account.outstanding_balance, credit_account.credit_limit, credit_account.interest_rate, credit_account_application.application_status
	    FROM client.accounts
	    INNER JOIN credit_account ON account.account_number = credit_account.account_number
	    INNER JOIN credit_account_application ON account.account_number = credit_account_application.account_number;
	
	CREATE OR REPLACE VIEW client.credit_accounts_statements AS
	    SELECT credit_accounts.account_id, credit_accounts.account_number, credit_statement.id, credit_statement.starting_date, credit_statement.end_date, credit_statement.amount, credit_statement.minimum_payment, credit_statement.minimum_payment_due_date
	    FROM credit_accounts
	    INNER JOIN credit_statement ON credit_accounts.account_number = credit_statement.account_number;
	
	CREATE OR REPLACE VIEW client.credit_accounts_statement AS
	    SELECT credit_accounts_statements.account_id, credit_accounts_statements.account_number, credit_accounts_statements.id, credit_accounts_statements.starting_date, credit_accounts_statements.end_date, credit_accounts_statements.amount AS total_amount, credit_accounts_statements.minimum_payment, credit_accounts_statements.minimum_payment_due_date, transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date
	    FROM credit_accounts_statements
	    INNER JOIN transaction ON credit_accounts_statements.id = transaction.credit_statement_id;
	
	CREATE OR REPLACE VIEW client.savings_accounts AS
	    SELECT account.account_id, account.account_number, savings_account.current_balance, savings_account.interest_rate
	    FROM client.accounts
	    INNER JOIN savings_account ON account.account_number = savings_account.account_number;
	
	CREATE OR REPLACE VIEW client.savings_accounts_statements AS
	    SELECT savings_accounts.account_id, savings_accounts.account_number, savings_statement.id, savings_statement.starting_date, savings_statement.end_date, savings_statement.amount
	    FROM savings_accounts
	    INNER JOIN savings_statement ON savings_accounts.account_number = savings_statement.account_number;
	
	CREATE OR REPLACE VIEW client.loans AS
	    SELECT loan.account_id, loan.id, loan.amount, loan.interest_rate, loan.loan_type, loan.end_date, loan_application.application_status
	    FROM loan
	    INNER JOIN loan_application ON loan.id = loan_application.loan_id;
	
	CREATE OR REPLACE VIEW client.loan_statements AS
	    SELECT loans.account_id, loans.id, loan_statement.id as statement_id, loan_statement.starting_date, loan_statement.amount
	    FROM client.loans
	    INNER JOIN loan_statement ON loans.id = loan_statement.loan_id;
	
	CREATE OR REPLACE VIEW client.loan_applications AS
	    SELECT loan.account_id, loan_application.id, loan_application.application_status, loan_application.loan_id
	    FROM loan_application
	    INNER JOIN loan ON loan_application.loan_id = loan.id;
	
	CREATE OR REPLACE FUNCTION client.update_personal_information(account_identifier INT, first_name TEXT, last_name TEXT, date_of_birth DATE, phone_number TEXT, email_address TEXT, address_street TEXT, address_city TEXT, address_county TEXT, address_postcode TEXT, account_id INT)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-16 16:17:18.283 GMT [33690] STATEMENT:  $$ LANGUAGE plpgsql;
	
	
	CREATE SCHEMA IF NOT EXISTS client;
	SET search_path TO public, client;
	
	
	CREATE OR REPLACE VIEW client.accounts AS
	    SELECT account.account_number, account.account_id, online_account.sort_code FROM account
	    INNER JOIN online_account ON account.account_id = online_account.id;
	
	CREATE OR REPLACE VIEW client.debit_accounts AS
	    SELECT account.account_id, account.account_number, debit_account.current_balance, debit_account.interest_rate, debit_overdraft.overdraft_limit, debit_overdraft.overdraft_usage, debit_overdraft.interest_rate AS overdraft_interest_rate
	    FROM client.accounts
	    INNER JOIN debit_account ON account.account_number = debit_account.account_number
	    INNER JOIN debit_overdraft ON account.account_number = debit_overdraft.account_number;
	
	CREATE OR REPLACE VIEW client.debit_accounts_statements AS
	    SELECT debit_accounts.account_id, debit_accounts.account_number, debit_statement.id, debit_statement.starting_date, debit_statement.end_date, debit_statement.amount
	    FROM debit_accounts
	    INNER JOIN debit_statement ON debit_accounts.account_number = debit_statement.account_number;
	
	CREATE OR REPLACE VIEW client.debit_accounts_statement AS
	    SELECT debit_accounts_statements.account_id, debit_accounts_statements.account_number, debit_accounts_statements.id, debit_accounts_statements.starting_date, debit_accounts_statements.end_date, debit_accounts_statements.amount AS total_amount, transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date
	    FROM debit_accounts_statements
	    INNER JOIN transaction ON debit_accounts_statements.id = transaction.debit_statement_id;
	
	CREATE OR REPLACE VIEW client.credit_accounts AS
	    SELECT account.account_id, account.account_number, credit_account.outstanding_balance, credit_account.credit_limit, credit_account.interest_rate, credit_account_application.application_status
	    FROM client.accounts
	    INNER JOIN credit_account ON account.account_number = credit_account.account_number
	    INNER JOIN credit_account_application ON account.account_number = credit_account_application.account_number;
	
	CREATE OR REPLACE VIEW client.credit_accounts_statements AS
	    SELECT credit_accounts.account_id, credit_accounts.account_number, credit_statement.id, credit_statement.starting_date, credit_statement.end_date, credit_statement.amount, credit_statement.minimum_payment, credit_statement.minimum_payment_due_date
	    FROM credit_accounts
	    INNER JOIN credit_statement ON credit_accounts.account_number = credit_statement.account_number;
	
	CREATE OR REPLACE VIEW client.credit_accounts_statement AS
	    SELECT credit_accounts_statements.account_id, credit_accounts_statements.account_number, credit_accounts_statements.id, credit_accounts_statements.starting_date, credit_accounts_statements.end_date, credit_accounts_statements.amount AS total_amount, credit_accounts_statements.minimum_payment, credit_accounts_statements.minimum_payment_due_date, transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date
	    FROM credit_accounts_statements
	    INNER JOIN transaction ON credit_accounts_statements.id = transaction.credit_statement_id;
	
	CREATE OR REPLACE VIEW client.savings_accounts AS
	    SELECT account.account_id, account.account_number, savings_account.current_balance, savings_account.interest_rate
	    FROM client.accounts
	    INNER JOIN savings_account ON account.account_number = savings_account.account_number;
	
	CREATE OR REPLACE VIEW client.savings_accounts_statements AS
	    SELECT savings_accounts.account_id, savings_accounts.account_number, savings_statement.id, savings_statement.starting_date, savings_statement.end_date, savings_statement.amount
	    FROM savings_accounts
	    INNER JOIN savings_statement ON savings_accounts.account_number = savings_statement.account_number;
	
	CREATE OR REPLACE VIEW client.loans AS
	    SELECT loan.account_id, loan.id, loan.amount, loan.interest_rate, loan.loan_type, loan.end_date, loan_application.application_status
	    FROM loan
	    INNER JOIN loan_application ON loan.id = loan_application.loan_id;
	
	CREATE OR REPLACE VIEW client.loan_statements AS
	    SELECT loans.account_id, loans.id, loan_statement.id as statement_id, loan_statement.starting_date, loan_statement.amount
	    FROM client.loans
	    INNER JOIN loan_statement ON loans.id = loan_statement.loan_id;
	
	CREATE OR REPLACE VIEW client.loan_applications AS
	    SELECT loan.account_id, loan_application.id, loan_application.application_status, loan_application.loan_id
	    FROM loan_application
	    INNER JOIN loan ON loan_application.loan_id = loan.id;
	
	CREATE OR REPLACE FUNCTION client.update_personal_information(account_identifier INT, first_name TEXT, last_name TEXT, date_of_birth DATE, phone_number TEXT, email_address TEXT, address_street TEXT, address_city TEXT, address_county TEXT, address_postcode TEXT, account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-16 16:17:18.283 GMT [33690] ERROR:  syntax error at or near "UPDATE" at character 11
2023-01-16 16:17:18.283 GMT [33690] STATEMENT:  BEGIN
	    UPDATE customer SET first_name = first_name, last_name = last_name, date_of_birth = date_of_birth, phone_number = phone_number, email_address = email_address, address_street = address_street, address_city = address_city, address_county = address_county, address_postcode = address_postcode
	    WHERE id = (SELECT customer_id FROM online_account WHERE id = account_identifier);
2023-01-16 16:17:18.283 GMT [33690] ERROR:  syntax error at or near "passed" at character 1
2023-01-16 16:17:18.283 GMT [33690] STATEMENT:  passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-16 16:17:18.283 GMT [33690] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:17:18.283 GMT [33690] STATEMENT:  RETURN passed;
2023-01-16 16:17:18.283 GMT [33690] WARNING:  there is no transaction in progress
2023-01-16 16:17:18.283 GMT [33690] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.update_password(account_identifier INT, new_password TEXT)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-16 16:17:18.283 GMT [33690] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.update_password(account_identifier INT, new_password TEXT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-16 16:17:18.283 GMT [33690] ERROR:  syntax error at or near "INT" at character 19
2023-01-16 16:17:18.283 GMT [33690] STATEMENT:  DECLARE ROW_COUNT INT;
2023-01-16 16:17:18.284 GMT [33690] ERROR:  syntax error at or near "UPDATE" at character 11
2023-01-16 16:17:18.284 GMT [33690] STATEMENT:  BEGIN
	    UPDATE user_login SET password = md5(new_password)
	    WHERE account_id = account_identifier;
2023-01-16 16:17:18.284 GMT [33690] ERROR:  syntax error at or near "GET" at character 1
2023-01-16 16:17:18.284 GMT [33690] STATEMENT:  GET DIAGNOSTICS ROW_COUNT = ROW_COUNT;
2023-01-16 16:17:18.284 GMT [33690] ERROR:  column "account_identifier" does not exist at character 76
2023-01-16 16:17:18.284 GMT [33690] STATEMENT:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Updated password', CURRENT_DATE);
2023-01-16 16:17:18.284 GMT [33690] ERROR:  syntax error at or near "passed" at character 1
2023-01-16 16:17:18.284 GMT [33690] STATEMENT:  passed = CASE WHEN ROW_COUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-16 16:17:18.284 GMT [33690] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:17:18.284 GMT [33690] STATEMENT:  RETURN passed;
2023-01-16 16:17:18.284 GMT [33690] WARNING:  there is no transaction in progress
2023-01-16 16:17:18.284 GMT [33690] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.update_email(account_identifier INT, new_email TEXT)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-16 16:17:18.284 GMT [33690] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.update_email(account_identifier INT, new_email TEXT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-16 16:17:18.284 GMT [33690] ERROR:  syntax error at or near "INT" at character 19
2023-01-16 16:17:18.284 GMT [33690] STATEMENT:  DECLARE ROW_COUNT INT;
2023-01-16 16:17:18.284 GMT [33690] ERROR:  syntax error at or near "UPDATE" at character 11
2023-01-16 16:17:18.284 GMT [33690] STATEMENT:  BEGIN
	    UPDATE user_login SET email = new_email
	    WHERE account_id = account_identifier;
2023-01-16 16:17:18.284 GMT [33690] ERROR:  syntax error at or near "GET" at character 1
2023-01-16 16:17:18.284 GMT [33690] STATEMENT:  GET DIAGNOSTICS ROW_COUNT = ROW_COUNT;
2023-01-16 16:17:18.285 GMT [33690] ERROR:  column "account_identifier" does not exist at character 76
2023-01-16 16:17:18.285 GMT [33690] STATEMENT:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Updated email', CURRENT_DATE);
2023-01-16 16:17:18.285 GMT [33690] ERROR:  syntax error at or near "passed" at character 1
2023-01-16 16:17:18.285 GMT [33690] STATEMENT:  passed = CASE WHEN ROW_COUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-16 16:17:18.285 GMT [33690] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:17:18.285 GMT [33690] STATEMENT:  RETURN passed;
2023-01-16 16:17:18.285 GMT [33690] WARNING:  there is no transaction in progress
2023-01-16 16:17:18.285 GMT [33690] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	
	CREATE OR REPLACE FUNCTION client.open_debit_account(account_id INT)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-16 16:17:18.285 GMT [33690] STATEMENT:  $$ LANGUAGE plpgsql;
	
	
	CREATE OR REPLACE FUNCTION client.open_debit_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-16 16:17:18.285 GMT [33690] ERROR:  syntax error at or near "INT" at character 30
2023-01-16 16:17:18.285 GMT [33690] STATEMENT:  DECLARE debit_account_number INT;
2023-01-16 16:17:18.285 GMT [33690] ERROR:  syntax error at or near "INT" at character 29
2023-01-16 16:17:18.285 GMT [33690] STATEMENT:  DECLARE next_account_number INT;
2023-01-16 16:17:18.285 GMT [33690] ERROR:  syntax error at or near "INT" at character 19
2023-01-16 16:17:18.285 GMT [33690] STATEMENT:  DECLARE ROW_COUNT INT;
2023-01-16 16:17:18.286 GMT [33690] ERROR:  syntax error at or near "SELECT" at character 11
2023-01-16 16:17:18.286 GMT [33690] STATEMENT:  BEGIN
	    SELECT get_next_account_number() INTO next_account_number;
2023-01-16 16:17:18.286 GMT [33690] ERROR:  syntax error at or near "INTO" at character 163
2023-01-16 16:17:18.286 GMT [33690] STATEMENT:  INSERT INTO debit_account (account_number, account_id, current_balance, interest_rate) VALUES (next_account_number ,account_id, 0, 0.01) RETURNING account_number INTO debit_account_number;
2023-01-16 16:17:18.286 GMT [33690] ERROR:  syntax error at or near "GET" at character 1
2023-01-16 16:17:18.286 GMT [33690] STATEMENT:  GET DIAGNOSTICS ROW_COUNT = ROW_COUNT;
2023-01-16 16:17:18.288 GMT [33690] ERROR:  column "debit_account_number" does not exist at character 189
2023-01-16 16:17:18.288 GMT [33690] STATEMENT:  INSERT INTO debit_statement (starting_date, end_date, amount, account_number) VALUES (date_trunc('month', now()::date), (date_trunc('month', now()::date)) + interval '1 month - 1 day', 0, debit_account_number);
2023-01-16 16:17:18.289 GMT [33690] ERROR:  column "debit_account_number" does not exist at character 115
2023-01-16 16:17:18.289 GMT [33690] STATEMENT:  INSERT INTO debit_overdraft (overdraft_usage, overdraft_limit, interest_rate, account_number) VALUES (0, 0, 0.01, debit_account_number);
2023-01-16 16:17:18.289 GMT [33690] ERROR:  column "account_id" does not exist at character 76
2023-01-16 16:17:18.289 GMT [33690] HINT:  There is a column named "account_id" in table "management_log", but it cannot be referenced from this part of the query.
2023-01-16 16:17:18.289 GMT [33690] STATEMENT:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened debit account', CURRENT_DATE);
2023-01-16 16:17:18.290 GMT [33690] ERROR:  syntax error at or near "passed" at character 1
2023-01-16 16:17:18.290 GMT [33690] STATEMENT:  passed = CASE WHEN ROW_COUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-16 16:17:18.290 GMT [33690] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:17:18.290 GMT [33690] STATEMENT:  RETURN passed;
2023-01-16 16:17:18.290 GMT [33690] WARNING:  there is no transaction in progress
2023-01-16 16:17:18.290 GMT [33690] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_credit_account(account_id INT)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-16 16:17:18.290 GMT [33690] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_credit_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-16 16:17:18.290 GMT [33690] ERROR:  syntax error at or near "INT" at character 31
2023-01-16 16:17:18.290 GMT [33690] STATEMENT:  DECLARE credit_account_number INT;
2023-01-16 16:17:18.290 GMT [33690] ERROR:  syntax error at or near "INT" at character 29
2023-01-16 16:17:18.290 GMT [33690] STATEMENT:  DECLARE next_account_number INT;
2023-01-16 16:17:18.291 GMT [33690] ERROR:  syntax error at or near "INT" at character 19
2023-01-16 16:17:18.291 GMT [33690] STATEMENT:  DECLARE ROW_COUNT INT;
2023-01-16 16:17:18.291 GMT [33690] ERROR:  syntax error at or near "SELECT" at character 11
2023-01-16 16:17:18.291 GMT [33690] STATEMENT:  BEGIN
	    SELECT get_next_account_number() INTO next_account_number;
2023-01-16 16:17:18.291 GMT [33690] ERROR:  syntax error at or near "INTO" at character 185
2023-01-16 16:17:18.291 GMT [33690] STATEMENT:  INSERT INTO credit_account (account_number, outstanding_balance, credit_limit, interest_rate, account_id) VALUES (next_account_number ,0, 0, 24.9, account_id) RETURNING account_number INTO credit_account_number;
2023-01-16 16:17:18.291 GMT [33690] ERROR:  syntax error at or near "GET" at character 1
2023-01-16 16:17:18.291 GMT [33690] STATEMENT:  GET DIAGNOSTICS ROW_COUNT = ROW_COUNT;
2023-01-16 16:17:18.292 GMT [33690] ERROR:  column "credit_account_number" does not exist at character 250
2023-01-16 16:17:18.292 GMT [33690] STATEMENT:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (date_trunc('month', now()::date), (date_trunc('month', now()::date)) + interval '1 month - 1 day', 0, 0, CURRENT_DATE, credit_account_number);
2023-01-16 16:17:18.292 GMT [33690] ERROR:  column "credit_account_number" does not exist at character 85
2023-01-16 16:17:18.292 GMT [33690] STATEMENT:  INSERT INTO credit_account_application (account_number, application_status) VALUES (credit_account_number, 'PENDING');
2023-01-16 16:17:18.292 GMT [33690] ERROR:  column "account_id" does not exist at character 76
2023-01-16 16:17:18.292 GMT [33690] HINT:  There is a column named "account_id" in table "management_log", but it cannot be referenced from this part of the query.
2023-01-16 16:17:18.292 GMT [33690] STATEMENT:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened credit account', CURRENT_DATE);
2023-01-16 16:17:18.292 GMT [33690] ERROR:  syntax error at or near "passed" at character 1
2023-01-16 16:17:18.292 GMT [33690] STATEMENT:  passed = CASE WHEN ROW_COUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-16 16:17:18.295 GMT [33690] ERROR:  syntax error at or near "return" at character 1
2023-01-16 16:17:18.295 GMT [33690] STATEMENT:  return PASSED;
2023-01-16 16:17:18.295 GMT [33690] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_savings_account(account_id INT)
	RETURNS BOOLEAN AS $$" at character 5
2023-01-16 16:17:18.295 GMT [33690] STATEMENT:  END
	$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_savings_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-16 16:17:18.295 GMT [33690] ERROR:  syntax error at or near "INT" at character 28
2023-01-16 16:17:18.295 GMT [33690] STATEMENT:  DECLARE savings_account_id INT;
2023-01-16 16:17:18.296 GMT [33690] ERROR:  syntax error at or near "INT" at character 29
2023-01-16 16:17:18.296 GMT [33690] STATEMENT:  DECLARE next_account_number INT;
2023-01-16 16:17:18.296 GMT [33690] ERROR:  syntax error at or near "INT" at character 19
2023-01-16 16:17:18.296 GMT [33690] STATEMENT:  DECLARE ROW_COUNT INT;
2023-01-16 16:17:18.296 GMT [33690] ERROR:  syntax error at or near "SELECT" at character 11
2023-01-16 16:17:18.296 GMT [33690] STATEMENT:  BEGIN
	    SELECT get_next_account_number() INTO next_account_number;
2023-01-16 16:17:18.296 GMT [33690] ERROR:  syntax error at or near "INTO" at character 165
2023-01-16 16:17:18.296 GMT [33690] STATEMENT:  INSERT INTO savings_account (account_number, account_id, current_balance, interest_rate) VALUES (next_account_number ,account_id, 0, 0.01) RETURNING account_number INTO savings_account_id;
2023-01-16 16:17:18.296 GMT [33690] ERROR:  syntax error at or near "GET" at character 1
2023-01-16 16:17:18.296 GMT [33690] STATEMENT:  GET DIAGNOSTICS ROW_COUNT = ROW_COUNT;
2023-01-16 16:17:18.297 GMT [33690] ERROR:  column "savings_account_id" does not exist at character 191
2023-01-16 16:17:18.297 GMT [33690] STATEMENT:  INSERT INTO savings_statement (starting_date, end_date, amount, account_number) VALUES (date_trunc('month', now()::date), (date_trunc('month', now()::date)) + interval '1 month - 1 day', 0, savings_account_id);
2023-01-16 16:17:18.297 GMT [33690] ERROR:  column "account_id" does not exist at character 76
2023-01-16 16:17:18.297 GMT [33690] HINT:  There is a column named "account_id" in table "management_log", but it cannot be referenced from this part of the query.
2023-01-16 16:17:18.297 GMT [33690] STATEMENT:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened savings account', CURRENT_DATE);
2023-01-16 16:17:18.297 GMT [33690] ERROR:  syntax error at or near "passed" at character 1
2023-01-16 16:17:18.297 GMT [33690] STATEMENT:  passed = CASE WHEN ROW_COUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-16 16:17:18.297 GMT [33690] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:17:18.297 GMT [33690] STATEMENT:  RETURN passed;
2023-01-16 16:17:18.297 GMT [33690] WARNING:  there is no transaction in progress
2023-01-16 16:17:18.297 GMT [33690] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_loan(account_id INT, loan_amount INT, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-16 16:17:18.297 GMT [33690] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_loan(account_id INT, loan_amount INT, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-16 16:17:18.298 GMT [33690] ERROR:  syntax error at or near "INT" at character 17
2023-01-16 16:17:18.298 GMT [33690] STATEMENT:  DECLARE loan_id INT;
2023-01-16 16:17:18.298 GMT [33690] ERROR:  syntax error at or near "INT" at character 19
2023-01-16 16:17:18.298 GMT [33690] STATEMENT:  DECLARE ROW_COUNT INT;
2023-01-16 16:17:18.298 GMT [33690] ERROR:  syntax error at or near "INSERT" at character 11
2023-01-16 16:17:18.298 GMT [33690] STATEMENT:  BEGIN
	    INSERT INTO loan (account_id, loan_amount, loan_end_date, loan_type, loan_interest_rate) VALUES (account_id, loan_amount, loan_end_date, loan_type, loan_interest_rate) RETURNING id INTO loan_id;
2023-01-16 16:17:18.298 GMT [33690] ERROR:  syntax error at or near "GET" at character 1
2023-01-16 16:17:18.298 GMT [33690] STATEMENT:  GET DIAGNOSTICS ROW_COUNT = ROW_COUNT;
2023-01-16 16:17:18.298 GMT [33690] ERROR:  column "end_date" of relation "loan_statement" does not exist at character 44
2023-01-16 16:17:18.298 GMT [33690] STATEMENT:  INSERT INTO loan_statement (starting_date, end_date, amount, account_id) VALUES (date_trunc('month', now()::date), (date_trunc('month', now()::date)) + interval '1 month - 1 day', 0, loan_id);
2023-01-16 16:17:18.298 GMT [33690] ERROR:  column "loan_id" does not exist at character 68
2023-01-16 16:17:18.298 GMT [33690] HINT:  There is a column named "loan_id" in table "loan_application", but it cannot be referenced from this part of the query.
2023-01-16 16:17:18.298 GMT [33690] STATEMENT:  INSERT INTO loan_application (loan_id, application_status) VALUES (loan_id, 'PENDING');
2023-01-16 16:17:18.298 GMT [33690] ERROR:  column "account_id" does not exist at character 76
2023-01-16 16:17:18.298 GMT [33690] HINT:  There is a column named "account_id" in table "management_log", but it cannot be referenced from this part of the query.
2023-01-16 16:17:18.298 GMT [33690] STATEMENT:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened loan', CURRENT_DATE);
2023-01-16 16:17:18.299 GMT [33690] ERROR:  syntax error at or near "passed" at character 1
2023-01-16 16:17:18.299 GMT [33690] STATEMENT:  passed = CASE WHEN ROW_COUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-16 16:17:18.299 GMT [33690] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:17:18.299 GMT [33690] STATEMENT:  RETURN passed;
2023-01-16 16:17:18.299 GMT [33690] WARNING:  there is no transaction in progress
2023-01-16 16:17:18.299 GMT [33690] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_personal_information(account_id INT)
	RETURNS TABLE (first_name TEXT, last_name TEXT, email TEXT, phone_number TEXT, address TEXT, city TEXT, country TEXT, postal_code TEXT) AS $$" at character 1
2023-01-16 16:17:18.299 GMT [33690] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_personal_information(account_id INT)
	RETURNS TABLE (first_name TEXT, last_name TEXT, email TEXT, phone_number TEXT, address TEXT, city TEXT, country TEXT, postal_code TEXT) AS $$
	BEGIN
	    RETURN QUERY
	        SELECT first_name, last_name, email, phone_number, address, city, country, postal_code
	            FROM customer
	        INNER JOIN account ON account.customer_id = customer.id
	        WHERE account.id = account_id;
2023-01-16 16:17:18.299 GMT [33690] WARNING:  there is no transaction in progress
2023-01-16 16:17:18.299 GMT [33690] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_accounts(account_identifier INT)
	RETURNS TABLE (account_number INT, account_id INT, balance NUMERIC, interest_rate NUMERIC, account_type TEXT) AS $$" at character 1
2023-01-16 16:17:18.299 GMT [33690] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_accounts(account_identifier INT)
	RETURNS TABLE (account_number INT, account_id INT, balance NUMERIC, interest_rate NUMERIC, account_type TEXT) AS $$
	BEGIN
	    RETURN QUERY
	        SELECT account.*, COALESCE(debit_accounts.current_balance, credit_accounts.outstanding_balance, savings_accounts.current_balance) AS balance,
	            COALESCE(debit_accounts.interest_rate, credit_accounts.interest_rate, savings_accounts.interest_rate) AS interest_rate,
	            get_account_type(account.account_number) AS account_type
	            FROM account
	            LEFT JOIN client.credit_accounts ON account.account_number = credit_accounts.account_number
	            LEFT JOIN client.debit_accounts ON account.account_number = debit_accounts.account_number
	            LEFT JOIN client.savings_accounts ON account.account_number = savings_accounts.account_number
	            WHERE account.account_id = account_identifier;
2023-01-16 16:17:18.299 GMT [33690] WARNING:  there is no transaction in progress
2023-01-16 16:17:18.299 GMT [33690] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, overdraft_limit NUMERIC, overdraft_usage NUMERIC, overdraft_interest_rate NUMERIC, external_account_number INT) AS $$" at character 1
2023-01-16 16:17:18.299 GMT [33690] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, overdraft_limit NUMERIC, overdraft_usage NUMERIC, overdraft_interest_rate NUMERIC, external_account_number INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed debit accounts', CURRENT_DATE);
2023-01-16 16:17:18.299 GMT [33690] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:17:18.299 GMT [33690] STATEMENT:  RETURN QUERY
	        SELECT * FROM client.debit_accounts WHERE account_id = account_id;
2023-01-16 16:17:18.299 GMT [33690] WARNING:  there is no transaction in progress
2023-01-16 16:17:18.300 GMT [33690] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_accounts(account_id INT)
	RETURNS TABLE (id INT, outstanding_balance NUMERIC, credit_limit NUMERIC, interest_rate NUMERIC, application_status TEXT) AS $$" at character 1
2023-01-16 16:17:18.300 GMT [33690] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_accounts(account_id INT)
	RETURNS TABLE (id INT, outstanding_balance NUMERIC, credit_limit NUMERIC, interest_rate NUMERIC, application_status TEXT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit accounts', CURRENT_DATE);
2023-01-16 16:17:18.300 GMT [33690] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:17:18.300 GMT [33690] STATEMENT:  RETURN QUERY
	        SELECT * FROM client.credit_accounts WHERE account_id = account_id;
2023-01-16 16:17:18.300 GMT [33690] WARNING:  there is no transaction in progress
2023-01-16 16:17:18.300 GMT [33690] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_savings_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, external_account_number INT) AS $$" at character 1
2023-01-16 16:17:18.300 GMT [33690] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_savings_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, external_account_number INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings accounts', CURRENT_DATE);
2023-01-16 16:17:18.300 GMT [33690] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:17:18.300 GMT [33690] STATEMENT:  RETURN QUERY
	        SELECT * FROM client.savings_accounts WHERE account_id = account_id;
2023-01-16 16:17:18.300 GMT [33690] WARNING:  there is no transaction in progress
2023-01-16 16:17:18.300 GMT [33690] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_loans(account_id INT)
	RETURNS TABLE (id INT, loan_amount NUMERIC, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC, application_status TEXT) AS $$" at character 1
2023-01-16 16:17:18.300 GMT [33690] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_loans(account_id INT)
	RETURNS TABLE (id INT, loan_amount NUMERIC, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC, application_status TEXT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed loans', CURRENT_DATE);
2023-01-16 16:17:18.300 GMT [33690] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:17:18.300 GMT [33690] STATEMENT:  RETURN QUERY
	        SELECT * FROM client.loans WHERE account_id = account_id;
2023-01-16 16:17:18.300 GMT [33690] WARNING:  there is no transaction in progress
2023-01-16 16:17:18.300 GMT [33690] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_savings_statements(account_identifier INT, orig_account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-16 16:17:18.300 GMT [33690] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_savings_statements(account_identifier INT, orig_account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Viewed savings statements', CURRENT_DATE);
2023-01-16 16:17:18.301 GMT [33690] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:17:18.301 GMT [33690] STATEMENT:  RETURN QUERY
	        SELECT savings_accounts_statements.starting_date, savings_accounts_statements.end_date, savings_accounts_statements.amount, savings_accounts_statements.account_id
	        FROM client.savings_accounts_statements
	        WHERE savings_accounts_statements.account_number = orig_account_number
	        AND savings_accounts_statements.account_id = account_identifier;
2023-01-16 16:17:18.301 GMT [33690] WARNING:  there is no transaction in progress
2023-01-16 16:17:18.301 GMT [33690] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_statements(account_identifier INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-16 16:17:18.301 GMT [33690] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_statements(account_identifier INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Viewed debit statements', CURRENT_DATE);
2023-01-16 16:17:18.301 GMT [33690] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:17:18.301 GMT [33690] STATEMENT:  RETURN QUERY
	        SELECT debit_accounts_statements.account_id, debit_accounts_statements.account_number, debit_accounts_statements.starting_date, debit_accounts_statements.end_date, debit_accounts_statements.amount
	        FROM client.debit_accounts_statements
	        WHERE debit_accounts_statements.account_number = account_number
	        AND debit_accounts_statements.account_id = account_identifier;
2023-01-16 16:17:18.301 GMT [33690] WARNING:  there is no transaction in progress
2023-01-16 16:17:18.301 GMT [33690] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_statements(account_identifier INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-16 16:17:18.301 GMT [33690] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_statements(account_identifier INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Viewed credit statements', CURRENT_DATE);
2023-01-16 16:17:18.301 GMT [33690] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:17:18.301 GMT [33690] STATEMENT:  RETURN QUERY
	        SELECT credit_accounts_statements.account_id, credit_accounts_statements.account_number, credit_accounts_statements.starting_date, credit_accounts_statements.end_date, credit_accounts_statements.amount
	        FROM client.credit_accounts_statements
	        WHERE credit_accounts_statements.account_number = account_number
	        AND credit_accounts_statements.account_id = account_identifier;
2023-01-16 16:17:18.301 GMT [33690] WARNING:  there is no transaction in progress
2023-01-16 16:17:18.301 GMT [33690] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_statement(account_identifier INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-16 16:17:18.301 GMT [33690] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_statement(account_identifier INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Viewed debit statement', CURRENT_DATE);
2023-01-16 16:17:18.301 GMT [33690] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:17:18.301 GMT [33690] STATEMENT:  RETURN QUERY
	        SELECT debit_accounts_statement.account_id, debit_accounts_statement.account_number, debit_accounts_statement.starting_date, debit_accounts_statement.end_date, debit_accounts_statement.amount
	        FROM client.debit_accounts_statement
	        WHERE debit_accounts_statement.account_id = account_identifier
	        AND debit_accounts_statement.account_number = account_number
	        AND debit_accounts_statement.statement_id = statement_id;
2023-01-16 16:17:18.301 GMT [33690] WARNING:  there is no transaction in progress
2023-01-16 16:17:18.301 GMT [33690] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_statement(account_identifier INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-16 16:17:18.301 GMT [33690] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_statement(account_identifier INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statement', CURRENT_DATE);
2023-01-16 16:17:18.301 GMT [33690] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:17:18.301 GMT [33690] STATEMENT:  RETURN QUERY
	        SELECT credit_accounts_statement.account_id, credit_accounts_statement.account_number, credit_accounts_statement.starting_date, credit_accounts_statement.end_date, credit_accounts_statement.amount
	        FROM client.credit_accounts_statement
	        WHERE credit_accounts_statement.account_id = account_identifier
	        AND credit_accounts_statement.account_number = account_number
	        AND credit_accounts_statement.statement_id = statement_id;
2023-01-16 16:17:18.301 GMT [33690] WARNING:  there is no transaction in progress
2023-01-16 16:17:18.301 GMT [33690] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_savings_statement(account_identifier INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-16 16:17:18.301 GMT [33690] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_savings_statement(account_identifier INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statement', CURRENT_DATE);
2023-01-16 16:17:18.301 GMT [33690] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:17:18.301 GMT [33690] STATEMENT:  RETURN QUERY
	        SELECT savings_accounts_statement.account_id, savings_accounts_statement.account_number, savings_accounts_statement.starting_date, savings_accounts_statement.end_date, savings_accounts_statement.amount
	        FROM client.savings_accounts_statement
	        WHERE savings_accounts_statement.account_id = account_identifier
	        AND savings_accounts_statement.account_number = account_number
	        AND savings_accounts_statement.statement_id = statement_id;
2023-01-16 16:17:18.301 GMT [33690] WARNING:  there is no transaction in progress
2023-01-16 16:17:18.301 GMT [33690] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.get_or_create_statement(account_identifier INT, orig_account_number INT)
	RETURNS INT AS $$" at character 1
2023-01-16 16:17:18.301 GMT [33690] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.get_or_create_statement(account_identifier INT, orig_account_number INT)
	RETURNS INT AS $$
	DECLARE statement_id INT;
2023-01-16 16:17:18.301 GMT [33690] ERROR:  syntax error at or near "CASE" at character 11
2023-01-16 16:17:18.301 GMT [33690] STATEMENT:  BEGIN
	    CASE WHEN EXISTS (SELECT * FROM client.debit_accounts WHERE account_id = account_identifier AND account_number = orig_account_number) THEN
	        IF EXISTS (SELECT * FROM debit_statement WHERE account_number = orig_account_number AND starting_date <= now()::date AND end_date >= now()::date) THEN
	            SELECT id INTO statement_id FROM debit_statement WHERE account_number = orig_account_number AND starting_date <= now()::date AND end_date >= now()::date;
2023-01-16 16:17:18.301 GMT [33690] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:17:18.301 GMT [33690] STATEMENT:  RETURN statement_id;
2023-01-16 16:17:18.301 GMT [33690] ERROR:  syntax error at or near "ELSE" at character 1
2023-01-16 16:17:18.301 GMT [33690] STATEMENT:  ELSE 
	            INSERT INTO debit_statement (account_number, starting_date, end_date, amount) VALUES (orig_account_number, date_trunc('month', now()::date), now()::date + 30, 0);
2023-01-16 16:17:18.302 GMT [33690] ERROR:  column "orig_account_number" does not exist at character 73
2023-01-16 16:17:18.302 GMT [33690] STATEMENT:  SELECT id INTO statement_id FROM debit_statement WHERE account_number = orig_account_number AND starting_date <= now()::date AND end_date >= now()::date;
2023-01-16 16:17:18.302 GMT [33690] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:17:18.302 GMT [33690] STATEMENT:  RETURN statement_id;
2023-01-16 16:17:18.302 GMT [33690] ERROR:  syntax error at or near "IF" at character 5
2023-01-16 16:17:18.302 GMT [33690] STATEMENT:  END IF;
2023-01-16 16:17:18.302 GMT [33690] ERROR:  syntax error at or near "WHEN" at character 1
2023-01-16 16:17:18.302 GMT [33690] STATEMENT:  WHEN EXISTS (SELECT * FROM client.credit_accounts WHERE account_id = account_identifier AND account_number = orig_account_number) THEN
	        IF EXISTS (SELECT * FROM credit_statement WHERE account_number = orig_account_number AND starting_date <= now()::date AND end_date >= now()::date) THEN
	            SELECT id INTO statement_id FROM credit_statement WHERE account_number = orig_account_number AND starting_date <= now()::date AND end_date >= now()::date;
2023-01-16 16:17:18.302 GMT [33690] ERROR:  syntax error at or near "return" at character 1
2023-01-16 16:17:18.302 GMT [33690] STATEMENT:  return statement_id;
2023-01-16 16:17:18.302 GMT [33690] ERROR:  syntax error at or near "ELSE" at character 1
2023-01-16 16:17:18.302 GMT [33690] STATEMENT:  ELSE 
	            INSERT INTO credit_statement (account_number, starting_date, end_date, amount) VALUES (orig_account_number, date_trunc('month', now()::date), now()::date + 30, 0);
2023-01-16 16:17:18.302 GMT [33690] ERROR:  column "orig_account_number" does not exist at character 74
2023-01-16 16:17:18.302 GMT [33690] STATEMENT:  SELECT id INTO statement_id FROM credit_statement WHERE account_number = orig_account_number AND starting_date <= now()::date AND end_date >= now()::date;
2023-01-16 16:17:18.302 GMT [33690] ERROR:  syntax error at or near "return" at character 1
2023-01-16 16:17:18.302 GMT [33690] STATEMENT:  return statement_id;
2023-01-16 16:17:18.302 GMT [33690] ERROR:  syntax error at or near "IF" at character 5
2023-01-16 16:17:18.302 GMT [33690] STATEMENT:  END IF;
2023-01-16 16:17:18.302 GMT [33690] ERROR:  syntax error at or near "WHEN" at character 1
2023-01-16 16:17:18.302 GMT [33690] STATEMENT:  WHEN EXISTS (SELECT * FROM client.savings_accounts WHERE account_id = account_identifier AND account_number = orig_account_number) THEN
	        IF EXISTS (SELECT * FROM savings_statement WHERE account_number = orig_account_number AND starting_date <= now()::date AND end_date >= now()::date) THEN
	            SELECT id INTO statement_id FROM savings_statement WHERE account_number = orig_account_number AND starting_date <= now()::date AND end_date >= now()::date;
2023-01-16 16:17:18.302 GMT [33690] ERROR:  syntax error at or near "return" at character 1
2023-01-16 16:17:18.302 GMT [33690] STATEMENT:  return statement_id;
2023-01-16 16:17:18.302 GMT [33690] ERROR:  syntax error at or near "ELSE" at character 1
2023-01-16 16:17:18.302 GMT [33690] STATEMENT:  ELSE
	            INSERT INTO savings_statement (account_number, starting_date, end_date, amount) VALUES (orig_account_number, date_trunc('month', now()::date), now()::date + 30, 0);
2023-01-16 16:17:18.302 GMT [33690] ERROR:  column "orig_account_number" does not exist at character 75
2023-01-16 16:17:18.302 GMT [33690] STATEMENT:  SELECT id INTO statement_id FROM savings_statement WHERE account_number = orig_account_number AND starting_date <= now()::date AND end_date >= now()::date;
2023-01-16 16:17:18.302 GMT [33690] ERROR:  syntax error at or near "return" at character 1
2023-01-16 16:17:18.302 GMT [33690] STATEMENT:  return statement_id;
2023-01-16 16:17:18.302 GMT [33690] ERROR:  syntax error at or near "IF" at character 5
2023-01-16 16:17:18.302 GMT [33690] STATEMENT:  END IF;
2023-01-16 16:17:18.302 GMT [33690] ERROR:  syntax error at or near "CASE" at character 5
2023-01-16 16:17:18.302 GMT [33690] STATEMENT:  END CASE;
2023-01-16 16:17:18.302 GMT [33690] WARNING:  there is no transaction in progress
2023-01-16 16:17:18.302 GMT [33690] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	
	CREATE OR REPLACE FUNCTION client.place_transaction_into_account(account_identifier INT, orig_account_number INT, transaction_account_number INT, transaction_amount NUMERIC)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-16 16:17:18.302 GMT [33690] STATEMENT:  $$ LANGUAGE plpgsql;
	
	
	CREATE OR REPLACE FUNCTION client.place_transaction_into_account(account_identifier INT, orig_account_number INT, transaction_account_number INT, transaction_amount NUMERIC)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-16 16:17:18.302 GMT [33690] ERROR:  syntax error at or near "INT" at character 22
2023-01-16 16:17:18.302 GMT [33690] STATEMENT:  DECLARE statement_id INT;
2023-01-16 16:17:18.302 GMT [33690] ERROR:  syntax error at or near "INSERT" at character 11
2023-01-16 16:17:18.302 GMT [33690] STATEMENT:  BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Placed transaction into account', CURRENT_DATE);
2023-01-16 16:17:18.303 GMT [33690] ERROR:  syntax error at or near "CASE" at character 1
2023-01-16 16:17:18.303 GMT [33690] STATEMENT:  CASE WHEN EXISTS (SELECT * FROM client.debit_accounts WHERE account_id = account_identifier AND account_number = orig_account_number) THEN
	        UPDATE debit_account SET current_balance = current_balance + transaction_amount WHERE debit_account.account_number = orig_account_number;
2023-01-16 16:17:18.303 GMT [33690] ERROR:  syntax error at or near "INTO" at character 87
2023-01-16 16:17:18.303 GMT [33690] STATEMENT:  SELECT * FROM client.get_or_create_statement(account_identifier, orig_account_number) INTO statement_id;
2023-01-16 16:17:18.303 GMT [33690] ERROR:  column "orig_account_number" does not exist at character 112
2023-01-16 16:17:18.303 GMT [33690] STATEMENT:  INSERT INTO transaction (origin_account_id, dest_account_id, amount, date, debit_statement_id)
	        VALUES (orig_account_number, transaction_account_number, transaction_amount, now(), statement_id);
2023-01-16 16:17:18.303 GMT [33690] ERROR:  syntax error at or near "WHEN" at character 1
2023-01-16 16:17:18.303 GMT [33690] STATEMENT:  WHEN EXISTS (SELECT * FROM client.credit_accounts WHERE account_id = account_identifier AND account_number = orig_account_number) THEN
	        UPDATE credit_account SET outstanding_balance = outstanding_balance + transaction_amount WHERE credit_account.account_number = orig_account_number;
2023-01-16 16:17:18.303 GMT [33690] ERROR:  syntax error at or near "INTO" at character 87
2023-01-16 16:17:18.303 GMT [33690] STATEMENT:  SELECT * FROM client.get_or_create_statement(account_identifier, orig_account_number) INTO statement_id;
2023-01-16 16:17:18.303 GMT [33690] ERROR:  column "orig_account_number" does not exist at character 113
2023-01-16 16:17:18.303 GMT [33690] STATEMENT:  INSERT INTO transaction (origin_account_id, dest_account_id, amount, date, credit_statement_id)
	        VALUES (orig_account_number, transaction_account_number, transaction_amount, now(), statement_id);
2023-01-16 16:17:18.304 GMT [33690] ERROR:  syntax error at or near "WHEN" at character 1
2023-01-16 16:17:18.304 GMT [33690] STATEMENT:  WHEN EXISTS (SELECT * FROM client.savings_accounts WHERE account_id = account_identifier AND account_number = orig_account_number) THEN
	        UPDATE savings_account SET current_balance = current_balance + transaction_amount WHERE savings_account.account_number = orig_account_number;
2023-01-16 16:17:18.304 GMT [33690] ERROR:  syntax error at or near "INTO" at character 87
2023-01-16 16:17:18.304 GMT [33690] STATEMENT:  SELECT * FROM client.get_or_create_statement(account_identifier, orig_account_number) INTO statement_id;
2023-01-16 16:17:18.304 GMT [33690] ERROR:  column "orig_account_number" does not exist at character 114
2023-01-16 16:17:18.304 GMT [33690] STATEMENT:  INSERT INTO transaction (origin_account_id, dest_account_id, amount, date, savings_statement_id)
	        VALUES (orig_account_number, transaction_account_number, transaction_amount, now(), statement_id);
2023-01-16 16:17:18.304 GMT [33690] ERROR:  syntax error at or near "ELSE" at character 1
2023-01-16 16:17:18.304 GMT [33690] STATEMENT:  ELSE
	        RAISE NOTICE 'Account does not exist';
2023-01-16 16:17:18.309 GMT [33690] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:17:18.309 GMT [33690] STATEMENT:  RETURN FALSE;
2023-01-16 16:17:18.309 GMT [33690] ERROR:  syntax error at or near "CASE" at character 5
2023-01-16 16:17:18.309 GMT [33690] STATEMENT:  END CASE;
2023-01-16 16:17:18.309 GMT [33690] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:17:18.309 GMT [33690] STATEMENT:  RETURN TRUE;
2023-01-16 16:17:18.310 GMT [33690] WARNING:  there is no transaction in progress
2023-01-16 16:17:18.310 GMT [33690] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	
	CREATE OR REPLACE FUNCTION client.initiate_transfer(account_identifier INT, orig_account_number INT, transfer_amount NUMERIC, transfer_account_number INT, transfer_account_sort_code INT)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-16 16:17:18.310 GMT [33690] STATEMENT:  $$ LANGUAGE plpgsql;
	
	
	CREATE OR REPLACE FUNCTION client.initiate_transfer(account_identifier INT, orig_account_number INT, transfer_amount NUMERIC, transfer_account_number INT, transfer_account_sort_code INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-16 16:17:18.310 GMT [33690] ERROR:  syntax error at or near "INT" at character 29
2023-01-16 16:17:18.310 GMT [33690] STATEMENT:  DECLARE internal_account_id INT;
2023-01-16 16:17:18.310 GMT [33690] ERROR:  syntax error at or near "INT" at character 19
2023-01-16 16:17:18.310 GMT [33690] STATEMENT:  DECLARE ROW_COUNT INT;
2023-01-16 16:17:18.310 GMT [33690] ERROR:  syntax error at or near "INSERT" at character 11
2023-01-16 16:17:18.310 GMT [33690] STATEMENT:  BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Initiated transfer', CURRENT_DATE);
2023-01-16 16:17:18.310 GMT [33690] ERROR:  relation "client.accounts" does not exist at character 49
2023-01-16 16:17:18.310 GMT [33690] STATEMENT:  SELECT account_id INTO internal_account_id FROM client.accounts
	    WHERE account_number = transfer_account_number AND sort_code = transfer_account_sort_code;
2023-01-16 16:17:18.310 GMT [33690] ERROR:  syntax error at or near "IF" at character 1
2023-01-16 16:17:18.310 GMT [33690] STATEMENT:  IF internal_account_id IS NULL THEN
	       RAISE NOTICE 'EXTERNAL TRANSFER TO LOCAL ACCOUNT %', transfer_account_number;
2023-01-16 16:17:18.310 GMT [33690] ERROR:  syntax error at or near "ELSE" at character 1
2023-01-16 16:17:18.310 GMT [33690] STATEMENT:  ELSE
	        RAISE NOTICE 'INTERNAL TRANSFER TO ACCOUNT %', transfer_account_number;
2023-01-16 16:17:18.310 GMT [33690] ERROR:  syntax error at or near "INTO" at character 136
2023-01-16 16:17:18.310 GMT [33690] STATEMENT:  SELECT * FROM client.place_transaction_into_account(account_identifier, orig_account_number, transfer_account_number, transfer_amount) INTO passed;
2023-01-16 16:17:18.310 GMT [33690] ERROR:  syntax error at or near "GET" at character 1
2023-01-16 16:17:18.310 GMT [33690] STATEMENT:  GET DIAGNOSTICS ROW_COUNT = ROW_COUNT;
2023-01-16 16:17:18.310 GMT [33690] ERROR:  syntax error at or near "passed" at character 1
2023-01-16 16:17:18.310 GMT [33690] STATEMENT:  passed = CASE WHEN ROW_COUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-16 16:17:18.311 GMT [33690] ERROR:  syntax error at or near "IF" at character 5
2023-01-16 16:17:18.311 GMT [33690] STATEMENT:  END IF;
2023-01-16 16:17:18.311 GMT [33690] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:17:18.311 GMT [33690] STATEMENT:  RETURN passed;
2023-01-16 16:17:18.311 GMT [33690] WARNING:  there is no transaction in progress
2023-01-16 16:17:18.311 GMT [33690] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE SCHEMA IF NOT EXISTS unauthenticated;
	SET search_path TO unauthenticated, public;
	
	-- Allows an unauthenticated user to match hashes to hashes of personal information contained in the customer table
	CREATE OR REPLACE VIEW unauthenticated.unauthenticated_personal_information AS
	SELECT id, md5(first_name) AS first_name, md5(last_name) AS last_name, md5(email_address) AS email_address
	FROM customer;
	
	-- Allows an unauthenticated user to view hashes of usernames contained in the user_login table
	CREATE OR REPLACE VIEW unauthenticated.unauthenticated_login AS
	SELECT md5(username) AS username FROM user_login;
	
	-- Allows a user to insert personal information into the online banking system
	CREATE OR REPLACE FUNCTION unauthenticated.create_personal_info(first_name TEXT, last_name TEXT, date_of_birth DATE, phone_number TEXT, email_address TEXT, address_street TEXT, address_city TEXT, address_county TEXT, address_postcode TEXT)
	RETURNS INT AS $$" at character 1
2023-01-16 16:17:18.311 GMT [33690] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE SCHEMA IF NOT EXISTS unauthenticated;
	SET search_path TO unauthenticated, public;
	
	-- Allows an unauthenticated user to match hashes to hashes of personal information contained in the customer table
	CREATE OR REPLACE VIEW unauthenticated.unauthenticated_personal_information AS
	SELECT id, md5(first_name) AS first_name, md5(last_name) AS last_name, md5(email_address) AS email_address
	FROM customer;
	
	-- Allows an unauthenticated user to view hashes of usernames contained in the user_login table
	CREATE OR REPLACE VIEW unauthenticated.unauthenticated_login AS
	SELECT md5(username) AS username FROM user_login;
	
	-- Allows a user to insert personal information into the online banking system
	CREATE OR REPLACE FUNCTION unauthenticated.create_personal_info(first_name TEXT, last_name TEXT, date_of_birth DATE, phone_number TEXT, email_address TEXT, address_street TEXT, address_city TEXT, address_county TEXT, address_postcode TEXT)
	RETURNS INT AS $$
	DECLARE customer_id INT;
2023-01-16 16:17:18.311 GMT [33690] ERROR:  syntax error at or near "IF" at character 11
2023-01-16 16:17:18.311 GMT [33690] STATEMENT:  BEGIN
	    IF NOT EXISTS (SELECT FROM unauthenticated.unauthenticated_personal_information WHERE md5(first_name) = first_name AND md5(last_name) = last_name AND md5(email_address) = email_address) THEN
	        INSERT INTO customer
	        VALUES (first_name, last_name, date_of_birth, phone_number, email_address, address_street, address_city, address_county, address_postcode)
	        RETURNING id INTO customer_id;
2023-01-16 16:17:18.313 GMT [33690] ERROR:  syntax error at or near "ELSE" at character 1
2023-01-16 16:17:18.313 GMT [33690] STATEMENT:  ELSE
	        RAISE NOTICE 'CUSTOMER INFORMATION ALREADY PRESENT';
2023-01-16 16:17:18.313 GMT [33690] ERROR:  relation "unauthenticated.unauthenticated_personal_information" does not exist at character 33
2023-01-16 16:17:18.313 GMT [33690] STATEMENT:  SELECT id INTO customer_id FROM unauthenticated.unauthenticated_personal_information WHERE md5(first_name) = first_name AND md5(last_name) = last_name AND md5(email_address) = email_address;
2023-01-16 16:17:18.313 GMT [33690] ERROR:  syntax error at or near "IF" at character 5
2023-01-16 16:17:18.313 GMT [33690] STATEMENT:  END IF;
2023-01-16 16:17:18.313 GMT [33690] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:17:18.313 GMT [33690] STATEMENT:  RETURN customer_id;
2023-01-16 16:17:18.313 GMT [33690] WARNING:  there is no transaction in progress
2023-01-16 16:17:18.313 GMT [33690] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	-- Allows an unauthenticated user to create an online account
	CREATE OR REPLACE FUNCTION unauthenticated.create_online_account_details(customer_id INT, first_name TEXT, last_name TEXT, email_address TEXT, question_choice_ids INT[], question_answers TEXT[])
	RETURNS INT AS $$" at character 1
2023-01-16 16:17:18.313 GMT [33690] STATEMENT:  $$ LANGUAGE plpgsql;
	
	-- Allows an unauthenticated user to create an online account
	CREATE OR REPLACE FUNCTION unauthenticated.create_online_account_details(customer_id INT, first_name TEXT, last_name TEXT, email_address TEXT, question_choice_ids INT[], question_answers TEXT[])
	RETURNS INT AS $$
	DECLARE account_id INT;
2023-01-16 16:17:18.313 GMT [33690] ERROR:  syntax error at or near "INT" at character 27
2023-01-16 16:17:18.313 GMT [33690] STATEMENT:  DECLARE online_account_id INT;
2023-01-16 16:17:18.313 GMT [33690] ERROR:  syntax error at or near "INT" at character 28
2023-01-16 16:17:18.313 GMT [33690] STATEMENT:  DECLARE question_choice_id INT;
2023-01-16 16:17:18.313 GMT [33690] ERROR:  syntax error at or near "IF" at character 11
2023-01-16 16:17:18.313 GMT [33690] STATEMENT:  BEGIN
	    IF NOT EXISTS (SELECT FROM user_login WHERE username = username) THEN
	        INSERT INTO online_account (date_opened, sort_code, customer_id)
	        VALUES ((SELECT now()), (SELECT num FROM GENERATE_SERIES(1, 6) AS s(num) LIMIT 1), customer_id)
	        RETURNING id INTO account_id;
2023-01-16 16:17:18.314 GMT [33690] ERROR:  syntax error at or near "INTO" at character 131
2023-01-16 16:17:18.314 GMT [33690] STATEMENT:  INSERT INTO user_login (account_id, username, password)
	        VALUES (account_id, username, md5(password))
	        RETURNING id INTO online_account_id;
2023-01-16 16:17:18.314 GMT [33690] ERROR:  syntax error at or near "FOR" at character 1
2023-01-16 16:17:18.314 GMT [33690] STATEMENT:  FOR i IN 0..2 LOOP
	            
	            INSERT INTO user_login_security_question (question_choice_id, login_id)
	            VALUES (question_choice_ids[i], online_account_id)
	            RETURNING id INTO question_choice_id;
2023-01-16 16:17:18.314 GMT [33690] ERROR:  column "answer" of relation "security_question_answer" does not exist at character 39
2023-01-16 16:17:18.314 GMT [33690] STATEMENT:  INSERT INTO security_question_answer (answer, question_id)
	            VALUES (question_answers[i], question_choice_id);
2023-01-16 16:17:18.314 GMT [33690] ERROR:  syntax error at or near "LOOP" at character 5
2023-01-16 16:17:18.314 GMT [33690] STATEMENT:  END LOOP;
2023-01-16 16:17:18.314 GMT [33690] ERROR:  column "account_id" does not exist at character 117
2023-01-16 16:17:18.314 GMT [33690] HINT:  There is a column named "account_id" in table "authentication_log", but it cannot be referenced from this part of the query.
2023-01-16 16:17:18.314 GMT [33690] STATEMENT:  INSERT INTO authentication_log (log_description, log_date, account_id) VALUES ('New online account created', now(), account_id);
2023-01-16 16:17:18.314 GMT [33690] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:17:18.314 GMT [33690] STATEMENT:  RETURN account_id;
2023-01-16 16:17:18.314 GMT [33690] ERROR:  syntax error at or near "ELSE" at character 1
2023-01-16 16:17:18.314 GMT [33690] STATEMENT:  ELSE
	        RAISE NOTICE 'USERNAME ALREADY TAKEN';
2023-01-16 16:17:18.314 GMT [33690] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:17:18.314 GMT [33690] STATEMENT:  RETURN NULL;
2023-01-16 16:17:18.314 GMT [33690] ERROR:  syntax error at or near "IF" at character 5
2023-01-16 16:17:18.314 GMT [33690] STATEMENT:  END IF;
2023-01-16 16:17:18.314 GMT [33690] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:17:18.314 GMT [33690] STATEMENT:  RETURN success;
2023-01-16 16:17:18.314 GMT [33690] WARNING:  there is no transaction in progress
2023-01-16 16:17:18.315 GMT [33690] ERROR:  unterminated dollar-quoted string at or near "$$ LANGUAGE plpgsql;
	
	
	
	
	
	-- sample data for customers
	INSERT INTO customer (first_name, last_name, date_of_birth, phone_number, email_address, address_street, address_city, address_county, address_postcode)
	VALUES ('John', 'Smith', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('Jane', 'Doe', '1990-01-01', '01234567890', 'test@gmail.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Bloggs', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('John', 'Bloggs', '1990-01-01', '01234567890', 'hello@yahoo.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('Jane', 'Bloggs', '1990-01-01', '01234567890', 'test@outlook.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Doe', '1990-01-01', '01234567890', 'hello@outlook.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('John', 'Doe', '1990-01-01', '01234567890', 'mybankemail@icloud.com', '1 My Bank Street', 'My Bank City', 'My Bank County', 'MB1 1NK'),
	('Jane', 'Smith', '1990-01-01', '01234567890', 'bankemail@outlook.com', '1 Bank Street', 'Bank City', 'Bank County', 'BA1 1NK'),
	('Joe', 'Smith', '1990-01-01', '01234567890', 'example@icloud.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX');
	
	-- sample data for online account
	INSERT INTO online_account (date_opened, sort_code, customer_id)
	VALUES ('2020-01-01', '123456', 1),
	('2019-01-01', '126485', 2),
	('2018-01-01', '128475', 3),
	('2017-01-01', '129476', 4),
	('2016-01-01', '120386', 5),
	('2017-02-03', '127385', 6),
	('2018-02-04', '128256', 7),
	('2020-01-01', '129386', 8),
	('2020-01-01', '120386', 9);
	
	-- sample data for user login
	INSERT INTO user_login (account_id, username, password)
	VALUES (1, 'johnsmith', 'b29af57c2b3bba21e9df0cece40952c6'),
	(2, 'janedoe', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(3, 'joebloggs', 'b29af57c2b3bba21e9df0cece40952c6'),
	(4, 'johnbloggs', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(5, 'janebloggs', 'b29af57c2b3bba21e9df0cece40952c6'),
	(6, 'joedoe', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(7, 'johndoe', 'b29af57c2b3bba21e9df0cece40952c6'),
	(8, 'joesmith', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(9, 'janesmith', 'b29af57c2b3bba21e9df0cece40952c6');
	
	-- sample data for security question option
	INSERT INTO security_question_option (question_description)
	VALUES ('What is your favourite colour?'),
	('What is your favourite food?'),
	('What is your favourite animal?'),
	('What is your favourite sport?'),
	('What is your favourite movie?'),
	('What is your favourite book?'),
	('What is your favourite song?'),
	('What is your favourite band?'),
	('What is your favourite game?'),
	('What is your favourite TV show?');
	
	--sample data for user login security question
	INSERT INTO user_login_security_question (question_choice_id, login_id)
	VALUES (1, 1),
	(2, 2),
	(3, 3),
	(4, 4),
	(5, 5),
	(6, 6),
	(7, 7),
	(8, 8),
	(9, 9);
	
	-- sample data for security question answer
	INSERT INTO security_question_answer (question_answer, question_id)
	VALUES ('Red', 1),
	('Blue', 2),
	('Green', 3),
	('Yellow', 4),
	('Orange', 5),
	('Purple', 6),
	('Pink', 7),
	('Black', 8),
	('White', 9);
	
	SELECT * FROM savings_statement;
	
	
	SELECT * FROM client.open_savings_account(1);
	
	--sample data for savings account
	SELECT * FROM client.open_savings_account(1);
	SELECT * FROM client.open_savings_account(2);
	SELECT * FROM client.open_savings_account(3);
	SELECT * FROM client.open_savings_account(4);
	
	SELECT * FROM client.open_debit_account(1);
	SELECT * FROM client.open_debit_account(2);
	SELECT * FROM client.open_debit_account(3);
	SELECT * FROM client.open_debit_account(4);
	
	SELECT * FROM client.open_credit_account(1);
	SELECT * FROM client.open_credit_account(2);
	SELECT * FROM client.open_credit_account(3);
	SELECT * FROM client.open_credit_account(4);
	
	SELECT * FROM client.view_accounts(1);
	
	SELECT * FROM client.initiate_transfer(1, 10000000, 100.00, 10000001, 123456);
	
	SELECT * FROM client.view_accounts(1);
	
	
	
	SELECT * FROM client.view_savings_statements(1, 10000000);
	
	SELECT * FROM savings_statement;
	
	-- -- sample data for savings account
	-- INSERT INTO savings_account (current_balance, interest_rate, account_id)
	-- VALUES (2000.00, 2.05, 1),
	-- (1000.00, 2.05, 2),
	-- (5000.00, 2.05, 3),
	-- (10000.00, 2.05, 4),
	-- (20000.00, 2.05, 5),
	-- (50000.00, 2.05, 6),
	-- (100000.00, 2.05, 7),
	-- (200000.00, 2.05, 8);
	
	-- -- sample data for credit account
	-- INSERT INTO credit_account (outstanding_balance, credit_limit, interest_rate, account_id)
	-- VALUES (55.43, 2000.00, 4.22, 1),
	-- (100.00, 1000.00, 4.22, 2),
	-- (200.00, 5000.00, 4.22, 3),
	-- (300.00, 10000.00, 4.22, 4),
	-- (400.00, 20000.00, 4.22, 5),
	-- (500.00, 50000.00, 4.22, 6),
	-- (600.00, 100000.00, 4.22, 7),
	-- (700.00, 200000.00, 4.22, 8);
	
	-- -- sample data for debit account
	-- INSERT INTO debit_account (current_balance, interest_rate, account_id)
	-- VALUES (3465.43, 0.05, 1),
	-- (1000.00, 0.05, 1),
	-- (5000.00, 0.05, 2),
	-- (10000.00, 0.05, 3),
	-- (20000.00, 0.05, 4),
	-- (50000.00, 0.05, 5),
	-- (100000.00, 0.05, 6),
	-- (200000.00, 0.05, 9);
	
	-- -- sample data for loan
	-- INSERT INTO loan (loan_end_date, loan_amount, loan_type, account_id)
	-- VALUES ('2024-01-01', 10000, 'vehicle', 8),
	-- ('2023-03-04', 300000, 'mortgage', 8),
	-- ('2035-03-03', 400000, 'mortgage', 1),
	-- ('2025-04-05', 25000, 'vehicle', 1),
	-- ('2026-05-05', 34000, 'vehicle', 1),
	-- ('2023-06-07', 500000, 'mortgage', 2),
	-- ('2026-04-04', 60000, 'vehicle', 2),
	-- ('2024-03-03', 70000, 'vehicle', 2),
	-- ('2023-02-02', 800000, 'mortgage', 3),
	-- ('2022-01-01', 90000, 'vehicle', 3),
	-- ('2021-01-01', 100000, 'vehicle', 3),
	-- ('2020-01-01', 110000, 'mortgage', 4),
	-- ('2020-01-01', 12000, 'vehicle', 4),
	-- ('2020-01-01', 13000, 'vehicle', 4),
	-- ('2020-01-01', 140000, 'mortgage', 5),
	-- ('2020-01-01', 15000, 'vehicle', 5),
	-- ('2020-01-01', 16000, 'vehicle', 5),
	-- ('2020-01-01', 170000, 'mortgage', 6),
	-- ('2020-01-01', 18000, 'vehicle', 6),
	-- ('2020-01-01', 19000, 'vehicle', 6),
	-- ('2020-01-01', 200000, 'mortgage', 7),
	-- ('2020-01-01', 21000, 'vehicle', 7),
	-- ('2020-01-01', 22000, 'vehicle', 7);
	
	-- CREATE SCHEMA IF NOT EXISTS staff;
	
	-- SET search_path TO public, staff;" at character 1
2023-01-16 16:17:18.315 GMT [33690] STATEMENT:  $$ LANGUAGE plpgsql;
	
	
	
	
	
	-- sample data for customers
	INSERT INTO customer (first_name, last_name, date_of_birth, phone_number, email_address, address_street, address_city, address_county, address_postcode)
	VALUES ('John', 'Smith', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('Jane', 'Doe', '1990-01-01', '01234567890', 'test@gmail.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Bloggs', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('John', 'Bloggs', '1990-01-01', '01234567890', 'hello@yahoo.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('Jane', 'Bloggs', '1990-01-01', '01234567890', 'test@outlook.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Doe', '1990-01-01', '01234567890', 'hello@outlook.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('John', 'Doe', '1990-01-01', '01234567890', 'mybankemail@icloud.com', '1 My Bank Street', 'My Bank City', 'My Bank County', 'MB1 1NK'),
	('Jane', 'Smith', '1990-01-01', '01234567890', 'bankemail@outlook.com', '1 Bank Street', 'Bank City', 'Bank County', 'BA1 1NK'),
	('Joe', 'Smith', '1990-01-01', '01234567890', 'example@icloud.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX');
	
	-- sample data for online account
	INSERT INTO online_account (date_opened, sort_code, customer_id)
	VALUES ('2020-01-01', '123456', 1),
	('2019-01-01', '126485', 2),
	('2018-01-01', '128475', 3),
	('2017-01-01', '129476', 4),
	('2016-01-01', '120386', 5),
	('2017-02-03', '127385', 6),
	('2018-02-04', '128256', 7),
	('2020-01-01', '129386', 8),
	('2020-01-01', '120386', 9);
	
	-- sample data for user login
	INSERT INTO user_login (account_id, username, password)
	VALUES (1, 'johnsmith', 'b29af57c2b3bba21e9df0cece40952c6'),
	(2, 'janedoe', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(3, 'joebloggs', 'b29af57c2b3bba21e9df0cece40952c6'),
	(4, 'johnbloggs', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(5, 'janebloggs', 'b29af57c2b3bba21e9df0cece40952c6'),
	(6, 'joedoe', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(7, 'johndoe', 'b29af57c2b3bba21e9df0cece40952c6'),
	(8, 'joesmith', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(9, 'janesmith', 'b29af57c2b3bba21e9df0cece40952c6');
	
	-- sample data for security question option
	INSERT INTO security_question_option (question_description)
	VALUES ('What is your favourite colour?'),
	('What is your favourite food?'),
	('What is your favourite animal?'),
	('What is your favourite sport?'),
	('What is your favourite movie?'),
	('What is your favourite book?'),
	('What is your favourite song?'),
	('What is your favourite band?'),
	('What is your favourite game?'),
	('What is your favourite TV show?');
	
	--sample data for user login security question
	INSERT INTO user_login_security_question (question_choice_id, login_id)
	VALUES (1, 1),
	(2, 2),
	(3, 3),
	(4, 4),
	(5, 5),
	(6, 6),
	(7, 7),
	(8, 8),
	(9, 9);
	
	-- sample data for security question answer
	INSERT INTO security_question_answer (question_answer, question_id)
	VALUES ('Red', 1),
	('Blue', 2),
	('Green', 3),
	('Yellow', 4),
	('Orange', 5),
	('Purple', 6),
	('Pink', 7),
	('Black', 8),
	('White', 9);
	
	SELECT * FROM savings_statement;
	
	
	SELECT * FROM client.open_savings_account(1);
	
	--sample data for savings account
	SELECT * FROM client.open_savings_account(1);
	SELECT * FROM client.open_savings_account(2);
	SELECT * FROM client.open_savings_account(3);
	SELECT * FROM client.open_savings_account(4);
	
	SELECT * FROM client.open_debit_account(1);
	SELECT * FROM client.open_debit_account(2);
	SELECT * FROM client.open_debit_account(3);
	SELECT * FROM client.open_debit_account(4);
	
	SELECT * FROM client.open_credit_account(1);
	SELECT * FROM client.open_credit_account(2);
	SELECT * FROM client.open_credit_account(3);
	SELECT * FROM client.open_credit_account(4);
	
	SELECT * FROM client.view_accounts(1);
	
	SELECT * FROM client.initiate_transfer(1, 10000000, 100.00, 10000001, 123456);
	
	SELECT * FROM client.view_accounts(1);
	
	
	
	SELECT * FROM client.view_savings_statements(1, 10000000);
	
	SELECT * FROM savings_statement;
	
	-- -- sample data for savings account
	-- INSERT INTO savings_account (current_balance, interest_rate, account_id)
	-- VALUES (2000.00, 2.05, 1),
	-- (1000.00, 2.05, 2),
	-- (5000.00, 2.05, 3),
	-- (10000.00, 2.05, 4),
	-- (20000.00, 2.05, 5),
	-- (50000.00, 2.05, 6),
	-- (100000.00, 2.05, 7),
	-- (200000.00, 2.05, 8);
	
	-- -- sample data for credit account
	-- INSERT INTO credit_account (outstanding_balance, credit_limit, interest_rate, account_id)
	-- VALUES (55.43, 2000.00, 4.22, 1),
	-- (100.00, 1000.00, 4.22, 2),
	-- (200.00, 5000.00, 4.22, 3),
	-- (300.00, 10000.00, 4.22, 4),
	-- (400.00, 20000.00, 4.22, 5),
	-- (500.00, 50000.00, 4.22, 6),
	-- (600.00, 100000.00, 4.22, 7),
	-- (700.00, 200000.00, 4.22, 8);
	
	-- -- sample data for debit account
	-- INSERT INTO debit_account (current_balance, interest_rate, account_id)
	-- VALUES (3465.43, 0.05, 1),
	-- (1000.00, 0.05, 1),
	-- (5000.00, 0.05, 2),
	-- (10000.00, 0.05, 3),
	-- (20000.00, 0.05, 4),
	-- (50000.00, 0.05, 5),
	-- (100000.00, 0.05, 6),
	-- (200000.00, 0.05, 9);
	
	-- -- sample data for loan
	-- INSERT INTO loan (loan_end_date, loan_amount, loan_type, account_id)
	-- VALUES ('2024-01-01', 10000, 'vehicle', 8),
	-- ('2023-03-04', 300000, 'mortgage', 8),
	-- ('2035-03-03', 400000, 'mortgage', 1),
	-- ('2025-04-05', 25000, 'vehicle', 1),
	-- ('2026-05-05', 34000, 'vehicle', 1),
	-- ('2023-06-07', 500000, 'mortgage', 2),
	-- ('2026-04-04', 60000, 'vehicle', 2),
	-- ('2024-03-03', 70000, 'vehicle', 2),
	-- ('2023-02-02', 800000, 'mortgage', 3),
	-- ('2022-01-01', 90000, 'vehicle', 3),
	-- ('2021-01-01', 100000, 'vehicle', 3),
	-- ('2020-01-01', 110000, 'mortgage', 4),
	-- ('2020-01-01', 12000, 'vehicle', 4),
	-- ('2020-01-01', 13000, 'vehicle', 4),
	-- ('2020-01-01', 140000, 'mortgage', 5),
	-- ('2020-01-01', 15000, 'vehicle', 5),
	-- ('2020-01-01', 16000, 'vehicle', 5),
	-- ('2020-01-01', 170000, 'mortgage', 6),
	-- ('2020-01-01', 18000, 'vehicle', 6),
	-- ('2020-01-01', 19000, 'vehicle', 6),
	-- ('2020-01-01', 200000, 'mortgage', 7),
	-- ('2020-01-01', 21000, 'vehicle', 7),
	-- ('2020-01-01', 22000, 'vehicle', 7);
	
	-- CREATE SCHEMA IF NOT EXISTS staff;
	
	-- SET search_path TO public, staff;
2023-01-16 16:18:11.950 GMT [33664] LOG:  received fast shutdown request
2023-01-16 16:18:11.952 GMT [33664] LOG:  aborting any active transactions
2023-01-16 16:18:11.956 GMT [33664] LOG:  background worker "logical replication launcher" (PID 33671) exited with exit code 1
2023-01-16 16:18:11.958 GMT [33666] LOG:  shutting down
2023-01-16 16:18:11.996 GMT [33664] LOG:  database system is shut down
2023-01-16 16:18:13.091 GMT [33923] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 16:18:13.091 GMT [33923] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 16:18:13.093 GMT [33923] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 16:18:13.097 GMT [33924] LOG:  database system was shut down at 2023-01-16 16:18:12 GMT
2023-01-16 16:18:13.104 GMT [33923] LOG:  database system is ready to accept connections
2023-01-16 16:18:13.782 GMT [33952] ERROR:  column transaction.sort_code does not exist at character 148
2023-01-16 16:18:13.782 GMT [33952] STATEMENT:  CREATE OR REPLACE VIEW bank.pending_transactions AS
	    SELECT pending_transaction.id, transaction.origin_account_id, transaction.dest_account_id, transaction.sort_code, transaction.amount, transaction.date, get_account_type(transaction.origin_account_id) AS origin_account_type
	    FROM pending_transaction
	    INNER JOIN transaction ON pending_transaction.id = transaction.id;
2023-01-16 16:18:13.784 GMT [33952] ERROR:  syntax error at or near "ELIF" at character 577
2023-01-16 16:18:13.784 GMT [33952] STATEMENT:  CREATE OR REPLACE FUNCTION bank.verify_transaction_type(pending_transaction_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE transaction_approved BOOLEAN;
	BEGIN
	    -- check pending transaction exists
	    IF EXISTS (SELECT * FROM bank.pending_transactions) THEN
	        --check is it is a transfer
	        IF EXISTS (SELECT * FROM bank.pending_transactions WHERE id = pending_transaction_id AND is_transfer = TRUE) THEN
	            RAISE NOTICE 'Transfer transaction';
	            SELECT * FROM verify_transaction_amounts(pending_transaction_id, TRUE) INTO transaction_approved;
	        ELIF EXISTS (SELECT * FROM bank.pending_transactions WHERE id = pending_transaction_id AND is_transfer = FALSE) THEN
	            RAISE NOTICE 'Payment transaction';
	            SELECT * FROM verify_transaction_amounts(pending_transaction_id, FALSE) INTO transaction_approved;
	        ELSE
	            RAISE NOTICE 'Unknown transaction type';
	            transaction_approved = FALSE;
	        END IF;
	    ELSE
	        RAISE NOTICE 'Transaction does not exist';
	        transaction_approved = FALSE;
	    END IF;
	    RETURN transaction_approved;
	END;
	$$ LANGUAGE plpgsql;
2023-01-16 16:18:13.784 GMT [33952] ERROR:  syntax error at or near "RETURN" at character 1898
2023-01-16 16:18:13.784 GMT [33952] STATEMENT:  CREATE OR REPLACE FUNCTION bank.verify_transaction(pending_transaction_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE transaction_approved BOOLEAN;
	DECLARE account_type TEXT;
	BEGIN
	    -- check pending transaction exists
	    IF verify_transaction_type(pending_transaction_id) = TRUE THEN
	        RAISE NOTICE 'Transaction approved';
	        transaction_approved = TRUE;
	    ELSE
	        RAISE NOTICE 'Transaction not approved';
	        transaction_approved = FALSE;
	    END IF;
	    RETURN transaction_approved;
	END;
	
	CREATE SCHEMA IF NOT EXISTS staff;
	SET search_path TO public, staff, client;
	
	CREATE OR REPLACE VIEW staff.accounts AS
	    SELECT account.account_number, account.account_id, online_account.sort_code
	    FROM account
	    INNER JOIN online_account ON account.account_id = online_account.id;
	
	CREATE OR REPLACE VIEW staff.credit_account_applications AS
	    SELECT credit_account_application.id, credit_account_application.application_status, credit_account.account_number, credit_account.outstanding_balance, credit_account.credit_limit, credit_account.interest_rate
	    FROM credit_account_application
	    INNER JOIN credit_account ON credit_account_application.account_number = credit_account.account_number;
	
	CREATE OR REPLACE VIEW staff.loan_applications AS
	    SELECT loan_application.id, loan_application.application_status, loan.id as loan_id, loan.amount, loan.end_date, loan.loan_type, loan.interest_rate, loan.account_id
	    FROM loan_application
	    INNER JOIN loan ON loan_application.loan_id = loan.id;
	
	CREATE OR REPLACE VIEW staff.customers AS
	    SELECT online_account.id as account_id, customer.first_name, customer.last_name
	    FROM online_account
	    INNER JOIN customer ON customer.id = online_account.customer_id;
	
	CREATE OR REPLACE FUNCTION staff.view_outstanding_credit_applications()
	RETURNS TABLE(first_name TEXT, last_name TEXT, account_number INT) AS $$
	BEGIN
	    RETURN QUERY SELECT customers.first_name, customers.last_name, credit_account_applications.account_number
	    FROM staff.customers
	    INNER JOIN staff.accounts ON customers.account_id = accounts.account_id
	    INNER JOIN staff.credit_card_applications ON accounts.account_number = credit_card_applications.account_number
	    WHERE credit_card_applications.application_status = 'PENDING';
	END;
2023-01-16 16:18:13.785 GMT [33952] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION staff.view_outstanding_loan_applications()
	RETURNS TABLE(first_name TEXT, last_name TEXT, loan_id INT) AS $$" at character 1
2023-01-16 16:18:13.785 GMT [33952] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION staff.view_outstanding_loan_applications()
	RETURNS TABLE(first_name TEXT, last_name TEXT, loan_id INT) AS $$
	BEGIN
	    RETURN QUERY SELECT customers.first_name, customers.last_name, loan_applications.id
	    FROM staff.customers
	    INNER JOIN staff.loan_applications ON loan_applications.account_id = customers.account_id
	    WHERE loan_applications.application_status = 'PENDING';
2023-01-16 16:18:13.786 GMT [33952] WARNING:  there is no transaction in progress
2023-01-16 16:18:13.788 GMT [33952] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	
	CREATE SCHEMA IF NOT EXISTS client;
	SET search_path TO public, client;
	
	
	CREATE OR REPLACE VIEW client.accounts AS
	    SELECT account.account_number, account.account_id, online_account.sort_code FROM account
	    INNER JOIN online_account ON account.account_id = online_account.id;
	
	CREATE OR REPLACE VIEW client.debit_accounts AS
	    SELECT account.account_id, account.account_number, debit_account.current_balance, debit_account.interest_rate, debit_overdraft.overdraft_limit, debit_overdraft.overdraft_usage, debit_overdraft.interest_rate AS overdraft_interest_rate
	    FROM client.accounts
	    INNER JOIN debit_account ON account.account_number = debit_account.account_number
	    INNER JOIN debit_overdraft ON account.account_number = debit_overdraft.account_number;
	
	CREATE OR REPLACE VIEW client.debit_accounts_statements AS
	    SELECT debit_accounts.account_id, debit_accounts.account_number, debit_statement.id, debit_statement.starting_date, debit_statement.end_date, debit_statement.amount
	    FROM debit_accounts
	    INNER JOIN debit_statement ON debit_accounts.account_number = debit_statement.account_number;
	
	CREATE OR REPLACE VIEW client.debit_accounts_statement AS
	    SELECT debit_accounts_statements.account_id, debit_accounts_statements.account_number, debit_accounts_statements.id, debit_accounts_statements.starting_date, debit_accounts_statements.end_date, debit_accounts_statements.amount AS total_amount, transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date
	    FROM debit_accounts_statements
	    INNER JOIN transaction ON debit_accounts_statements.id = transaction.debit_statement_id;
	
	CREATE OR REPLACE VIEW client.credit_accounts AS
	    SELECT account.account_id, account.account_number, credit_account.outstanding_balance, credit_account.credit_limit, credit_account.interest_rate, credit_account_application.application_status
	    FROM client.accounts
	    INNER JOIN credit_account ON account.account_number = credit_account.account_number
	    INNER JOIN credit_account_application ON account.account_number = credit_account_application.account_number;
	
	CREATE OR REPLACE VIEW client.credit_accounts_statements AS
	    SELECT credit_accounts.account_id, credit_accounts.account_number, credit_statement.id, credit_statement.starting_date, credit_statement.end_date, credit_statement.amount, credit_statement.minimum_payment, credit_statement.minimum_payment_due_date
	    FROM credit_accounts
	    INNER JOIN credit_statement ON credit_accounts.account_number = credit_statement.account_number;
	
	CREATE OR REPLACE VIEW client.credit_accounts_statement AS
	    SELECT credit_accounts_statements.account_id, credit_accounts_statements.account_number, credit_accounts_statements.id, credit_accounts_statements.starting_date, credit_accounts_statements.end_date, credit_accounts_statements.amount AS total_amount, credit_accounts_statements.minimum_payment, credit_accounts_statements.minimum_payment_due_date, transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date
	    FROM credit_accounts_statements
	    INNER JOIN transaction ON credit_accounts_statements.id = transaction.credit_statement_id;
	
	CREATE OR REPLACE VIEW client.savings_accounts AS
	    SELECT account.account_id, account.account_number, savings_account.current_balance, savings_account.interest_rate
	    FROM client.accounts
	    INNER JOIN savings_account ON account.account_number = savings_account.account_number;
	
	CREATE OR REPLACE VIEW client.savings_accounts_statements AS
	    SELECT savings_accounts.account_id, savings_accounts.account_number, savings_statement.id, savings_statement.starting_date, savings_statement.end_date, savings_statement.amount
	    FROM savings_accounts
	    INNER JOIN savings_statement ON savings_accounts.account_number = savings_statement.account_number;
	
	CREATE OR REPLACE VIEW client.loans AS
	    SELECT loan.account_id, loan.id, loan.amount, loan.interest_rate, loan.loan_type, loan.end_date, loan_application.application_status
	    FROM loan
	    INNER JOIN loan_application ON loan.id = loan_application.loan_id;
	
	CREATE OR REPLACE VIEW client.loan_statements AS
	    SELECT loans.account_id, loans.id, loan_statement.id as statement_id, loan_statement.starting_date, loan_statement.amount
	    FROM client.loans
	    INNER JOIN loan_statement ON loans.id = loan_statement.loan_id;
	
	CREATE OR REPLACE VIEW client.loan_applications AS
	    SELECT loan.account_id, loan_application.id, loan_application.application_status, loan_application.loan_id
	    FROM loan_application
	    INNER JOIN loan ON loan_application.loan_id = loan.id;
	
	CREATE OR REPLACE FUNCTION client.update_personal_information(account_identifier INT, first_name TEXT, last_name TEXT, date_of_birth DATE, phone_number TEXT, email_address TEXT, address_street TEXT, address_city TEXT, address_county TEXT, address_postcode TEXT, account_id INT)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-16 16:18:13.788 GMT [33952] STATEMENT:  $$ LANGUAGE plpgsql;
	
	
	CREATE SCHEMA IF NOT EXISTS client;
	SET search_path TO public, client;
	
	
	CREATE OR REPLACE VIEW client.accounts AS
	    SELECT account.account_number, account.account_id, online_account.sort_code FROM account
	    INNER JOIN online_account ON account.account_id = online_account.id;
	
	CREATE OR REPLACE VIEW client.debit_accounts AS
	    SELECT account.account_id, account.account_number, debit_account.current_balance, debit_account.interest_rate, debit_overdraft.overdraft_limit, debit_overdraft.overdraft_usage, debit_overdraft.interest_rate AS overdraft_interest_rate
	    FROM client.accounts
	    INNER JOIN debit_account ON account.account_number = debit_account.account_number
	    INNER JOIN debit_overdraft ON account.account_number = debit_overdraft.account_number;
	
	CREATE OR REPLACE VIEW client.debit_accounts_statements AS
	    SELECT debit_accounts.account_id, debit_accounts.account_number, debit_statement.id, debit_statement.starting_date, debit_statement.end_date, debit_statement.amount
	    FROM debit_accounts
	    INNER JOIN debit_statement ON debit_accounts.account_number = debit_statement.account_number;
	
	CREATE OR REPLACE VIEW client.debit_accounts_statement AS
	    SELECT debit_accounts_statements.account_id, debit_accounts_statements.account_number, debit_accounts_statements.id, debit_accounts_statements.starting_date, debit_accounts_statements.end_date, debit_accounts_statements.amount AS total_amount, transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date
	    FROM debit_accounts_statements
	    INNER JOIN transaction ON debit_accounts_statements.id = transaction.debit_statement_id;
	
	CREATE OR REPLACE VIEW client.credit_accounts AS
	    SELECT account.account_id, account.account_number, credit_account.outstanding_balance, credit_account.credit_limit, credit_account.interest_rate, credit_account_application.application_status
	    FROM client.accounts
	    INNER JOIN credit_account ON account.account_number = credit_account.account_number
	    INNER JOIN credit_account_application ON account.account_number = credit_account_application.account_number;
	
	CREATE OR REPLACE VIEW client.credit_accounts_statements AS
	    SELECT credit_accounts.account_id, credit_accounts.account_number, credit_statement.id, credit_statement.starting_date, credit_statement.end_date, credit_statement.amount, credit_statement.minimum_payment, credit_statement.minimum_payment_due_date
	    FROM credit_accounts
	    INNER JOIN credit_statement ON credit_accounts.account_number = credit_statement.account_number;
	
	CREATE OR REPLACE VIEW client.credit_accounts_statement AS
	    SELECT credit_accounts_statements.account_id, credit_accounts_statements.account_number, credit_accounts_statements.id, credit_accounts_statements.starting_date, credit_accounts_statements.end_date, credit_accounts_statements.amount AS total_amount, credit_accounts_statements.minimum_payment, credit_accounts_statements.minimum_payment_due_date, transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date
	    FROM credit_accounts_statements
	    INNER JOIN transaction ON credit_accounts_statements.id = transaction.credit_statement_id;
	
	CREATE OR REPLACE VIEW client.savings_accounts AS
	    SELECT account.account_id, account.account_number, savings_account.current_balance, savings_account.interest_rate
	    FROM client.accounts
	    INNER JOIN savings_account ON account.account_number = savings_account.account_number;
	
	CREATE OR REPLACE VIEW client.savings_accounts_statements AS
	    SELECT savings_accounts.account_id, savings_accounts.account_number, savings_statement.id, savings_statement.starting_date, savings_statement.end_date, savings_statement.amount
	    FROM savings_accounts
	    INNER JOIN savings_statement ON savings_accounts.account_number = savings_statement.account_number;
	
	CREATE OR REPLACE VIEW client.loans AS
	    SELECT loan.account_id, loan.id, loan.amount, loan.interest_rate, loan.loan_type, loan.end_date, loan_application.application_status
	    FROM loan
	    INNER JOIN loan_application ON loan.id = loan_application.loan_id;
	
	CREATE OR REPLACE VIEW client.loan_statements AS
	    SELECT loans.account_id, loans.id, loan_statement.id as statement_id, loan_statement.starting_date, loan_statement.amount
	    FROM client.loans
	    INNER JOIN loan_statement ON loans.id = loan_statement.loan_id;
	
	CREATE OR REPLACE VIEW client.loan_applications AS
	    SELECT loan.account_id, loan_application.id, loan_application.application_status, loan_application.loan_id
	    FROM loan_application
	    INNER JOIN loan ON loan_application.loan_id = loan.id;
	
	CREATE OR REPLACE FUNCTION client.update_personal_information(account_identifier INT, first_name TEXT, last_name TEXT, date_of_birth DATE, phone_number TEXT, email_address TEXT, address_street TEXT, address_city TEXT, address_county TEXT, address_postcode TEXT, account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-16 16:18:13.790 GMT [33952] ERROR:  syntax error at or near "UPDATE" at character 11
2023-01-16 16:18:13.790 GMT [33952] STATEMENT:  BEGIN
	    UPDATE customer SET first_name = first_name, last_name = last_name, date_of_birth = date_of_birth, phone_number = phone_number, email_address = email_address, address_street = address_street, address_city = address_city, address_county = address_county, address_postcode = address_postcode
	    WHERE id = (SELECT customer_id FROM online_account WHERE id = account_identifier);
2023-01-16 16:18:13.790 GMT [33952] ERROR:  syntax error at or near "passed" at character 1
2023-01-16 16:18:13.790 GMT [33952] STATEMENT:  passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-16 16:18:13.792 GMT [33952] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:18:13.792 GMT [33952] STATEMENT:  RETURN passed;
2023-01-16 16:18:13.793 GMT [33952] WARNING:  there is no transaction in progress
2023-01-16 16:18:13.794 GMT [33952] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.update_password(account_identifier INT, new_password TEXT)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-16 16:18:13.794 GMT [33952] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.update_password(account_identifier INT, new_password TEXT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-16 16:18:13.794 GMT [33952] ERROR:  syntax error at or near "INT" at character 19
2023-01-16 16:18:13.794 GMT [33952] STATEMENT:  DECLARE ROW_COUNT INT;
2023-01-16 16:18:13.794 GMT [33952] ERROR:  syntax error at or near "UPDATE" at character 11
2023-01-16 16:18:13.794 GMT [33952] STATEMENT:  BEGIN
	    UPDATE user_login SET password = md5(new_password)
	    WHERE account_id = account_identifier;
2023-01-16 16:18:13.794 GMT [33952] ERROR:  syntax error at or near "GET" at character 1
2023-01-16 16:18:13.794 GMT [33952] STATEMENT:  GET DIAGNOSTICS ROW_COUNT = ROW_COUNT;
2023-01-16 16:18:13.794 GMT [33952] ERROR:  column "account_identifier" does not exist at character 76
2023-01-16 16:18:13.794 GMT [33952] STATEMENT:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Updated password', CURRENT_DATE);
2023-01-16 16:18:13.794 GMT [33952] ERROR:  syntax error at or near "passed" at character 1
2023-01-16 16:18:13.794 GMT [33952] STATEMENT:  passed = CASE WHEN ROW_COUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-16 16:18:13.795 GMT [33952] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:18:13.795 GMT [33952] STATEMENT:  RETURN passed;
2023-01-16 16:18:13.795 GMT [33952] WARNING:  there is no transaction in progress
2023-01-16 16:18:13.795 GMT [33952] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.update_email(account_identifier INT, new_email TEXT)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-16 16:18:13.795 GMT [33952] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.update_email(account_identifier INT, new_email TEXT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-16 16:18:13.795 GMT [33952] ERROR:  syntax error at or near "INT" at character 19
2023-01-16 16:18:13.795 GMT [33952] STATEMENT:  DECLARE ROW_COUNT INT;
2023-01-16 16:18:13.795 GMT [33952] ERROR:  syntax error at or near "UPDATE" at character 11
2023-01-16 16:18:13.795 GMT [33952] STATEMENT:  BEGIN
	    UPDATE user_login SET email = new_email
	    WHERE account_id = account_identifier;
2023-01-16 16:18:13.795 GMT [33952] ERROR:  syntax error at or near "GET" at character 1
2023-01-16 16:18:13.795 GMT [33952] STATEMENT:  GET DIAGNOSTICS ROW_COUNT = ROW_COUNT;
2023-01-16 16:18:13.795 GMT [33952] ERROR:  column "account_identifier" does not exist at character 76
2023-01-16 16:18:13.795 GMT [33952] STATEMENT:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Updated email', CURRENT_DATE);
2023-01-16 16:18:13.795 GMT [33952] ERROR:  syntax error at or near "passed" at character 1
2023-01-16 16:18:13.795 GMT [33952] STATEMENT:  passed = CASE WHEN ROW_COUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-16 16:18:13.795 GMT [33952] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:18:13.795 GMT [33952] STATEMENT:  RETURN passed;
2023-01-16 16:18:13.796 GMT [33952] WARNING:  there is no transaction in progress
2023-01-16 16:18:13.796 GMT [33952] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	
	CREATE OR REPLACE FUNCTION client.open_debit_account(account_id INT)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-16 16:18:13.796 GMT [33952] STATEMENT:  $$ LANGUAGE plpgsql;
	
	
	CREATE OR REPLACE FUNCTION client.open_debit_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-16 16:18:13.796 GMT [33952] ERROR:  syntax error at or near "INT" at character 30
2023-01-16 16:18:13.796 GMT [33952] STATEMENT:  DECLARE debit_account_number INT;
2023-01-16 16:18:13.796 GMT [33952] ERROR:  syntax error at or near "INT" at character 29
2023-01-16 16:18:13.796 GMT [33952] STATEMENT:  DECLARE next_account_number INT;
2023-01-16 16:18:13.796 GMT [33952] ERROR:  syntax error at or near "INT" at character 19
2023-01-16 16:18:13.796 GMT [33952] STATEMENT:  DECLARE ROW_COUNT INT;
2023-01-16 16:18:13.796 GMT [33952] ERROR:  syntax error at or near "SELECT" at character 11
2023-01-16 16:18:13.796 GMT [33952] STATEMENT:  BEGIN
	    SELECT get_next_account_number() INTO next_account_number;
2023-01-16 16:18:13.796 GMT [33952] ERROR:  syntax error at or near "INTO" at character 163
2023-01-16 16:18:13.796 GMT [33952] STATEMENT:  INSERT INTO debit_account (account_number, account_id, current_balance, interest_rate) VALUES (next_account_number ,account_id, 0, 0.01) RETURNING account_number INTO debit_account_number;
2023-01-16 16:18:13.796 GMT [33952] ERROR:  syntax error at or near "GET" at character 1
2023-01-16 16:18:13.796 GMT [33952] STATEMENT:  GET DIAGNOSTICS ROW_COUNT = ROW_COUNT;
2023-01-16 16:18:13.797 GMT [33952] ERROR:  column "debit_account_number" does not exist at character 189
2023-01-16 16:18:13.797 GMT [33952] STATEMENT:  INSERT INTO debit_statement (starting_date, end_date, amount, account_number) VALUES (date_trunc('month', now()::date), (date_trunc('month', now()::date)) + interval '1 month - 1 day', 0, debit_account_number);
2023-01-16 16:18:13.797 GMT [33952] ERROR:  column "debit_account_number" does not exist at character 115
2023-01-16 16:18:13.797 GMT [33952] STATEMENT:  INSERT INTO debit_overdraft (overdraft_usage, overdraft_limit, interest_rate, account_number) VALUES (0, 0, 0.01, debit_account_number);
2023-01-16 16:18:13.797 GMT [33952] ERROR:  column "account_id" does not exist at character 76
2023-01-16 16:18:13.797 GMT [33952] HINT:  There is a column named "account_id" in table "management_log", but it cannot be referenced from this part of the query.
2023-01-16 16:18:13.797 GMT [33952] STATEMENT:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened debit account', CURRENT_DATE);
2023-01-16 16:18:13.797 GMT [33952] ERROR:  syntax error at or near "passed" at character 1
2023-01-16 16:18:13.797 GMT [33952] STATEMENT:  passed = CASE WHEN ROW_COUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-16 16:18:13.797 GMT [33952] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:18:13.797 GMT [33952] STATEMENT:  RETURN passed;
2023-01-16 16:18:13.798 GMT [33952] WARNING:  there is no transaction in progress
2023-01-16 16:18:13.798 GMT [33952] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_credit_account(account_id INT)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-16 16:18:13.798 GMT [33952] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_credit_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-16 16:18:13.798 GMT [33952] ERROR:  syntax error at or near "INT" at character 31
2023-01-16 16:18:13.798 GMT [33952] STATEMENT:  DECLARE credit_account_number INT;
2023-01-16 16:18:13.798 GMT [33952] ERROR:  syntax error at or near "INT" at character 29
2023-01-16 16:18:13.798 GMT [33952] STATEMENT:  DECLARE next_account_number INT;
2023-01-16 16:18:13.798 GMT [33952] ERROR:  syntax error at or near "INT" at character 19
2023-01-16 16:18:13.798 GMT [33952] STATEMENT:  DECLARE ROW_COUNT INT;
2023-01-16 16:18:13.798 GMT [33952] ERROR:  syntax error at or near "SELECT" at character 11
2023-01-16 16:18:13.798 GMT [33952] STATEMENT:  BEGIN
	    SELECT get_next_account_number() INTO next_account_number;
2023-01-16 16:18:13.798 GMT [33952] ERROR:  syntax error at or near "INTO" at character 185
2023-01-16 16:18:13.798 GMT [33952] STATEMENT:  INSERT INTO credit_account (account_number, outstanding_balance, credit_limit, interest_rate, account_id) VALUES (next_account_number ,0, 0, 24.9, account_id) RETURNING account_number INTO credit_account_number;
2023-01-16 16:18:13.798 GMT [33952] ERROR:  syntax error at or near "GET" at character 1
2023-01-16 16:18:13.798 GMT [33952] STATEMENT:  GET DIAGNOSTICS ROW_COUNT = ROW_COUNT;
2023-01-16 16:18:13.798 GMT [33952] ERROR:  column "credit_account_number" does not exist at character 250
2023-01-16 16:18:13.798 GMT [33952] STATEMENT:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (date_trunc('month', now()::date), (date_trunc('month', now()::date)) + interval '1 month - 1 day', 0, 0, CURRENT_DATE, credit_account_number);
2023-01-16 16:18:13.799 GMT [33952] ERROR:  column "credit_account_number" does not exist at character 85
2023-01-16 16:18:13.799 GMT [33952] STATEMENT:  INSERT INTO credit_account_application (account_number, application_status) VALUES (credit_account_number, 'PENDING');
2023-01-16 16:18:13.799 GMT [33952] ERROR:  column "account_id" does not exist at character 76
2023-01-16 16:18:13.799 GMT [33952] HINT:  There is a column named "account_id" in table "management_log", but it cannot be referenced from this part of the query.
2023-01-16 16:18:13.799 GMT [33952] STATEMENT:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened credit account', CURRENT_DATE);
2023-01-16 16:18:13.799 GMT [33952] ERROR:  syntax error at or near "passed" at character 1
2023-01-16 16:18:13.799 GMT [33952] STATEMENT:  passed = CASE WHEN ROW_COUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-16 16:18:13.799 GMT [33952] ERROR:  syntax error at or near "return" at character 1
2023-01-16 16:18:13.799 GMT [33952] STATEMENT:  return PASSED;
2023-01-16 16:18:13.799 GMT [33952] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_savings_account(account_id INT)
	RETURNS BOOLEAN AS $$" at character 5
2023-01-16 16:18:13.799 GMT [33952] STATEMENT:  END
	$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_savings_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-16 16:18:13.799 GMT [33952] ERROR:  syntax error at or near "INT" at character 28
2023-01-16 16:18:13.799 GMT [33952] STATEMENT:  DECLARE savings_account_id INT;
2023-01-16 16:18:13.799 GMT [33952] ERROR:  syntax error at or near "INT" at character 29
2023-01-16 16:18:13.799 GMT [33952] STATEMENT:  DECLARE next_account_number INT;
2023-01-16 16:18:13.799 GMT [33952] ERROR:  syntax error at or near "INT" at character 19
2023-01-16 16:18:13.799 GMT [33952] STATEMENT:  DECLARE ROW_COUNT INT;
2023-01-16 16:18:13.799 GMT [33952] ERROR:  syntax error at or near "SELECT" at character 11
2023-01-16 16:18:13.799 GMT [33952] STATEMENT:  BEGIN
	    SELECT get_next_account_number() INTO next_account_number;
2023-01-16 16:18:13.800 GMT [33952] ERROR:  syntax error at or near "INTO" at character 165
2023-01-16 16:18:13.800 GMT [33952] STATEMENT:  INSERT INTO savings_account (account_number, account_id, current_balance, interest_rate) VALUES (next_account_number ,account_id, 0, 0.01) RETURNING account_number INTO savings_account_id;
2023-01-16 16:18:13.800 GMT [33952] ERROR:  syntax error at or near "GET" at character 1
2023-01-16 16:18:13.800 GMT [33952] STATEMENT:  GET DIAGNOSTICS ROW_COUNT = ROW_COUNT;
2023-01-16 16:18:13.800 GMT [33952] ERROR:  column "savings_account_id" does not exist at character 191
2023-01-16 16:18:13.800 GMT [33952] STATEMENT:  INSERT INTO savings_statement (starting_date, end_date, amount, account_number) VALUES (date_trunc('month', now()::date), (date_trunc('month', now()::date)) + interval '1 month - 1 day', 0, savings_account_id);
2023-01-16 16:18:13.800 GMT [33952] ERROR:  column "account_id" does not exist at character 76
2023-01-16 16:18:13.800 GMT [33952] HINT:  There is a column named "account_id" in table "management_log", but it cannot be referenced from this part of the query.
2023-01-16 16:18:13.800 GMT [33952] STATEMENT:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened savings account', CURRENT_DATE);
2023-01-16 16:18:13.800 GMT [33952] ERROR:  syntax error at or near "passed" at character 1
2023-01-16 16:18:13.800 GMT [33952] STATEMENT:  passed = CASE WHEN ROW_COUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-16 16:18:13.800 GMT [33952] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:18:13.800 GMT [33952] STATEMENT:  RETURN passed;
2023-01-16 16:18:13.800 GMT [33952] WARNING:  there is no transaction in progress
2023-01-16 16:18:13.800 GMT [33952] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_loan(account_id INT, loan_amount INT, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-16 16:18:13.800 GMT [33952] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_loan(account_id INT, loan_amount INT, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-16 16:18:13.801 GMT [33952] ERROR:  syntax error at or near "INT" at character 17
2023-01-16 16:18:13.801 GMT [33952] STATEMENT:  DECLARE loan_id INT;
2023-01-16 16:18:13.801 GMT [33952] ERROR:  syntax error at or near "INT" at character 19
2023-01-16 16:18:13.801 GMT [33952] STATEMENT:  DECLARE ROW_COUNT INT;
2023-01-16 16:18:13.801 GMT [33952] ERROR:  syntax error at or near "INSERT" at character 11
2023-01-16 16:18:13.801 GMT [33952] STATEMENT:  BEGIN
	    INSERT INTO loan (account_id, loan_amount, loan_end_date, loan_type, loan_interest_rate) VALUES (account_id, loan_amount, loan_end_date, loan_type, loan_interest_rate) RETURNING id INTO loan_id;
2023-01-16 16:18:13.801 GMT [33952] ERROR:  syntax error at or near "GET" at character 1
2023-01-16 16:18:13.801 GMT [33952] STATEMENT:  GET DIAGNOSTICS ROW_COUNT = ROW_COUNT;
2023-01-16 16:18:13.801 GMT [33952] ERROR:  column "end_date" of relation "loan_statement" does not exist at character 44
2023-01-16 16:18:13.801 GMT [33952] STATEMENT:  INSERT INTO loan_statement (starting_date, end_date, amount, account_id) VALUES (date_trunc('month', now()::date), (date_trunc('month', now()::date)) + interval '1 month - 1 day', 0, loan_id);
2023-01-16 16:18:13.801 GMT [33952] ERROR:  column "loan_id" does not exist at character 68
2023-01-16 16:18:13.801 GMT [33952] HINT:  There is a column named "loan_id" in table "loan_application", but it cannot be referenced from this part of the query.
2023-01-16 16:18:13.801 GMT [33952] STATEMENT:  INSERT INTO loan_application (loan_id, application_status) VALUES (loan_id, 'PENDING');
2023-01-16 16:18:13.801 GMT [33952] ERROR:  column "account_id" does not exist at character 76
2023-01-16 16:18:13.801 GMT [33952] HINT:  There is a column named "account_id" in table "management_log", but it cannot be referenced from this part of the query.
2023-01-16 16:18:13.801 GMT [33952] STATEMENT:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened loan', CURRENT_DATE);
2023-01-16 16:18:13.801 GMT [33952] ERROR:  syntax error at or near "passed" at character 1
2023-01-16 16:18:13.801 GMT [33952] STATEMENT:  passed = CASE WHEN ROW_COUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-16 16:18:13.802 GMT [33952] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:18:13.802 GMT [33952] STATEMENT:  RETURN passed;
2023-01-16 16:18:13.802 GMT [33952] WARNING:  there is no transaction in progress
2023-01-16 16:18:13.802 GMT [33952] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_personal_information(account_id INT)
	RETURNS TABLE (first_name TEXT, last_name TEXT, email TEXT, phone_number TEXT, address TEXT, city TEXT, country TEXT, postal_code TEXT) AS $$" at character 1
2023-01-16 16:18:13.802 GMT [33952] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_personal_information(account_id INT)
	RETURNS TABLE (first_name TEXT, last_name TEXT, email TEXT, phone_number TEXT, address TEXT, city TEXT, country TEXT, postal_code TEXT) AS $$
	BEGIN
	    RETURN QUERY
	        SELECT first_name, last_name, email, phone_number, address, city, country, postal_code
	            FROM customer
	        INNER JOIN account ON account.customer_id = customer.id
	        WHERE account.id = account_id;
2023-01-16 16:18:13.802 GMT [33952] WARNING:  there is no transaction in progress
2023-01-16 16:18:13.802 GMT [33952] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_accounts(account_identifier INT)
	RETURNS TABLE (account_number INT, account_id INT, balance NUMERIC, interest_rate NUMERIC, account_type TEXT) AS $$" at character 1
2023-01-16 16:18:13.802 GMT [33952] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_accounts(account_identifier INT)
	RETURNS TABLE (account_number INT, account_id INT, balance NUMERIC, interest_rate NUMERIC, account_type TEXT) AS $$
	BEGIN
	    RETURN QUERY
	        SELECT account.*, COALESCE(debit_accounts.current_balance, credit_accounts.outstanding_balance, savings_accounts.current_balance) AS balance,
	            COALESCE(debit_accounts.interest_rate, credit_accounts.interest_rate, savings_accounts.interest_rate) AS interest_rate,
	            get_account_type(account.account_number) AS account_type
	            FROM account
	            LEFT JOIN client.credit_accounts ON account.account_number = credit_accounts.account_number
	            LEFT JOIN client.debit_accounts ON account.account_number = debit_accounts.account_number
	            LEFT JOIN client.savings_accounts ON account.account_number = savings_accounts.account_number
	            WHERE account.account_id = account_identifier;
2023-01-16 16:18:13.803 GMT [33952] WARNING:  there is no transaction in progress
2023-01-16 16:18:13.803 GMT [33952] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, overdraft_limit NUMERIC, overdraft_usage NUMERIC, overdraft_interest_rate NUMERIC, external_account_number INT) AS $$" at character 1
2023-01-16 16:18:13.803 GMT [33952] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, overdraft_limit NUMERIC, overdraft_usage NUMERIC, overdraft_interest_rate NUMERIC, external_account_number INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed debit accounts', CURRENT_DATE);
2023-01-16 16:18:13.804 GMT [33952] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:18:13.804 GMT [33952] STATEMENT:  RETURN QUERY
	        SELECT * FROM client.debit_accounts WHERE account_id = account_id;
2023-01-16 16:18:13.804 GMT [33952] WARNING:  there is no transaction in progress
2023-01-16 16:18:13.804 GMT [33952] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_accounts(account_id INT)
	RETURNS TABLE (id INT, outstanding_balance NUMERIC, credit_limit NUMERIC, interest_rate NUMERIC, application_status TEXT) AS $$" at character 1
2023-01-16 16:18:13.804 GMT [33952] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_accounts(account_id INT)
	RETURNS TABLE (id INT, outstanding_balance NUMERIC, credit_limit NUMERIC, interest_rate NUMERIC, application_status TEXT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit accounts', CURRENT_DATE);
2023-01-16 16:18:13.805 GMT [33952] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:18:13.805 GMT [33952] STATEMENT:  RETURN QUERY
	        SELECT * FROM client.credit_accounts WHERE account_id = account_id;
2023-01-16 16:18:13.805 GMT [33952] WARNING:  there is no transaction in progress
2023-01-16 16:18:13.805 GMT [33952] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_savings_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, external_account_number INT) AS $$" at character 1
2023-01-16 16:18:13.805 GMT [33952] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_savings_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, external_account_number INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings accounts', CURRENT_DATE);
2023-01-16 16:18:13.805 GMT [33952] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:18:13.805 GMT [33952] STATEMENT:  RETURN QUERY
	        SELECT * FROM client.savings_accounts WHERE account_id = account_id;
2023-01-16 16:18:13.805 GMT [33952] WARNING:  there is no transaction in progress
2023-01-16 16:18:13.806 GMT [33952] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_loans(account_id INT)
	RETURNS TABLE (id INT, loan_amount NUMERIC, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC, application_status TEXT) AS $$" at character 1
2023-01-16 16:18:13.806 GMT [33952] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_loans(account_id INT)
	RETURNS TABLE (id INT, loan_amount NUMERIC, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC, application_status TEXT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed loans', CURRENT_DATE);
2023-01-16 16:18:13.806 GMT [33952] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:18:13.806 GMT [33952] STATEMENT:  RETURN QUERY
	        SELECT * FROM client.loans WHERE account_id = account_id;
2023-01-16 16:18:13.806 GMT [33952] WARNING:  there is no transaction in progress
2023-01-16 16:18:13.806 GMT [33952] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_savings_statements(account_identifier INT, orig_account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-16 16:18:13.806 GMT [33952] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_savings_statements(account_identifier INT, orig_account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Viewed savings statements', CURRENT_DATE);
2023-01-16 16:18:13.806 GMT [33952] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:18:13.806 GMT [33952] STATEMENT:  RETURN QUERY
	        SELECT savings_accounts_statements.starting_date, savings_accounts_statements.end_date, savings_accounts_statements.amount, savings_accounts_statements.account_id
	        FROM client.savings_accounts_statements
	        WHERE savings_accounts_statements.account_number = orig_account_number
	        AND savings_accounts_statements.account_id = account_identifier;
2023-01-16 16:18:13.806 GMT [33952] WARNING:  there is no transaction in progress
2023-01-16 16:18:13.806 GMT [33952] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_statements(account_identifier INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-16 16:18:13.806 GMT [33952] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_statements(account_identifier INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Viewed debit statements', CURRENT_DATE);
2023-01-16 16:18:13.806 GMT [33952] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:18:13.806 GMT [33952] STATEMENT:  RETURN QUERY
	        SELECT debit_accounts_statements.account_id, debit_accounts_statements.account_number, debit_accounts_statements.starting_date, debit_accounts_statements.end_date, debit_accounts_statements.amount
	        FROM client.debit_accounts_statements
	        WHERE debit_accounts_statements.account_number = account_number
	        AND debit_accounts_statements.account_id = account_identifier;
2023-01-16 16:18:13.807 GMT [33952] WARNING:  there is no transaction in progress
2023-01-16 16:18:13.807 GMT [33952] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_statements(account_identifier INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-16 16:18:13.807 GMT [33952] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_statements(account_identifier INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Viewed credit statements', CURRENT_DATE);
2023-01-16 16:18:13.807 GMT [33952] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:18:13.807 GMT [33952] STATEMENT:  RETURN QUERY
	        SELECT credit_accounts_statements.account_id, credit_accounts_statements.account_number, credit_accounts_statements.starting_date, credit_accounts_statements.end_date, credit_accounts_statements.amount
	        FROM client.credit_accounts_statements
	        WHERE credit_accounts_statements.account_number = account_number
	        AND credit_accounts_statements.account_id = account_identifier;
2023-01-16 16:18:13.807 GMT [33952] WARNING:  there is no transaction in progress
2023-01-16 16:18:13.807 GMT [33952] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_statement(account_identifier INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-16 16:18:13.807 GMT [33952] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_statement(account_identifier INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Viewed debit statement', CURRENT_DATE);
2023-01-16 16:18:13.807 GMT [33952] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:18:13.807 GMT [33952] STATEMENT:  RETURN QUERY
	        SELECT debit_accounts_statement.account_id, debit_accounts_statement.account_number, debit_accounts_statement.starting_date, debit_accounts_statement.end_date, debit_accounts_statement.amount
	        FROM client.debit_accounts_statement
	        WHERE debit_accounts_statement.account_id = account_identifier
	        AND debit_accounts_statement.account_number = account_number
	        AND debit_accounts_statement.statement_id = statement_id;
2023-01-16 16:18:13.807 GMT [33952] WARNING:  there is no transaction in progress
2023-01-16 16:18:13.808 GMT [33952] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_statement(account_identifier INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-16 16:18:13.808 GMT [33952] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_statement(account_identifier INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statement', CURRENT_DATE);
2023-01-16 16:18:13.808 GMT [33952] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:18:13.808 GMT [33952] STATEMENT:  RETURN QUERY
	        SELECT credit_accounts_statement.account_id, credit_accounts_statement.account_number, credit_accounts_statement.starting_date, credit_accounts_statement.end_date, credit_accounts_statement.amount
	        FROM client.credit_accounts_statement
	        WHERE credit_accounts_statement.account_id = account_identifier
	        AND credit_accounts_statement.account_number = account_number
	        AND credit_accounts_statement.statement_id = statement_id;
2023-01-16 16:18:13.808 GMT [33952] WARNING:  there is no transaction in progress
2023-01-16 16:18:13.808 GMT [33952] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_savings_statement(account_identifier INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-16 16:18:13.808 GMT [33952] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_savings_statement(account_identifier INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statement', CURRENT_DATE);
2023-01-16 16:18:13.808 GMT [33952] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:18:13.808 GMT [33952] STATEMENT:  RETURN QUERY
	        SELECT savings_accounts_statement.account_id, savings_accounts_statement.account_number, savings_accounts_statement.starting_date, savings_accounts_statement.end_date, savings_accounts_statement.amount
	        FROM client.savings_accounts_statement
	        WHERE savings_accounts_statement.account_id = account_identifier
	        AND savings_accounts_statement.account_number = account_number
	        AND savings_accounts_statement.statement_id = statement_id;
2023-01-16 16:18:13.808 GMT [33952] WARNING:  there is no transaction in progress
2023-01-16 16:18:13.808 GMT [33952] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.get_or_create_statement(account_identifier INT, orig_account_number INT)
	RETURNS INT AS $$" at character 1
2023-01-16 16:18:13.808 GMT [33952] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.get_or_create_statement(account_identifier INT, orig_account_number INT)
	RETURNS INT AS $$
	DECLARE statement_id INT;
2023-01-16 16:18:13.808 GMT [33952] ERROR:  syntax error at or near "CASE" at character 11
2023-01-16 16:18:13.808 GMT [33952] STATEMENT:  BEGIN
	    CASE WHEN EXISTS (SELECT * FROM client.debit_accounts WHERE account_id = account_identifier AND account_number = orig_account_number) THEN
	        IF EXISTS (SELECT * FROM debit_statement WHERE account_number = orig_account_number AND starting_date <= now()::date AND end_date >= now()::date) THEN
	            SELECT id INTO statement_id FROM debit_statement WHERE account_number = orig_account_number AND starting_date <= now()::date AND end_date >= now()::date;
2023-01-16 16:18:13.808 GMT [33952] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:18:13.808 GMT [33952] STATEMENT:  RETURN statement_id;
2023-01-16 16:18:13.809 GMT [33952] ERROR:  syntax error at or near "ELSE" at character 1
2023-01-16 16:18:13.809 GMT [33952] STATEMENT:  ELSE 
	            INSERT INTO debit_statement (account_number, starting_date, end_date, amount) VALUES (orig_account_number, date_trunc('month', now()::date), now()::date + 30, 0);
2023-01-16 16:18:13.809 GMT [33952] ERROR:  column "orig_account_number" does not exist at character 73
2023-01-16 16:18:13.809 GMT [33952] STATEMENT:  SELECT id INTO statement_id FROM debit_statement WHERE account_number = orig_account_number AND starting_date <= now()::date AND end_date >= now()::date;
2023-01-16 16:18:13.809 GMT [33952] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:18:13.809 GMT [33952] STATEMENT:  RETURN statement_id;
2023-01-16 16:18:13.809 GMT [33952] ERROR:  syntax error at or near "IF" at character 5
2023-01-16 16:18:13.809 GMT [33952] STATEMENT:  END IF;
2023-01-16 16:18:13.809 GMT [33952] ERROR:  syntax error at or near "WHEN" at character 1
2023-01-16 16:18:13.809 GMT [33952] STATEMENT:  WHEN EXISTS (SELECT * FROM client.credit_accounts WHERE account_id = account_identifier AND account_number = orig_account_number) THEN
	        IF EXISTS (SELECT * FROM credit_statement WHERE account_number = orig_account_number AND starting_date <= now()::date AND end_date >= now()::date) THEN
	            SELECT id INTO statement_id FROM credit_statement WHERE account_number = orig_account_number AND starting_date <= now()::date AND end_date >= now()::date;
2023-01-16 16:18:13.809 GMT [33952] ERROR:  syntax error at or near "return" at character 1
2023-01-16 16:18:13.809 GMT [33952] STATEMENT:  return statement_id;
2023-01-16 16:18:13.810 GMT [33952] ERROR:  syntax error at or near "ELSE" at character 1
2023-01-16 16:18:13.810 GMT [33952] STATEMENT:  ELSE 
	            INSERT INTO credit_statement (account_number, starting_date, end_date, amount) VALUES (orig_account_number, date_trunc('month', now()::date), now()::date + 30, 0);
2023-01-16 16:18:13.810 GMT [33952] ERROR:  column "orig_account_number" does not exist at character 74
2023-01-16 16:18:13.810 GMT [33952] STATEMENT:  SELECT id INTO statement_id FROM credit_statement WHERE account_number = orig_account_number AND starting_date <= now()::date AND end_date >= now()::date;
2023-01-16 16:18:13.810 GMT [33952] ERROR:  syntax error at or near "return" at character 1
2023-01-16 16:18:13.810 GMT [33952] STATEMENT:  return statement_id;
2023-01-16 16:18:13.810 GMT [33952] ERROR:  syntax error at or near "IF" at character 5
2023-01-16 16:18:13.810 GMT [33952] STATEMENT:  END IF;
2023-01-16 16:18:13.810 GMT [33952] ERROR:  syntax error at or near "WHEN" at character 1
2023-01-16 16:18:13.810 GMT [33952] STATEMENT:  WHEN EXISTS (SELECT * FROM client.savings_accounts WHERE account_id = account_identifier AND account_number = orig_account_number) THEN
	        IF EXISTS (SELECT * FROM savings_statement WHERE account_number = orig_account_number AND starting_date <= now()::date AND end_date >= now()::date) THEN
	            SELECT id INTO statement_id FROM savings_statement WHERE account_number = orig_account_number AND starting_date <= now()::date AND end_date >= now()::date;
2023-01-16 16:18:13.811 GMT [33952] ERROR:  syntax error at or near "return" at character 1
2023-01-16 16:18:13.811 GMT [33952] STATEMENT:  return statement_id;
2023-01-16 16:18:13.811 GMT [33952] ERROR:  syntax error at or near "ELSE" at character 1
2023-01-16 16:18:13.811 GMT [33952] STATEMENT:  ELSE
	            INSERT INTO savings_statement (account_number, starting_date, end_date, amount) VALUES (orig_account_number, date_trunc('month', now()::date), now()::date + 30, 0);
2023-01-16 16:18:13.811 GMT [33952] ERROR:  column "orig_account_number" does not exist at character 75
2023-01-16 16:18:13.811 GMT [33952] STATEMENT:  SELECT id INTO statement_id FROM savings_statement WHERE account_number = orig_account_number AND starting_date <= now()::date AND end_date >= now()::date;
2023-01-16 16:18:13.811 GMT [33952] ERROR:  syntax error at or near "return" at character 1
2023-01-16 16:18:13.811 GMT [33952] STATEMENT:  return statement_id;
2023-01-16 16:18:13.812 GMT [33952] ERROR:  syntax error at or near "IF" at character 5
2023-01-16 16:18:13.812 GMT [33952] STATEMENT:  END IF;
2023-01-16 16:18:13.812 GMT [33952] ERROR:  syntax error at or near "CASE" at character 5
2023-01-16 16:18:13.812 GMT [33952] STATEMENT:  END CASE;
2023-01-16 16:18:13.812 GMT [33952] WARNING:  there is no transaction in progress
2023-01-16 16:18:13.812 GMT [33952] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	
	CREATE OR REPLACE FUNCTION client.place_transaction_into_account(account_identifier INT, orig_account_number INT, transaction_account_number INT, transaction_amount NUMERIC)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-16 16:18:13.812 GMT [33952] STATEMENT:  $$ LANGUAGE plpgsql;
	
	
	CREATE OR REPLACE FUNCTION client.place_transaction_into_account(account_identifier INT, orig_account_number INT, transaction_account_number INT, transaction_amount NUMERIC)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-16 16:18:13.812 GMT [33952] ERROR:  syntax error at or near "INT" at character 22
2023-01-16 16:18:13.812 GMT [33952] STATEMENT:  DECLARE statement_id INT;
2023-01-16 16:18:13.812 GMT [33952] ERROR:  syntax error at or near "INSERT" at character 11
2023-01-16 16:18:13.812 GMT [33952] STATEMENT:  BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Placed transaction into account', CURRENT_DATE);
2023-01-16 16:18:13.813 GMT [33952] ERROR:  syntax error at or near "CASE" at character 1
2023-01-16 16:18:13.813 GMT [33952] STATEMENT:  CASE WHEN EXISTS (SELECT * FROM client.debit_accounts WHERE account_id = account_identifier AND account_number = orig_account_number) THEN
	        UPDATE debit_account SET current_balance = current_balance + transaction_amount WHERE debit_account.account_number = orig_account_number;
2023-01-16 16:18:13.813 GMT [33952] ERROR:  syntax error at or near "INTO" at character 87
2023-01-16 16:18:13.813 GMT [33952] STATEMENT:  SELECT * FROM client.get_or_create_statement(account_identifier, orig_account_number) INTO statement_id;
2023-01-16 16:18:13.813 GMT [33952] ERROR:  column "orig_account_number" does not exist at character 112
2023-01-16 16:18:13.813 GMT [33952] STATEMENT:  INSERT INTO transaction (origin_account_id, dest_account_id, amount, date, debit_statement_id)
	        VALUES (orig_account_number, transaction_account_number, transaction_amount, now(), statement_id);
2023-01-16 16:18:13.813 GMT [33952] ERROR:  syntax error at or near "WHEN" at character 1
2023-01-16 16:18:13.813 GMT [33952] STATEMENT:  WHEN EXISTS (SELECT * FROM client.credit_accounts WHERE account_id = account_identifier AND account_number = orig_account_number) THEN
	        UPDATE credit_account SET outstanding_balance = outstanding_balance + transaction_amount WHERE credit_account.account_number = orig_account_number;
2023-01-16 16:18:13.813 GMT [33952] ERROR:  syntax error at or near "INTO" at character 87
2023-01-16 16:18:13.813 GMT [33952] STATEMENT:  SELECT * FROM client.get_or_create_statement(account_identifier, orig_account_number) INTO statement_id;
2023-01-16 16:18:13.814 GMT [33952] ERROR:  column "orig_account_number" does not exist at character 113
2023-01-16 16:18:13.814 GMT [33952] STATEMENT:  INSERT INTO transaction (origin_account_id, dest_account_id, amount, date, credit_statement_id)
	        VALUES (orig_account_number, transaction_account_number, transaction_amount, now(), statement_id);
2023-01-16 16:18:13.814 GMT [33952] ERROR:  syntax error at or near "WHEN" at character 1
2023-01-16 16:18:13.814 GMT [33952] STATEMENT:  WHEN EXISTS (SELECT * FROM client.savings_accounts WHERE account_id = account_identifier AND account_number = orig_account_number) THEN
	        UPDATE savings_account SET current_balance = current_balance + transaction_amount WHERE savings_account.account_number = orig_account_number;
2023-01-16 16:18:13.814 GMT [33952] ERROR:  syntax error at or near "INTO" at character 87
2023-01-16 16:18:13.814 GMT [33952] STATEMENT:  SELECT * FROM client.get_or_create_statement(account_identifier, orig_account_number) INTO statement_id;
2023-01-16 16:18:13.814 GMT [33952] ERROR:  column "orig_account_number" does not exist at character 114
2023-01-16 16:18:13.814 GMT [33952] STATEMENT:  INSERT INTO transaction (origin_account_id, dest_account_id, amount, date, savings_statement_id)
	        VALUES (orig_account_number, transaction_account_number, transaction_amount, now(), statement_id);
2023-01-16 16:18:13.814 GMT [33952] ERROR:  syntax error at or near "ELSE" at character 1
2023-01-16 16:18:13.814 GMT [33952] STATEMENT:  ELSE
	        RAISE NOTICE 'Account does not exist';
2023-01-16 16:18:13.814 GMT [33952] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:18:13.814 GMT [33952] STATEMENT:  RETURN FALSE;
2023-01-16 16:18:13.814 GMT [33952] ERROR:  syntax error at or near "CASE" at character 5
2023-01-16 16:18:13.814 GMT [33952] STATEMENT:  END CASE;
2023-01-16 16:18:13.815 GMT [33952] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:18:13.815 GMT [33952] STATEMENT:  RETURN TRUE;
2023-01-16 16:18:13.815 GMT [33952] WARNING:  there is no transaction in progress
2023-01-16 16:18:13.815 GMT [33952] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	
	CREATE OR REPLACE FUNCTION client.initiate_transfer(account_identifier INT, orig_account_number INT, transfer_amount NUMERIC, transfer_account_number INT, transfer_account_sort_code INT)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-16 16:18:13.815 GMT [33952] STATEMENT:  $$ LANGUAGE plpgsql;
	
	
	CREATE OR REPLACE FUNCTION client.initiate_transfer(account_identifier INT, orig_account_number INT, transfer_amount NUMERIC, transfer_account_number INT, transfer_account_sort_code INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-16 16:18:13.815 GMT [33952] ERROR:  syntax error at or near "INT" at character 29
2023-01-16 16:18:13.815 GMT [33952] STATEMENT:  DECLARE internal_account_id INT;
2023-01-16 16:18:13.815 GMT [33952] ERROR:  syntax error at or near "INT" at character 19
2023-01-16 16:18:13.815 GMT [33952] STATEMENT:  DECLARE ROW_COUNT INT;
2023-01-16 16:18:13.815 GMT [33952] ERROR:  syntax error at or near "INSERT" at character 11
2023-01-16 16:18:13.815 GMT [33952] STATEMENT:  BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Initiated transfer', CURRENT_DATE);
2023-01-16 16:18:13.815 GMT [33952] ERROR:  relation "client.accounts" does not exist at character 49
2023-01-16 16:18:13.815 GMT [33952] STATEMENT:  SELECT account_id INTO internal_account_id FROM client.accounts
	    WHERE account_number = transfer_account_number AND sort_code = transfer_account_sort_code;
2023-01-16 16:18:13.815 GMT [33952] ERROR:  syntax error at or near "IF" at character 1
2023-01-16 16:18:13.815 GMT [33952] STATEMENT:  IF internal_account_id IS NULL THEN
	       RAISE NOTICE 'EXTERNAL TRANSFER TO LOCAL ACCOUNT %', transfer_account_number;
2023-01-16 16:18:13.816 GMT [33952] ERROR:  syntax error at or near "ELSE" at character 1
2023-01-16 16:18:13.816 GMT [33952] STATEMENT:  ELSE
	        RAISE NOTICE 'INTERNAL TRANSFER TO ACCOUNT %', transfer_account_number;
2023-01-16 16:18:13.816 GMT [33952] ERROR:  syntax error at or near "INTO" at character 136
2023-01-16 16:18:13.816 GMT [33952] STATEMENT:  SELECT * FROM client.place_transaction_into_account(account_identifier, orig_account_number, transfer_account_number, transfer_amount) INTO passed;
2023-01-16 16:18:13.816 GMT [33952] ERROR:  syntax error at or near "GET" at character 1
2023-01-16 16:18:13.816 GMT [33952] STATEMENT:  GET DIAGNOSTICS ROW_COUNT = ROW_COUNT;
2023-01-16 16:18:13.816 GMT [33952] ERROR:  syntax error at or near "passed" at character 1
2023-01-16 16:18:13.816 GMT [33952] STATEMENT:  passed = CASE WHEN ROW_COUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-16 16:18:13.816 GMT [33952] ERROR:  syntax error at or near "IF" at character 5
2023-01-16 16:18:13.816 GMT [33952] STATEMENT:  END IF;
2023-01-16 16:18:13.816 GMT [33952] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:18:13.816 GMT [33952] STATEMENT:  RETURN passed;
2023-01-16 16:18:13.816 GMT [33952] WARNING:  there is no transaction in progress
2023-01-16 16:18:13.817 GMT [33952] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE SCHEMA IF NOT EXISTS unauthenticated;
	SET search_path TO unauthenticated, public;
	
	-- Allows an unauthenticated user to match hashes to hashes of personal information contained in the customer table
	CREATE OR REPLACE VIEW unauthenticated.unauthenticated_personal_information AS
	SELECT id, md5(first_name) AS first_name, md5(last_name) AS last_name, md5(email_address) AS email_address
	FROM customer;
	
	-- Allows an unauthenticated user to view hashes of usernames contained in the user_login table
	CREATE OR REPLACE VIEW unauthenticated.unauthenticated_login AS
	SELECT md5(username) AS username FROM user_login;
	
	-- Allows a user to insert personal information into the online banking system
	CREATE OR REPLACE FUNCTION unauthenticated.create_personal_info(first_name TEXT, last_name TEXT, date_of_birth DATE, phone_number TEXT, email_address TEXT, address_street TEXT, address_city TEXT, address_county TEXT, address_postcode TEXT)
	RETURNS INT AS $$" at character 1
2023-01-16 16:18:13.817 GMT [33952] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE SCHEMA IF NOT EXISTS unauthenticated;
	SET search_path TO unauthenticated, public;
	
	-- Allows an unauthenticated user to match hashes to hashes of personal information contained in the customer table
	CREATE OR REPLACE VIEW unauthenticated.unauthenticated_personal_information AS
	SELECT id, md5(first_name) AS first_name, md5(last_name) AS last_name, md5(email_address) AS email_address
	FROM customer;
	
	-- Allows an unauthenticated user to view hashes of usernames contained in the user_login table
	CREATE OR REPLACE VIEW unauthenticated.unauthenticated_login AS
	SELECT md5(username) AS username FROM user_login;
	
	-- Allows a user to insert personal information into the online banking system
	CREATE OR REPLACE FUNCTION unauthenticated.create_personal_info(first_name TEXT, last_name TEXT, date_of_birth DATE, phone_number TEXT, email_address TEXT, address_street TEXT, address_city TEXT, address_county TEXT, address_postcode TEXT)
	RETURNS INT AS $$
	DECLARE customer_id INT;
2023-01-16 16:18:13.817 GMT [33952] ERROR:  syntax error at or near "IF" at character 11
2023-01-16 16:18:13.817 GMT [33952] STATEMENT:  BEGIN
	    IF NOT EXISTS (SELECT FROM unauthenticated.unauthenticated_personal_information WHERE md5(first_name) = first_name AND md5(last_name) = last_name AND md5(email_address) = email_address) THEN
	        INSERT INTO customer
	        VALUES (first_name, last_name, date_of_birth, phone_number, email_address, address_street, address_city, address_county, address_postcode)
	        RETURNING id INTO customer_id;
2023-01-16 16:18:13.818 GMT [33952] ERROR:  syntax error at or near "ELSE" at character 1
2023-01-16 16:18:13.818 GMT [33952] STATEMENT:  ELSE
	        RAISE NOTICE 'CUSTOMER INFORMATION ALREADY PRESENT';
2023-01-16 16:18:13.819 GMT [33952] ERROR:  relation "unauthenticated.unauthenticated_personal_information" does not exist at character 33
2023-01-16 16:18:13.819 GMT [33952] STATEMENT:  SELECT id INTO customer_id FROM unauthenticated.unauthenticated_personal_information WHERE md5(first_name) = first_name AND md5(last_name) = last_name AND md5(email_address) = email_address;
2023-01-16 16:18:13.819 GMT [33952] ERROR:  syntax error at or near "IF" at character 5
2023-01-16 16:18:13.819 GMT [33952] STATEMENT:  END IF;
2023-01-16 16:18:13.820 GMT [33952] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:18:13.820 GMT [33952] STATEMENT:  RETURN customer_id;
2023-01-16 16:18:13.820 GMT [33952] WARNING:  there is no transaction in progress
2023-01-16 16:18:13.820 GMT [33952] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	-- Allows an unauthenticated user to create an online account
	CREATE OR REPLACE FUNCTION unauthenticated.create_online_account_details(customer_id INT, first_name TEXT, last_name TEXT, email_address TEXT, question_choice_ids INT[], question_answers TEXT[])
	RETURNS INT AS $$" at character 1
2023-01-16 16:18:13.820 GMT [33952] STATEMENT:  $$ LANGUAGE plpgsql;
	
	-- Allows an unauthenticated user to create an online account
	CREATE OR REPLACE FUNCTION unauthenticated.create_online_account_details(customer_id INT, first_name TEXT, last_name TEXT, email_address TEXT, question_choice_ids INT[], question_answers TEXT[])
	RETURNS INT AS $$
	DECLARE account_id INT;
2023-01-16 16:18:13.821 GMT [33952] ERROR:  syntax error at or near "INT" at character 27
2023-01-16 16:18:13.821 GMT [33952] STATEMENT:  DECLARE online_account_id INT;
2023-01-16 16:18:13.821 GMT [33952] ERROR:  syntax error at or near "INT" at character 28
2023-01-16 16:18:13.821 GMT [33952] STATEMENT:  DECLARE question_choice_id INT;
2023-01-16 16:18:13.821 GMT [33952] ERROR:  syntax error at or near "IF" at character 11
2023-01-16 16:18:13.821 GMT [33952] STATEMENT:  BEGIN
	    IF NOT EXISTS (SELECT FROM user_login WHERE username = username) THEN
	        INSERT INTO online_account (date_opened, sort_code, customer_id)
	        VALUES ((SELECT now()), (SELECT num FROM GENERATE_SERIES(1, 6) AS s(num) LIMIT 1), customer_id)
	        RETURNING id INTO account_id;
2023-01-16 16:18:13.821 GMT [33952] ERROR:  syntax error at or near "INTO" at character 131
2023-01-16 16:18:13.821 GMT [33952] STATEMENT:  INSERT INTO user_login (account_id, username, password)
	        VALUES (account_id, username, md5(password))
	        RETURNING id INTO online_account_id;
2023-01-16 16:18:13.821 GMT [33952] ERROR:  syntax error at or near "FOR" at character 1
2023-01-16 16:18:13.821 GMT [33952] STATEMENT:  FOR i IN 0..2 LOOP
	            
	            INSERT INTO user_login_security_question (question_choice_id, login_id)
	            VALUES (question_choice_ids[i], online_account_id)
	            RETURNING id INTO question_choice_id;
2023-01-16 16:18:13.822 GMT [33952] ERROR:  column "answer" of relation "security_question_answer" does not exist at character 39
2023-01-16 16:18:13.822 GMT [33952] STATEMENT:  INSERT INTO security_question_answer (answer, question_id)
	            VALUES (question_answers[i], question_choice_id);
2023-01-16 16:18:13.822 GMT [33952] ERROR:  syntax error at or near "LOOP" at character 5
2023-01-16 16:18:13.822 GMT [33952] STATEMENT:  END LOOP;
2023-01-16 16:18:13.822 GMT [33952] ERROR:  column "account_id" does not exist at character 117
2023-01-16 16:18:13.822 GMT [33952] HINT:  There is a column named "account_id" in table "authentication_log", but it cannot be referenced from this part of the query.
2023-01-16 16:18:13.822 GMT [33952] STATEMENT:  INSERT INTO authentication_log (log_description, log_date, account_id) VALUES ('New online account created', now(), account_id);
2023-01-16 16:18:13.822 GMT [33952] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:18:13.822 GMT [33952] STATEMENT:  RETURN account_id;
2023-01-16 16:18:13.822 GMT [33952] ERROR:  syntax error at or near "ELSE" at character 1
2023-01-16 16:18:13.822 GMT [33952] STATEMENT:  ELSE
	        RAISE NOTICE 'USERNAME ALREADY TAKEN';
2023-01-16 16:18:13.823 GMT [33952] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:18:13.823 GMT [33952] STATEMENT:  RETURN NULL;
2023-01-16 16:18:13.823 GMT [33952] ERROR:  syntax error at or near "IF" at character 5
2023-01-16 16:18:13.823 GMT [33952] STATEMENT:  END IF;
2023-01-16 16:18:13.823 GMT [33952] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:18:13.823 GMT [33952] STATEMENT:  RETURN success;
2023-01-16 16:18:13.823 GMT [33952] WARNING:  there is no transaction in progress
2023-01-16 16:18:13.824 GMT [33952] ERROR:  unterminated dollar-quoted string at or near "$$ LANGUAGE plpgsql;
	
	
	
	
	
	-- sample data for customers
	INSERT INTO customer (first_name, last_name, date_of_birth, phone_number, email_address, address_street, address_city, address_county, address_postcode)
	VALUES ('John', 'Smith', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('Jane', 'Doe', '1990-01-01', '01234567890', 'test@gmail.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Bloggs', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('John', 'Bloggs', '1990-01-01', '01234567890', 'hello@yahoo.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('Jane', 'Bloggs', '1990-01-01', '01234567890', 'test@outlook.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Doe', '1990-01-01', '01234567890', 'hello@outlook.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('John', 'Doe', '1990-01-01', '01234567890', 'mybankemail@icloud.com', '1 My Bank Street', 'My Bank City', 'My Bank County', 'MB1 1NK'),
	('Jane', 'Smith', '1990-01-01', '01234567890', 'bankemail@outlook.com', '1 Bank Street', 'Bank City', 'Bank County', 'BA1 1NK'),
	('Joe', 'Smith', '1990-01-01', '01234567890', 'example@icloud.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX');
	
	-- sample data for online account
	INSERT INTO online_account (date_opened, sort_code, customer_id)
	VALUES ('2020-01-01', '123456', 1),
	('2019-01-01', '126485', 2),
	('2018-01-01', '128475', 3),
	('2017-01-01', '129476', 4),
	('2016-01-01', '120386', 5),
	('2017-02-03', '127385', 6),
	('2018-02-04', '128256', 7),
	('2020-01-01', '129386', 8),
	('2020-01-01', '120386', 9);
	
	-- sample data for user login
	INSERT INTO user_login (account_id, username, password)
	VALUES (1, 'johnsmith', 'b29af57c2b3bba21e9df0cece40952c6'),
	(2, 'janedoe', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(3, 'joebloggs', 'b29af57c2b3bba21e9df0cece40952c6'),
	(4, 'johnbloggs', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(5, 'janebloggs', 'b29af57c2b3bba21e9df0cece40952c6'),
	(6, 'joedoe', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(7, 'johndoe', 'b29af57c2b3bba21e9df0cece40952c6'),
	(8, 'joesmith', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(9, 'janesmith', 'b29af57c2b3bba21e9df0cece40952c6');
	
	-- sample data for security question option
	INSERT INTO security_question_option (question_description)
	VALUES ('What is your favourite colour?'),
	('What is your favourite food?'),
	('What is your favourite animal?'),
	('What is your favourite sport?'),
	('What is your favourite movie?'),
	('What is your favourite book?'),
	('What is your favourite song?'),
	('What is your favourite band?'),
	('What is your favourite game?'),
	('What is your favourite TV show?');
	
	--sample data for user login security question
	INSERT INTO user_login_security_question (question_choice_id, login_id)
	VALUES (1, 1),
	(2, 2),
	(3, 3),
	(4, 4),
	(5, 5),
	(6, 6),
	(7, 7),
	(8, 8),
	(9, 9);
	
	-- sample data for security question answer
	INSERT INTO security_question_answer (question_answer, question_id)
	VALUES ('Red', 1),
	('Blue', 2),
	('Green', 3),
	('Yellow', 4),
	('Orange', 5),
	('Purple', 6),
	('Pink', 7),
	('Black', 8),
	('White', 9);
	
	SELECT * FROM savings_statement;
	
	
	SELECT * FROM client.open_savings_account(1);
	
	--sample data for savings account
	SELECT * FROM client.open_savings_account(1);
	SELECT * FROM client.open_savings_account(2);
	SELECT * FROM client.open_savings_account(3);
	SELECT * FROM client.open_savings_account(4);
	
	SELECT * FROM client.open_debit_account(1);
	SELECT * FROM client.open_debit_account(2);
	SELECT * FROM client.open_debit_account(3);
	SELECT * FROM client.open_debit_account(4);
	
	SELECT * FROM client.open_credit_account(1);
	SELECT * FROM client.open_credit_account(2);
	SELECT * FROM client.open_credit_account(3);
	SELECT * FROM client.open_credit_account(4);
	
	SELECT * FROM client.view_accounts(1);
	
	SELECT * FROM client.initiate_transfer(1, 10000000, 100.00, 10000001, 123456);
	
	SELECT * FROM client.view_accounts(1);
	
	
	
	SELECT * FROM client.view_savings_statements(1, 10000000);
	
	SELECT * FROM savings_statement;
	
	-- -- sample data for savings account
	-- INSERT INTO savings_account (current_balance, interest_rate, account_id)
	-- VALUES (2000.00, 2.05, 1),
	-- (1000.00, 2.05, 2),
	-- (5000.00, 2.05, 3),
	-- (10000.00, 2.05, 4),
	-- (20000.00, 2.05, 5),
	-- (50000.00, 2.05, 6),
	-- (100000.00, 2.05, 7),
	-- (200000.00, 2.05, 8);
	
	-- -- sample data for credit account
	-- INSERT INTO credit_account (outstanding_balance, credit_limit, interest_rate, account_id)
	-- VALUES (55.43, 2000.00, 4.22, 1),
	-- (100.00, 1000.00, 4.22, 2),
	-- (200.00, 5000.00, 4.22, 3),
	-- (300.00, 10000.00, 4.22, 4),
	-- (400.00, 20000.00, 4.22, 5),
	-- (500.00, 50000.00, 4.22, 6),
	-- (600.00, 100000.00, 4.22, 7),
	-- (700.00, 200000.00, 4.22, 8);
	
	-- -- sample data for debit account
	-- INSERT INTO debit_account (current_balance, interest_rate, account_id)
	-- VALUES (3465.43, 0.05, 1),
	-- (1000.00, 0.05, 1),
	-- (5000.00, 0.05, 2),
	-- (10000.00, 0.05, 3),
	-- (20000.00, 0.05, 4),
	-- (50000.00, 0.05, 5),
	-- (100000.00, 0.05, 6),
	-- (200000.00, 0.05, 9);
	
	-- -- sample data for loan
	-- INSERT INTO loan (loan_end_date, loan_amount, loan_type, account_id)
	-- VALUES ('2024-01-01', 10000, 'vehicle', 8),
	-- ('2023-03-04', 300000, 'mortgage', 8),
	-- ('2035-03-03', 400000, 'mortgage', 1),
	-- ('2025-04-05', 25000, 'vehicle', 1),
	-- ('2026-05-05', 34000, 'vehicle', 1),
	-- ('2023-06-07', 500000, 'mortgage', 2),
	-- ('2026-04-04', 60000, 'vehicle', 2),
	-- ('2024-03-03', 70000, 'vehicle', 2),
	-- ('2023-02-02', 800000, 'mortgage', 3),
	-- ('2022-01-01', 90000, 'vehicle', 3),
	-- ('2021-01-01', 100000, 'vehicle', 3),
	-- ('2020-01-01', 110000, 'mortgage', 4),
	-- ('2020-01-01', 12000, 'vehicle', 4),
	-- ('2020-01-01', 13000, 'vehicle', 4),
	-- ('2020-01-01', 140000, 'mortgage', 5),
	-- ('2020-01-01', 15000, 'vehicle', 5),
	-- ('2020-01-01', 16000, 'vehicle', 5),
	-- ('2020-01-01', 170000, 'mortgage', 6),
	-- ('2020-01-01', 18000, 'vehicle', 6),
	-- ('2020-01-01', 19000, 'vehicle', 6),
	-- ('2020-01-01', 200000, 'mortgage', 7),
	-- ('2020-01-01', 21000, 'vehicle', 7),
	-- ('2020-01-01', 22000, 'vehicle', 7);
	
	-- CREATE SCHEMA IF NOT EXISTS staff;
	
	-- SET search_path TO public, staff;" at character 1
2023-01-16 16:18:13.824 GMT [33952] STATEMENT:  $$ LANGUAGE plpgsql;
	
	
	
	
	
	-- sample data for customers
	INSERT INTO customer (first_name, last_name, date_of_birth, phone_number, email_address, address_street, address_city, address_county, address_postcode)
	VALUES ('John', 'Smith', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('Jane', 'Doe', '1990-01-01', '01234567890', 'test@gmail.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Bloggs', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('John', 'Bloggs', '1990-01-01', '01234567890', 'hello@yahoo.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('Jane', 'Bloggs', '1990-01-01', '01234567890', 'test@outlook.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Doe', '1990-01-01', '01234567890', 'hello@outlook.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('John', 'Doe', '1990-01-01', '01234567890', 'mybankemail@icloud.com', '1 My Bank Street', 'My Bank City', 'My Bank County', 'MB1 1NK'),
	('Jane', 'Smith', '1990-01-01', '01234567890', 'bankemail@outlook.com', '1 Bank Street', 'Bank City', 'Bank County', 'BA1 1NK'),
	('Joe', 'Smith', '1990-01-01', '01234567890', 'example@icloud.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX');
	
	-- sample data for online account
	INSERT INTO online_account (date_opened, sort_code, customer_id)
	VALUES ('2020-01-01', '123456', 1),
	('2019-01-01', '126485', 2),
	('2018-01-01', '128475', 3),
	('2017-01-01', '129476', 4),
	('2016-01-01', '120386', 5),
	('2017-02-03', '127385', 6),
	('2018-02-04', '128256', 7),
	('2020-01-01', '129386', 8),
	('2020-01-01', '120386', 9);
	
	-- sample data for user login
	INSERT INTO user_login (account_id, username, password)
	VALUES (1, 'johnsmith', 'b29af57c2b3bba21e9df0cece40952c6'),
	(2, 'janedoe', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(3, 'joebloggs', 'b29af57c2b3bba21e9df0cece40952c6'),
	(4, 'johnbloggs', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(5, 'janebloggs', 'b29af57c2b3bba21e9df0cece40952c6'),
	(6, 'joedoe', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(7, 'johndoe', 'b29af57c2b3bba21e9df0cece40952c6'),
	(8, 'joesmith', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(9, 'janesmith', 'b29af57c2b3bba21e9df0cece40952c6');
	
	-- sample data for security question option
	INSERT INTO security_question_option (question_description)
	VALUES ('What is your favourite colour?'),
	('What is your favourite food?'),
	('What is your favourite animal?'),
	('What is your favourite sport?'),
	('What is your favourite movie?'),
	('What is your favourite book?'),
	('What is your favourite song?'),
	('What is your favourite band?'),
	('What is your favourite game?'),
	('What is your favourite TV show?');
	
	--sample data for user login security question
	INSERT INTO user_login_security_question (question_choice_id, login_id)
	VALUES (1, 1),
	(2, 2),
	(3, 3),
	(4, 4),
	(5, 5),
	(6, 6),
	(7, 7),
	(8, 8),
	(9, 9);
	
	-- sample data for security question answer
	INSERT INTO security_question_answer (question_answer, question_id)
	VALUES ('Red', 1),
	('Blue', 2),
	('Green', 3),
	('Yellow', 4),
	('Orange', 5),
	('Purple', 6),
	('Pink', 7),
	('Black', 8),
	('White', 9);
	
	SELECT * FROM savings_statement;
	
	
	SELECT * FROM client.open_savings_account(1);
	
	--sample data for savings account
	SELECT * FROM client.open_savings_account(1);
	SELECT * FROM client.open_savings_account(2);
	SELECT * FROM client.open_savings_account(3);
	SELECT * FROM client.open_savings_account(4);
	
	SELECT * FROM client.open_debit_account(1);
	SELECT * FROM client.open_debit_account(2);
	SELECT * FROM client.open_debit_account(3);
	SELECT * FROM client.open_debit_account(4);
	
	SELECT * FROM client.open_credit_account(1);
	SELECT * FROM client.open_credit_account(2);
	SELECT * FROM client.open_credit_account(3);
	SELECT * FROM client.open_credit_account(4);
	
	SELECT * FROM client.view_accounts(1);
	
	SELECT * FROM client.initiate_transfer(1, 10000000, 100.00, 10000001, 123456);
	
	SELECT * FROM client.view_accounts(1);
	
	
	
	SELECT * FROM client.view_savings_statements(1, 10000000);
	
	SELECT * FROM savings_statement;
	
	-- -- sample data for savings account
	-- INSERT INTO savings_account (current_balance, interest_rate, account_id)
	-- VALUES (2000.00, 2.05, 1),
	-- (1000.00, 2.05, 2),
	-- (5000.00, 2.05, 3),
	-- (10000.00, 2.05, 4),
	-- (20000.00, 2.05, 5),
	-- (50000.00, 2.05, 6),
	-- (100000.00, 2.05, 7),
	-- (200000.00, 2.05, 8);
	
	-- -- sample data for credit account
	-- INSERT INTO credit_account (outstanding_balance, credit_limit, interest_rate, account_id)
	-- VALUES (55.43, 2000.00, 4.22, 1),
	-- (100.00, 1000.00, 4.22, 2),
	-- (200.00, 5000.00, 4.22, 3),
	-- (300.00, 10000.00, 4.22, 4),
	-- (400.00, 20000.00, 4.22, 5),
	-- (500.00, 50000.00, 4.22, 6),
	-- (600.00, 100000.00, 4.22, 7),
	-- (700.00, 200000.00, 4.22, 8);
	
	-- -- sample data for debit account
	-- INSERT INTO debit_account (current_balance, interest_rate, account_id)
	-- VALUES (3465.43, 0.05, 1),
	-- (1000.00, 0.05, 1),
	-- (5000.00, 0.05, 2),
	-- (10000.00, 0.05, 3),
	-- (20000.00, 0.05, 4),
	-- (50000.00, 0.05, 5),
	-- (100000.00, 0.05, 6),
	-- (200000.00, 0.05, 9);
	
	-- -- sample data for loan
	-- INSERT INTO loan (loan_end_date, loan_amount, loan_type, account_id)
	-- VALUES ('2024-01-01', 10000, 'vehicle', 8),
	-- ('2023-03-04', 300000, 'mortgage', 8),
	-- ('2035-03-03', 400000, 'mortgage', 1),
	-- ('2025-04-05', 25000, 'vehicle', 1),
	-- ('2026-05-05', 34000, 'vehicle', 1),
	-- ('2023-06-07', 500000, 'mortgage', 2),
	-- ('2026-04-04', 60000, 'vehicle', 2),
	-- ('2024-03-03', 70000, 'vehicle', 2),
	-- ('2023-02-02', 800000, 'mortgage', 3),
	-- ('2022-01-01', 90000, 'vehicle', 3),
	-- ('2021-01-01', 100000, 'vehicle', 3),
	-- ('2020-01-01', 110000, 'mortgage', 4),
	-- ('2020-01-01', 12000, 'vehicle', 4),
	-- ('2020-01-01', 13000, 'vehicle', 4),
	-- ('2020-01-01', 140000, 'mortgage', 5),
	-- ('2020-01-01', 15000, 'vehicle', 5),
	-- ('2020-01-01', 16000, 'vehicle', 5),
	-- ('2020-01-01', 170000, 'mortgage', 6),
	-- ('2020-01-01', 18000, 'vehicle', 6),
	-- ('2020-01-01', 19000, 'vehicle', 6),
	-- ('2020-01-01', 200000, 'mortgage', 7),
	-- ('2020-01-01', 21000, 'vehicle', 7),
	-- ('2020-01-01', 22000, 'vehicle', 7);
	
	-- CREATE SCHEMA IF NOT EXISTS staff;
	
	-- SET search_path TO public, staff;
2023-01-16 16:18:56.701 GMT [33923] LOG:  received fast shutdown request
2023-01-16 16:18:56.702 GMT [33923] LOG:  aborting any active transactions
2023-01-16 16:18:56.707 GMT [33923] LOG:  background worker "logical replication launcher" (PID 33930) exited with exit code 1
2023-01-16 16:18:56.707 GMT [33925] LOG:  shutting down
2023-01-16 16:18:56.748 GMT [33923] LOG:  database system is shut down
2023-01-16 16:18:57.946 GMT [34153] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 16:18:57.946 GMT [34153] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 16:18:57.948 GMT [34153] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 16:18:57.953 GMT [34154] LOG:  database system was shut down at 2023-01-16 16:18:57 GMT
2023-01-16 16:18:57.958 GMT [34153] LOG:  database system is ready to accept connections
2023-01-16 16:18:58.675 GMT [34179] ERROR:  syntax error at or near "ELIF" at character 577
2023-01-16 16:18:58.675 GMT [34179] STATEMENT:  CREATE OR REPLACE FUNCTION bank.verify_transaction_type(pending_transaction_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE transaction_approved BOOLEAN;
	BEGIN
	    -- check pending transaction exists
	    IF EXISTS (SELECT * FROM bank.pending_transactions) THEN
	        --check is it is a transfer
	        IF EXISTS (SELECT * FROM bank.pending_transactions WHERE id = pending_transaction_id AND is_transfer = TRUE) THEN
	            RAISE NOTICE 'Transfer transaction';
	            SELECT * FROM verify_transaction_amounts(pending_transaction_id, TRUE) INTO transaction_approved;
	        ELIF EXISTS (SELECT * FROM bank.pending_transactions WHERE id = pending_transaction_id AND is_transfer = FALSE) THEN
	            RAISE NOTICE 'Payment transaction';
	            SELECT * FROM verify_transaction_amounts(pending_transaction_id, FALSE) INTO transaction_approved;
	        ELSE
	            RAISE NOTICE 'Unknown transaction type';
	            transaction_approved = FALSE;
	        END IF;
	    ELSE
	        RAISE NOTICE 'Transaction does not exist';
	        transaction_approved = FALSE;
	    END IF;
	    RETURN transaction_approved;
	END;
	$$ LANGUAGE plpgsql;
2023-01-16 16:18:58.675 GMT [34179] ERROR:  syntax error at or near "RETURN" at character 1898
2023-01-16 16:18:58.675 GMT [34179] STATEMENT:  CREATE OR REPLACE FUNCTION bank.verify_transaction(pending_transaction_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE transaction_approved BOOLEAN;
	DECLARE account_type TEXT;
	BEGIN
	    -- check pending transaction exists
	    IF verify_transaction_type(pending_transaction_id) = TRUE THEN
	        RAISE NOTICE 'Transaction approved';
	        transaction_approved = TRUE;
	    ELSE
	        RAISE NOTICE 'Transaction not approved';
	        transaction_approved = FALSE;
	    END IF;
	    RETURN transaction_approved;
	END;
	
	CREATE SCHEMA IF NOT EXISTS staff;
	SET search_path TO public, staff, client;
	
	CREATE OR REPLACE VIEW staff.accounts AS
	    SELECT account.account_number, account.account_id, online_account.sort_code
	    FROM account
	    INNER JOIN online_account ON account.account_id = online_account.id;
	
	CREATE OR REPLACE VIEW staff.credit_account_applications AS
	    SELECT credit_account_application.id, credit_account_application.application_status, credit_account.account_number, credit_account.outstanding_balance, credit_account.credit_limit, credit_account.interest_rate
	    FROM credit_account_application
	    INNER JOIN credit_account ON credit_account_application.account_number = credit_account.account_number;
	
	CREATE OR REPLACE VIEW staff.loan_applications AS
	    SELECT loan_application.id, loan_application.application_status, loan.id as loan_id, loan.amount, loan.end_date, loan.loan_type, loan.interest_rate, loan.account_id
	    FROM loan_application
	    INNER JOIN loan ON loan_application.loan_id = loan.id;
	
	CREATE OR REPLACE VIEW staff.customers AS
	    SELECT online_account.id as account_id, customer.first_name, customer.last_name
	    FROM online_account
	    INNER JOIN customer ON customer.id = online_account.customer_id;
	
	CREATE OR REPLACE FUNCTION staff.view_outstanding_credit_applications()
	RETURNS TABLE(first_name TEXT, last_name TEXT, account_number INT) AS $$
	BEGIN
	    RETURN QUERY SELECT customers.first_name, customers.last_name, credit_account_applications.account_number
	    FROM staff.customers
	    INNER JOIN staff.accounts ON customers.account_id = accounts.account_id
	    INNER JOIN staff.credit_card_applications ON accounts.account_number = credit_card_applications.account_number
	    WHERE credit_card_applications.application_status = 'PENDING';
	END;
2023-01-16 16:18:58.676 GMT [34179] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION staff.view_outstanding_loan_applications()
	RETURNS TABLE(first_name TEXT, last_name TEXT, loan_id INT) AS $$" at character 1
2023-01-16 16:18:58.676 GMT [34179] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION staff.view_outstanding_loan_applications()
	RETURNS TABLE(first_name TEXT, last_name TEXT, loan_id INT) AS $$
	BEGIN
	    RETURN QUERY SELECT customers.first_name, customers.last_name, loan_applications.id
	    FROM staff.customers
	    INNER JOIN staff.loan_applications ON loan_applications.account_id = customers.account_id
	    WHERE loan_applications.application_status = 'PENDING';
2023-01-16 16:18:58.677 GMT [34179] WARNING:  there is no transaction in progress
2023-01-16 16:18:58.678 GMT [34179] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	
	CREATE SCHEMA IF NOT EXISTS client;
	SET search_path TO public, client;
	
	
	CREATE OR REPLACE VIEW client.accounts AS
	    SELECT account.account_number, account.account_id, online_account.sort_code FROM account
	    INNER JOIN online_account ON account.account_id = online_account.id;
	
	CREATE OR REPLACE VIEW client.debit_accounts AS
	    SELECT account.account_id, account.account_number, debit_account.current_balance, debit_account.interest_rate, debit_overdraft.overdraft_limit, debit_overdraft.overdraft_usage, debit_overdraft.interest_rate AS overdraft_interest_rate
	    FROM client.accounts
	    INNER JOIN debit_account ON account.account_number = debit_account.account_number
	    INNER JOIN debit_overdraft ON account.account_number = debit_overdraft.account_number;
	
	CREATE OR REPLACE VIEW client.debit_accounts_statements AS
	    SELECT debit_accounts.account_id, debit_accounts.account_number, debit_statement.id, debit_statement.starting_date, debit_statement.end_date, debit_statement.amount
	    FROM debit_accounts
	    INNER JOIN debit_statement ON debit_accounts.account_number = debit_statement.account_number;
	
	CREATE OR REPLACE VIEW client.debit_accounts_statement AS
	    SELECT debit_accounts_statements.account_id, debit_accounts_statements.account_number, debit_accounts_statements.id, debit_accounts_statements.starting_date, debit_accounts_statements.end_date, debit_accounts_statements.amount AS total_amount, transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date
	    FROM debit_accounts_statements
	    INNER JOIN transaction ON debit_accounts_statements.id = transaction.debit_statement_id;
	
	CREATE OR REPLACE VIEW client.credit_accounts AS
	    SELECT account.account_id, account.account_number, credit_account.outstanding_balance, credit_account.credit_limit, credit_account.interest_rate, credit_account_application.application_status
	    FROM client.accounts
	    INNER JOIN credit_account ON account.account_number = credit_account.account_number
	    INNER JOIN credit_account_application ON account.account_number = credit_account_application.account_number;
	
	CREATE OR REPLACE VIEW client.credit_accounts_statements AS
	    SELECT credit_accounts.account_id, credit_accounts.account_number, credit_statement.id, credit_statement.starting_date, credit_statement.end_date, credit_statement.amount, credit_statement.minimum_payment, credit_statement.minimum_payment_due_date
	    FROM credit_accounts
	    INNER JOIN credit_statement ON credit_accounts.account_number = credit_statement.account_number;
	
	CREATE OR REPLACE VIEW client.credit_accounts_statement AS
	    SELECT credit_accounts_statements.account_id, credit_accounts_statements.account_number, credit_accounts_statements.id, credit_accounts_statements.starting_date, credit_accounts_statements.end_date, credit_accounts_statements.amount AS total_amount, credit_accounts_statements.minimum_payment, credit_accounts_statements.minimum_payment_due_date, transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date
	    FROM credit_accounts_statements
	    INNER JOIN transaction ON credit_accounts_statements.id = transaction.credit_statement_id;
	
	CREATE OR REPLACE VIEW client.savings_accounts AS
	    SELECT account.account_id, account.account_number, savings_account.current_balance, savings_account.interest_rate
	    FROM client.accounts
	    INNER JOIN savings_account ON account.account_number = savings_account.account_number;
	
	CREATE OR REPLACE VIEW client.savings_accounts_statements AS
	    SELECT savings_accounts.account_id, savings_accounts.account_number, savings_statement.id, savings_statement.starting_date, savings_statement.end_date, savings_statement.amount
	    FROM savings_accounts
	    INNER JOIN savings_statement ON savings_accounts.account_number = savings_statement.account_number;
	
	CREATE OR REPLACE VIEW client.loans AS
	    SELECT loan.account_id, loan.id, loan.amount, loan.interest_rate, loan.loan_type, loan.end_date, loan_application.application_status
	    FROM loan
	    INNER JOIN loan_application ON loan.id = loan_application.loan_id;
	
	CREATE OR REPLACE VIEW client.loan_statements AS
	    SELECT loans.account_id, loans.id, loan_statement.id as statement_id, loan_statement.starting_date, loan_statement.amount
	    FROM client.loans
	    INNER JOIN loan_statement ON loans.id = loan_statement.loan_id;
	
	CREATE OR REPLACE VIEW client.loan_applications AS
	    SELECT loan.account_id, loan_application.id, loan_application.application_status, loan_application.loan_id
	    FROM loan_application
	    INNER JOIN loan ON loan_application.loan_id = loan.id;
	
	CREATE OR REPLACE FUNCTION client.update_personal_information(account_identifier INT, first_name TEXT, last_name TEXT, date_of_birth DATE, phone_number TEXT, email_address TEXT, address_street TEXT, address_city TEXT, address_county TEXT, address_postcode TEXT, account_id INT)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-16 16:18:58.678 GMT [34179] STATEMENT:  $$ LANGUAGE plpgsql;
	
	
	CREATE SCHEMA IF NOT EXISTS client;
	SET search_path TO public, client;
	
	
	CREATE OR REPLACE VIEW client.accounts AS
	    SELECT account.account_number, account.account_id, online_account.sort_code FROM account
	    INNER JOIN online_account ON account.account_id = online_account.id;
	
	CREATE OR REPLACE VIEW client.debit_accounts AS
	    SELECT account.account_id, account.account_number, debit_account.current_balance, debit_account.interest_rate, debit_overdraft.overdraft_limit, debit_overdraft.overdraft_usage, debit_overdraft.interest_rate AS overdraft_interest_rate
	    FROM client.accounts
	    INNER JOIN debit_account ON account.account_number = debit_account.account_number
	    INNER JOIN debit_overdraft ON account.account_number = debit_overdraft.account_number;
	
	CREATE OR REPLACE VIEW client.debit_accounts_statements AS
	    SELECT debit_accounts.account_id, debit_accounts.account_number, debit_statement.id, debit_statement.starting_date, debit_statement.end_date, debit_statement.amount
	    FROM debit_accounts
	    INNER JOIN debit_statement ON debit_accounts.account_number = debit_statement.account_number;
	
	CREATE OR REPLACE VIEW client.debit_accounts_statement AS
	    SELECT debit_accounts_statements.account_id, debit_accounts_statements.account_number, debit_accounts_statements.id, debit_accounts_statements.starting_date, debit_accounts_statements.end_date, debit_accounts_statements.amount AS total_amount, transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date
	    FROM debit_accounts_statements
	    INNER JOIN transaction ON debit_accounts_statements.id = transaction.debit_statement_id;
	
	CREATE OR REPLACE VIEW client.credit_accounts AS
	    SELECT account.account_id, account.account_number, credit_account.outstanding_balance, credit_account.credit_limit, credit_account.interest_rate, credit_account_application.application_status
	    FROM client.accounts
	    INNER JOIN credit_account ON account.account_number = credit_account.account_number
	    INNER JOIN credit_account_application ON account.account_number = credit_account_application.account_number;
	
	CREATE OR REPLACE VIEW client.credit_accounts_statements AS
	    SELECT credit_accounts.account_id, credit_accounts.account_number, credit_statement.id, credit_statement.starting_date, credit_statement.end_date, credit_statement.amount, credit_statement.minimum_payment, credit_statement.minimum_payment_due_date
	    FROM credit_accounts
	    INNER JOIN credit_statement ON credit_accounts.account_number = credit_statement.account_number;
	
	CREATE OR REPLACE VIEW client.credit_accounts_statement AS
	    SELECT credit_accounts_statements.account_id, credit_accounts_statements.account_number, credit_accounts_statements.id, credit_accounts_statements.starting_date, credit_accounts_statements.end_date, credit_accounts_statements.amount AS total_amount, credit_accounts_statements.minimum_payment, credit_accounts_statements.minimum_payment_due_date, transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date
	    FROM credit_accounts_statements
	    INNER JOIN transaction ON credit_accounts_statements.id = transaction.credit_statement_id;
	
	CREATE OR REPLACE VIEW client.savings_accounts AS
	    SELECT account.account_id, account.account_number, savings_account.current_balance, savings_account.interest_rate
	    FROM client.accounts
	    INNER JOIN savings_account ON account.account_number = savings_account.account_number;
	
	CREATE OR REPLACE VIEW client.savings_accounts_statements AS
	    SELECT savings_accounts.account_id, savings_accounts.account_number, savings_statement.id, savings_statement.starting_date, savings_statement.end_date, savings_statement.amount
	    FROM savings_accounts
	    INNER JOIN savings_statement ON savings_accounts.account_number = savings_statement.account_number;
	
	CREATE OR REPLACE VIEW client.loans AS
	    SELECT loan.account_id, loan.id, loan.amount, loan.interest_rate, loan.loan_type, loan.end_date, loan_application.application_status
	    FROM loan
	    INNER JOIN loan_application ON loan.id = loan_application.loan_id;
	
	CREATE OR REPLACE VIEW client.loan_statements AS
	    SELECT loans.account_id, loans.id, loan_statement.id as statement_id, loan_statement.starting_date, loan_statement.amount
	    FROM client.loans
	    INNER JOIN loan_statement ON loans.id = loan_statement.loan_id;
	
	CREATE OR REPLACE VIEW client.loan_applications AS
	    SELECT loan.account_id, loan_application.id, loan_application.application_status, loan_application.loan_id
	    FROM loan_application
	    INNER JOIN loan ON loan_application.loan_id = loan.id;
	
	CREATE OR REPLACE FUNCTION client.update_personal_information(account_identifier INT, first_name TEXT, last_name TEXT, date_of_birth DATE, phone_number TEXT, email_address TEXT, address_street TEXT, address_city TEXT, address_county TEXT, address_postcode TEXT, account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-16 16:18:58.679 GMT [34179] ERROR:  syntax error at or near "UPDATE" at character 11
2023-01-16 16:18:58.679 GMT [34179] STATEMENT:  BEGIN
	    UPDATE customer SET first_name = first_name, last_name = last_name, date_of_birth = date_of_birth, phone_number = phone_number, email_address = email_address, address_street = address_street, address_city = address_city, address_county = address_county, address_postcode = address_postcode
	    WHERE id = (SELECT customer_id FROM online_account WHERE id = account_identifier);
2023-01-16 16:18:58.680 GMT [34179] ERROR:  syntax error at or near "passed" at character 1
2023-01-16 16:18:58.680 GMT [34179] STATEMENT:  passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-16 16:18:58.680 GMT [34179] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:18:58.680 GMT [34179] STATEMENT:  RETURN passed;
2023-01-16 16:18:58.681 GMT [34179] WARNING:  there is no transaction in progress
2023-01-16 16:18:58.681 GMT [34179] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.update_password(account_identifier INT, new_password TEXT)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-16 16:18:58.681 GMT [34179] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.update_password(account_identifier INT, new_password TEXT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-16 16:18:58.682 GMT [34179] ERROR:  syntax error at or near "INT" at character 19
2023-01-16 16:18:58.682 GMT [34179] STATEMENT:  DECLARE ROW_COUNT INT;
2023-01-16 16:18:58.684 GMT [34179] ERROR:  syntax error at or near "UPDATE" at character 11
2023-01-16 16:18:58.684 GMT [34179] STATEMENT:  BEGIN
	    UPDATE user_login SET password = md5(new_password)
	    WHERE account_id = account_identifier;
2023-01-16 16:18:58.685 GMT [34179] ERROR:  syntax error at or near "GET" at character 1
2023-01-16 16:18:58.685 GMT [34179] STATEMENT:  GET DIAGNOSTICS ROW_COUNT = ROW_COUNT;
2023-01-16 16:18:58.685 GMT [34179] ERROR:  column "account_identifier" does not exist at character 76
2023-01-16 16:18:58.685 GMT [34179] STATEMENT:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Updated password', CURRENT_DATE);
2023-01-16 16:18:58.685 GMT [34179] ERROR:  syntax error at or near "passed" at character 1
2023-01-16 16:18:58.685 GMT [34179] STATEMENT:  passed = CASE WHEN ROW_COUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-16 16:18:58.685 GMT [34179] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:18:58.685 GMT [34179] STATEMENT:  RETURN passed;
2023-01-16 16:18:58.685 GMT [34179] WARNING:  there is no transaction in progress
2023-01-16 16:18:58.685 GMT [34179] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.update_email(account_identifier INT, new_email TEXT)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-16 16:18:58.685 GMT [34179] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.update_email(account_identifier INT, new_email TEXT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-16 16:18:58.685 GMT [34179] ERROR:  syntax error at or near "INT" at character 19
2023-01-16 16:18:58.685 GMT [34179] STATEMENT:  DECLARE ROW_COUNT INT;
2023-01-16 16:18:58.686 GMT [34179] ERROR:  syntax error at or near "UPDATE" at character 11
2023-01-16 16:18:58.686 GMT [34179] STATEMENT:  BEGIN
	    UPDATE user_login SET email = new_email
	    WHERE account_id = account_identifier;
2023-01-16 16:18:58.686 GMT [34179] ERROR:  syntax error at or near "GET" at character 1
2023-01-16 16:18:58.686 GMT [34179] STATEMENT:  GET DIAGNOSTICS ROW_COUNT = ROW_COUNT;
2023-01-16 16:18:58.686 GMT [34179] ERROR:  column "account_identifier" does not exist at character 76
2023-01-16 16:18:58.686 GMT [34179] STATEMENT:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Updated email', CURRENT_DATE);
2023-01-16 16:18:58.686 GMT [34179] ERROR:  syntax error at or near "passed" at character 1
2023-01-16 16:18:58.686 GMT [34179] STATEMENT:  passed = CASE WHEN ROW_COUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-16 16:18:58.686 GMT [34179] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:18:58.686 GMT [34179] STATEMENT:  RETURN passed;
2023-01-16 16:18:58.686 GMT [34179] WARNING:  there is no transaction in progress
2023-01-16 16:18:58.686 GMT [34179] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	
	CREATE OR REPLACE FUNCTION client.open_debit_account(account_id INT)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-16 16:18:58.686 GMT [34179] STATEMENT:  $$ LANGUAGE plpgsql;
	
	
	CREATE OR REPLACE FUNCTION client.open_debit_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-16 16:18:58.686 GMT [34179] ERROR:  syntax error at or near "INT" at character 30
2023-01-16 16:18:58.686 GMT [34179] STATEMENT:  DECLARE debit_account_number INT;
2023-01-16 16:18:58.686 GMT [34179] ERROR:  syntax error at or near "INT" at character 29
2023-01-16 16:18:58.686 GMT [34179] STATEMENT:  DECLARE next_account_number INT;
2023-01-16 16:18:58.686 GMT [34179] ERROR:  syntax error at or near "INT" at character 19
2023-01-16 16:18:58.686 GMT [34179] STATEMENT:  DECLARE ROW_COUNT INT;
2023-01-16 16:18:58.686 GMT [34179] ERROR:  syntax error at or near "SELECT" at character 11
2023-01-16 16:18:58.686 GMT [34179] STATEMENT:  BEGIN
	    SELECT get_next_account_number() INTO next_account_number;
2023-01-16 16:18:58.686 GMT [34179] ERROR:  syntax error at or near "INTO" at character 163
2023-01-16 16:18:58.686 GMT [34179] STATEMENT:  INSERT INTO debit_account (account_number, account_id, current_balance, interest_rate) VALUES (next_account_number ,account_id, 0, 0.01) RETURNING account_number INTO debit_account_number;
2023-01-16 16:18:58.686 GMT [34179] ERROR:  syntax error at or near "GET" at character 1
2023-01-16 16:18:58.686 GMT [34179] STATEMENT:  GET DIAGNOSTICS ROW_COUNT = ROW_COUNT;
2023-01-16 16:18:58.687 GMT [34179] ERROR:  column "debit_account_number" does not exist at character 189
2023-01-16 16:18:58.687 GMT [34179] STATEMENT:  INSERT INTO debit_statement (starting_date, end_date, amount, account_number) VALUES (date_trunc('month', now()::date), (date_trunc('month', now()::date)) + interval '1 month - 1 day', 0, debit_account_number);
2023-01-16 16:18:58.688 GMT [34179] ERROR:  column "debit_account_number" does not exist at character 115
2023-01-16 16:18:58.688 GMT [34179] STATEMENT:  INSERT INTO debit_overdraft (overdraft_usage, overdraft_limit, interest_rate, account_number) VALUES (0, 0, 0.01, debit_account_number);
2023-01-16 16:18:58.689 GMT [34179] ERROR:  column "account_id" does not exist at character 76
2023-01-16 16:18:58.689 GMT [34179] HINT:  There is a column named "account_id" in table "management_log", but it cannot be referenced from this part of the query.
2023-01-16 16:18:58.689 GMT [34179] STATEMENT:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened debit account', CURRENT_DATE);
2023-01-16 16:18:58.689 GMT [34179] ERROR:  syntax error at or near "passed" at character 1
2023-01-16 16:18:58.689 GMT [34179] STATEMENT:  passed = CASE WHEN ROW_COUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-16 16:18:58.689 GMT [34179] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:18:58.689 GMT [34179] STATEMENT:  RETURN passed;
2023-01-16 16:18:58.689 GMT [34179] WARNING:  there is no transaction in progress
2023-01-16 16:18:58.689 GMT [34179] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_credit_account(account_id INT)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-16 16:18:58.689 GMT [34179] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_credit_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-16 16:18:58.690 GMT [34179] ERROR:  syntax error at or near "INT" at character 31
2023-01-16 16:18:58.690 GMT [34179] STATEMENT:  DECLARE credit_account_number INT;
2023-01-16 16:18:58.690 GMT [34179] ERROR:  syntax error at or near "INT" at character 29
2023-01-16 16:18:58.690 GMT [34179] STATEMENT:  DECLARE next_account_number INT;
2023-01-16 16:18:58.690 GMT [34179] ERROR:  syntax error at or near "INT" at character 19
2023-01-16 16:18:58.690 GMT [34179] STATEMENT:  DECLARE ROW_COUNT INT;
2023-01-16 16:18:58.690 GMT [34179] ERROR:  syntax error at or near "SELECT" at character 11
2023-01-16 16:18:58.690 GMT [34179] STATEMENT:  BEGIN
	    SELECT get_next_account_number() INTO next_account_number;
2023-01-16 16:18:58.690 GMT [34179] ERROR:  syntax error at or near "INTO" at character 185
2023-01-16 16:18:58.690 GMT [34179] STATEMENT:  INSERT INTO credit_account (account_number, outstanding_balance, credit_limit, interest_rate, account_id) VALUES (next_account_number ,0, 0, 24.9, account_id) RETURNING account_number INTO credit_account_number;
2023-01-16 16:18:58.690 GMT [34179] ERROR:  syntax error at or near "GET" at character 1
2023-01-16 16:18:58.690 GMT [34179] STATEMENT:  GET DIAGNOSTICS ROW_COUNT = ROW_COUNT;
2023-01-16 16:18:58.691 GMT [34179] ERROR:  column "credit_account_number" does not exist at character 250
2023-01-16 16:18:58.691 GMT [34179] STATEMENT:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (date_trunc('month', now()::date), (date_trunc('month', now()::date)) + interval '1 month - 1 day', 0, 0, CURRENT_DATE, credit_account_number);
2023-01-16 16:18:58.691 GMT [34179] ERROR:  column "credit_account_number" does not exist at character 85
2023-01-16 16:18:58.691 GMT [34179] STATEMENT:  INSERT INTO credit_account_application (account_number, application_status) VALUES (credit_account_number, 'PENDING');
2023-01-16 16:18:58.693 GMT [34179] ERROR:  column "account_id" does not exist at character 76
2023-01-16 16:18:58.693 GMT [34179] HINT:  There is a column named "account_id" in table "management_log", but it cannot be referenced from this part of the query.
2023-01-16 16:18:58.693 GMT [34179] STATEMENT:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened credit account', CURRENT_DATE);
2023-01-16 16:18:58.693 GMT [34179] ERROR:  syntax error at or near "passed" at character 1
2023-01-16 16:18:58.693 GMT [34179] STATEMENT:  passed = CASE WHEN ROW_COUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-16 16:18:58.693 GMT [34179] ERROR:  syntax error at or near "return" at character 1
2023-01-16 16:18:58.693 GMT [34179] STATEMENT:  return PASSED;
2023-01-16 16:18:58.693 GMT [34179] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_savings_account(account_id INT)
	RETURNS BOOLEAN AS $$" at character 5
2023-01-16 16:18:58.693 GMT [34179] STATEMENT:  END
	$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_savings_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-16 16:18:58.693 GMT [34179] ERROR:  syntax error at or near "INT" at character 28
2023-01-16 16:18:58.693 GMT [34179] STATEMENT:  DECLARE savings_account_id INT;
2023-01-16 16:18:58.693 GMT [34179] ERROR:  syntax error at or near "INT" at character 29
2023-01-16 16:18:58.693 GMT [34179] STATEMENT:  DECLARE next_account_number INT;
2023-01-16 16:18:58.694 GMT [34179] ERROR:  syntax error at or near "INT" at character 19
2023-01-16 16:18:58.694 GMT [34179] STATEMENT:  DECLARE ROW_COUNT INT;
2023-01-16 16:18:58.694 GMT [34179] ERROR:  syntax error at or near "SELECT" at character 11
2023-01-16 16:18:58.694 GMT [34179] STATEMENT:  BEGIN
	    SELECT get_next_account_number() INTO next_account_number;
2023-01-16 16:18:58.694 GMT [34179] ERROR:  syntax error at or near "INTO" at character 165
2023-01-16 16:18:58.694 GMT [34179] STATEMENT:  INSERT INTO savings_account (account_number, account_id, current_balance, interest_rate) VALUES (next_account_number ,account_id, 0, 0.01) RETURNING account_number INTO savings_account_id;
2023-01-16 16:18:58.695 GMT [34179] ERROR:  syntax error at or near "GET" at character 1
2023-01-16 16:18:58.695 GMT [34179] STATEMENT:  GET DIAGNOSTICS ROW_COUNT = ROW_COUNT;
2023-01-16 16:18:58.695 GMT [34179] ERROR:  column "savings_account_id" does not exist at character 191
2023-01-16 16:18:58.695 GMT [34179] STATEMENT:  INSERT INTO savings_statement (starting_date, end_date, amount, account_number) VALUES (date_trunc('month', now()::date), (date_trunc('month', now()::date)) + interval '1 month - 1 day', 0, savings_account_id);
2023-01-16 16:18:58.695 GMT [34179] ERROR:  column "account_id" does not exist at character 76
2023-01-16 16:18:58.695 GMT [34179] HINT:  There is a column named "account_id" in table "management_log", but it cannot be referenced from this part of the query.
2023-01-16 16:18:58.695 GMT [34179] STATEMENT:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened savings account', CURRENT_DATE);
2023-01-16 16:18:58.695 GMT [34179] ERROR:  syntax error at or near "passed" at character 1
2023-01-16 16:18:58.695 GMT [34179] STATEMENT:  passed = CASE WHEN ROW_COUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-16 16:18:58.695 GMT [34179] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:18:58.695 GMT [34179] STATEMENT:  RETURN passed;
2023-01-16 16:18:58.695 GMT [34179] WARNING:  there is no transaction in progress
2023-01-16 16:18:58.696 GMT [34179] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_loan(account_id INT, loan_amount INT, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-16 16:18:58.696 GMT [34179] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_loan(account_id INT, loan_amount INT, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-16 16:18:58.696 GMT [34179] ERROR:  syntax error at or near "INT" at character 17
2023-01-16 16:18:58.696 GMT [34179] STATEMENT:  DECLARE loan_id INT;
2023-01-16 16:18:58.696 GMT [34179] ERROR:  syntax error at or near "INT" at character 19
2023-01-16 16:18:58.696 GMT [34179] STATEMENT:  DECLARE ROW_COUNT INT;
2023-01-16 16:18:58.696 GMT [34179] ERROR:  syntax error at or near "INSERT" at character 11
2023-01-16 16:18:58.696 GMT [34179] STATEMENT:  BEGIN
	    INSERT INTO loan (account_id, loan_amount, loan_end_date, loan_type, loan_interest_rate) VALUES (account_id, loan_amount, loan_end_date, loan_type, loan_interest_rate) RETURNING id INTO loan_id;
2023-01-16 16:18:58.696 GMT [34179] ERROR:  syntax error at or near "GET" at character 1
2023-01-16 16:18:58.696 GMT [34179] STATEMENT:  GET DIAGNOSTICS ROW_COUNT = ROW_COUNT;
2023-01-16 16:18:58.697 GMT [34179] ERROR:  column "end_date" of relation "loan_statement" does not exist at character 44
2023-01-16 16:18:58.697 GMT [34179] STATEMENT:  INSERT INTO loan_statement (starting_date, end_date, amount, account_id) VALUES (date_trunc('month', now()::date), (date_trunc('month', now()::date)) + interval '1 month - 1 day', 0, loan_id);
2023-01-16 16:18:58.697 GMT [34179] ERROR:  column "loan_id" does not exist at character 68
2023-01-16 16:18:58.697 GMT [34179] HINT:  There is a column named "loan_id" in table "loan_application", but it cannot be referenced from this part of the query.
2023-01-16 16:18:58.697 GMT [34179] STATEMENT:  INSERT INTO loan_application (loan_id, application_status) VALUES (loan_id, 'PENDING');
2023-01-16 16:18:58.697 GMT [34179] ERROR:  column "account_id" does not exist at character 76
2023-01-16 16:18:58.697 GMT [34179] HINT:  There is a column named "account_id" in table "management_log", but it cannot be referenced from this part of the query.
2023-01-16 16:18:58.697 GMT [34179] STATEMENT:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened loan', CURRENT_DATE);
2023-01-16 16:18:58.697 GMT [34179] ERROR:  syntax error at or near "passed" at character 1
2023-01-16 16:18:58.697 GMT [34179] STATEMENT:  passed = CASE WHEN ROW_COUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-16 16:18:58.697 GMT [34179] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:18:58.697 GMT [34179] STATEMENT:  RETURN passed;
2023-01-16 16:18:58.697 GMT [34179] WARNING:  there is no transaction in progress
2023-01-16 16:18:58.697 GMT [34179] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_personal_information(account_id INT)
	RETURNS TABLE (first_name TEXT, last_name TEXT, email TEXT, phone_number TEXT, address TEXT, city TEXT, country TEXT, postal_code TEXT) AS $$" at character 1
2023-01-16 16:18:58.697 GMT [34179] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_personal_information(account_id INT)
	RETURNS TABLE (first_name TEXT, last_name TEXT, email TEXT, phone_number TEXT, address TEXT, city TEXT, country TEXT, postal_code TEXT) AS $$
	BEGIN
	    RETURN QUERY
	        SELECT first_name, last_name, email, phone_number, address, city, country, postal_code
	            FROM customer
	        INNER JOIN account ON account.customer_id = customer.id
	        WHERE account.id = account_id;
2023-01-16 16:18:58.697 GMT [34179] WARNING:  there is no transaction in progress
2023-01-16 16:18:58.697 GMT [34179] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_accounts(account_identifier INT)
	RETURNS TABLE (account_number INT, account_id INT, balance NUMERIC, interest_rate NUMERIC, account_type TEXT) AS $$" at character 1
2023-01-16 16:18:58.697 GMT [34179] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_accounts(account_identifier INT)
	RETURNS TABLE (account_number INT, account_id INT, balance NUMERIC, interest_rate NUMERIC, account_type TEXT) AS $$
	BEGIN
	    RETURN QUERY
	        SELECT account.*, COALESCE(debit_accounts.current_balance, credit_accounts.outstanding_balance, savings_accounts.current_balance) AS balance,
	            COALESCE(debit_accounts.interest_rate, credit_accounts.interest_rate, savings_accounts.interest_rate) AS interest_rate,
	            get_account_type(account.account_number) AS account_type
	            FROM account
	            LEFT JOIN client.credit_accounts ON account.account_number = credit_accounts.account_number
	            LEFT JOIN client.debit_accounts ON account.account_number = debit_accounts.account_number
	            LEFT JOIN client.savings_accounts ON account.account_number = savings_accounts.account_number
	            WHERE account.account_id = account_identifier;
2023-01-16 16:18:58.697 GMT [34179] WARNING:  there is no transaction in progress
2023-01-16 16:18:58.697 GMT [34179] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, overdraft_limit NUMERIC, overdraft_usage NUMERIC, overdraft_interest_rate NUMERIC, external_account_number INT) AS $$" at character 1
2023-01-16 16:18:58.697 GMT [34179] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, overdraft_limit NUMERIC, overdraft_usage NUMERIC, overdraft_interest_rate NUMERIC, external_account_number INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed debit accounts', CURRENT_DATE);
2023-01-16 16:18:58.699 GMT [34179] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:18:58.699 GMT [34179] STATEMENT:  RETURN QUERY
	        SELECT * FROM client.debit_accounts WHERE account_id = account_id;
2023-01-16 16:18:58.699 GMT [34179] WARNING:  there is no transaction in progress
2023-01-16 16:18:58.699 GMT [34179] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_accounts(account_id INT)
	RETURNS TABLE (id INT, outstanding_balance NUMERIC, credit_limit NUMERIC, interest_rate NUMERIC, application_status TEXT) AS $$" at character 1
2023-01-16 16:18:58.699 GMT [34179] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_accounts(account_id INT)
	RETURNS TABLE (id INT, outstanding_balance NUMERIC, credit_limit NUMERIC, interest_rate NUMERIC, application_status TEXT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit accounts', CURRENT_DATE);
2023-01-16 16:18:58.699 GMT [34179] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:18:58.699 GMT [34179] STATEMENT:  RETURN QUERY
	        SELECT * FROM client.credit_accounts WHERE account_id = account_id;
2023-01-16 16:18:58.699 GMT [34179] WARNING:  there is no transaction in progress
2023-01-16 16:18:58.699 GMT [34179] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_savings_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, external_account_number INT) AS $$" at character 1
2023-01-16 16:18:58.699 GMT [34179] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_savings_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, external_account_number INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings accounts', CURRENT_DATE);
2023-01-16 16:18:58.699 GMT [34179] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:18:58.699 GMT [34179] STATEMENT:  RETURN QUERY
	        SELECT * FROM client.savings_accounts WHERE account_id = account_id;
2023-01-16 16:18:58.699 GMT [34179] WARNING:  there is no transaction in progress
2023-01-16 16:18:58.699 GMT [34179] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_loans(account_id INT)
	RETURNS TABLE (id INT, loan_amount NUMERIC, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC, application_status TEXT) AS $$" at character 1
2023-01-16 16:18:58.699 GMT [34179] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_loans(account_id INT)
	RETURNS TABLE (id INT, loan_amount NUMERIC, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC, application_status TEXT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed loans', CURRENT_DATE);
2023-01-16 16:18:58.699 GMT [34179] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:18:58.699 GMT [34179] STATEMENT:  RETURN QUERY
	        SELECT * FROM client.loans WHERE account_id = account_id;
2023-01-16 16:18:58.700 GMT [34179] WARNING:  there is no transaction in progress
2023-01-16 16:18:58.700 GMT [34179] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_savings_statements(account_identifier INT, orig_account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-16 16:18:58.700 GMT [34179] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_savings_statements(account_identifier INT, orig_account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Viewed savings statements', CURRENT_DATE);
2023-01-16 16:18:58.700 GMT [34179] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:18:58.700 GMT [34179] STATEMENT:  RETURN QUERY
	        SELECT savings_accounts_statements.starting_date, savings_accounts_statements.end_date, savings_accounts_statements.amount, savings_accounts_statements.account_id
	        FROM client.savings_accounts_statements
	        WHERE savings_accounts_statements.account_number = orig_account_number
	        AND savings_accounts_statements.account_id = account_identifier;
2023-01-16 16:18:58.700 GMT [34179] WARNING:  there is no transaction in progress
2023-01-16 16:18:58.700 GMT [34179] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_statements(account_identifier INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-16 16:18:58.700 GMT [34179] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_statements(account_identifier INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Viewed debit statements', CURRENT_DATE);
2023-01-16 16:18:58.700 GMT [34179] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:18:58.700 GMT [34179] STATEMENT:  RETURN QUERY
	        SELECT debit_accounts_statements.account_id, debit_accounts_statements.account_number, debit_accounts_statements.starting_date, debit_accounts_statements.end_date, debit_accounts_statements.amount
	        FROM client.debit_accounts_statements
	        WHERE debit_accounts_statements.account_number = account_number
	        AND debit_accounts_statements.account_id = account_identifier;
2023-01-16 16:18:58.700 GMT [34179] WARNING:  there is no transaction in progress
2023-01-16 16:18:58.700 GMT [34179] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_statements(account_identifier INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-16 16:18:58.700 GMT [34179] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_statements(account_identifier INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Viewed credit statements', CURRENT_DATE);
2023-01-16 16:18:58.701 GMT [34179] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:18:58.701 GMT [34179] STATEMENT:  RETURN QUERY
	        SELECT credit_accounts_statements.account_id, credit_accounts_statements.account_number, credit_accounts_statements.starting_date, credit_accounts_statements.end_date, credit_accounts_statements.amount
	        FROM client.credit_accounts_statements
	        WHERE credit_accounts_statements.account_number = account_number
	        AND credit_accounts_statements.account_id = account_identifier;
2023-01-16 16:18:58.701 GMT [34179] WARNING:  there is no transaction in progress
2023-01-16 16:18:58.701 GMT [34179] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_statement(account_identifier INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-16 16:18:58.701 GMT [34179] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_statement(account_identifier INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Viewed debit statement', CURRENT_DATE);
2023-01-16 16:18:58.701 GMT [34179] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:18:58.701 GMT [34179] STATEMENT:  RETURN QUERY
	        SELECT debit_accounts_statement.account_id, debit_accounts_statement.account_number, debit_accounts_statement.starting_date, debit_accounts_statement.end_date, debit_accounts_statement.amount
	        FROM client.debit_accounts_statement
	        WHERE debit_accounts_statement.account_id = account_identifier
	        AND debit_accounts_statement.account_number = account_number
	        AND debit_accounts_statement.statement_id = statement_id;
2023-01-16 16:18:58.701 GMT [34179] WARNING:  there is no transaction in progress
2023-01-16 16:18:58.701 GMT [34179] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_statement(account_identifier INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-16 16:18:58.701 GMT [34179] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_statement(account_identifier INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statement', CURRENT_DATE);
2023-01-16 16:18:58.701 GMT [34179] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:18:58.701 GMT [34179] STATEMENT:  RETURN QUERY
	        SELECT credit_accounts_statement.account_id, credit_accounts_statement.account_number, credit_accounts_statement.starting_date, credit_accounts_statement.end_date, credit_accounts_statement.amount
	        FROM client.credit_accounts_statement
	        WHERE credit_accounts_statement.account_id = account_identifier
	        AND credit_accounts_statement.account_number = account_number
	        AND credit_accounts_statement.statement_id = statement_id;
2023-01-16 16:18:58.701 GMT [34179] WARNING:  there is no transaction in progress
2023-01-16 16:18:58.701 GMT [34179] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_savings_statement(account_identifier INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-16 16:18:58.701 GMT [34179] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_savings_statement(account_identifier INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statement', CURRENT_DATE);
2023-01-16 16:18:58.701 GMT [34179] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:18:58.701 GMT [34179] STATEMENT:  RETURN QUERY
	        SELECT savings_accounts_statement.account_id, savings_accounts_statement.account_number, savings_accounts_statement.starting_date, savings_accounts_statement.end_date, savings_accounts_statement.amount
	        FROM client.savings_accounts_statement
	        WHERE savings_accounts_statement.account_id = account_identifier
	        AND savings_accounts_statement.account_number = account_number
	        AND savings_accounts_statement.statement_id = statement_id;
2023-01-16 16:18:58.701 GMT [34179] WARNING:  there is no transaction in progress
2023-01-16 16:18:58.702 GMT [34179] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.get_or_create_statement(account_identifier INT, orig_account_number INT)
	RETURNS INT AS $$" at character 1
2023-01-16 16:18:58.702 GMT [34179] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.get_or_create_statement(account_identifier INT, orig_account_number INT)
	RETURNS INT AS $$
	DECLARE statement_id INT;
2023-01-16 16:18:58.702 GMT [34179] ERROR:  syntax error at or near "CASE" at character 11
2023-01-16 16:18:58.702 GMT [34179] STATEMENT:  BEGIN
	    CASE WHEN EXISTS (SELECT * FROM client.debit_accounts WHERE account_id = account_identifier AND account_number = orig_account_number) THEN
	        IF EXISTS (SELECT * FROM debit_statement WHERE account_number = orig_account_number AND starting_date <= now()::date AND end_date >= now()::date) THEN
	            SELECT id INTO statement_id FROM debit_statement WHERE account_number = orig_account_number AND starting_date <= now()::date AND end_date >= now()::date;
2023-01-16 16:18:58.702 GMT [34179] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:18:58.702 GMT [34179] STATEMENT:  RETURN statement_id;
2023-01-16 16:18:58.702 GMT [34179] ERROR:  syntax error at or near "ELSE" at character 1
2023-01-16 16:18:58.702 GMT [34179] STATEMENT:  ELSE 
	            INSERT INTO debit_statement (account_number, starting_date, end_date, amount) VALUES (orig_account_number, date_trunc('month', now()::date), now()::date + 30, 0);
2023-01-16 16:18:58.702 GMT [34179] ERROR:  column "orig_account_number" does not exist at character 73
2023-01-16 16:18:58.702 GMT [34179] STATEMENT:  SELECT id INTO statement_id FROM debit_statement WHERE account_number = orig_account_number AND starting_date <= now()::date AND end_date >= now()::date;
2023-01-16 16:18:58.702 GMT [34179] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:18:58.702 GMT [34179] STATEMENT:  RETURN statement_id;
2023-01-16 16:18:58.702 GMT [34179] ERROR:  syntax error at or near "IF" at character 5
2023-01-16 16:18:58.702 GMT [34179] STATEMENT:  END IF;
2023-01-16 16:18:58.702 GMT [34179] ERROR:  syntax error at or near "WHEN" at character 1
2023-01-16 16:18:58.702 GMT [34179] STATEMENT:  WHEN EXISTS (SELECT * FROM client.credit_accounts WHERE account_id = account_identifier AND account_number = orig_account_number) THEN
	        IF EXISTS (SELECT * FROM credit_statement WHERE account_number = orig_account_number AND starting_date <= now()::date AND end_date >= now()::date) THEN
	            SELECT id INTO statement_id FROM credit_statement WHERE account_number = orig_account_number AND starting_date <= now()::date AND end_date >= now()::date;
2023-01-16 16:18:58.702 GMT [34179] ERROR:  syntax error at or near "return" at character 1
2023-01-16 16:18:58.702 GMT [34179] STATEMENT:  return statement_id;
2023-01-16 16:18:58.702 GMT [34179] ERROR:  syntax error at or near "ELSE" at character 1
2023-01-16 16:18:58.702 GMT [34179] STATEMENT:  ELSE 
	            INSERT INTO credit_statement (account_number, starting_date, end_date, amount) VALUES (orig_account_number, date_trunc('month', now()::date), now()::date + 30, 0);
2023-01-16 16:18:58.702 GMT [34179] ERROR:  column "orig_account_number" does not exist at character 74
2023-01-16 16:18:58.702 GMT [34179] STATEMENT:  SELECT id INTO statement_id FROM credit_statement WHERE account_number = orig_account_number AND starting_date <= now()::date AND end_date >= now()::date;
2023-01-16 16:18:58.702 GMT [34179] ERROR:  syntax error at or near "return" at character 1
2023-01-16 16:18:58.702 GMT [34179] STATEMENT:  return statement_id;
2023-01-16 16:18:58.703 GMT [34179] ERROR:  syntax error at or near "IF" at character 5
2023-01-16 16:18:58.703 GMT [34179] STATEMENT:  END IF;
2023-01-16 16:18:58.703 GMT [34179] ERROR:  syntax error at or near "WHEN" at character 1
2023-01-16 16:18:58.703 GMT [34179] STATEMENT:  WHEN EXISTS (SELECT * FROM client.savings_accounts WHERE account_id = account_identifier AND account_number = orig_account_number) THEN
	        IF EXISTS (SELECT * FROM savings_statement WHERE account_number = orig_account_number AND starting_date <= now()::date AND end_date >= now()::date) THEN
	            SELECT id INTO statement_id FROM savings_statement WHERE account_number = orig_account_number AND starting_date <= now()::date AND end_date >= now()::date;
2023-01-16 16:18:58.703 GMT [34179] ERROR:  syntax error at or near "return" at character 1
2023-01-16 16:18:58.703 GMT [34179] STATEMENT:  return statement_id;
2023-01-16 16:18:58.703 GMT [34179] ERROR:  syntax error at or near "ELSE" at character 1
2023-01-16 16:18:58.703 GMT [34179] STATEMENT:  ELSE
	            INSERT INTO savings_statement (account_number, starting_date, end_date, amount) VALUES (orig_account_number, date_trunc('month', now()::date), now()::date + 30, 0);
2023-01-16 16:18:58.703 GMT [34179] ERROR:  column "orig_account_number" does not exist at character 75
2023-01-16 16:18:58.703 GMT [34179] STATEMENT:  SELECT id INTO statement_id FROM savings_statement WHERE account_number = orig_account_number AND starting_date <= now()::date AND end_date >= now()::date;
2023-01-16 16:18:58.703 GMT [34179] ERROR:  syntax error at or near "return" at character 1
2023-01-16 16:18:58.703 GMT [34179] STATEMENT:  return statement_id;
2023-01-16 16:18:58.703 GMT [34179] ERROR:  syntax error at or near "IF" at character 5
2023-01-16 16:18:58.703 GMT [34179] STATEMENT:  END IF;
2023-01-16 16:18:58.703 GMT [34179] ERROR:  syntax error at or near "CASE" at character 5
2023-01-16 16:18:58.703 GMT [34179] STATEMENT:  END CASE;
2023-01-16 16:18:58.703 GMT [34179] WARNING:  there is no transaction in progress
2023-01-16 16:18:58.703 GMT [34179] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	
	CREATE OR REPLACE FUNCTION client.place_transaction_into_account(account_identifier INT, orig_account_number INT, transaction_account_number INT, transaction_amount NUMERIC)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-16 16:18:58.703 GMT [34179] STATEMENT:  $$ LANGUAGE plpgsql;
	
	
	CREATE OR REPLACE FUNCTION client.place_transaction_into_account(account_identifier INT, orig_account_number INT, transaction_account_number INT, transaction_amount NUMERIC)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-16 16:18:58.704 GMT [34179] ERROR:  syntax error at or near "INT" at character 22
2023-01-16 16:18:58.704 GMT [34179] STATEMENT:  DECLARE statement_id INT;
2023-01-16 16:18:58.704 GMT [34179] ERROR:  syntax error at or near "INSERT" at character 11
2023-01-16 16:18:58.704 GMT [34179] STATEMENT:  BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Placed transaction into account', CURRENT_DATE);
2023-01-16 16:18:58.704 GMT [34179] ERROR:  syntax error at or near "CASE" at character 1
2023-01-16 16:18:58.704 GMT [34179] STATEMENT:  CASE WHEN EXISTS (SELECT * FROM client.debit_accounts WHERE account_id = account_identifier AND account_number = orig_account_number) THEN
	        UPDATE debit_account SET current_balance = current_balance + transaction_amount WHERE debit_account.account_number = orig_account_number;
2023-01-16 16:18:58.704 GMT [34179] ERROR:  syntax error at or near "INTO" at character 87
2023-01-16 16:18:58.704 GMT [34179] STATEMENT:  SELECT * FROM client.get_or_create_statement(account_identifier, orig_account_number) INTO statement_id;
2023-01-16 16:18:58.704 GMT [34179] ERROR:  column "orig_account_number" does not exist at character 112
2023-01-16 16:18:58.704 GMT [34179] STATEMENT:  INSERT INTO transaction (origin_account_id, dest_account_id, amount, date, debit_statement_id)
	        VALUES (orig_account_number, transaction_account_number, transaction_amount, now(), statement_id);
2023-01-16 16:18:58.704 GMT [34179] ERROR:  syntax error at or near "WHEN" at character 1
2023-01-16 16:18:58.704 GMT [34179] STATEMENT:  WHEN EXISTS (SELECT * FROM client.credit_accounts WHERE account_id = account_identifier AND account_number = orig_account_number) THEN
	        UPDATE credit_account SET outstanding_balance = outstanding_balance + transaction_amount WHERE credit_account.account_number = orig_account_number;
2023-01-16 16:18:58.704 GMT [34179] ERROR:  syntax error at or near "INTO" at character 87
2023-01-16 16:18:58.704 GMT [34179] STATEMENT:  SELECT * FROM client.get_or_create_statement(account_identifier, orig_account_number) INTO statement_id;
2023-01-16 16:18:58.704 GMT [34179] ERROR:  column "orig_account_number" does not exist at character 113
2023-01-16 16:18:58.704 GMT [34179] STATEMENT:  INSERT INTO transaction (origin_account_id, dest_account_id, amount, date, credit_statement_id)
	        VALUES (orig_account_number, transaction_account_number, transaction_amount, now(), statement_id);
2023-01-16 16:18:58.705 GMT [34179] ERROR:  syntax error at or near "WHEN" at character 1
2023-01-16 16:18:58.705 GMT [34179] STATEMENT:  WHEN EXISTS (SELECT * FROM client.savings_accounts WHERE account_id = account_identifier AND account_number = orig_account_number) THEN
	        UPDATE savings_account SET current_balance = current_balance + transaction_amount WHERE savings_account.account_number = orig_account_number;
2023-01-16 16:18:58.705 GMT [34179] ERROR:  syntax error at or near "INTO" at character 87
2023-01-16 16:18:58.705 GMT [34179] STATEMENT:  SELECT * FROM client.get_or_create_statement(account_identifier, orig_account_number) INTO statement_id;
2023-01-16 16:18:58.705 GMT [34179] ERROR:  column "orig_account_number" does not exist at character 114
2023-01-16 16:18:58.705 GMT [34179] STATEMENT:  INSERT INTO transaction (origin_account_id, dest_account_id, amount, date, savings_statement_id)
	        VALUES (orig_account_number, transaction_account_number, transaction_amount, now(), statement_id);
2023-01-16 16:18:58.706 GMT [34179] ERROR:  syntax error at or near "ELSE" at character 1
2023-01-16 16:18:58.706 GMT [34179] STATEMENT:  ELSE
	        RAISE NOTICE 'Account does not exist';
2023-01-16 16:18:58.706 GMT [34179] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:18:58.706 GMT [34179] STATEMENT:  RETURN FALSE;
2023-01-16 16:18:58.706 GMT [34179] ERROR:  syntax error at or near "CASE" at character 5
2023-01-16 16:18:58.706 GMT [34179] STATEMENT:  END CASE;
2023-01-16 16:18:58.706 GMT [34179] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:18:58.706 GMT [34179] STATEMENT:  RETURN TRUE;
2023-01-16 16:18:58.706 GMT [34179] WARNING:  there is no transaction in progress
2023-01-16 16:18:58.706 GMT [34179] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	
	CREATE OR REPLACE FUNCTION client.initiate_transfer(account_identifier INT, orig_account_number INT, transfer_amount NUMERIC, transfer_account_number INT, transfer_account_sort_code INT)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-16 16:18:58.706 GMT [34179] STATEMENT:  $$ LANGUAGE plpgsql;
	
	
	CREATE OR REPLACE FUNCTION client.initiate_transfer(account_identifier INT, orig_account_number INT, transfer_amount NUMERIC, transfer_account_number INT, transfer_account_sort_code INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-16 16:18:58.706 GMT [34179] ERROR:  syntax error at or near "INT" at character 29
2023-01-16 16:18:58.706 GMT [34179] STATEMENT:  DECLARE internal_account_id INT;
2023-01-16 16:18:58.706 GMT [34179] ERROR:  syntax error at or near "INT" at character 19
2023-01-16 16:18:58.706 GMT [34179] STATEMENT:  DECLARE ROW_COUNT INT;
2023-01-16 16:18:58.706 GMT [34179] ERROR:  syntax error at or near "INSERT" at character 11
2023-01-16 16:18:58.706 GMT [34179] STATEMENT:  BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Initiated transfer', CURRENT_DATE);
2023-01-16 16:18:58.706 GMT [34179] ERROR:  relation "client.accounts" does not exist at character 49
2023-01-16 16:18:58.706 GMT [34179] STATEMENT:  SELECT account_id INTO internal_account_id FROM client.accounts
	    WHERE account_number = transfer_account_number AND sort_code = transfer_account_sort_code;
2023-01-16 16:18:58.707 GMT [34179] ERROR:  syntax error at or near "IF" at character 1
2023-01-16 16:18:58.707 GMT [34179] STATEMENT:  IF internal_account_id IS NULL THEN
	       RAISE NOTICE 'EXTERNAL TRANSFER TO LOCAL ACCOUNT %', transfer_account_number;
2023-01-16 16:18:58.707 GMT [34179] ERROR:  syntax error at or near "ELSE" at character 1
2023-01-16 16:18:58.707 GMT [34179] STATEMENT:  ELSE
	        RAISE NOTICE 'INTERNAL TRANSFER TO ACCOUNT %', transfer_account_number;
2023-01-16 16:18:58.707 GMT [34179] ERROR:  syntax error at or near "INTO" at character 136
2023-01-16 16:18:58.707 GMT [34179] STATEMENT:  SELECT * FROM client.place_transaction_into_account(account_identifier, orig_account_number, transfer_account_number, transfer_amount) INTO passed;
2023-01-16 16:18:58.707 GMT [34179] ERROR:  syntax error at or near "GET" at character 1
2023-01-16 16:18:58.707 GMT [34179] STATEMENT:  GET DIAGNOSTICS ROW_COUNT = ROW_COUNT;
2023-01-16 16:18:58.707 GMT [34179] ERROR:  syntax error at or near "passed" at character 1
2023-01-16 16:18:58.707 GMT [34179] STATEMENT:  passed = CASE WHEN ROW_COUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-16 16:18:58.707 GMT [34179] ERROR:  syntax error at or near "IF" at character 5
2023-01-16 16:18:58.707 GMT [34179] STATEMENT:  END IF;
2023-01-16 16:18:58.707 GMT [34179] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:18:58.707 GMT [34179] STATEMENT:  RETURN passed;
2023-01-16 16:18:58.707 GMT [34179] WARNING:  there is no transaction in progress
2023-01-16 16:18:58.707 GMT [34179] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE SCHEMA IF NOT EXISTS unauthenticated;
	SET search_path TO unauthenticated, public;
	
	-- Allows an unauthenticated user to match hashes to hashes of personal information contained in the customer table
	CREATE OR REPLACE VIEW unauthenticated.unauthenticated_personal_information AS
	SELECT id, md5(first_name) AS first_name, md5(last_name) AS last_name, md5(email_address) AS email_address
	FROM customer;
	
	-- Allows an unauthenticated user to view hashes of usernames contained in the user_login table
	CREATE OR REPLACE VIEW unauthenticated.unauthenticated_login AS
	SELECT md5(username) AS username FROM user_login;
	
	-- Allows a user to insert personal information into the online banking system
	CREATE OR REPLACE FUNCTION unauthenticated.create_personal_info(first_name TEXT, last_name TEXT, date_of_birth DATE, phone_number TEXT, email_address TEXT, address_street TEXT, address_city TEXT, address_county TEXT, address_postcode TEXT)
	RETURNS INT AS $$" at character 1
2023-01-16 16:18:58.707 GMT [34179] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE SCHEMA IF NOT EXISTS unauthenticated;
	SET search_path TO unauthenticated, public;
	
	-- Allows an unauthenticated user to match hashes to hashes of personal information contained in the customer table
	CREATE OR REPLACE VIEW unauthenticated.unauthenticated_personal_information AS
	SELECT id, md5(first_name) AS first_name, md5(last_name) AS last_name, md5(email_address) AS email_address
	FROM customer;
	
	-- Allows an unauthenticated user to view hashes of usernames contained in the user_login table
	CREATE OR REPLACE VIEW unauthenticated.unauthenticated_login AS
	SELECT md5(username) AS username FROM user_login;
	
	-- Allows a user to insert personal information into the online banking system
	CREATE OR REPLACE FUNCTION unauthenticated.create_personal_info(first_name TEXT, last_name TEXT, date_of_birth DATE, phone_number TEXT, email_address TEXT, address_street TEXT, address_city TEXT, address_county TEXT, address_postcode TEXT)
	RETURNS INT AS $$
	DECLARE customer_id INT;
2023-01-16 16:18:58.708 GMT [34179] ERROR:  syntax error at or near "IF" at character 11
2023-01-16 16:18:58.708 GMT [34179] STATEMENT:  BEGIN
	    IF NOT EXISTS (SELECT FROM unauthenticated.unauthenticated_personal_information WHERE md5(first_name) = first_name AND md5(last_name) = last_name AND md5(email_address) = email_address) THEN
	        INSERT INTO customer
	        VALUES (first_name, last_name, date_of_birth, phone_number, email_address, address_street, address_city, address_county, address_postcode)
	        RETURNING id INTO customer_id;
2023-01-16 16:18:58.710 GMT [34179] ERROR:  syntax error at or near "ELSE" at character 1
2023-01-16 16:18:58.710 GMT [34179] STATEMENT:  ELSE
	        RAISE NOTICE 'CUSTOMER INFORMATION ALREADY PRESENT';
2023-01-16 16:18:58.710 GMT [34179] ERROR:  relation "unauthenticated.unauthenticated_personal_information" does not exist at character 33
2023-01-16 16:18:58.710 GMT [34179] STATEMENT:  SELECT id INTO customer_id FROM unauthenticated.unauthenticated_personal_information WHERE md5(first_name) = first_name AND md5(last_name) = last_name AND md5(email_address) = email_address;
2023-01-16 16:18:58.711 GMT [34179] ERROR:  syntax error at or near "IF" at character 5
2023-01-16 16:18:58.711 GMT [34179] STATEMENT:  END IF;
2023-01-16 16:18:58.711 GMT [34179] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:18:58.711 GMT [34179] STATEMENT:  RETURN customer_id;
2023-01-16 16:18:58.711 GMT [34179] WARNING:  there is no transaction in progress
2023-01-16 16:18:58.711 GMT [34179] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	-- Allows an unauthenticated user to create an online account
	CREATE OR REPLACE FUNCTION unauthenticated.create_online_account_details(customer_id INT, first_name TEXT, last_name TEXT, email_address TEXT, question_choice_ids INT[], question_answers TEXT[])
	RETURNS INT AS $$" at character 1
2023-01-16 16:18:58.711 GMT [34179] STATEMENT:  $$ LANGUAGE plpgsql;
	
	-- Allows an unauthenticated user to create an online account
	CREATE OR REPLACE FUNCTION unauthenticated.create_online_account_details(customer_id INT, first_name TEXT, last_name TEXT, email_address TEXT, question_choice_ids INT[], question_answers TEXT[])
	RETURNS INT AS $$
	DECLARE account_id INT;
2023-01-16 16:18:58.711 GMT [34179] ERROR:  syntax error at or near "INT" at character 27
2023-01-16 16:18:58.711 GMT [34179] STATEMENT:  DECLARE online_account_id INT;
2023-01-16 16:18:58.712 GMT [34179] ERROR:  syntax error at or near "INT" at character 28
2023-01-16 16:18:58.712 GMT [34179] STATEMENT:  DECLARE question_choice_id INT;
2023-01-16 16:18:58.712 GMT [34179] ERROR:  syntax error at or near "IF" at character 11
2023-01-16 16:18:58.712 GMT [34179] STATEMENT:  BEGIN
	    IF NOT EXISTS (SELECT FROM user_login WHERE username = username) THEN
	        INSERT INTO online_account (date_opened, sort_code, customer_id)
	        VALUES ((SELECT now()), (SELECT num FROM GENERATE_SERIES(1, 6) AS s(num) LIMIT 1), customer_id)
	        RETURNING id INTO account_id;
2023-01-16 16:18:58.712 GMT [34179] ERROR:  syntax error at or near "INTO" at character 131
2023-01-16 16:18:58.712 GMT [34179] STATEMENT:  INSERT INTO user_login (account_id, username, password)
	        VALUES (account_id, username, md5(password))
	        RETURNING id INTO online_account_id;
2023-01-16 16:18:58.712 GMT [34179] ERROR:  syntax error at or near "FOR" at character 1
2023-01-16 16:18:58.712 GMT [34179] STATEMENT:  FOR i IN 0..2 LOOP
	            
	            INSERT INTO user_login_security_question (question_choice_id, login_id)
	            VALUES (question_choice_ids[i], online_account_id)
	            RETURNING id INTO question_choice_id;
2023-01-16 16:18:58.713 GMT [34179] ERROR:  column "answer" of relation "security_question_answer" does not exist at character 39
2023-01-16 16:18:58.713 GMT [34179] STATEMENT:  INSERT INTO security_question_answer (answer, question_id)
	            VALUES (question_answers[i], question_choice_id);
2023-01-16 16:18:58.713 GMT [34179] ERROR:  syntax error at or near "LOOP" at character 5
2023-01-16 16:18:58.713 GMT [34179] STATEMENT:  END LOOP;
2023-01-16 16:18:58.713 GMT [34179] ERROR:  column "account_id" does not exist at character 117
2023-01-16 16:18:58.713 GMT [34179] HINT:  There is a column named "account_id" in table "authentication_log", but it cannot be referenced from this part of the query.
2023-01-16 16:18:58.713 GMT [34179] STATEMENT:  INSERT INTO authentication_log (log_description, log_date, account_id) VALUES ('New online account created', now(), account_id);
2023-01-16 16:18:58.713 GMT [34179] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:18:58.713 GMT [34179] STATEMENT:  RETURN account_id;
2023-01-16 16:18:58.714 GMT [34179] ERROR:  syntax error at or near "ELSE" at character 1
2023-01-16 16:18:58.714 GMT [34179] STATEMENT:  ELSE
	        RAISE NOTICE 'USERNAME ALREADY TAKEN';
2023-01-16 16:18:58.714 GMT [34179] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:18:58.714 GMT [34179] STATEMENT:  RETURN NULL;
2023-01-16 16:18:58.714 GMT [34179] ERROR:  syntax error at or near "IF" at character 5
2023-01-16 16:18:58.714 GMT [34179] STATEMENT:  END IF;
2023-01-16 16:18:58.714 GMT [34179] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:18:58.714 GMT [34179] STATEMENT:  RETURN success;
2023-01-16 16:18:58.714 GMT [34179] WARNING:  there is no transaction in progress
2023-01-16 16:18:58.715 GMT [34179] ERROR:  unterminated dollar-quoted string at or near "$$ LANGUAGE plpgsql;
	
	
	
	
	
	-- sample data for customers
	INSERT INTO customer (first_name, last_name, date_of_birth, phone_number, email_address, address_street, address_city, address_county, address_postcode)
	VALUES ('John', 'Smith', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('Jane', 'Doe', '1990-01-01', '01234567890', 'test@gmail.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Bloggs', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('John', 'Bloggs', '1990-01-01', '01234567890', 'hello@yahoo.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('Jane', 'Bloggs', '1990-01-01', '01234567890', 'test@outlook.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Doe', '1990-01-01', '01234567890', 'hello@outlook.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('John', 'Doe', '1990-01-01', '01234567890', 'mybankemail@icloud.com', '1 My Bank Street', 'My Bank City', 'My Bank County', 'MB1 1NK'),
	('Jane', 'Smith', '1990-01-01', '01234567890', 'bankemail@outlook.com', '1 Bank Street', 'Bank City', 'Bank County', 'BA1 1NK'),
	('Joe', 'Smith', '1990-01-01', '01234567890', 'example@icloud.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX');
	
	-- sample data for online account
	INSERT INTO online_account (date_opened, sort_code, customer_id)
	VALUES ('2020-01-01', '123456', 1),
	('2019-01-01', '126485', 2),
	('2018-01-01', '128475', 3),
	('2017-01-01', '129476', 4),
	('2016-01-01', '120386', 5),
	('2017-02-03', '127385', 6),
	('2018-02-04', '128256', 7),
	('2020-01-01', '129386', 8),
	('2020-01-01', '120386', 9);
	
	-- sample data for user login
	INSERT INTO user_login (account_id, username, password)
	VALUES (1, 'johnsmith', 'b29af57c2b3bba21e9df0cece40952c6'),
	(2, 'janedoe', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(3, 'joebloggs', 'b29af57c2b3bba21e9df0cece40952c6'),
	(4, 'johnbloggs', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(5, 'janebloggs', 'b29af57c2b3bba21e9df0cece40952c6'),
	(6, 'joedoe', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(7, 'johndoe', 'b29af57c2b3bba21e9df0cece40952c6'),
	(8, 'joesmith', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(9, 'janesmith', 'b29af57c2b3bba21e9df0cece40952c6');
	
	-- sample data for security question option
	INSERT INTO security_question_option (question_description)
	VALUES ('What is your favourite colour?'),
	('What is your favourite food?'),
	('What is your favourite animal?'),
	('What is your favourite sport?'),
	('What is your favourite movie?'),
	('What is your favourite book?'),
	('What is your favourite song?'),
	('What is your favourite band?'),
	('What is your favourite game?'),
	('What is your favourite TV show?');
	
	--sample data for user login security question
	INSERT INTO user_login_security_question (question_choice_id, login_id)
	VALUES (1, 1),
	(2, 2),
	(3, 3),
	(4, 4),
	(5, 5),
	(6, 6),
	(7, 7),
	(8, 8),
	(9, 9);
	
	-- sample data for security question answer
	INSERT INTO security_question_answer (question_answer, question_id)
	VALUES ('Red', 1),
	('Blue', 2),
	('Green', 3),
	('Yellow', 4),
	('Orange', 5),
	('Purple', 6),
	('Pink', 7),
	('Black', 8),
	('White', 9);
	
	SELECT * FROM savings_statement;
	
	
	SELECT * FROM client.open_savings_account(1);
	
	--sample data for savings account
	SELECT * FROM client.open_savings_account(1);
	SELECT * FROM client.open_savings_account(2);
	SELECT * FROM client.open_savings_account(3);
	SELECT * FROM client.open_savings_account(4);
	
	SELECT * FROM client.open_debit_account(1);
	SELECT * FROM client.open_debit_account(2);
	SELECT * FROM client.open_debit_account(3);
	SELECT * FROM client.open_debit_account(4);
	
	SELECT * FROM client.open_credit_account(1);
	SELECT * FROM client.open_credit_account(2);
	SELECT * FROM client.open_credit_account(3);
	SELECT * FROM client.open_credit_account(4);
	
	SELECT * FROM client.view_accounts(1);
	
	SELECT * FROM client.initiate_transfer(1, 10000000, 100.00, 10000001, 123456);
	
	SELECT * FROM client.view_accounts(1);
	
	
	
	SELECT * FROM client.view_savings_statements(1, 10000000);
	
	SELECT * FROM savings_statement;
	
	-- -- sample data for savings account
	-- INSERT INTO savings_account (current_balance, interest_rate, account_id)
	-- VALUES (2000.00, 2.05, 1),
	-- (1000.00, 2.05, 2),
	-- (5000.00, 2.05, 3),
	-- (10000.00, 2.05, 4),
	-- (20000.00, 2.05, 5),
	-- (50000.00, 2.05, 6),
	-- (100000.00, 2.05, 7),
	-- (200000.00, 2.05, 8);
	
	-- -- sample data for credit account
	-- INSERT INTO credit_account (outstanding_balance, credit_limit, interest_rate, account_id)
	-- VALUES (55.43, 2000.00, 4.22, 1),
	-- (100.00, 1000.00, 4.22, 2),
	-- (200.00, 5000.00, 4.22, 3),
	-- (300.00, 10000.00, 4.22, 4),
	-- (400.00, 20000.00, 4.22, 5),
	-- (500.00, 50000.00, 4.22, 6),
	-- (600.00, 100000.00, 4.22, 7),
	-- (700.00, 200000.00, 4.22, 8);
	
	-- -- sample data for debit account
	-- INSERT INTO debit_account (current_balance, interest_rate, account_id)
	-- VALUES (3465.43, 0.05, 1),
	-- (1000.00, 0.05, 1),
	-- (5000.00, 0.05, 2),
	-- (10000.00, 0.05, 3),
	-- (20000.00, 0.05, 4),
	-- (50000.00, 0.05, 5),
	-- (100000.00, 0.05, 6),
	-- (200000.00, 0.05, 9);
	
	-- -- sample data for loan
	-- INSERT INTO loan (loan_end_date, loan_amount, loan_type, account_id)
	-- VALUES ('2024-01-01', 10000, 'vehicle', 8),
	-- ('2023-03-04', 300000, 'mortgage', 8),
	-- ('2035-03-03', 400000, 'mortgage', 1),
	-- ('2025-04-05', 25000, 'vehicle', 1),
	-- ('2026-05-05', 34000, 'vehicle', 1),
	-- ('2023-06-07', 500000, 'mortgage', 2),
	-- ('2026-04-04', 60000, 'vehicle', 2),
	-- ('2024-03-03', 70000, 'vehicle', 2),
	-- ('2023-02-02', 800000, 'mortgage', 3),
	-- ('2022-01-01', 90000, 'vehicle', 3),
	-- ('2021-01-01', 100000, 'vehicle', 3),
	-- ('2020-01-01', 110000, 'mortgage', 4),
	-- ('2020-01-01', 12000, 'vehicle', 4),
	-- ('2020-01-01', 13000, 'vehicle', 4),
	-- ('2020-01-01', 140000, 'mortgage', 5),
	-- ('2020-01-01', 15000, 'vehicle', 5),
	-- ('2020-01-01', 16000, 'vehicle', 5),
	-- ('2020-01-01', 170000, 'mortgage', 6),
	-- ('2020-01-01', 18000, 'vehicle', 6),
	-- ('2020-01-01', 19000, 'vehicle', 6),
	-- ('2020-01-01', 200000, 'mortgage', 7),
	-- ('2020-01-01', 21000, 'vehicle', 7),
	-- ('2020-01-01', 22000, 'vehicle', 7);
	
	-- CREATE SCHEMA IF NOT EXISTS staff;
	
	-- SET search_path TO public, staff;" at character 1
2023-01-16 16:18:58.715 GMT [34179] STATEMENT:  $$ LANGUAGE plpgsql;
	
	
	
	
	
	-- sample data for customers
	INSERT INTO customer (first_name, last_name, date_of_birth, phone_number, email_address, address_street, address_city, address_county, address_postcode)
	VALUES ('John', 'Smith', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('Jane', 'Doe', '1990-01-01', '01234567890', 'test@gmail.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Bloggs', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('John', 'Bloggs', '1990-01-01', '01234567890', 'hello@yahoo.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('Jane', 'Bloggs', '1990-01-01', '01234567890', 'test@outlook.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Doe', '1990-01-01', '01234567890', 'hello@outlook.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('John', 'Doe', '1990-01-01', '01234567890', 'mybankemail@icloud.com', '1 My Bank Street', 'My Bank City', 'My Bank County', 'MB1 1NK'),
	('Jane', 'Smith', '1990-01-01', '01234567890', 'bankemail@outlook.com', '1 Bank Street', 'Bank City', 'Bank County', 'BA1 1NK'),
	('Joe', 'Smith', '1990-01-01', '01234567890', 'example@icloud.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX');
	
	-- sample data for online account
	INSERT INTO online_account (date_opened, sort_code, customer_id)
	VALUES ('2020-01-01', '123456', 1),
	('2019-01-01', '126485', 2),
	('2018-01-01', '128475', 3),
	('2017-01-01', '129476', 4),
	('2016-01-01', '120386', 5),
	('2017-02-03', '127385', 6),
	('2018-02-04', '128256', 7),
	('2020-01-01', '129386', 8),
	('2020-01-01', '120386', 9);
	
	-- sample data for user login
	INSERT INTO user_login (account_id, username, password)
	VALUES (1, 'johnsmith', 'b29af57c2b3bba21e9df0cece40952c6'),
	(2, 'janedoe', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(3, 'joebloggs', 'b29af57c2b3bba21e9df0cece40952c6'),
	(4, 'johnbloggs', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(5, 'janebloggs', 'b29af57c2b3bba21e9df0cece40952c6'),
	(6, 'joedoe', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(7, 'johndoe', 'b29af57c2b3bba21e9df0cece40952c6'),
	(8, 'joesmith', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(9, 'janesmith', 'b29af57c2b3bba21e9df0cece40952c6');
	
	-- sample data for security question option
	INSERT INTO security_question_option (question_description)
	VALUES ('What is your favourite colour?'),
	('What is your favourite food?'),
	('What is your favourite animal?'),
	('What is your favourite sport?'),
	('What is your favourite movie?'),
	('What is your favourite book?'),
	('What is your favourite song?'),
	('What is your favourite band?'),
	('What is your favourite game?'),
	('What is your favourite TV show?');
	
	--sample data for user login security question
	INSERT INTO user_login_security_question (question_choice_id, login_id)
	VALUES (1, 1),
	(2, 2),
	(3, 3),
	(4, 4),
	(5, 5),
	(6, 6),
	(7, 7),
	(8, 8),
	(9, 9);
	
	-- sample data for security question answer
	INSERT INTO security_question_answer (question_answer, question_id)
	VALUES ('Red', 1),
	('Blue', 2),
	('Green', 3),
	('Yellow', 4),
	('Orange', 5),
	('Purple', 6),
	('Pink', 7),
	('Black', 8),
	('White', 9);
	
	SELECT * FROM savings_statement;
	
	
	SELECT * FROM client.open_savings_account(1);
	
	--sample data for savings account
	SELECT * FROM client.open_savings_account(1);
	SELECT * FROM client.open_savings_account(2);
	SELECT * FROM client.open_savings_account(3);
	SELECT * FROM client.open_savings_account(4);
	
	SELECT * FROM client.open_debit_account(1);
	SELECT * FROM client.open_debit_account(2);
	SELECT * FROM client.open_debit_account(3);
	SELECT * FROM client.open_debit_account(4);
	
	SELECT * FROM client.open_credit_account(1);
	SELECT * FROM client.open_credit_account(2);
	SELECT * FROM client.open_credit_account(3);
	SELECT * FROM client.open_credit_account(4);
	
	SELECT * FROM client.view_accounts(1);
	
	SELECT * FROM client.initiate_transfer(1, 10000000, 100.00, 10000001, 123456);
	
	SELECT * FROM client.view_accounts(1);
	
	
	
	SELECT * FROM client.view_savings_statements(1, 10000000);
	
	SELECT * FROM savings_statement;
	
	-- -- sample data for savings account
	-- INSERT INTO savings_account (current_balance, interest_rate, account_id)
	-- VALUES (2000.00, 2.05, 1),
	-- (1000.00, 2.05, 2),
	-- (5000.00, 2.05, 3),
	-- (10000.00, 2.05, 4),
	-- (20000.00, 2.05, 5),
	-- (50000.00, 2.05, 6),
	-- (100000.00, 2.05, 7),
	-- (200000.00, 2.05, 8);
	
	-- -- sample data for credit account
	-- INSERT INTO credit_account (outstanding_balance, credit_limit, interest_rate, account_id)
	-- VALUES (55.43, 2000.00, 4.22, 1),
	-- (100.00, 1000.00, 4.22, 2),
	-- (200.00, 5000.00, 4.22, 3),
	-- (300.00, 10000.00, 4.22, 4),
	-- (400.00, 20000.00, 4.22, 5),
	-- (500.00, 50000.00, 4.22, 6),
	-- (600.00, 100000.00, 4.22, 7),
	-- (700.00, 200000.00, 4.22, 8);
	
	-- -- sample data for debit account
	-- INSERT INTO debit_account (current_balance, interest_rate, account_id)
	-- VALUES (3465.43, 0.05, 1),
	-- (1000.00, 0.05, 1),
	-- (5000.00, 0.05, 2),
	-- (10000.00, 0.05, 3),
	-- (20000.00, 0.05, 4),
	-- (50000.00, 0.05, 5),
	-- (100000.00, 0.05, 6),
	-- (200000.00, 0.05, 9);
	
	-- -- sample data for loan
	-- INSERT INTO loan (loan_end_date, loan_amount, loan_type, account_id)
	-- VALUES ('2024-01-01', 10000, 'vehicle', 8),
	-- ('2023-03-04', 300000, 'mortgage', 8),
	-- ('2035-03-03', 400000, 'mortgage', 1),
	-- ('2025-04-05', 25000, 'vehicle', 1),
	-- ('2026-05-05', 34000, 'vehicle', 1),
	-- ('2023-06-07', 500000, 'mortgage', 2),
	-- ('2026-04-04', 60000, 'vehicle', 2),
	-- ('2024-03-03', 70000, 'vehicle', 2),
	-- ('2023-02-02', 800000, 'mortgage', 3),
	-- ('2022-01-01', 90000, 'vehicle', 3),
	-- ('2021-01-01', 100000, 'vehicle', 3),
	-- ('2020-01-01', 110000, 'mortgage', 4),
	-- ('2020-01-01', 12000, 'vehicle', 4),
	-- ('2020-01-01', 13000, 'vehicle', 4),
	-- ('2020-01-01', 140000, 'mortgage', 5),
	-- ('2020-01-01', 15000, 'vehicle', 5),
	-- ('2020-01-01', 16000, 'vehicle', 5),
	-- ('2020-01-01', 170000, 'mortgage', 6),
	-- ('2020-01-01', 18000, 'vehicle', 6),
	-- ('2020-01-01', 19000, 'vehicle', 6),
	-- ('2020-01-01', 200000, 'mortgage', 7),
	-- ('2020-01-01', 21000, 'vehicle', 7),
	-- ('2020-01-01', 22000, 'vehicle', 7);
	
	-- CREATE SCHEMA IF NOT EXISTS staff;
	
	-- SET search_path TO public, staff;
2023-01-16 16:23:38.922 GMT [34153] LOG:  received fast shutdown request
2023-01-16 16:23:38.925 GMT [34153] LOG:  aborting any active transactions
2023-01-16 16:23:38.930 GMT [34153] LOG:  background worker "logical replication launcher" (PID 34160) exited with exit code 1
2023-01-16 16:23:38.931 GMT [34155] LOG:  shutting down
2023-01-16 16:23:38.970 GMT [34153] LOG:  database system is shut down
2023-01-16 16:23:40.104 GMT [35050] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 16:23:40.104 GMT [35050] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 16:23:40.106 GMT [35050] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 16:23:40.110 GMT [35051] LOG:  database system was shut down at 2023-01-16 16:23:39 GMT
2023-01-16 16:23:40.115 GMT [35050] LOG:  database system is ready to accept connections
2023-01-16 16:23:40.834 GMT [35079] ERROR:  syntax error at or near "RETURN" at character 1898
2023-01-16 16:23:40.834 GMT [35079] STATEMENT:  CREATE OR REPLACE FUNCTION bank.verify_transaction(pending_transaction_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE transaction_approved BOOLEAN;
	DECLARE account_type TEXT;
	BEGIN
	    -- check pending transaction exists
	    IF verify_transaction_type(pending_transaction_id) = TRUE THEN
	        RAISE NOTICE 'Transaction approved';
	        transaction_approved = TRUE;
	    ELSE
	        RAISE NOTICE 'Transaction not approved';
	        transaction_approved = FALSE;
	    END IF;
	    RETURN transaction_approved;
	END;
	
	CREATE SCHEMA IF NOT EXISTS staff;
	SET search_path TO public, staff, client;
	
	CREATE OR REPLACE VIEW staff.accounts AS
	    SELECT account.account_number, account.account_id, online_account.sort_code
	    FROM account
	    INNER JOIN online_account ON account.account_id = online_account.id;
	
	CREATE OR REPLACE VIEW staff.credit_account_applications AS
	    SELECT credit_account_application.id, credit_account_application.application_status, credit_account.account_number, credit_account.outstanding_balance, credit_account.credit_limit, credit_account.interest_rate
	    FROM credit_account_application
	    INNER JOIN credit_account ON credit_account_application.account_number = credit_account.account_number;
	
	CREATE OR REPLACE VIEW staff.loan_applications AS
	    SELECT loan_application.id, loan_application.application_status, loan.id as loan_id, loan.amount, loan.end_date, loan.loan_type, loan.interest_rate, loan.account_id
	    FROM loan_application
	    INNER JOIN loan ON loan_application.loan_id = loan.id;
	
	CREATE OR REPLACE VIEW staff.customers AS
	    SELECT online_account.id as account_id, customer.first_name, customer.last_name
	    FROM online_account
	    INNER JOIN customer ON customer.id = online_account.customer_id;
	
	CREATE OR REPLACE FUNCTION staff.view_outstanding_credit_applications()
	RETURNS TABLE(first_name TEXT, last_name TEXT, account_number INT) AS $$
	BEGIN
	    RETURN QUERY SELECT customers.first_name, customers.last_name, credit_account_applications.account_number
	    FROM staff.customers
	    INNER JOIN staff.accounts ON customers.account_id = accounts.account_id
	    INNER JOIN staff.credit_card_applications ON accounts.account_number = credit_card_applications.account_number
	    WHERE credit_card_applications.application_status = 'PENDING';
	END;
2023-01-16 16:23:40.834 GMT [35079] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION staff.view_outstanding_loan_applications()
	RETURNS TABLE(first_name TEXT, last_name TEXT, loan_id INT) AS $$" at character 1
2023-01-16 16:23:40.834 GMT [35079] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION staff.view_outstanding_loan_applications()
	RETURNS TABLE(first_name TEXT, last_name TEXT, loan_id INT) AS $$
	BEGIN
	    RETURN QUERY SELECT customers.first_name, customers.last_name, loan_applications.id
	    FROM staff.customers
	    INNER JOIN staff.loan_applications ON loan_applications.account_id = customers.account_id
	    WHERE loan_applications.application_status = 'PENDING';
2023-01-16 16:23:40.835 GMT [35079] WARNING:  there is no transaction in progress
2023-01-16 16:23:40.836 GMT [35079] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	
	CREATE SCHEMA IF NOT EXISTS client;
	SET search_path TO public, client;
	
	
	CREATE OR REPLACE VIEW client.accounts AS
	    SELECT account.account_number, account.account_id, online_account.sort_code FROM account
	    INNER JOIN online_account ON account.account_id = online_account.id;
	
	CREATE OR REPLACE VIEW client.debit_accounts AS
	    SELECT account.account_id, account.account_number, debit_account.current_balance, debit_account.interest_rate, debit_overdraft.overdraft_limit, debit_overdraft.overdraft_usage, debit_overdraft.interest_rate AS overdraft_interest_rate
	    FROM client.accounts
	    INNER JOIN debit_account ON account.account_number = debit_account.account_number
	    INNER JOIN debit_overdraft ON account.account_number = debit_overdraft.account_number;
	
	CREATE OR REPLACE VIEW client.debit_accounts_statements AS
	    SELECT debit_accounts.account_id, debit_accounts.account_number, debit_statement.id, debit_statement.starting_date, debit_statement.end_date, debit_statement.amount
	    FROM debit_accounts
	    INNER JOIN debit_statement ON debit_accounts.account_number = debit_statement.account_number;
	
	CREATE OR REPLACE VIEW client.debit_accounts_statement AS
	    SELECT debit_accounts_statements.account_id, debit_accounts_statements.account_number, debit_accounts_statements.id, debit_accounts_statements.starting_date, debit_accounts_statements.end_date, debit_accounts_statements.amount AS total_amount, transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date
	    FROM debit_accounts_statements
	    INNER JOIN transaction ON debit_accounts_statements.id = transaction.debit_statement_id;
	
	CREATE OR REPLACE VIEW client.credit_accounts AS
	    SELECT account.account_id, account.account_number, credit_account.outstanding_balance, credit_account.credit_limit, credit_account.interest_rate, credit_account_application.application_status
	    FROM client.accounts
	    INNER JOIN credit_account ON account.account_number = credit_account.account_number
	    INNER JOIN credit_account_application ON account.account_number = credit_account_application.account_number;
	
	CREATE OR REPLACE VIEW client.credit_accounts_statements AS
	    SELECT credit_accounts.account_id, credit_accounts.account_number, credit_statement.id, credit_statement.starting_date, credit_statement.end_date, credit_statement.amount, credit_statement.minimum_payment, credit_statement.minimum_payment_due_date
	    FROM credit_accounts
	    INNER JOIN credit_statement ON credit_accounts.account_number = credit_statement.account_number;
	
	CREATE OR REPLACE VIEW client.credit_accounts_statement AS
	    SELECT credit_accounts_statements.account_id, credit_accounts_statements.account_number, credit_accounts_statements.id, credit_accounts_statements.starting_date, credit_accounts_statements.end_date, credit_accounts_statements.amount AS total_amount, credit_accounts_statements.minimum_payment, credit_accounts_statements.minimum_payment_due_date, transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date
	    FROM credit_accounts_statements
	    INNER JOIN transaction ON credit_accounts_statements.id = transaction.credit_statement_id;
	
	CREATE OR REPLACE VIEW client.savings_accounts AS
	    SELECT account.account_id, account.account_number, savings_account.current_balance, savings_account.interest_rate
	    FROM client.accounts
	    INNER JOIN savings_account ON account.account_number = savings_account.account_number;
	
	CREATE OR REPLACE VIEW client.savings_accounts_statements AS
	    SELECT savings_accounts.account_id, savings_accounts.account_number, savings_statement.id, savings_statement.starting_date, savings_statement.end_date, savings_statement.amount
	    FROM savings_accounts
	    INNER JOIN savings_statement ON savings_accounts.account_number = savings_statement.account_number;
	
	CREATE OR REPLACE VIEW client.loans AS
	    SELECT loan.account_id, loan.id, loan.amount, loan.interest_rate, loan.loan_type, loan.end_date, loan_application.application_status
	    FROM loan
	    INNER JOIN loan_application ON loan.id = loan_application.loan_id;
	
	CREATE OR REPLACE VIEW client.loan_statements AS
	    SELECT loans.account_id, loans.id, loan_statement.id as statement_id, loan_statement.starting_date, loan_statement.amount
	    FROM client.loans
	    INNER JOIN loan_statement ON loans.id = loan_statement.loan_id;
	
	CREATE OR REPLACE VIEW client.loan_applications AS
	    SELECT loan.account_id, loan_application.id, loan_application.application_status, loan_application.loan_id
	    FROM loan_application
	    INNER JOIN loan ON loan_application.loan_id = loan.id;
	
	CREATE OR REPLACE FUNCTION client.update_personal_information(account_identifier INT, first_name TEXT, last_name TEXT, date_of_birth DATE, phone_number TEXT, email_address TEXT, address_street TEXT, address_city TEXT, address_county TEXT, address_postcode TEXT, account_id INT)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-16 16:23:40.836 GMT [35079] STATEMENT:  $$ LANGUAGE plpgsql;
	
	
	CREATE SCHEMA IF NOT EXISTS client;
	SET search_path TO public, client;
	
	
	CREATE OR REPLACE VIEW client.accounts AS
	    SELECT account.account_number, account.account_id, online_account.sort_code FROM account
	    INNER JOIN online_account ON account.account_id = online_account.id;
	
	CREATE OR REPLACE VIEW client.debit_accounts AS
	    SELECT account.account_id, account.account_number, debit_account.current_balance, debit_account.interest_rate, debit_overdraft.overdraft_limit, debit_overdraft.overdraft_usage, debit_overdraft.interest_rate AS overdraft_interest_rate
	    FROM client.accounts
	    INNER JOIN debit_account ON account.account_number = debit_account.account_number
	    INNER JOIN debit_overdraft ON account.account_number = debit_overdraft.account_number;
	
	CREATE OR REPLACE VIEW client.debit_accounts_statements AS
	    SELECT debit_accounts.account_id, debit_accounts.account_number, debit_statement.id, debit_statement.starting_date, debit_statement.end_date, debit_statement.amount
	    FROM debit_accounts
	    INNER JOIN debit_statement ON debit_accounts.account_number = debit_statement.account_number;
	
	CREATE OR REPLACE VIEW client.debit_accounts_statement AS
	    SELECT debit_accounts_statements.account_id, debit_accounts_statements.account_number, debit_accounts_statements.id, debit_accounts_statements.starting_date, debit_accounts_statements.end_date, debit_accounts_statements.amount AS total_amount, transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date
	    FROM debit_accounts_statements
	    INNER JOIN transaction ON debit_accounts_statements.id = transaction.debit_statement_id;
	
	CREATE OR REPLACE VIEW client.credit_accounts AS
	    SELECT account.account_id, account.account_number, credit_account.outstanding_balance, credit_account.credit_limit, credit_account.interest_rate, credit_account_application.application_status
	    FROM client.accounts
	    INNER JOIN credit_account ON account.account_number = credit_account.account_number
	    INNER JOIN credit_account_application ON account.account_number = credit_account_application.account_number;
	
	CREATE OR REPLACE VIEW client.credit_accounts_statements AS
	    SELECT credit_accounts.account_id, credit_accounts.account_number, credit_statement.id, credit_statement.starting_date, credit_statement.end_date, credit_statement.amount, credit_statement.minimum_payment, credit_statement.minimum_payment_due_date
	    FROM credit_accounts
	    INNER JOIN credit_statement ON credit_accounts.account_number = credit_statement.account_number;
	
	CREATE OR REPLACE VIEW client.credit_accounts_statement AS
	    SELECT credit_accounts_statements.account_id, credit_accounts_statements.account_number, credit_accounts_statements.id, credit_accounts_statements.starting_date, credit_accounts_statements.end_date, credit_accounts_statements.amount AS total_amount, credit_accounts_statements.minimum_payment, credit_accounts_statements.minimum_payment_due_date, transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date
	    FROM credit_accounts_statements
	    INNER JOIN transaction ON credit_accounts_statements.id = transaction.credit_statement_id;
	
	CREATE OR REPLACE VIEW client.savings_accounts AS
	    SELECT account.account_id, account.account_number, savings_account.current_balance, savings_account.interest_rate
	    FROM client.accounts
	    INNER JOIN savings_account ON account.account_number = savings_account.account_number;
	
	CREATE OR REPLACE VIEW client.savings_accounts_statements AS
	    SELECT savings_accounts.account_id, savings_accounts.account_number, savings_statement.id, savings_statement.starting_date, savings_statement.end_date, savings_statement.amount
	    FROM savings_accounts
	    INNER JOIN savings_statement ON savings_accounts.account_number = savings_statement.account_number;
	
	CREATE OR REPLACE VIEW client.loans AS
	    SELECT loan.account_id, loan.id, loan.amount, loan.interest_rate, loan.loan_type, loan.end_date, loan_application.application_status
	    FROM loan
	    INNER JOIN loan_application ON loan.id = loan_application.loan_id;
	
	CREATE OR REPLACE VIEW client.loan_statements AS
	    SELECT loans.account_id, loans.id, loan_statement.id as statement_id, loan_statement.starting_date, loan_statement.amount
	    FROM client.loans
	    INNER JOIN loan_statement ON loans.id = loan_statement.loan_id;
	
	CREATE OR REPLACE VIEW client.loan_applications AS
	    SELECT loan.account_id, loan_application.id, loan_application.application_status, loan_application.loan_id
	    FROM loan_application
	    INNER JOIN loan ON loan_application.loan_id = loan.id;
	
	CREATE OR REPLACE FUNCTION client.update_personal_information(account_identifier INT, first_name TEXT, last_name TEXT, date_of_birth DATE, phone_number TEXT, email_address TEXT, address_street TEXT, address_city TEXT, address_county TEXT, address_postcode TEXT, account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-16 16:23:40.837 GMT [35079] ERROR:  syntax error at or near "UPDATE" at character 11
2023-01-16 16:23:40.837 GMT [35079] STATEMENT:  BEGIN
	    UPDATE customer SET first_name = first_name, last_name = last_name, date_of_birth = date_of_birth, phone_number = phone_number, email_address = email_address, address_street = address_street, address_city = address_city, address_county = address_county, address_postcode = address_postcode
	    WHERE id = (SELECT customer_id FROM online_account WHERE id = account_identifier);
2023-01-16 16:23:40.838 GMT [35079] ERROR:  syntax error at or near "passed" at character 1
2023-01-16 16:23:40.838 GMT [35079] STATEMENT:  passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-16 16:23:40.839 GMT [35079] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:23:40.839 GMT [35079] STATEMENT:  RETURN passed;
2023-01-16 16:23:40.840 GMT [35079] WARNING:  there is no transaction in progress
2023-01-16 16:23:40.841 GMT [35079] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.update_password(account_identifier INT, new_password TEXT)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-16 16:23:40.841 GMT [35079] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.update_password(account_identifier INT, new_password TEXT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-16 16:23:40.842 GMT [35079] ERROR:  syntax error at or near "INT" at character 19
2023-01-16 16:23:40.842 GMT [35079] STATEMENT:  DECLARE ROW_COUNT INT;
2023-01-16 16:23:40.842 GMT [35079] ERROR:  syntax error at or near "UPDATE" at character 11
2023-01-16 16:23:40.842 GMT [35079] STATEMENT:  BEGIN
	    UPDATE user_login SET password = md5(new_password)
	    WHERE account_id = account_identifier;
2023-01-16 16:23:40.843 GMT [35079] ERROR:  syntax error at or near "GET" at character 1
2023-01-16 16:23:40.843 GMT [35079] STATEMENT:  GET DIAGNOSTICS ROW_COUNT = ROW_COUNT;
2023-01-16 16:23:40.844 GMT [35079] ERROR:  column "account_identifier" does not exist at character 76
2023-01-16 16:23:40.844 GMT [35079] STATEMENT:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Updated password', CURRENT_DATE);
2023-01-16 16:23:40.844 GMT [35079] ERROR:  syntax error at or near "passed" at character 1
2023-01-16 16:23:40.844 GMT [35079] STATEMENT:  passed = CASE WHEN ROW_COUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-16 16:23:40.844 GMT [35079] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:23:40.844 GMT [35079] STATEMENT:  RETURN passed;
2023-01-16 16:23:40.845 GMT [35079] WARNING:  there is no transaction in progress
2023-01-16 16:23:40.845 GMT [35079] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.update_email(account_identifier INT, new_email TEXT)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-16 16:23:40.845 GMT [35079] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.update_email(account_identifier INT, new_email TEXT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-16 16:23:40.845 GMT [35079] ERROR:  syntax error at or near "INT" at character 19
2023-01-16 16:23:40.845 GMT [35079] STATEMENT:  DECLARE ROW_COUNT INT;
2023-01-16 16:23:40.846 GMT [35079] ERROR:  syntax error at or near "UPDATE" at character 11
2023-01-16 16:23:40.846 GMT [35079] STATEMENT:  BEGIN
	    UPDATE user_login SET email = new_email
	    WHERE account_id = account_identifier;
2023-01-16 16:23:40.846 GMT [35079] ERROR:  syntax error at or near "GET" at character 1
2023-01-16 16:23:40.846 GMT [35079] STATEMENT:  GET DIAGNOSTICS ROW_COUNT = ROW_COUNT;
2023-01-16 16:23:40.847 GMT [35079] ERROR:  column "account_identifier" does not exist at character 76
2023-01-16 16:23:40.847 GMT [35079] STATEMENT:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Updated email', CURRENT_DATE);
2023-01-16 16:23:40.847 GMT [35079] ERROR:  syntax error at or near "passed" at character 1
2023-01-16 16:23:40.847 GMT [35079] STATEMENT:  passed = CASE WHEN ROW_COUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-16 16:23:40.847 GMT [35079] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:23:40.847 GMT [35079] STATEMENT:  RETURN passed;
2023-01-16 16:23:40.847 GMT [35079] WARNING:  there is no transaction in progress
2023-01-16 16:23:40.847 GMT [35079] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	
	CREATE OR REPLACE FUNCTION client.open_debit_account(account_id INT)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-16 16:23:40.847 GMT [35079] STATEMENT:  $$ LANGUAGE plpgsql;
	
	
	CREATE OR REPLACE FUNCTION client.open_debit_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-16 16:23:40.848 GMT [35079] ERROR:  syntax error at or near "INT" at character 30
2023-01-16 16:23:40.848 GMT [35079] STATEMENT:  DECLARE debit_account_number INT;
2023-01-16 16:23:40.848 GMT [35079] ERROR:  syntax error at or near "INT" at character 29
2023-01-16 16:23:40.848 GMT [35079] STATEMENT:  DECLARE next_account_number INT;
2023-01-16 16:23:40.848 GMT [35079] ERROR:  syntax error at or near "INT" at character 19
2023-01-16 16:23:40.848 GMT [35079] STATEMENT:  DECLARE ROW_COUNT INT;
2023-01-16 16:23:40.848 GMT [35079] ERROR:  syntax error at or near "SELECT" at character 11
2023-01-16 16:23:40.848 GMT [35079] STATEMENT:  BEGIN
	    SELECT get_next_account_number() INTO next_account_number;
2023-01-16 16:23:40.848 GMT [35079] ERROR:  syntax error at or near "INTO" at character 163
2023-01-16 16:23:40.848 GMT [35079] STATEMENT:  INSERT INTO debit_account (account_number, account_id, current_balance, interest_rate) VALUES (next_account_number ,account_id, 0, 0.01) RETURNING account_number INTO debit_account_number;
2023-01-16 16:23:40.848 GMT [35079] ERROR:  syntax error at or near "GET" at character 1
2023-01-16 16:23:40.848 GMT [35079] STATEMENT:  GET DIAGNOSTICS ROW_COUNT = ROW_COUNT;
2023-01-16 16:23:40.848 GMT [35079] ERROR:  column "debit_account_number" does not exist at character 189
2023-01-16 16:23:40.848 GMT [35079] STATEMENT:  INSERT INTO debit_statement (starting_date, end_date, amount, account_number) VALUES (date_trunc('month', now()::date), (date_trunc('month', now()::date)) + interval '1 month - 1 day', 0, debit_account_number);
2023-01-16 16:23:40.849 GMT [35079] ERROR:  column "debit_account_number" does not exist at character 115
2023-01-16 16:23:40.849 GMT [35079] STATEMENT:  INSERT INTO debit_overdraft (overdraft_usage, overdraft_limit, interest_rate, account_number) VALUES (0, 0, 0.01, debit_account_number);
2023-01-16 16:23:40.849 GMT [35079] ERROR:  column "account_id" does not exist at character 76
2023-01-16 16:23:40.849 GMT [35079] HINT:  There is a column named "account_id" in table "management_log", but it cannot be referenced from this part of the query.
2023-01-16 16:23:40.849 GMT [35079] STATEMENT:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened debit account', CURRENT_DATE);
2023-01-16 16:23:40.849 GMT [35079] ERROR:  syntax error at or near "passed" at character 1
2023-01-16 16:23:40.849 GMT [35079] STATEMENT:  passed = CASE WHEN ROW_COUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-16 16:23:40.849 GMT [35079] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:23:40.849 GMT [35079] STATEMENT:  RETURN passed;
2023-01-16 16:23:40.849 GMT [35079] WARNING:  there is no transaction in progress
2023-01-16 16:23:40.849 GMT [35079] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_credit_account(account_id INT)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-16 16:23:40.849 GMT [35079] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_credit_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-16 16:23:40.849 GMT [35079] ERROR:  syntax error at or near "INT" at character 31
2023-01-16 16:23:40.849 GMT [35079] STATEMENT:  DECLARE credit_account_number INT;
2023-01-16 16:23:40.850 GMT [35079] ERROR:  syntax error at or near "INT" at character 29
2023-01-16 16:23:40.850 GMT [35079] STATEMENT:  DECLARE next_account_number INT;
2023-01-16 16:23:40.850 GMT [35079] ERROR:  syntax error at or near "INT" at character 19
2023-01-16 16:23:40.850 GMT [35079] STATEMENT:  DECLARE ROW_COUNT INT;
2023-01-16 16:23:40.850 GMT [35079] ERROR:  syntax error at or near "SELECT" at character 11
2023-01-16 16:23:40.850 GMT [35079] STATEMENT:  BEGIN
	    SELECT get_next_account_number() INTO next_account_number;
2023-01-16 16:23:40.850 GMT [35079] ERROR:  syntax error at or near "INTO" at character 185
2023-01-16 16:23:40.850 GMT [35079] STATEMENT:  INSERT INTO credit_account (account_number, outstanding_balance, credit_limit, interest_rate, account_id) VALUES (next_account_number ,0, 0, 24.9, account_id) RETURNING account_number INTO credit_account_number;
2023-01-16 16:23:40.850 GMT [35079] ERROR:  syntax error at or near "GET" at character 1
2023-01-16 16:23:40.850 GMT [35079] STATEMENT:  GET DIAGNOSTICS ROW_COUNT = ROW_COUNT;
2023-01-16 16:23:40.850 GMT [35079] ERROR:  column "credit_account_number" does not exist at character 250
2023-01-16 16:23:40.850 GMT [35079] STATEMENT:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (date_trunc('month', now()::date), (date_trunc('month', now()::date)) + interval '1 month - 1 day', 0, 0, CURRENT_DATE, credit_account_number);
2023-01-16 16:23:40.851 GMT [35079] ERROR:  column "credit_account_number" does not exist at character 85
2023-01-16 16:23:40.851 GMT [35079] STATEMENT:  INSERT INTO credit_account_application (account_number, application_status) VALUES (credit_account_number, 'PENDING');
2023-01-16 16:23:40.851 GMT [35079] ERROR:  column "account_id" does not exist at character 76
2023-01-16 16:23:40.851 GMT [35079] HINT:  There is a column named "account_id" in table "management_log", but it cannot be referenced from this part of the query.
2023-01-16 16:23:40.851 GMT [35079] STATEMENT:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened credit account', CURRENT_DATE);
2023-01-16 16:23:40.851 GMT [35079] ERROR:  syntax error at or near "passed" at character 1
2023-01-16 16:23:40.851 GMT [35079] STATEMENT:  passed = CASE WHEN ROW_COUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-16 16:23:40.852 GMT [35079] ERROR:  syntax error at or near "return" at character 1
2023-01-16 16:23:40.852 GMT [35079] STATEMENT:  return PASSED;
2023-01-16 16:23:40.852 GMT [35079] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_savings_account(account_id INT)
	RETURNS BOOLEAN AS $$" at character 5
2023-01-16 16:23:40.852 GMT [35079] STATEMENT:  END
	$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_savings_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-16 16:23:40.852 GMT [35079] ERROR:  syntax error at or near "INT" at character 28
2023-01-16 16:23:40.852 GMT [35079] STATEMENT:  DECLARE savings_account_id INT;
2023-01-16 16:23:40.852 GMT [35079] ERROR:  syntax error at or near "INT" at character 29
2023-01-16 16:23:40.852 GMT [35079] STATEMENT:  DECLARE next_account_number INT;
2023-01-16 16:23:40.852 GMT [35079] ERROR:  syntax error at or near "INT" at character 19
2023-01-16 16:23:40.852 GMT [35079] STATEMENT:  DECLARE ROW_COUNT INT;
2023-01-16 16:23:40.852 GMT [35079] ERROR:  syntax error at or near "SELECT" at character 11
2023-01-16 16:23:40.852 GMT [35079] STATEMENT:  BEGIN
	    SELECT get_next_account_number() INTO next_account_number;
2023-01-16 16:23:40.853 GMT [35079] ERROR:  syntax error at or near "INTO" at character 165
2023-01-16 16:23:40.853 GMT [35079] STATEMENT:  INSERT INTO savings_account (account_number, account_id, current_balance, interest_rate) VALUES (next_account_number ,account_id, 0, 0.01) RETURNING account_number INTO savings_account_id;
2023-01-16 16:23:40.853 GMT [35079] ERROR:  syntax error at or near "GET" at character 1
2023-01-16 16:23:40.853 GMT [35079] STATEMENT:  GET DIAGNOSTICS ROW_COUNT = ROW_COUNT;
2023-01-16 16:23:40.853 GMT [35079] ERROR:  column "savings_account_id" does not exist at character 191
2023-01-16 16:23:40.853 GMT [35079] STATEMENT:  INSERT INTO savings_statement (starting_date, end_date, amount, account_number) VALUES (date_trunc('month', now()::date), (date_trunc('month', now()::date)) + interval '1 month - 1 day', 0, savings_account_id);
2023-01-16 16:23:40.854 GMT [35079] ERROR:  column "account_id" does not exist at character 76
2023-01-16 16:23:40.854 GMT [35079] HINT:  There is a column named "account_id" in table "management_log", but it cannot be referenced from this part of the query.
2023-01-16 16:23:40.854 GMT [35079] STATEMENT:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened savings account', CURRENT_DATE);
2023-01-16 16:23:40.854 GMT [35079] ERROR:  syntax error at or near "passed" at character 1
2023-01-16 16:23:40.854 GMT [35079] STATEMENT:  passed = CASE WHEN ROW_COUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-16 16:23:40.854 GMT [35079] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:23:40.854 GMT [35079] STATEMENT:  RETURN passed;
2023-01-16 16:23:40.854 GMT [35079] WARNING:  there is no transaction in progress
2023-01-16 16:23:40.854 GMT [35079] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_loan(account_id INT, loan_amount INT, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-16 16:23:40.854 GMT [35079] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_loan(account_id INT, loan_amount INT, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-16 16:23:40.855 GMT [35079] ERROR:  syntax error at or near "INT" at character 17
2023-01-16 16:23:40.855 GMT [35079] STATEMENT:  DECLARE loan_id INT;
2023-01-16 16:23:40.855 GMT [35079] ERROR:  syntax error at or near "INT" at character 19
2023-01-16 16:23:40.855 GMT [35079] STATEMENT:  DECLARE ROW_COUNT INT;
2023-01-16 16:23:40.855 GMT [35079] ERROR:  syntax error at or near "INSERT" at character 11
2023-01-16 16:23:40.855 GMT [35079] STATEMENT:  BEGIN
	    INSERT INTO loan (account_id, loan_amount, loan_end_date, loan_type, loan_interest_rate) VALUES (account_id, loan_amount, loan_end_date, loan_type, loan_interest_rate) RETURNING id INTO loan_id;
2023-01-16 16:23:40.855 GMT [35079] ERROR:  syntax error at or near "GET" at character 1
2023-01-16 16:23:40.855 GMT [35079] STATEMENT:  GET DIAGNOSTICS ROW_COUNT = ROW_COUNT;
2023-01-16 16:23:40.855 GMT [35079] ERROR:  column "end_date" of relation "loan_statement" does not exist at character 44
2023-01-16 16:23:40.855 GMT [35079] STATEMENT:  INSERT INTO loan_statement (starting_date, end_date, amount, account_id) VALUES (date_trunc('month', now()::date), (date_trunc('month', now()::date)) + interval '1 month - 1 day', 0, loan_id);
2023-01-16 16:23:40.856 GMT [35079] ERROR:  column "loan_id" does not exist at character 68
2023-01-16 16:23:40.856 GMT [35079] HINT:  There is a column named "loan_id" in table "loan_application", but it cannot be referenced from this part of the query.
2023-01-16 16:23:40.856 GMT [35079] STATEMENT:  INSERT INTO loan_application (loan_id, application_status) VALUES (loan_id, 'PENDING');
2023-01-16 16:23:40.856 GMT [35079] ERROR:  column "account_id" does not exist at character 76
2023-01-16 16:23:40.856 GMT [35079] HINT:  There is a column named "account_id" in table "management_log", but it cannot be referenced from this part of the query.
2023-01-16 16:23:40.856 GMT [35079] STATEMENT:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened loan', CURRENT_DATE);
2023-01-16 16:23:40.857 GMT [35079] ERROR:  syntax error at or near "passed" at character 1
2023-01-16 16:23:40.857 GMT [35079] STATEMENT:  passed = CASE WHEN ROW_COUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-16 16:23:40.857 GMT [35079] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:23:40.857 GMT [35079] STATEMENT:  RETURN passed;
2023-01-16 16:23:40.857 GMT [35079] WARNING:  there is no transaction in progress
2023-01-16 16:23:40.858 GMT [35079] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_personal_information(account_id INT)
	RETURNS TABLE (first_name TEXT, last_name TEXT, email TEXT, phone_number TEXT, address TEXT, city TEXT, country TEXT, postal_code TEXT) AS $$" at character 1
2023-01-16 16:23:40.858 GMT [35079] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_personal_information(account_id INT)
	RETURNS TABLE (first_name TEXT, last_name TEXT, email TEXT, phone_number TEXT, address TEXT, city TEXT, country TEXT, postal_code TEXT) AS $$
	BEGIN
	    RETURN QUERY
	        SELECT first_name, last_name, email, phone_number, address, city, country, postal_code
	            FROM customer
	        INNER JOIN account ON account.customer_id = customer.id
	        WHERE account.id = account_id;
2023-01-16 16:23:40.858 GMT [35079] WARNING:  there is no transaction in progress
2023-01-16 16:23:40.858 GMT [35079] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_accounts(account_identifier INT)
	RETURNS TABLE (account_number INT, account_id INT, balance NUMERIC, interest_rate NUMERIC, account_type TEXT) AS $$" at character 1
2023-01-16 16:23:40.858 GMT [35079] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_accounts(account_identifier INT)
	RETURNS TABLE (account_number INT, account_id INT, balance NUMERIC, interest_rate NUMERIC, account_type TEXT) AS $$
	BEGIN
	    RETURN QUERY
	        SELECT account.*, COALESCE(debit_accounts.current_balance, credit_accounts.outstanding_balance, savings_accounts.current_balance) AS balance,
	            COALESCE(debit_accounts.interest_rate, credit_accounts.interest_rate, savings_accounts.interest_rate) AS interest_rate,
	            get_account_type(account.account_number) AS account_type
	            FROM account
	            LEFT JOIN client.credit_accounts ON account.account_number = credit_accounts.account_number
	            LEFT JOIN client.debit_accounts ON account.account_number = debit_accounts.account_number
	            LEFT JOIN client.savings_accounts ON account.account_number = savings_accounts.account_number
	            WHERE account.account_id = account_identifier;
2023-01-16 16:23:40.858 GMT [35079] WARNING:  there is no transaction in progress
2023-01-16 16:23:40.858 GMT [35079] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, overdraft_limit NUMERIC, overdraft_usage NUMERIC, overdraft_interest_rate NUMERIC, external_account_number INT) AS $$" at character 1
2023-01-16 16:23:40.858 GMT [35079] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, overdraft_limit NUMERIC, overdraft_usage NUMERIC, overdraft_interest_rate NUMERIC, external_account_number INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed debit accounts', CURRENT_DATE);
2023-01-16 16:23:40.859 GMT [35079] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:23:40.859 GMT [35079] STATEMENT:  RETURN QUERY
	        SELECT * FROM client.debit_accounts WHERE account_id = account_id;
2023-01-16 16:23:40.859 GMT [35079] WARNING:  there is no transaction in progress
2023-01-16 16:23:40.859 GMT [35079] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_accounts(account_id INT)
	RETURNS TABLE (id INT, outstanding_balance NUMERIC, credit_limit NUMERIC, interest_rate NUMERIC, application_status TEXT) AS $$" at character 1
2023-01-16 16:23:40.859 GMT [35079] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_accounts(account_id INT)
	RETURNS TABLE (id INT, outstanding_balance NUMERIC, credit_limit NUMERIC, interest_rate NUMERIC, application_status TEXT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit accounts', CURRENT_DATE);
2023-01-16 16:23:40.859 GMT [35079] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:23:40.859 GMT [35079] STATEMENT:  RETURN QUERY
	        SELECT * FROM client.credit_accounts WHERE account_id = account_id;
2023-01-16 16:23:40.859 GMT [35079] WARNING:  there is no transaction in progress
2023-01-16 16:23:40.859 GMT [35079] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_savings_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, external_account_number INT) AS $$" at character 1
2023-01-16 16:23:40.859 GMT [35079] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_savings_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, external_account_number INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings accounts', CURRENT_DATE);
2023-01-16 16:23:40.859 GMT [35079] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:23:40.859 GMT [35079] STATEMENT:  RETURN QUERY
	        SELECT * FROM client.savings_accounts WHERE account_id = account_id;
2023-01-16 16:23:40.859 GMT [35079] WARNING:  there is no transaction in progress
2023-01-16 16:23:40.859 GMT [35079] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_loans(account_id INT)
	RETURNS TABLE (id INT, loan_amount NUMERIC, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC, application_status TEXT) AS $$" at character 1
2023-01-16 16:23:40.859 GMT [35079] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_loans(account_id INT)
	RETURNS TABLE (id INT, loan_amount NUMERIC, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC, application_status TEXT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed loans', CURRENT_DATE);
2023-01-16 16:23:40.860 GMT [35079] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:23:40.860 GMT [35079] STATEMENT:  RETURN QUERY
	        SELECT * FROM client.loans WHERE account_id = account_id;
2023-01-16 16:23:40.860 GMT [35079] WARNING:  there is no transaction in progress
2023-01-16 16:23:40.860 GMT [35079] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_savings_statements(account_identifier INT, orig_account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-16 16:23:40.860 GMT [35079] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_savings_statements(account_identifier INT, orig_account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Viewed savings statements', CURRENT_DATE);
2023-01-16 16:23:40.860 GMT [35079] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:23:40.860 GMT [35079] STATEMENT:  RETURN QUERY
	        SELECT savings_accounts_statements.starting_date, savings_accounts_statements.end_date, savings_accounts_statements.amount, savings_accounts_statements.account_id
	        FROM client.savings_accounts_statements
	        WHERE savings_accounts_statements.account_number = orig_account_number
	        AND savings_accounts_statements.account_id = account_identifier;
2023-01-16 16:23:40.860 GMT [35079] WARNING:  there is no transaction in progress
2023-01-16 16:23:40.860 GMT [35079] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_statements(account_identifier INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-16 16:23:40.860 GMT [35079] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_statements(account_identifier INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Viewed debit statements', CURRENT_DATE);
2023-01-16 16:23:40.860 GMT [35079] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:23:40.860 GMT [35079] STATEMENT:  RETURN QUERY
	        SELECT debit_accounts_statements.account_id, debit_accounts_statements.account_number, debit_accounts_statements.starting_date, debit_accounts_statements.end_date, debit_accounts_statements.amount
	        FROM client.debit_accounts_statements
	        WHERE debit_accounts_statements.account_number = account_number
	        AND debit_accounts_statements.account_id = account_identifier;
2023-01-16 16:23:40.860 GMT [35079] WARNING:  there is no transaction in progress
2023-01-16 16:23:40.861 GMT [35079] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_statements(account_identifier INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-16 16:23:40.861 GMT [35079] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_statements(account_identifier INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Viewed credit statements', CURRENT_DATE);
2023-01-16 16:23:40.861 GMT [35079] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:23:40.861 GMT [35079] STATEMENT:  RETURN QUERY
	        SELECT credit_accounts_statements.account_id, credit_accounts_statements.account_number, credit_accounts_statements.starting_date, credit_accounts_statements.end_date, credit_accounts_statements.amount
	        FROM client.credit_accounts_statements
	        WHERE credit_accounts_statements.account_number = account_number
	        AND credit_accounts_statements.account_id = account_identifier;
2023-01-16 16:23:40.861 GMT [35079] WARNING:  there is no transaction in progress
2023-01-16 16:23:40.861 GMT [35079] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_statement(account_identifier INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-16 16:23:40.861 GMT [35079] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_statement(account_identifier INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Viewed debit statement', CURRENT_DATE);
2023-01-16 16:23:40.861 GMT [35079] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:23:40.861 GMT [35079] STATEMENT:  RETURN QUERY
	        SELECT debit_accounts_statement.account_id, debit_accounts_statement.account_number, debit_accounts_statement.starting_date, debit_accounts_statement.end_date, debit_accounts_statement.amount
	        FROM client.debit_accounts_statement
	        WHERE debit_accounts_statement.account_id = account_identifier
	        AND debit_accounts_statement.account_number = account_number
	        AND debit_accounts_statement.statement_id = statement_id;
2023-01-16 16:23:40.862 GMT [35079] WARNING:  there is no transaction in progress
2023-01-16 16:23:40.862 GMT [35079] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_statement(account_identifier INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-16 16:23:40.862 GMT [35079] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_statement(account_identifier INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statement', CURRENT_DATE);
2023-01-16 16:23:40.862 GMT [35079] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:23:40.862 GMT [35079] STATEMENT:  RETURN QUERY
	        SELECT credit_accounts_statement.account_id, credit_accounts_statement.account_number, credit_accounts_statement.starting_date, credit_accounts_statement.end_date, credit_accounts_statement.amount
	        FROM client.credit_accounts_statement
	        WHERE credit_accounts_statement.account_id = account_identifier
	        AND credit_accounts_statement.account_number = account_number
	        AND credit_accounts_statement.statement_id = statement_id;
2023-01-16 16:23:40.862 GMT [35079] WARNING:  there is no transaction in progress
2023-01-16 16:23:40.862 GMT [35079] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_savings_statement(account_identifier INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-16 16:23:40.862 GMT [35079] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_savings_statement(account_identifier INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statement', CURRENT_DATE);
2023-01-16 16:23:40.862 GMT [35079] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:23:40.862 GMT [35079] STATEMENT:  RETURN QUERY
	        SELECT savings_accounts_statement.account_id, savings_accounts_statement.account_number, savings_accounts_statement.starting_date, savings_accounts_statement.end_date, savings_accounts_statement.amount
	        FROM client.savings_accounts_statement
	        WHERE savings_accounts_statement.account_id = account_identifier
	        AND savings_accounts_statement.account_number = account_number
	        AND savings_accounts_statement.statement_id = statement_id;
2023-01-16 16:23:40.862 GMT [35079] WARNING:  there is no transaction in progress
2023-01-16 16:23:40.862 GMT [35079] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.get_or_create_statement(account_identifier INT, orig_account_number INT)
	RETURNS INT AS $$" at character 1
2023-01-16 16:23:40.862 GMT [35079] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.get_or_create_statement(account_identifier INT, orig_account_number INT)
	RETURNS INT AS $$
	DECLARE statement_id INT;
2023-01-16 16:23:40.862 GMT [35079] ERROR:  syntax error at or near "CASE" at character 11
2023-01-16 16:23:40.862 GMT [35079] STATEMENT:  BEGIN
	    CASE WHEN EXISTS (SELECT * FROM client.debit_accounts WHERE account_id = account_identifier AND account_number = orig_account_number) THEN
	        IF EXISTS (SELECT * FROM debit_statement WHERE account_number = orig_account_number AND starting_date <= now()::date AND end_date >= now()::date) THEN
	            SELECT id INTO statement_id FROM debit_statement WHERE account_number = orig_account_number AND starting_date <= now()::date AND end_date >= now()::date;
2023-01-16 16:23:40.862 GMT [35079] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:23:40.862 GMT [35079] STATEMENT:  RETURN statement_id;
2023-01-16 16:23:40.863 GMT [35079] ERROR:  syntax error at or near "ELSE" at character 1
2023-01-16 16:23:40.863 GMT [35079] STATEMENT:  ELSE 
	            INSERT INTO debit_statement (account_number, starting_date, end_date, amount) VALUES (orig_account_number, date_trunc('month', now()::date), now()::date + 30, 0);
2023-01-16 16:23:40.863 GMT [35079] ERROR:  column "orig_account_number" does not exist at character 73
2023-01-16 16:23:40.863 GMT [35079] STATEMENT:  SELECT id INTO statement_id FROM debit_statement WHERE account_number = orig_account_number AND starting_date <= now()::date AND end_date >= now()::date;
2023-01-16 16:23:40.863 GMT [35079] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:23:40.863 GMT [35079] STATEMENT:  RETURN statement_id;
2023-01-16 16:23:40.863 GMT [35079] ERROR:  syntax error at or near "IF" at character 5
2023-01-16 16:23:40.863 GMT [35079] STATEMENT:  END IF;
2023-01-16 16:23:40.863 GMT [35079] ERROR:  syntax error at or near "WHEN" at character 1
2023-01-16 16:23:40.863 GMT [35079] STATEMENT:  WHEN EXISTS (SELECT * FROM client.credit_accounts WHERE account_id = account_identifier AND account_number = orig_account_number) THEN
	        IF EXISTS (SELECT * FROM credit_statement WHERE account_number = orig_account_number AND starting_date <= now()::date AND end_date >= now()::date) THEN
	            SELECT id INTO statement_id FROM credit_statement WHERE account_number = orig_account_number AND starting_date <= now()::date AND end_date >= now()::date;
2023-01-16 16:23:40.863 GMT [35079] ERROR:  syntax error at or near "return" at character 1
2023-01-16 16:23:40.863 GMT [35079] STATEMENT:  return statement_id;
2023-01-16 16:23:40.863 GMT [35079] ERROR:  syntax error at or near "ELSE" at character 1
2023-01-16 16:23:40.863 GMT [35079] STATEMENT:  ELSE 
	            INSERT INTO credit_statement (account_number, starting_date, end_date, amount) VALUES (orig_account_number, date_trunc('month', now()::date), now()::date + 30, 0);
2023-01-16 16:23:40.864 GMT [35079] ERROR:  column "orig_account_number" does not exist at character 74
2023-01-16 16:23:40.864 GMT [35079] STATEMENT:  SELECT id INTO statement_id FROM credit_statement WHERE account_number = orig_account_number AND starting_date <= now()::date AND end_date >= now()::date;
2023-01-16 16:23:40.864 GMT [35079] ERROR:  syntax error at or near "return" at character 1
2023-01-16 16:23:40.864 GMT [35079] STATEMENT:  return statement_id;
2023-01-16 16:23:40.864 GMT [35079] ERROR:  syntax error at or near "IF" at character 5
2023-01-16 16:23:40.864 GMT [35079] STATEMENT:  END IF;
2023-01-16 16:23:40.864 GMT [35079] ERROR:  syntax error at or near "WHEN" at character 1
2023-01-16 16:23:40.864 GMT [35079] STATEMENT:  WHEN EXISTS (SELECT * FROM client.savings_accounts WHERE account_id = account_identifier AND account_number = orig_account_number) THEN
	        IF EXISTS (SELECT * FROM savings_statement WHERE account_number = orig_account_number AND starting_date <= now()::date AND end_date >= now()::date) THEN
	            SELECT id INTO statement_id FROM savings_statement WHERE account_number = orig_account_number AND starting_date <= now()::date AND end_date >= now()::date;
2023-01-16 16:23:40.864 GMT [35079] ERROR:  syntax error at or near "return" at character 1
2023-01-16 16:23:40.864 GMT [35079] STATEMENT:  return statement_id;
2023-01-16 16:23:40.865 GMT [35079] ERROR:  syntax error at or near "ELSE" at character 1
2023-01-16 16:23:40.865 GMT [35079] STATEMENT:  ELSE
	            INSERT INTO savings_statement (account_number, starting_date, end_date, amount) VALUES (orig_account_number, date_trunc('month', now()::date), now()::date + 30, 0);
2023-01-16 16:23:40.865 GMT [35079] ERROR:  column "orig_account_number" does not exist at character 75
2023-01-16 16:23:40.865 GMT [35079] STATEMENT:  SELECT id INTO statement_id FROM savings_statement WHERE account_number = orig_account_number AND starting_date <= now()::date AND end_date >= now()::date;
2023-01-16 16:23:40.865 GMT [35079] ERROR:  syntax error at or near "return" at character 1
2023-01-16 16:23:40.865 GMT [35079] STATEMENT:  return statement_id;
2023-01-16 16:23:40.865 GMT [35079] ERROR:  syntax error at or near "IF" at character 5
2023-01-16 16:23:40.865 GMT [35079] STATEMENT:  END IF;
2023-01-16 16:23:40.865 GMT [35079] ERROR:  syntax error at or near "CASE" at character 5
2023-01-16 16:23:40.865 GMT [35079] STATEMENT:  END CASE;
2023-01-16 16:23:40.865 GMT [35079] WARNING:  there is no transaction in progress
2023-01-16 16:23:40.865 GMT [35079] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	
	CREATE OR REPLACE FUNCTION client.place_transaction_into_account(account_identifier INT, orig_account_number INT, transaction_account_number INT, transaction_amount NUMERIC)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-16 16:23:40.865 GMT [35079] STATEMENT:  $$ LANGUAGE plpgsql;
	
	
	CREATE OR REPLACE FUNCTION client.place_transaction_into_account(account_identifier INT, orig_account_number INT, transaction_account_number INT, transaction_amount NUMERIC)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-16 16:23:40.866 GMT [35079] ERROR:  syntax error at or near "INT" at character 22
2023-01-16 16:23:40.866 GMT [35079] STATEMENT:  DECLARE statement_id INT;
2023-01-16 16:23:40.866 GMT [35079] ERROR:  syntax error at or near "INSERT" at character 11
2023-01-16 16:23:40.866 GMT [35079] STATEMENT:  BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Placed transaction into account', CURRENT_DATE);
2023-01-16 16:23:40.866 GMT [35079] ERROR:  syntax error at or near "CASE" at character 1
2023-01-16 16:23:40.866 GMT [35079] STATEMENT:  CASE WHEN EXISTS (SELECT * FROM client.debit_accounts WHERE account_id = account_identifier AND account_number = orig_account_number) THEN
	        UPDATE debit_account SET current_balance = current_balance + transaction_amount WHERE debit_account.account_number = orig_account_number;
2023-01-16 16:23:40.866 GMT [35079] ERROR:  syntax error at or near "INTO" at character 87
2023-01-16 16:23:40.866 GMT [35079] STATEMENT:  SELECT * FROM client.get_or_create_statement(account_identifier, orig_account_number) INTO statement_id;
2023-01-16 16:23:40.866 GMT [35079] ERROR:  column "orig_account_number" does not exist at character 112
2023-01-16 16:23:40.866 GMT [35079] STATEMENT:  INSERT INTO transaction (origin_account_id, dest_account_id, amount, date, debit_statement_id)
	        VALUES (orig_account_number, transaction_account_number, transaction_amount, now(), statement_id);
2023-01-16 16:23:40.867 GMT [35079] ERROR:  syntax error at or near "WHEN" at character 1
2023-01-16 16:23:40.867 GMT [35079] STATEMENT:  WHEN EXISTS (SELECT * FROM client.credit_accounts WHERE account_id = account_identifier AND account_number = orig_account_number) THEN
	        UPDATE credit_account SET outstanding_balance = outstanding_balance + transaction_amount WHERE credit_account.account_number = orig_account_number;
2023-01-16 16:23:40.867 GMT [35079] ERROR:  syntax error at or near "INTO" at character 87
2023-01-16 16:23:40.867 GMT [35079] STATEMENT:  SELECT * FROM client.get_or_create_statement(account_identifier, orig_account_number) INTO statement_id;
2023-01-16 16:23:40.867 GMT [35079] ERROR:  column "orig_account_number" does not exist at character 113
2023-01-16 16:23:40.867 GMT [35079] STATEMENT:  INSERT INTO transaction (origin_account_id, dest_account_id, amount, date, credit_statement_id)
	        VALUES (orig_account_number, transaction_account_number, transaction_amount, now(), statement_id);
2023-01-16 16:23:40.867 GMT [35079] ERROR:  syntax error at or near "WHEN" at character 1
2023-01-16 16:23:40.867 GMT [35079] STATEMENT:  WHEN EXISTS (SELECT * FROM client.savings_accounts WHERE account_id = account_identifier AND account_number = orig_account_number) THEN
	        UPDATE savings_account SET current_balance = current_balance + transaction_amount WHERE savings_account.account_number = orig_account_number;
2023-01-16 16:23:40.868 GMT [35079] ERROR:  syntax error at or near "INTO" at character 87
2023-01-16 16:23:40.868 GMT [35079] STATEMENT:  SELECT * FROM client.get_or_create_statement(account_identifier, orig_account_number) INTO statement_id;
2023-01-16 16:23:40.868 GMT [35079] ERROR:  column "orig_account_number" does not exist at character 114
2023-01-16 16:23:40.868 GMT [35079] STATEMENT:  INSERT INTO transaction (origin_account_id, dest_account_id, amount, date, savings_statement_id)
	        VALUES (orig_account_number, transaction_account_number, transaction_amount, now(), statement_id);
2023-01-16 16:23:40.868 GMT [35079] ERROR:  syntax error at or near "ELSE" at character 1
2023-01-16 16:23:40.868 GMT [35079] STATEMENT:  ELSE
	        RAISE NOTICE 'Account does not exist';
2023-01-16 16:23:40.869 GMT [35079] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:23:40.869 GMT [35079] STATEMENT:  RETURN FALSE;
2023-01-16 16:23:40.869 GMT [35079] ERROR:  syntax error at or near "CASE" at character 5
2023-01-16 16:23:40.869 GMT [35079] STATEMENT:  END CASE;
2023-01-16 16:23:40.869 GMT [35079] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:23:40.869 GMT [35079] STATEMENT:  RETURN TRUE;
2023-01-16 16:23:40.869 GMT [35079] WARNING:  there is no transaction in progress
2023-01-16 16:23:40.869 GMT [35079] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	
	CREATE OR REPLACE FUNCTION client.initiate_transfer(account_identifier INT, orig_account_number INT, transfer_amount NUMERIC, transfer_account_number INT, transfer_account_sort_code INT)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-16 16:23:40.869 GMT [35079] STATEMENT:  $$ LANGUAGE plpgsql;
	
	
	CREATE OR REPLACE FUNCTION client.initiate_transfer(account_identifier INT, orig_account_number INT, transfer_amount NUMERIC, transfer_account_number INT, transfer_account_sort_code INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-16 16:23:40.869 GMT [35079] ERROR:  syntax error at or near "INT" at character 29
2023-01-16 16:23:40.869 GMT [35079] STATEMENT:  DECLARE internal_account_id INT;
2023-01-16 16:23:40.869 GMT [35079] ERROR:  syntax error at or near "INT" at character 19
2023-01-16 16:23:40.869 GMT [35079] STATEMENT:  DECLARE ROW_COUNT INT;
2023-01-16 16:23:40.869 GMT [35079] ERROR:  syntax error at or near "INSERT" at character 11
2023-01-16 16:23:40.869 GMT [35079] STATEMENT:  BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Initiated transfer', CURRENT_DATE);
2023-01-16 16:23:40.870 GMT [35079] ERROR:  relation "client.accounts" does not exist at character 49
2023-01-16 16:23:40.870 GMT [35079] STATEMENT:  SELECT account_id INTO internal_account_id FROM client.accounts
	    WHERE account_number = transfer_account_number AND sort_code = transfer_account_sort_code;
2023-01-16 16:23:40.870 GMT [35079] ERROR:  syntax error at or near "IF" at character 1
2023-01-16 16:23:40.870 GMT [35079] STATEMENT:  IF internal_account_id IS NULL THEN
	       RAISE NOTICE 'EXTERNAL TRANSFER TO LOCAL ACCOUNT %', transfer_account_number;
2023-01-16 16:23:40.870 GMT [35079] ERROR:  syntax error at or near "ELSE" at character 1
2023-01-16 16:23:40.870 GMT [35079] STATEMENT:  ELSE
	        RAISE NOTICE 'INTERNAL TRANSFER TO ACCOUNT %', transfer_account_number;
2023-01-16 16:23:40.870 GMT [35079] ERROR:  syntax error at or near "INTO" at character 136
2023-01-16 16:23:40.870 GMT [35079] STATEMENT:  SELECT * FROM client.place_transaction_into_account(account_identifier, orig_account_number, transfer_account_number, transfer_amount) INTO passed;
2023-01-16 16:23:40.870 GMT [35079] ERROR:  syntax error at or near "GET" at character 1
2023-01-16 16:23:40.870 GMT [35079] STATEMENT:  GET DIAGNOSTICS ROW_COUNT = ROW_COUNT;
2023-01-16 16:23:40.871 GMT [35079] ERROR:  syntax error at or near "passed" at character 1
2023-01-16 16:23:40.871 GMT [35079] STATEMENT:  passed = CASE WHEN ROW_COUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-16 16:23:40.871 GMT [35079] ERROR:  syntax error at or near "IF" at character 5
2023-01-16 16:23:40.871 GMT [35079] STATEMENT:  END IF;
2023-01-16 16:23:40.871 GMT [35079] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:23:40.871 GMT [35079] STATEMENT:  RETURN passed;
2023-01-16 16:23:40.871 GMT [35079] WARNING:  there is no transaction in progress
2023-01-16 16:23:40.871 GMT [35079] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE SCHEMA IF NOT EXISTS unauthenticated;
	SET search_path TO unauthenticated, public;
	
	-- Allows an unauthenticated user to match hashes to hashes of personal information contained in the customer table
	CREATE OR REPLACE VIEW unauthenticated.unauthenticated_personal_information AS
	SELECT id, md5(first_name) AS first_name, md5(last_name) AS last_name, md5(email_address) AS email_address
	FROM customer;
	
	-- Allows an unauthenticated user to view hashes of usernames contained in the user_login table
	CREATE OR REPLACE VIEW unauthenticated.unauthenticated_login AS
	SELECT md5(username) AS username FROM user_login;
	
	-- Allows a user to insert personal information into the online banking system
	CREATE OR REPLACE FUNCTION unauthenticated.create_personal_info(first_name TEXT, last_name TEXT, date_of_birth DATE, phone_number TEXT, email_address TEXT, address_street TEXT, address_city TEXT, address_county TEXT, address_postcode TEXT)
	RETURNS INT AS $$" at character 1
2023-01-16 16:23:40.871 GMT [35079] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE SCHEMA IF NOT EXISTS unauthenticated;
	SET search_path TO unauthenticated, public;
	
	-- Allows an unauthenticated user to match hashes to hashes of personal information contained in the customer table
	CREATE OR REPLACE VIEW unauthenticated.unauthenticated_personal_information AS
	SELECT id, md5(first_name) AS first_name, md5(last_name) AS last_name, md5(email_address) AS email_address
	FROM customer;
	
	-- Allows an unauthenticated user to view hashes of usernames contained in the user_login table
	CREATE OR REPLACE VIEW unauthenticated.unauthenticated_login AS
	SELECT md5(username) AS username FROM user_login;
	
	-- Allows a user to insert personal information into the online banking system
	CREATE OR REPLACE FUNCTION unauthenticated.create_personal_info(first_name TEXT, last_name TEXT, date_of_birth DATE, phone_number TEXT, email_address TEXT, address_street TEXT, address_city TEXT, address_county TEXT, address_postcode TEXT)
	RETURNS INT AS $$
	DECLARE customer_id INT;
2023-01-16 16:23:40.871 GMT [35079] ERROR:  syntax error at or near "IF" at character 11
2023-01-16 16:23:40.871 GMT [35079] STATEMENT:  BEGIN
	    IF NOT EXISTS (SELECT FROM unauthenticated.unauthenticated_personal_information WHERE md5(first_name) = first_name AND md5(last_name) = last_name AND md5(email_address) = email_address) THEN
	        INSERT INTO customer
	        VALUES (first_name, last_name, date_of_birth, phone_number, email_address, address_street, address_city, address_county, address_postcode)
	        RETURNING id INTO customer_id;
2023-01-16 16:23:40.875 GMT [35079] ERROR:  syntax error at or near "ELSE" at character 1
2023-01-16 16:23:40.875 GMT [35079] STATEMENT:  ELSE
	        RAISE NOTICE 'CUSTOMER INFORMATION ALREADY PRESENT';
2023-01-16 16:23:40.876 GMT [35079] ERROR:  relation "unauthenticated.unauthenticated_personal_information" does not exist at character 33
2023-01-16 16:23:40.876 GMT [35079] STATEMENT:  SELECT id INTO customer_id FROM unauthenticated.unauthenticated_personal_information WHERE md5(first_name) = first_name AND md5(last_name) = last_name AND md5(email_address) = email_address;
2023-01-16 16:23:40.877 GMT [35079] ERROR:  syntax error at or near "IF" at character 5
2023-01-16 16:23:40.877 GMT [35079] STATEMENT:  END IF;
2023-01-16 16:23:40.879 GMT [35079] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:23:40.879 GMT [35079] STATEMENT:  RETURN customer_id;
2023-01-16 16:23:40.879 GMT [35079] WARNING:  there is no transaction in progress
2023-01-16 16:23:40.880 GMT [35079] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	-- Allows an unauthenticated user to create an online account
	CREATE OR REPLACE FUNCTION unauthenticated.create_online_account_details(customer_id INT, first_name TEXT, last_name TEXT, email_address TEXT, question_choice_ids INT[], question_answers TEXT[])
	RETURNS INT AS $$" at character 1
2023-01-16 16:23:40.880 GMT [35079] STATEMENT:  $$ LANGUAGE plpgsql;
	
	-- Allows an unauthenticated user to create an online account
	CREATE OR REPLACE FUNCTION unauthenticated.create_online_account_details(customer_id INT, first_name TEXT, last_name TEXT, email_address TEXT, question_choice_ids INT[], question_answers TEXT[])
	RETURNS INT AS $$
	DECLARE account_id INT;
2023-01-16 16:23:40.880 GMT [35079] ERROR:  syntax error at or near "INT" at character 27
2023-01-16 16:23:40.880 GMT [35079] STATEMENT:  DECLARE online_account_id INT;
2023-01-16 16:23:40.881 GMT [35079] ERROR:  syntax error at or near "INT" at character 28
2023-01-16 16:23:40.881 GMT [35079] STATEMENT:  DECLARE question_choice_id INT;
2023-01-16 16:23:40.881 GMT [35079] ERROR:  syntax error at or near "IF" at character 11
2023-01-16 16:23:40.881 GMT [35079] STATEMENT:  BEGIN
	    IF NOT EXISTS (SELECT FROM user_login WHERE username = username) THEN
	        INSERT INTO online_account (date_opened, sort_code, customer_id)
	        VALUES ((SELECT now()), (SELECT num FROM GENERATE_SERIES(1, 6) AS s(num) LIMIT 1), customer_id)
	        RETURNING id INTO account_id;
2023-01-16 16:23:40.881 GMT [35079] ERROR:  syntax error at or near "INTO" at character 131
2023-01-16 16:23:40.881 GMT [35079] STATEMENT:  INSERT INTO user_login (account_id, username, password)
	        VALUES (account_id, username, md5(password))
	        RETURNING id INTO online_account_id;
2023-01-16 16:23:40.881 GMT [35079] ERROR:  syntax error at or near "FOR" at character 1
2023-01-16 16:23:40.881 GMT [35079] STATEMENT:  FOR i IN 0..2 LOOP
	            
	            INSERT INTO user_login_security_question (question_choice_id, login_id)
	            VALUES (question_choice_ids[i], online_account_id)
	            RETURNING id INTO question_choice_id;
2023-01-16 16:23:40.881 GMT [35079] ERROR:  column "answer" of relation "security_question_answer" does not exist at character 39
2023-01-16 16:23:40.881 GMT [35079] STATEMENT:  INSERT INTO security_question_answer (answer, question_id)
	            VALUES (question_answers[i], question_choice_id);
2023-01-16 16:23:40.881 GMT [35079] ERROR:  syntax error at or near "LOOP" at character 5
2023-01-16 16:23:40.881 GMT [35079] STATEMENT:  END LOOP;
2023-01-16 16:23:40.882 GMT [35079] ERROR:  column "account_id" does not exist at character 117
2023-01-16 16:23:40.882 GMT [35079] HINT:  There is a column named "account_id" in table "authentication_log", but it cannot be referenced from this part of the query.
2023-01-16 16:23:40.882 GMT [35079] STATEMENT:  INSERT INTO authentication_log (log_description, log_date, account_id) VALUES ('New online account created', now(), account_id);
2023-01-16 16:23:40.882 GMT [35079] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:23:40.882 GMT [35079] STATEMENT:  RETURN account_id;
2023-01-16 16:23:40.882 GMT [35079] ERROR:  syntax error at or near "ELSE" at character 1
2023-01-16 16:23:40.882 GMT [35079] STATEMENT:  ELSE
	        RAISE NOTICE 'USERNAME ALREADY TAKEN';
2023-01-16 16:23:40.882 GMT [35079] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:23:40.882 GMT [35079] STATEMENT:  RETURN NULL;
2023-01-16 16:23:40.883 GMT [35079] ERROR:  syntax error at or near "IF" at character 5
2023-01-16 16:23:40.883 GMT [35079] STATEMENT:  END IF;
2023-01-16 16:23:40.883 GMT [35079] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:23:40.883 GMT [35079] STATEMENT:  RETURN success;
2023-01-16 16:23:40.884 GMT [35079] WARNING:  there is no transaction in progress
2023-01-16 16:23:40.885 GMT [35079] ERROR:  unterminated dollar-quoted string at or near "$$ LANGUAGE plpgsql;
	
	
	
	
	
	-- sample data for customers
	INSERT INTO customer (first_name, last_name, date_of_birth, phone_number, email_address, address_street, address_city, address_county, address_postcode)
	VALUES ('John', 'Smith', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('Jane', 'Doe', '1990-01-01', '01234567890', 'test@gmail.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Bloggs', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('John', 'Bloggs', '1990-01-01', '01234567890', 'hello@yahoo.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('Jane', 'Bloggs', '1990-01-01', '01234567890', 'test@outlook.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Doe', '1990-01-01', '01234567890', 'hello@outlook.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('John', 'Doe', '1990-01-01', '01234567890', 'mybankemail@icloud.com', '1 My Bank Street', 'My Bank City', 'My Bank County', 'MB1 1NK'),
	('Jane', 'Smith', '1990-01-01', '01234567890', 'bankemail@outlook.com', '1 Bank Street', 'Bank City', 'Bank County', 'BA1 1NK'),
	('Joe', 'Smith', '1990-01-01', '01234567890', 'example@icloud.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX');
	
	-- sample data for online account
	INSERT INTO online_account (date_opened, sort_code, customer_id)
	VALUES ('2020-01-01', '123456', 1),
	('2019-01-01', '126485', 2),
	('2018-01-01', '128475', 3),
	('2017-01-01', '129476', 4),
	('2016-01-01', '120386', 5),
	('2017-02-03', '127385', 6),
	('2018-02-04', '128256', 7),
	('2020-01-01', '129386', 8),
	('2020-01-01', '120386', 9);
	
	-- sample data for user login
	INSERT INTO user_login (account_id, username, password)
	VALUES (1, 'johnsmith', 'b29af57c2b3bba21e9df0cece40952c6'),
	(2, 'janedoe', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(3, 'joebloggs', 'b29af57c2b3bba21e9df0cece40952c6'),
	(4, 'johnbloggs', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(5, 'janebloggs', 'b29af57c2b3bba21e9df0cece40952c6'),
	(6, 'joedoe', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(7, 'johndoe', 'b29af57c2b3bba21e9df0cece40952c6'),
	(8, 'joesmith', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(9, 'janesmith', 'b29af57c2b3bba21e9df0cece40952c6');
	
	-- sample data for security question option
	INSERT INTO security_question_option (question_description)
	VALUES ('What is your favourite colour?'),
	('What is your favourite food?'),
	('What is your favourite animal?'),
	('What is your favourite sport?'),
	('What is your favourite movie?'),
	('What is your favourite book?'),
	('What is your favourite song?'),
	('What is your favourite band?'),
	('What is your favourite game?'),
	('What is your favourite TV show?');
	
	--sample data for user login security question
	INSERT INTO user_login_security_question (question_choice_id, login_id)
	VALUES (1, 1),
	(2, 2),
	(3, 3),
	(4, 4),
	(5, 5),
	(6, 6),
	(7, 7),
	(8, 8),
	(9, 9);
	
	-- sample data for security question answer
	INSERT INTO security_question_answer (question_answer, question_id)
	VALUES ('Red', 1),
	('Blue', 2),
	('Green', 3),
	('Yellow', 4),
	('Orange', 5),
	('Purple', 6),
	('Pink', 7),
	('Black', 8),
	('White', 9);
	
	SELECT * FROM savings_statement;
	
	
	SELECT * FROM client.open_savings_account(1);
	
	--sample data for savings account
	SELECT * FROM client.open_savings_account(1);
	SELECT * FROM client.open_savings_account(2);
	SELECT * FROM client.open_savings_account(3);
	SELECT * FROM client.open_savings_account(4);
	
	SELECT * FROM client.open_debit_account(1);
	SELECT * FROM client.open_debit_account(2);
	SELECT * FROM client.open_debit_account(3);
	SELECT * FROM client.open_debit_account(4);
	
	SELECT * FROM client.open_credit_account(1);
	SELECT * FROM client.open_credit_account(2);
	SELECT * FROM client.open_credit_account(3);
	SELECT * FROM client.open_credit_account(4);
	
	SELECT * FROM client.view_accounts(1);
	
	SELECT * FROM client.initiate_transfer(1, 10000000, 100.00, 10000001, 123456);
	
	SELECT * FROM client.view_accounts(1);
	
	
	
	SELECT * FROM client.view_savings_statements(1, 10000000);
	
	SELECT * FROM savings_statement;
	
	-- -- sample data for savings account
	-- INSERT INTO savings_account (current_balance, interest_rate, account_id)
	-- VALUES (2000.00, 2.05, 1),
	-- (1000.00, 2.05, 2),
	-- (5000.00, 2.05, 3),
	-- (10000.00, 2.05, 4),
	-- (20000.00, 2.05, 5),
	-- (50000.00, 2.05, 6),
	-- (100000.00, 2.05, 7),
	-- (200000.00, 2.05, 8);
	
	-- -- sample data for credit account
	-- INSERT INTO credit_account (outstanding_balance, credit_limit, interest_rate, account_id)
	-- VALUES (55.43, 2000.00, 4.22, 1),
	-- (100.00, 1000.00, 4.22, 2),
	-- (200.00, 5000.00, 4.22, 3),
	-- (300.00, 10000.00, 4.22, 4),
	-- (400.00, 20000.00, 4.22, 5),
	-- (500.00, 50000.00, 4.22, 6),
	-- (600.00, 100000.00, 4.22, 7),
	-- (700.00, 200000.00, 4.22, 8);
	
	-- -- sample data for debit account
	-- INSERT INTO debit_account (current_balance, interest_rate, account_id)
	-- VALUES (3465.43, 0.05, 1),
	-- (1000.00, 0.05, 1),
	-- (5000.00, 0.05, 2),
	-- (10000.00, 0.05, 3),
	-- (20000.00, 0.05, 4),
	-- (50000.00, 0.05, 5),
	-- (100000.00, 0.05, 6),
	-- (200000.00, 0.05, 9);
	
	-- -- sample data for loan
	-- INSERT INTO loan (loan_end_date, loan_amount, loan_type, account_id)
	-- VALUES ('2024-01-01', 10000, 'vehicle', 8),
	-- ('2023-03-04', 300000, 'mortgage', 8),
	-- ('2035-03-03', 400000, 'mortgage', 1),
	-- ('2025-04-05', 25000, 'vehicle', 1),
	-- ('2026-05-05', 34000, 'vehicle', 1),
	-- ('2023-06-07', 500000, 'mortgage', 2),
	-- ('2026-04-04', 60000, 'vehicle', 2),
	-- ('2024-03-03', 70000, 'vehicle', 2),
	-- ('2023-02-02', 800000, 'mortgage', 3),
	-- ('2022-01-01', 90000, 'vehicle', 3),
	-- ('2021-01-01', 100000, 'vehicle', 3),
	-- ('2020-01-01', 110000, 'mortgage', 4),
	-- ('2020-01-01', 12000, 'vehicle', 4),
	-- ('2020-01-01', 13000, 'vehicle', 4),
	-- ('2020-01-01', 140000, 'mortgage', 5),
	-- ('2020-01-01', 15000, 'vehicle', 5),
	-- ('2020-01-01', 16000, 'vehicle', 5),
	-- ('2020-01-01', 170000, 'mortgage', 6),
	-- ('2020-01-01', 18000, 'vehicle', 6),
	-- ('2020-01-01', 19000, 'vehicle', 6),
	-- ('2020-01-01', 200000, 'mortgage', 7),
	-- ('2020-01-01', 21000, 'vehicle', 7),
	-- ('2020-01-01', 22000, 'vehicle', 7);
	
	-- CREATE SCHEMA IF NOT EXISTS staff;
	
	-- SET search_path TO public, staff;" at character 1
2023-01-16 16:23:40.885 GMT [35079] STATEMENT:  $$ LANGUAGE plpgsql;
	
	
	
	
	
	-- sample data for customers
	INSERT INTO customer (first_name, last_name, date_of_birth, phone_number, email_address, address_street, address_city, address_county, address_postcode)
	VALUES ('John', 'Smith', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('Jane', 'Doe', '1990-01-01', '01234567890', 'test@gmail.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Bloggs', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('John', 'Bloggs', '1990-01-01', '01234567890', 'hello@yahoo.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('Jane', 'Bloggs', '1990-01-01', '01234567890', 'test@outlook.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Doe', '1990-01-01', '01234567890', 'hello@outlook.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('John', 'Doe', '1990-01-01', '01234567890', 'mybankemail@icloud.com', '1 My Bank Street', 'My Bank City', 'My Bank County', 'MB1 1NK'),
	('Jane', 'Smith', '1990-01-01', '01234567890', 'bankemail@outlook.com', '1 Bank Street', 'Bank City', 'Bank County', 'BA1 1NK'),
	('Joe', 'Smith', '1990-01-01', '01234567890', 'example@icloud.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX');
	
	-- sample data for online account
	INSERT INTO online_account (date_opened, sort_code, customer_id)
	VALUES ('2020-01-01', '123456', 1),
	('2019-01-01', '126485', 2),
	('2018-01-01', '128475', 3),
	('2017-01-01', '129476', 4),
	('2016-01-01', '120386', 5),
	('2017-02-03', '127385', 6),
	('2018-02-04', '128256', 7),
	('2020-01-01', '129386', 8),
	('2020-01-01', '120386', 9);
	
	-- sample data for user login
	INSERT INTO user_login (account_id, username, password)
	VALUES (1, 'johnsmith', 'b29af57c2b3bba21e9df0cece40952c6'),
	(2, 'janedoe', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(3, 'joebloggs', 'b29af57c2b3bba21e9df0cece40952c6'),
	(4, 'johnbloggs', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(5, 'janebloggs', 'b29af57c2b3bba21e9df0cece40952c6'),
	(6, 'joedoe', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(7, 'johndoe', 'b29af57c2b3bba21e9df0cece40952c6'),
	(8, 'joesmith', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(9, 'janesmith', 'b29af57c2b3bba21e9df0cece40952c6');
	
	-- sample data for security question option
	INSERT INTO security_question_option (question_description)
	VALUES ('What is your favourite colour?'),
	('What is your favourite food?'),
	('What is your favourite animal?'),
	('What is your favourite sport?'),
	('What is your favourite movie?'),
	('What is your favourite book?'),
	('What is your favourite song?'),
	('What is your favourite band?'),
	('What is your favourite game?'),
	('What is your favourite TV show?');
	
	--sample data for user login security question
	INSERT INTO user_login_security_question (question_choice_id, login_id)
	VALUES (1, 1),
	(2, 2),
	(3, 3),
	(4, 4),
	(5, 5),
	(6, 6),
	(7, 7),
	(8, 8),
	(9, 9);
	
	-- sample data for security question answer
	INSERT INTO security_question_answer (question_answer, question_id)
	VALUES ('Red', 1),
	('Blue', 2),
	('Green', 3),
	('Yellow', 4),
	('Orange', 5),
	('Purple', 6),
	('Pink', 7),
	('Black', 8),
	('White', 9);
	
	SELECT * FROM savings_statement;
	
	
	SELECT * FROM client.open_savings_account(1);
	
	--sample data for savings account
	SELECT * FROM client.open_savings_account(1);
	SELECT * FROM client.open_savings_account(2);
	SELECT * FROM client.open_savings_account(3);
	SELECT * FROM client.open_savings_account(4);
	
	SELECT * FROM client.open_debit_account(1);
	SELECT * FROM client.open_debit_account(2);
	SELECT * FROM client.open_debit_account(3);
	SELECT * FROM client.open_debit_account(4);
	
	SELECT * FROM client.open_credit_account(1);
	SELECT * FROM client.open_credit_account(2);
	SELECT * FROM client.open_credit_account(3);
	SELECT * FROM client.open_credit_account(4);
	
	SELECT * FROM client.view_accounts(1);
	
	SELECT * FROM client.initiate_transfer(1, 10000000, 100.00, 10000001, 123456);
	
	SELECT * FROM client.view_accounts(1);
	
	
	
	SELECT * FROM client.view_savings_statements(1, 10000000);
	
	SELECT * FROM savings_statement;
	
	-- -- sample data for savings account
	-- INSERT INTO savings_account (current_balance, interest_rate, account_id)
	-- VALUES (2000.00, 2.05, 1),
	-- (1000.00, 2.05, 2),
	-- (5000.00, 2.05, 3),
	-- (10000.00, 2.05, 4),
	-- (20000.00, 2.05, 5),
	-- (50000.00, 2.05, 6),
	-- (100000.00, 2.05, 7),
	-- (200000.00, 2.05, 8);
	
	-- -- sample data for credit account
	-- INSERT INTO credit_account (outstanding_balance, credit_limit, interest_rate, account_id)
	-- VALUES (55.43, 2000.00, 4.22, 1),
	-- (100.00, 1000.00, 4.22, 2),
	-- (200.00, 5000.00, 4.22, 3),
	-- (300.00, 10000.00, 4.22, 4),
	-- (400.00, 20000.00, 4.22, 5),
	-- (500.00, 50000.00, 4.22, 6),
	-- (600.00, 100000.00, 4.22, 7),
	-- (700.00, 200000.00, 4.22, 8);
	
	-- -- sample data for debit account
	-- INSERT INTO debit_account (current_balance, interest_rate, account_id)
	-- VALUES (3465.43, 0.05, 1),
	-- (1000.00, 0.05, 1),
	-- (5000.00, 0.05, 2),
	-- (10000.00, 0.05, 3),
	-- (20000.00, 0.05, 4),
	-- (50000.00, 0.05, 5),
	-- (100000.00, 0.05, 6),
	-- (200000.00, 0.05, 9);
	
	-- -- sample data for loan
	-- INSERT INTO loan (loan_end_date, loan_amount, loan_type, account_id)
	-- VALUES ('2024-01-01', 10000, 'vehicle', 8),
	-- ('2023-03-04', 300000, 'mortgage', 8),
	-- ('2035-03-03', 400000, 'mortgage', 1),
	-- ('2025-04-05', 25000, 'vehicle', 1),
	-- ('2026-05-05', 34000, 'vehicle', 1),
	-- ('2023-06-07', 500000, 'mortgage', 2),
	-- ('2026-04-04', 60000, 'vehicle', 2),
	-- ('2024-03-03', 70000, 'vehicle', 2),
	-- ('2023-02-02', 800000, 'mortgage', 3),
	-- ('2022-01-01', 90000, 'vehicle', 3),
	-- ('2021-01-01', 100000, 'vehicle', 3),
	-- ('2020-01-01', 110000, 'mortgage', 4),
	-- ('2020-01-01', 12000, 'vehicle', 4),
	-- ('2020-01-01', 13000, 'vehicle', 4),
	-- ('2020-01-01', 140000, 'mortgage', 5),
	-- ('2020-01-01', 15000, 'vehicle', 5),
	-- ('2020-01-01', 16000, 'vehicle', 5),
	-- ('2020-01-01', 170000, 'mortgage', 6),
	-- ('2020-01-01', 18000, 'vehicle', 6),
	-- ('2020-01-01', 19000, 'vehicle', 6),
	-- ('2020-01-01', 200000, 'mortgage', 7),
	-- ('2020-01-01', 21000, 'vehicle', 7),
	-- ('2020-01-01', 22000, 'vehicle', 7);
	
	-- CREATE SCHEMA IF NOT EXISTS staff;
	
	-- SET search_path TO public, staff;
2023-01-16 16:52:30.806 GMT [35050] LOG:  received fast shutdown request
2023-01-16 16:52:30.808 GMT [35050] LOG:  aborting any active transactions
2023-01-16 16:52:30.814 GMT [35050] LOG:  background worker "logical replication launcher" (PID 35057) exited with exit code 1
2023-01-16 16:52:30.814 GMT [35052] LOG:  shutting down
2023-01-16 16:52:30.833 GMT [35050] LOG:  database system is shut down
2023-01-16 16:52:34.771 GMT [39837] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 16:52:34.772 GMT [39837] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 16:52:34.773 GMT [39837] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 16:52:34.778 GMT [39838] LOG:  database system was shut down at 2023-01-16 16:52:34 GMT
2023-01-16 16:52:34.788 GMT [39837] LOG:  database system is ready to accept connections
2023-01-16 16:52:35.579 GMT [39866] ERROR:  syntax error at or near "RETURN" at character 1898
2023-01-16 16:52:35.579 GMT [39866] STATEMENT:  CREATE OR REPLACE FUNCTION bank.verify_transaction(pending_transaction_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE transaction_approved BOOLEAN;
	DECLARE account_type TEXT;
	BEGIN
	    -- check pending transaction exists
	    IF verify_transaction_type(pending_transaction_id) = TRUE THEN
	        RAISE NOTICE 'Transaction approved';
	        transaction_approved = TRUE;
	    ELSE
	        RAISE NOTICE 'Transaction not approved';
	        transaction_approved = FALSE;
	    END IF;
	    RETURN transaction_approved;
	END;
	
	CREATE SCHEMA IF NOT EXISTS staff;
	SET search_path TO public, staff, client;
	
	CREATE OR REPLACE VIEW staff.accounts AS
	    SELECT account.account_number, account.account_id, online_account.sort_code
	    FROM account
	    INNER JOIN online_account ON account.account_id = online_account.id;
	
	CREATE OR REPLACE VIEW staff.credit_account_applications AS
	    SELECT credit_account_application.id, credit_account_application.application_status, credit_account.account_number, credit_account.outstanding_balance, credit_account.credit_limit, credit_account.interest_rate
	    FROM credit_account_application
	    INNER JOIN credit_account ON credit_account_application.account_number = credit_account.account_number;
	
	CREATE OR REPLACE VIEW staff.loan_applications AS
	    SELECT loan_application.id, loan_application.application_status, loan.id as loan_id, loan.amount, loan.end_date, loan.loan_type, loan.interest_rate, loan.account_id
	    FROM loan_application
	    INNER JOIN loan ON loan_application.loan_id = loan.id;
	
	CREATE OR REPLACE VIEW staff.customers AS
	    SELECT online_account.id as account_id, customer.first_name, customer.last_name
	    FROM online_account
	    INNER JOIN customer ON customer.id = online_account.customer_id;
	
	CREATE OR REPLACE FUNCTION staff.view_outstanding_credit_applications()
	RETURNS TABLE(first_name TEXT, last_name TEXT, account_number INT) AS $$
	BEGIN
	    RETURN QUERY SELECT customers.first_name, customers.last_name, credit_account_applications.account_number
	    FROM staff.customers
	    INNER JOIN staff.accounts ON customers.account_id = accounts.account_id
	    INNER JOIN staff.credit_card_applications ON accounts.account_number = credit_card_applications.account_number
	    WHERE credit_card_applications.application_status = 'PENDING';
	END;
2023-01-16 16:52:35.579 GMT [39866] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION staff.view_outstanding_loan_applications()
	RETURNS TABLE(first_name TEXT, last_name TEXT, loan_id INT) AS $$" at character 1
2023-01-16 16:52:35.579 GMT [39866] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION staff.view_outstanding_loan_applications()
	RETURNS TABLE(first_name TEXT, last_name TEXT, loan_id INT) AS $$
	BEGIN
	    RETURN QUERY SELECT customers.first_name, customers.last_name, loan_applications.id
	    FROM staff.customers
	    INNER JOIN staff.loan_applications ON loan_applications.account_id = customers.account_id
	    WHERE loan_applications.application_status = 'PENDING';
2023-01-16 16:52:35.579 GMT [39866] WARNING:  there is no transaction in progress
2023-01-16 16:52:35.580 GMT [39866] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	
	CREATE SCHEMA IF NOT EXISTS client;
	SET search_path TO public, client;
	
	
	CREATE OR REPLACE VIEW client.accounts AS
	    SELECT account.account_number, account.account_id, online_account.sort_code FROM account
	    INNER JOIN online_account ON account.account_id = online_account.id;
	
	CREATE OR REPLACE VIEW client.debit_accounts AS
	    SELECT account.account_id, account.account_number, debit_account.current_balance, debit_account.interest_rate, debit_overdraft.overdraft_limit, debit_overdraft.overdraft_usage, debit_overdraft.interest_rate AS overdraft_interest_rate
	    FROM client.accounts
	    INNER JOIN debit_account ON account.account_number = debit_account.account_number
	    INNER JOIN debit_overdraft ON account.account_number = debit_overdraft.account_number;
	
	CREATE OR REPLACE VIEW client.debit_accounts_statements AS
	    SELECT debit_accounts.account_id, debit_accounts.account_number, debit_statement.id, debit_statement.starting_date, debit_statement.end_date, debit_statement.amount
	    FROM debit_accounts
	    INNER JOIN debit_statement ON debit_accounts.account_number = debit_statement.account_number;
	
	CREATE OR REPLACE VIEW client.debit_accounts_statement AS
	    SELECT debit_accounts_statements.account_id, debit_accounts_statements.account_number, debit_accounts_statements.id, debit_accounts_statements.starting_date, debit_accounts_statements.end_date, debit_accounts_statements.amount AS total_amount, transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date
	    FROM debit_accounts_statements
	    INNER JOIN transaction ON debit_accounts_statements.id = transaction.debit_statement_id;
	
	CREATE OR REPLACE VIEW client.credit_accounts AS
	    SELECT account.account_id, account.account_number, credit_account.outstanding_balance, credit_account.credit_limit, credit_account.interest_rate, credit_account_application.application_status
	    FROM client.accounts
	    INNER JOIN credit_account ON account.account_number = credit_account.account_number
	    INNER JOIN credit_account_application ON account.account_number = credit_account_application.account_number;
	
	CREATE OR REPLACE VIEW client.credit_accounts_statements AS
	    SELECT credit_accounts.account_id, credit_accounts.account_number, credit_statement.id, credit_statement.starting_date, credit_statement.end_date, credit_statement.amount, credit_statement.minimum_payment, credit_statement.minimum_payment_due_date
	    FROM credit_accounts
	    INNER JOIN credit_statement ON credit_accounts.account_number = credit_statement.account_number;
	
	CREATE OR REPLACE VIEW client.credit_accounts_statement AS
	    SELECT credit_accounts_statements.account_id, credit_accounts_statements.account_number, credit_accounts_statements.id, credit_accounts_statements.starting_date, credit_accounts_statements.end_date, credit_accounts_statements.amount AS total_amount, credit_accounts_statements.minimum_payment, credit_accounts_statements.minimum_payment_due_date, transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date
	    FROM credit_accounts_statements
	    INNER JOIN transaction ON credit_accounts_statements.id = transaction.credit_statement_id;
	
	CREATE OR REPLACE VIEW client.savings_accounts AS
	    SELECT account.account_id, account.account_number, savings_account.current_balance, savings_account.interest_rate
	    FROM client.accounts
	    INNER JOIN savings_account ON account.account_number = savings_account.account_number;
	
	CREATE OR REPLACE VIEW client.savings_accounts_statements AS
	    SELECT savings_accounts.account_id, savings_accounts.account_number, savings_statement.id, savings_statement.starting_date, savings_statement.end_date, savings_statement.amount
	    FROM savings_accounts
	    INNER JOIN savings_statement ON savings_accounts.account_number = savings_statement.account_number;
	
	CREATE OR REPLACE VIEW client.loans AS
	    SELECT loan.account_id, loan.id, loan.amount, loan.interest_rate, loan.loan_type, loan.end_date, loan_application.application_status
	    FROM loan
	    INNER JOIN loan_application ON loan.id = loan_application.loan_id;
	
	CREATE OR REPLACE VIEW client.loan_statements AS
	    SELECT loans.account_id, loans.id, loan_statement.id as statement_id, loan_statement.starting_date, loan_statement.amount
	    FROM client.loans
	    INNER JOIN loan_statement ON loans.id = loan_statement.loan_id;
	
	CREATE OR REPLACE VIEW client.loan_applications AS
	    SELECT loan.account_id, loan_application.id, loan_application.application_status, loan_application.loan_id
	    FROM loan_application
	    INNER JOIN loan ON loan_application.loan_id = loan.id;
	
	CREATE OR REPLACE FUNCTION client.update_personal_information(account_identifier INT, first_name TEXT, last_name TEXT, date_of_birth DATE, phone_number TEXT, email_address TEXT, address_street TEXT, address_city TEXT, address_county TEXT, address_postcode TEXT, account_id INT)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-16 16:52:35.580 GMT [39866] STATEMENT:  $$ LANGUAGE plpgsql;
	
	
	CREATE SCHEMA IF NOT EXISTS client;
	SET search_path TO public, client;
	
	
	CREATE OR REPLACE VIEW client.accounts AS
	    SELECT account.account_number, account.account_id, online_account.sort_code FROM account
	    INNER JOIN online_account ON account.account_id = online_account.id;
	
	CREATE OR REPLACE VIEW client.debit_accounts AS
	    SELECT account.account_id, account.account_number, debit_account.current_balance, debit_account.interest_rate, debit_overdraft.overdraft_limit, debit_overdraft.overdraft_usage, debit_overdraft.interest_rate AS overdraft_interest_rate
	    FROM client.accounts
	    INNER JOIN debit_account ON account.account_number = debit_account.account_number
	    INNER JOIN debit_overdraft ON account.account_number = debit_overdraft.account_number;
	
	CREATE OR REPLACE VIEW client.debit_accounts_statements AS
	    SELECT debit_accounts.account_id, debit_accounts.account_number, debit_statement.id, debit_statement.starting_date, debit_statement.end_date, debit_statement.amount
	    FROM debit_accounts
	    INNER JOIN debit_statement ON debit_accounts.account_number = debit_statement.account_number;
	
	CREATE OR REPLACE VIEW client.debit_accounts_statement AS
	    SELECT debit_accounts_statements.account_id, debit_accounts_statements.account_number, debit_accounts_statements.id, debit_accounts_statements.starting_date, debit_accounts_statements.end_date, debit_accounts_statements.amount AS total_amount, transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date
	    FROM debit_accounts_statements
	    INNER JOIN transaction ON debit_accounts_statements.id = transaction.debit_statement_id;
	
	CREATE OR REPLACE VIEW client.credit_accounts AS
	    SELECT account.account_id, account.account_number, credit_account.outstanding_balance, credit_account.credit_limit, credit_account.interest_rate, credit_account_application.application_status
	    FROM client.accounts
	    INNER JOIN credit_account ON account.account_number = credit_account.account_number
	    INNER JOIN credit_account_application ON account.account_number = credit_account_application.account_number;
	
	CREATE OR REPLACE VIEW client.credit_accounts_statements AS
	    SELECT credit_accounts.account_id, credit_accounts.account_number, credit_statement.id, credit_statement.starting_date, credit_statement.end_date, credit_statement.amount, credit_statement.minimum_payment, credit_statement.minimum_payment_due_date
	    FROM credit_accounts
	    INNER JOIN credit_statement ON credit_accounts.account_number = credit_statement.account_number;
	
	CREATE OR REPLACE VIEW client.credit_accounts_statement AS
	    SELECT credit_accounts_statements.account_id, credit_accounts_statements.account_number, credit_accounts_statements.id, credit_accounts_statements.starting_date, credit_accounts_statements.end_date, credit_accounts_statements.amount AS total_amount, credit_accounts_statements.minimum_payment, credit_accounts_statements.minimum_payment_due_date, transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date
	    FROM credit_accounts_statements
	    INNER JOIN transaction ON credit_accounts_statements.id = transaction.credit_statement_id;
	
	CREATE OR REPLACE VIEW client.savings_accounts AS
	    SELECT account.account_id, account.account_number, savings_account.current_balance, savings_account.interest_rate
	    FROM client.accounts
	    INNER JOIN savings_account ON account.account_number = savings_account.account_number;
	
	CREATE OR REPLACE VIEW client.savings_accounts_statements AS
	    SELECT savings_accounts.account_id, savings_accounts.account_number, savings_statement.id, savings_statement.starting_date, savings_statement.end_date, savings_statement.amount
	    FROM savings_accounts
	    INNER JOIN savings_statement ON savings_accounts.account_number = savings_statement.account_number;
	
	CREATE OR REPLACE VIEW client.loans AS
	    SELECT loan.account_id, loan.id, loan.amount, loan.interest_rate, loan.loan_type, loan.end_date, loan_application.application_status
	    FROM loan
	    INNER JOIN loan_application ON loan.id = loan_application.loan_id;
	
	CREATE OR REPLACE VIEW client.loan_statements AS
	    SELECT loans.account_id, loans.id, loan_statement.id as statement_id, loan_statement.starting_date, loan_statement.amount
	    FROM client.loans
	    INNER JOIN loan_statement ON loans.id = loan_statement.loan_id;
	
	CREATE OR REPLACE VIEW client.loan_applications AS
	    SELECT loan.account_id, loan_application.id, loan_application.application_status, loan_application.loan_id
	    FROM loan_application
	    INNER JOIN loan ON loan_application.loan_id = loan.id;
	
	CREATE OR REPLACE FUNCTION client.update_personal_information(account_identifier INT, first_name TEXT, last_name TEXT, date_of_birth DATE, phone_number TEXT, email_address TEXT, address_street TEXT, address_city TEXT, address_county TEXT, address_postcode TEXT, account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-16 16:52:35.581 GMT [39866] ERROR:  syntax error at or near "UPDATE" at character 11
2023-01-16 16:52:35.581 GMT [39866] STATEMENT:  BEGIN
	    UPDATE customer SET first_name = first_name, last_name = last_name, date_of_birth = date_of_birth, phone_number = phone_number, email_address = email_address, address_street = address_street, address_city = address_city, address_county = address_county, address_postcode = address_postcode
	    WHERE id = (SELECT customer_id FROM online_account WHERE id = account_identifier);
2023-01-16 16:52:35.584 GMT [39866] ERROR:  syntax error at or near "passed" at character 1
2023-01-16 16:52:35.584 GMT [39866] STATEMENT:  passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-16 16:52:35.584 GMT [39866] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:52:35.584 GMT [39866] STATEMENT:  RETURN passed;
2023-01-16 16:52:35.585 GMT [39866] WARNING:  there is no transaction in progress
2023-01-16 16:52:35.585 GMT [39866] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.update_password(account_identifier INT, new_password TEXT)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-16 16:52:35.585 GMT [39866] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.update_password(account_identifier INT, new_password TEXT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-16 16:52:35.585 GMT [39866] ERROR:  syntax error at or near "INT" at character 19
2023-01-16 16:52:35.585 GMT [39866] STATEMENT:  DECLARE ROW_COUNT INT;
2023-01-16 16:52:35.585 GMT [39866] ERROR:  syntax error at or near "UPDATE" at character 11
2023-01-16 16:52:35.585 GMT [39866] STATEMENT:  BEGIN
	    UPDATE user_login SET password = md5(new_password)
	    WHERE account_id = account_identifier;
2023-01-16 16:52:35.585 GMT [39866] ERROR:  syntax error at or near "GET" at character 1
2023-01-16 16:52:35.585 GMT [39866] STATEMENT:  GET DIAGNOSTICS ROW_COUNT = ROW_COUNT;
2023-01-16 16:52:35.586 GMT [39866] ERROR:  column "account_identifier" does not exist at character 76
2023-01-16 16:52:35.586 GMT [39866] STATEMENT:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Updated password', CURRENT_DATE);
2023-01-16 16:52:35.586 GMT [39866] ERROR:  syntax error at or near "passed" at character 1
2023-01-16 16:52:35.586 GMT [39866] STATEMENT:  passed = CASE WHEN ROW_COUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-16 16:52:35.586 GMT [39866] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:52:35.586 GMT [39866] STATEMENT:  RETURN passed;
2023-01-16 16:52:35.587 GMT [39866] WARNING:  there is no transaction in progress
2023-01-16 16:52:35.587 GMT [39866] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.update_email(account_identifier INT, new_email TEXT)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-16 16:52:35.587 GMT [39866] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.update_email(account_identifier INT, new_email TEXT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-16 16:52:35.587 GMT [39866] ERROR:  syntax error at or near "INT" at character 19
2023-01-16 16:52:35.587 GMT [39866] STATEMENT:  DECLARE ROW_COUNT INT;
2023-01-16 16:52:35.587 GMT [39866] ERROR:  syntax error at or near "UPDATE" at character 11
2023-01-16 16:52:35.587 GMT [39866] STATEMENT:  BEGIN
	    UPDATE user_login SET email = new_email
	    WHERE account_id = account_identifier;
2023-01-16 16:52:35.587 GMT [39866] ERROR:  syntax error at or near "GET" at character 1
2023-01-16 16:52:35.587 GMT [39866] STATEMENT:  GET DIAGNOSTICS ROW_COUNT = ROW_COUNT;
2023-01-16 16:52:35.587 GMT [39866] ERROR:  column "account_identifier" does not exist at character 76
2023-01-16 16:52:35.587 GMT [39866] STATEMENT:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Updated email', CURRENT_DATE);
2023-01-16 16:52:35.588 GMT [39866] ERROR:  syntax error at or near "passed" at character 1
2023-01-16 16:52:35.588 GMT [39866] STATEMENT:  passed = CASE WHEN ROW_COUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-16 16:52:35.588 GMT [39866] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:52:35.588 GMT [39866] STATEMENT:  RETURN passed;
2023-01-16 16:52:35.588 GMT [39866] WARNING:  there is no transaction in progress
2023-01-16 16:52:35.588 GMT [39866] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	
	CREATE OR REPLACE FUNCTION client.open_debit_account(account_id INT)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-16 16:52:35.588 GMT [39866] STATEMENT:  $$ LANGUAGE plpgsql;
	
	
	CREATE OR REPLACE FUNCTION client.open_debit_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-16 16:52:35.588 GMT [39866] ERROR:  syntax error at or near "INT" at character 30
2023-01-16 16:52:35.588 GMT [39866] STATEMENT:  DECLARE debit_account_number INT;
2023-01-16 16:52:35.588 GMT [39866] ERROR:  syntax error at or near "INT" at character 29
2023-01-16 16:52:35.588 GMT [39866] STATEMENT:  DECLARE next_account_number INT;
2023-01-16 16:52:35.589 GMT [39866] ERROR:  syntax error at or near "INT" at character 19
2023-01-16 16:52:35.589 GMT [39866] STATEMENT:  DECLARE ROW_COUNT INT;
2023-01-16 16:52:35.589 GMT [39866] ERROR:  syntax error at or near "SELECT" at character 11
2023-01-16 16:52:35.589 GMT [39866] STATEMENT:  BEGIN
	    SELECT get_next_account_number() INTO next_account_number;
2023-01-16 16:52:35.589 GMT [39866] ERROR:  syntax error at or near "INTO" at character 163
2023-01-16 16:52:35.589 GMT [39866] STATEMENT:  INSERT INTO debit_account (account_number, account_id, current_balance, interest_rate) VALUES (next_account_number ,account_id, 0, 0.01) RETURNING account_number INTO debit_account_number;
2023-01-16 16:52:35.590 GMT [39866] ERROR:  syntax error at or near "GET" at character 1
2023-01-16 16:52:35.590 GMT [39866] STATEMENT:  GET DIAGNOSTICS ROW_COUNT = ROW_COUNT;
2023-01-16 16:52:35.590 GMT [39866] ERROR:  column "debit_account_number" does not exist at character 189
2023-01-16 16:52:35.590 GMT [39866] STATEMENT:  INSERT INTO debit_statement (starting_date, end_date, amount, account_number) VALUES (date_trunc('month', now()::date), (date_trunc('month', now()::date)) + interval '1 month - 1 day', 0, debit_account_number);
2023-01-16 16:52:35.591 GMT [39866] ERROR:  column "debit_account_number" does not exist at character 115
2023-01-16 16:52:35.591 GMT [39866] STATEMENT:  INSERT INTO debit_overdraft (overdraft_usage, overdraft_limit, interest_rate, account_number) VALUES (0, 0, 0.01, debit_account_number);
2023-01-16 16:52:35.591 GMT [39866] ERROR:  column "account_id" does not exist at character 76
2023-01-16 16:52:35.591 GMT [39866] HINT:  There is a column named "account_id" in table "management_log", but it cannot be referenced from this part of the query.
2023-01-16 16:52:35.591 GMT [39866] STATEMENT:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened debit account', CURRENT_DATE);
2023-01-16 16:52:35.591 GMT [39866] ERROR:  syntax error at or near "passed" at character 1
2023-01-16 16:52:35.591 GMT [39866] STATEMENT:  passed = CASE WHEN ROW_COUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-16 16:52:35.591 GMT [39866] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:52:35.591 GMT [39866] STATEMENT:  RETURN passed;
2023-01-16 16:52:35.591 GMT [39866] WARNING:  there is no transaction in progress
2023-01-16 16:52:35.591 GMT [39866] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_credit_account(account_id INT)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-16 16:52:35.591 GMT [39866] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_credit_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-16 16:52:35.591 GMT [39866] ERROR:  syntax error at or near "INT" at character 31
2023-01-16 16:52:35.591 GMT [39866] STATEMENT:  DECLARE credit_account_number INT;
2023-01-16 16:52:35.591 GMT [39866] ERROR:  syntax error at or near "INT" at character 29
2023-01-16 16:52:35.591 GMT [39866] STATEMENT:  DECLARE next_account_number INT;
2023-01-16 16:52:35.592 GMT [39866] ERROR:  syntax error at or near "INT" at character 19
2023-01-16 16:52:35.592 GMT [39866] STATEMENT:  DECLARE ROW_COUNT INT;
2023-01-16 16:52:35.592 GMT [39866] ERROR:  syntax error at or near "SELECT" at character 11
2023-01-16 16:52:35.592 GMT [39866] STATEMENT:  BEGIN
	    SELECT get_next_account_number() INTO next_account_number;
2023-01-16 16:52:35.592 GMT [39866] ERROR:  syntax error at or near "INTO" at character 185
2023-01-16 16:52:35.592 GMT [39866] STATEMENT:  INSERT INTO credit_account (account_number, outstanding_balance, credit_limit, interest_rate, account_id) VALUES (next_account_number ,0, 0, 24.9, account_id) RETURNING account_number INTO credit_account_number;
2023-01-16 16:52:35.592 GMT [39866] ERROR:  syntax error at or near "GET" at character 1
2023-01-16 16:52:35.592 GMT [39866] STATEMENT:  GET DIAGNOSTICS ROW_COUNT = ROW_COUNT;
2023-01-16 16:52:35.592 GMT [39866] ERROR:  column "credit_account_number" does not exist at character 250
2023-01-16 16:52:35.592 GMT [39866] STATEMENT:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (date_trunc('month', now()::date), (date_trunc('month', now()::date)) + interval '1 month - 1 day', 0, 0, CURRENT_DATE, credit_account_number);
2023-01-16 16:52:35.593 GMT [39866] ERROR:  column "credit_account_number" does not exist at character 85
2023-01-16 16:52:35.593 GMT [39866] STATEMENT:  INSERT INTO credit_account_application (account_number, application_status) VALUES (credit_account_number, 'PENDING');
2023-01-16 16:52:35.594 GMT [39866] ERROR:  column "account_id" does not exist at character 76
2023-01-16 16:52:35.594 GMT [39866] HINT:  There is a column named "account_id" in table "management_log", but it cannot be referenced from this part of the query.
2023-01-16 16:52:35.594 GMT [39866] STATEMENT:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened credit account', CURRENT_DATE);
2023-01-16 16:52:35.594 GMT [39866] ERROR:  syntax error at or near "passed" at character 1
2023-01-16 16:52:35.594 GMT [39866] STATEMENT:  passed = CASE WHEN ROW_COUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-16 16:52:35.594 GMT [39866] ERROR:  syntax error at or near "return" at character 1
2023-01-16 16:52:35.594 GMT [39866] STATEMENT:  return PASSED;
2023-01-16 16:52:35.594 GMT [39866] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_savings_account(account_id INT)
	RETURNS BOOLEAN AS $$" at character 5
2023-01-16 16:52:35.594 GMT [39866] STATEMENT:  END
	$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_savings_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-16 16:52:35.594 GMT [39866] ERROR:  syntax error at or near "INT" at character 28
2023-01-16 16:52:35.594 GMT [39866] STATEMENT:  DECLARE savings_account_id INT;
2023-01-16 16:52:35.594 GMT [39866] ERROR:  syntax error at or near "INT" at character 29
2023-01-16 16:52:35.594 GMT [39866] STATEMENT:  DECLARE next_account_number INT;
2023-01-16 16:52:35.595 GMT [39866] ERROR:  syntax error at or near "INT" at character 19
2023-01-16 16:52:35.595 GMT [39866] STATEMENT:  DECLARE ROW_COUNT INT;
2023-01-16 16:52:35.595 GMT [39866] ERROR:  syntax error at or near "SELECT" at character 11
2023-01-16 16:52:35.595 GMT [39866] STATEMENT:  BEGIN
	    SELECT get_next_account_number() INTO next_account_number;
2023-01-16 16:52:35.595 GMT [39866] ERROR:  syntax error at or near "INTO" at character 165
2023-01-16 16:52:35.595 GMT [39866] STATEMENT:  INSERT INTO savings_account (account_number, account_id, current_balance, interest_rate) VALUES (next_account_number ,account_id, 0, 0.01) RETURNING account_number INTO savings_account_id;
2023-01-16 16:52:35.595 GMT [39866] ERROR:  syntax error at or near "GET" at character 1
2023-01-16 16:52:35.595 GMT [39866] STATEMENT:  GET DIAGNOSTICS ROW_COUNT = ROW_COUNT;
2023-01-16 16:52:35.596 GMT [39866] ERROR:  column "savings_account_id" does not exist at character 191
2023-01-16 16:52:35.596 GMT [39866] STATEMENT:  INSERT INTO savings_statement (starting_date, end_date, amount, account_number) VALUES (date_trunc('month', now()::date), (date_trunc('month', now()::date)) + interval '1 month - 1 day', 0, savings_account_id);
2023-01-16 16:52:35.596 GMT [39866] ERROR:  column "account_id" does not exist at character 76
2023-01-16 16:52:35.596 GMT [39866] HINT:  There is a column named "account_id" in table "management_log", but it cannot be referenced from this part of the query.
2023-01-16 16:52:35.596 GMT [39866] STATEMENT:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened savings account', CURRENT_DATE);
2023-01-16 16:52:35.596 GMT [39866] ERROR:  syntax error at or near "passed" at character 1
2023-01-16 16:52:35.596 GMT [39866] STATEMENT:  passed = CASE WHEN ROW_COUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-16 16:52:35.598 GMT [39866] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:52:35.598 GMT [39866] STATEMENT:  RETURN passed;
2023-01-16 16:52:35.598 GMT [39866] WARNING:  there is no transaction in progress
2023-01-16 16:52:35.598 GMT [39866] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_loan(account_id INT, loan_amount INT, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-16 16:52:35.598 GMT [39866] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_loan(account_id INT, loan_amount INT, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-16 16:52:35.599 GMT [39866] ERROR:  syntax error at or near "INT" at character 17
2023-01-16 16:52:35.599 GMT [39866] STATEMENT:  DECLARE loan_id INT;
2023-01-16 16:52:35.599 GMT [39866] ERROR:  syntax error at or near "INT" at character 19
2023-01-16 16:52:35.599 GMT [39866] STATEMENT:  DECLARE ROW_COUNT INT;
2023-01-16 16:52:35.600 GMT [39866] ERROR:  syntax error at or near "INSERT" at character 11
2023-01-16 16:52:35.600 GMT [39866] STATEMENT:  BEGIN
	    INSERT INTO loan (account_id, loan_amount, loan_end_date, loan_type, loan_interest_rate) VALUES (account_id, loan_amount, loan_end_date, loan_type, loan_interest_rate) RETURNING id INTO loan_id;
2023-01-16 16:52:35.600 GMT [39866] ERROR:  syntax error at or near "GET" at character 1
2023-01-16 16:52:35.600 GMT [39866] STATEMENT:  GET DIAGNOSTICS ROW_COUNT = ROW_COUNT;
2023-01-16 16:52:35.601 GMT [39866] ERROR:  column "end_date" of relation "loan_statement" does not exist at character 44
2023-01-16 16:52:35.601 GMT [39866] STATEMENT:  INSERT INTO loan_statement (starting_date, end_date, amount, account_id) VALUES (date_trunc('month', now()::date), (date_trunc('month', now()::date)) + interval '1 month - 1 day', 0, loan_id);
2023-01-16 16:52:35.601 GMT [39866] ERROR:  column "loan_id" does not exist at character 68
2023-01-16 16:52:35.601 GMT [39866] HINT:  There is a column named "loan_id" in table "loan_application", but it cannot be referenced from this part of the query.
2023-01-16 16:52:35.601 GMT [39866] STATEMENT:  INSERT INTO loan_application (loan_id, application_status) VALUES (loan_id, 'PENDING');
2023-01-16 16:52:35.601 GMT [39866] ERROR:  column "account_id" does not exist at character 76
2023-01-16 16:52:35.601 GMT [39866] HINT:  There is a column named "account_id" in table "management_log", but it cannot be referenced from this part of the query.
2023-01-16 16:52:35.601 GMT [39866] STATEMENT:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened loan', CURRENT_DATE);
2023-01-16 16:52:35.601 GMT [39866] ERROR:  syntax error at or near "passed" at character 1
2023-01-16 16:52:35.601 GMT [39866] STATEMENT:  passed = CASE WHEN ROW_COUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-16 16:52:35.601 GMT [39866] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:52:35.601 GMT [39866] STATEMENT:  RETURN passed;
2023-01-16 16:52:35.601 GMT [39866] WARNING:  there is no transaction in progress
2023-01-16 16:52:35.601 GMT [39866] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_personal_information(account_id INT)
	RETURNS TABLE (first_name TEXT, last_name TEXT, email TEXT, phone_number TEXT, address TEXT, city TEXT, country TEXT, postal_code TEXT) AS $$" at character 1
2023-01-16 16:52:35.601 GMT [39866] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_personal_information(account_id INT)
	RETURNS TABLE (first_name TEXT, last_name TEXT, email TEXT, phone_number TEXT, address TEXT, city TEXT, country TEXT, postal_code TEXT) AS $$
	BEGIN
	    RETURN QUERY
	        SELECT first_name, last_name, email, phone_number, address, city, country, postal_code
	            FROM customer
	        INNER JOIN account ON account.customer_id = customer.id
	        WHERE account.id = account_id;
2023-01-16 16:52:35.602 GMT [39866] WARNING:  there is no transaction in progress
2023-01-16 16:52:35.602 GMT [39866] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_accounts(account_identifier INT)
	RETURNS TABLE (account_number INT, account_id INT, balance NUMERIC, interest_rate NUMERIC, account_type TEXT) AS $$" at character 1
2023-01-16 16:52:35.602 GMT [39866] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_accounts(account_identifier INT)
	RETURNS TABLE (account_number INT, account_id INT, balance NUMERIC, interest_rate NUMERIC, account_type TEXT) AS $$
	BEGIN
	    RETURN QUERY
	        SELECT account.*, COALESCE(debit_accounts.current_balance, credit_accounts.outstanding_balance, savings_accounts.current_balance) AS balance,
	            COALESCE(debit_accounts.interest_rate, credit_accounts.interest_rate, savings_accounts.interest_rate) AS interest_rate,
	            get_account_type(account.account_number) AS account_type
	            FROM account
	            LEFT JOIN client.credit_accounts ON account.account_number = credit_accounts.account_number
	            LEFT JOIN client.debit_accounts ON account.account_number = debit_accounts.account_number
	            LEFT JOIN client.savings_accounts ON account.account_number = savings_accounts.account_number
	            WHERE account.account_id = account_identifier;
2023-01-16 16:52:35.602 GMT [39866] WARNING:  there is no transaction in progress
2023-01-16 16:52:35.603 GMT [39866] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, overdraft_limit NUMERIC, overdraft_usage NUMERIC, overdraft_interest_rate NUMERIC, external_account_number INT) AS $$" at character 1
2023-01-16 16:52:35.603 GMT [39866] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, overdraft_limit NUMERIC, overdraft_usage NUMERIC, overdraft_interest_rate NUMERIC, external_account_number INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed debit accounts', CURRENT_DATE);
2023-01-16 16:52:35.603 GMT [39866] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:52:35.603 GMT [39866] STATEMENT:  RETURN QUERY
	        SELECT * FROM client.debit_accounts WHERE account_id = account_id;
2023-01-16 16:52:35.603 GMT [39866] WARNING:  there is no transaction in progress
2023-01-16 16:52:35.603 GMT [39866] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_accounts(account_id INT)
	RETURNS TABLE (id INT, outstanding_balance NUMERIC, credit_limit NUMERIC, interest_rate NUMERIC, application_status TEXT) AS $$" at character 1
2023-01-16 16:52:35.603 GMT [39866] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_accounts(account_id INT)
	RETURNS TABLE (id INT, outstanding_balance NUMERIC, credit_limit NUMERIC, interest_rate NUMERIC, application_status TEXT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit accounts', CURRENT_DATE);
2023-01-16 16:52:35.603 GMT [39866] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:52:35.603 GMT [39866] STATEMENT:  RETURN QUERY
	        SELECT * FROM client.credit_accounts WHERE account_id = account_id;
2023-01-16 16:52:35.603 GMT [39866] WARNING:  there is no transaction in progress
2023-01-16 16:52:35.604 GMT [39866] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_savings_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, external_account_number INT) AS $$" at character 1
2023-01-16 16:52:35.604 GMT [39866] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_savings_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, external_account_number INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings accounts', CURRENT_DATE);
2023-01-16 16:52:35.604 GMT [39866] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:52:35.604 GMT [39866] STATEMENT:  RETURN QUERY
	        SELECT * FROM client.savings_accounts WHERE account_id = account_id;
2023-01-16 16:52:35.604 GMT [39866] WARNING:  there is no transaction in progress
2023-01-16 16:52:35.604 GMT [39866] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_loans(account_id INT)
	RETURNS TABLE (id INT, loan_amount NUMERIC, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC, application_status TEXT) AS $$" at character 1
2023-01-16 16:52:35.604 GMT [39866] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_loans(account_id INT)
	RETURNS TABLE (id INT, loan_amount NUMERIC, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC, application_status TEXT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed loans', CURRENT_DATE);
2023-01-16 16:52:35.604 GMT [39866] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:52:35.604 GMT [39866] STATEMENT:  RETURN QUERY
	        SELECT * FROM client.loans WHERE account_id = account_id;
2023-01-16 16:52:35.604 GMT [39866] WARNING:  there is no transaction in progress
2023-01-16 16:52:35.604 GMT [39866] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_savings_statements(account_identifier INT, orig_account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-16 16:52:35.604 GMT [39866] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_savings_statements(account_identifier INT, orig_account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Viewed savings statements', CURRENT_DATE);
2023-01-16 16:52:35.605 GMT [39866] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:52:35.605 GMT [39866] STATEMENT:  RETURN QUERY
	        SELECT savings_accounts_statements.starting_date, savings_accounts_statements.end_date, savings_accounts_statements.amount, savings_accounts_statements.account_id
	        FROM client.savings_accounts_statements
	        WHERE savings_accounts_statements.account_number = orig_account_number
	        AND savings_accounts_statements.account_id = account_identifier;
2023-01-16 16:52:35.605 GMT [39866] WARNING:  there is no transaction in progress
2023-01-16 16:52:35.605 GMT [39866] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_statements(account_identifier INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-16 16:52:35.605 GMT [39866] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_statements(account_identifier INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Viewed debit statements', CURRENT_DATE);
2023-01-16 16:52:35.605 GMT [39866] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:52:35.605 GMT [39866] STATEMENT:  RETURN QUERY
	        SELECT debit_accounts_statements.account_id, debit_accounts_statements.account_number, debit_accounts_statements.starting_date, debit_accounts_statements.end_date, debit_accounts_statements.amount
	        FROM client.debit_accounts_statements
	        WHERE debit_accounts_statements.account_number = account_number
	        AND debit_accounts_statements.account_id = account_identifier;
2023-01-16 16:52:35.605 GMT [39866] WARNING:  there is no transaction in progress
2023-01-16 16:52:35.605 GMT [39866] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_statements(account_identifier INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-16 16:52:35.605 GMT [39866] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_statements(account_identifier INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Viewed credit statements', CURRENT_DATE);
2023-01-16 16:52:35.605 GMT [39866] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:52:35.605 GMT [39866] STATEMENT:  RETURN QUERY
	        SELECT credit_accounts_statements.account_id, credit_accounts_statements.account_number, credit_accounts_statements.starting_date, credit_accounts_statements.end_date, credit_accounts_statements.amount
	        FROM client.credit_accounts_statements
	        WHERE credit_accounts_statements.account_number = account_number
	        AND credit_accounts_statements.account_id = account_identifier;
2023-01-16 16:52:35.605 GMT [39866] WARNING:  there is no transaction in progress
2023-01-16 16:52:35.605 GMT [39866] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_statement(account_identifier INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-16 16:52:35.605 GMT [39866] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_statement(account_identifier INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Viewed debit statement', CURRENT_DATE);
2023-01-16 16:52:35.605 GMT [39866] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:52:35.605 GMT [39866] STATEMENT:  RETURN QUERY
	        SELECT debit_accounts_statement.account_id, debit_accounts_statement.account_number, debit_accounts_statement.starting_date, debit_accounts_statement.end_date, debit_accounts_statement.amount
	        FROM client.debit_accounts_statement
	        WHERE debit_accounts_statement.account_id = account_identifier
	        AND debit_accounts_statement.account_number = account_number
	        AND debit_accounts_statement.statement_id = statement_id;
2023-01-16 16:52:35.606 GMT [39866] WARNING:  there is no transaction in progress
2023-01-16 16:52:35.606 GMT [39866] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_statement(account_identifier INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-16 16:52:35.606 GMT [39866] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_statement(account_identifier INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statement', CURRENT_DATE);
2023-01-16 16:52:35.606 GMT [39866] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:52:35.606 GMT [39866] STATEMENT:  RETURN QUERY
	        SELECT credit_accounts_statement.account_id, credit_accounts_statement.account_number, credit_accounts_statement.starting_date, credit_accounts_statement.end_date, credit_accounts_statement.amount
	        FROM client.credit_accounts_statement
	        WHERE credit_accounts_statement.account_id = account_identifier
	        AND credit_accounts_statement.account_number = account_number
	        AND credit_accounts_statement.statement_id = statement_id;
2023-01-16 16:52:35.606 GMT [39866] WARNING:  there is no transaction in progress
2023-01-16 16:52:35.606 GMT [39866] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_savings_statement(account_identifier INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-16 16:52:35.606 GMT [39866] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_savings_statement(account_identifier INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statement', CURRENT_DATE);
2023-01-16 16:52:35.606 GMT [39866] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:52:35.606 GMT [39866] STATEMENT:  RETURN QUERY
	        SELECT savings_accounts_statement.account_id, savings_accounts_statement.account_number, savings_accounts_statement.starting_date, savings_accounts_statement.end_date, savings_accounts_statement.amount
	        FROM client.savings_accounts_statement
	        WHERE savings_accounts_statement.account_id = account_identifier
	        AND savings_accounts_statement.account_number = account_number
	        AND savings_accounts_statement.statement_id = statement_id;
2023-01-16 16:52:35.606 GMT [39866] WARNING:  there is no transaction in progress
2023-01-16 16:52:35.606 GMT [39866] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.get_or_create_statement(account_identifier INT, orig_account_number INT)
	RETURNS INT AS $$" at character 1
2023-01-16 16:52:35.606 GMT [39866] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.get_or_create_statement(account_identifier INT, orig_account_number INT)
	RETURNS INT AS $$
	DECLARE statement_id INT;
2023-01-16 16:52:35.606 GMT [39866] ERROR:  syntax error at or near "CASE" at character 11
2023-01-16 16:52:35.606 GMT [39866] STATEMENT:  BEGIN
	    CASE WHEN EXISTS (SELECT * FROM client.debit_accounts WHERE account_id = account_identifier AND account_number = orig_account_number) THEN
	        IF EXISTS (SELECT * FROM debit_statement WHERE account_number = orig_account_number AND starting_date <= now()::date AND end_date >= now()::date) THEN
	            SELECT id INTO statement_id FROM debit_statement WHERE account_number = orig_account_number AND starting_date <= now()::date AND end_date >= now()::date;
2023-01-16 16:52:35.606 GMT [39866] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:52:35.606 GMT [39866] STATEMENT:  RETURN statement_id;
2023-01-16 16:52:35.606 GMT [39866] ERROR:  syntax error at or near "ELSE" at character 1
2023-01-16 16:52:35.606 GMT [39866] STATEMENT:  ELSE 
	            INSERT INTO debit_statement (account_number, starting_date, end_date, amount) VALUES (orig_account_number, date_trunc('month', now()::date), now()::date + 30, 0);
2023-01-16 16:52:35.607 GMT [39866] ERROR:  column "orig_account_number" does not exist at character 73
2023-01-16 16:52:35.607 GMT [39866] STATEMENT:  SELECT id INTO statement_id FROM debit_statement WHERE account_number = orig_account_number AND starting_date <= now()::date AND end_date >= now()::date;
2023-01-16 16:52:35.607 GMT [39866] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:52:35.607 GMT [39866] STATEMENT:  RETURN statement_id;
2023-01-16 16:52:35.607 GMT [39866] ERROR:  syntax error at or near "IF" at character 5
2023-01-16 16:52:35.607 GMT [39866] STATEMENT:  END IF;
2023-01-16 16:52:35.607 GMT [39866] ERROR:  syntax error at or near "WHEN" at character 1
2023-01-16 16:52:35.607 GMT [39866] STATEMENT:  WHEN EXISTS (SELECT * FROM client.credit_accounts WHERE account_id = account_identifier AND account_number = orig_account_number) THEN
	        IF EXISTS (SELECT * FROM credit_statement WHERE account_number = orig_account_number AND starting_date <= now()::date AND end_date >= now()::date) THEN
	            SELECT id INTO statement_id FROM credit_statement WHERE account_number = orig_account_number AND starting_date <= now()::date AND end_date >= now()::date;
2023-01-16 16:52:35.607 GMT [39866] ERROR:  syntax error at or near "return" at character 1
2023-01-16 16:52:35.607 GMT [39866] STATEMENT:  return statement_id;
2023-01-16 16:52:35.607 GMT [39866] ERROR:  syntax error at or near "ELSE" at character 1
2023-01-16 16:52:35.607 GMT [39866] STATEMENT:  ELSE 
	            INSERT INTO credit_statement (account_number, starting_date, end_date, amount) VALUES (orig_account_number, date_trunc('month', now()::date), now()::date + 30, 0);
2023-01-16 16:52:35.607 GMT [39866] ERROR:  column "orig_account_number" does not exist at character 74
2023-01-16 16:52:35.607 GMT [39866] STATEMENT:  SELECT id INTO statement_id FROM credit_statement WHERE account_number = orig_account_number AND starting_date <= now()::date AND end_date >= now()::date;
2023-01-16 16:52:35.607 GMT [39866] ERROR:  syntax error at or near "return" at character 1
2023-01-16 16:52:35.607 GMT [39866] STATEMENT:  return statement_id;
2023-01-16 16:52:35.607 GMT [39866] ERROR:  syntax error at or near "IF" at character 5
2023-01-16 16:52:35.607 GMT [39866] STATEMENT:  END IF;
2023-01-16 16:52:35.607 GMT [39866] ERROR:  syntax error at or near "WHEN" at character 1
2023-01-16 16:52:35.607 GMT [39866] STATEMENT:  WHEN EXISTS (SELECT * FROM client.savings_accounts WHERE account_id = account_identifier AND account_number = orig_account_number) THEN
	        IF EXISTS (SELECT * FROM savings_statement WHERE account_number = orig_account_number AND starting_date <= now()::date AND end_date >= now()::date) THEN
	            SELECT id INTO statement_id FROM savings_statement WHERE account_number = orig_account_number AND starting_date <= now()::date AND end_date >= now()::date;
2023-01-16 16:52:35.608 GMT [39866] ERROR:  syntax error at or near "return" at character 1
2023-01-16 16:52:35.608 GMT [39866] STATEMENT:  return statement_id;
2023-01-16 16:52:35.608 GMT [39866] ERROR:  syntax error at or near "ELSE" at character 1
2023-01-16 16:52:35.608 GMT [39866] STATEMENT:  ELSE
	            INSERT INTO savings_statement (account_number, starting_date, end_date, amount) VALUES (orig_account_number, date_trunc('month', now()::date), now()::date + 30, 0);
2023-01-16 16:52:35.608 GMT [39866] ERROR:  column "orig_account_number" does not exist at character 75
2023-01-16 16:52:35.608 GMT [39866] STATEMENT:  SELECT id INTO statement_id FROM savings_statement WHERE account_number = orig_account_number AND starting_date <= now()::date AND end_date >= now()::date;
2023-01-16 16:52:35.608 GMT [39866] ERROR:  syntax error at or near "return" at character 1
2023-01-16 16:52:35.608 GMT [39866] STATEMENT:  return statement_id;
2023-01-16 16:52:35.609 GMT [39866] ERROR:  syntax error at or near "IF" at character 5
2023-01-16 16:52:35.609 GMT [39866] STATEMENT:  END IF;
2023-01-16 16:52:35.609 GMT [39866] ERROR:  syntax error at or near "CASE" at character 5
2023-01-16 16:52:35.609 GMT [39866] STATEMENT:  END CASE;
2023-01-16 16:52:35.609 GMT [39866] WARNING:  there is no transaction in progress
2023-01-16 16:52:35.609 GMT [39866] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	
	CREATE OR REPLACE FUNCTION client.place_transaction_into_account(account_identifier INT, orig_account_number INT, transaction_account_number INT, transaction_amount NUMERIC)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-16 16:52:35.609 GMT [39866] STATEMENT:  $$ LANGUAGE plpgsql;
	
	
	CREATE OR REPLACE FUNCTION client.place_transaction_into_account(account_identifier INT, orig_account_number INT, transaction_account_number INT, transaction_amount NUMERIC)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-16 16:52:35.609 GMT [39866] ERROR:  syntax error at or near "INT" at character 22
2023-01-16 16:52:35.609 GMT [39866] STATEMENT:  DECLARE statement_id INT;
2023-01-16 16:52:35.609 GMT [39866] ERROR:  syntax error at or near "INSERT" at character 11
2023-01-16 16:52:35.609 GMT [39866] STATEMENT:  BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Placed transaction into account', CURRENT_DATE);
2023-01-16 16:52:35.609 GMT [39866] ERROR:  syntax error at or near "CASE" at character 1
2023-01-16 16:52:35.609 GMT [39866] STATEMENT:  CASE WHEN EXISTS (SELECT * FROM client.debit_accounts WHERE account_id = account_identifier AND account_number = orig_account_number) THEN
	        UPDATE debit_account SET current_balance = current_balance + transaction_amount WHERE debit_account.account_number = orig_account_number;
2023-01-16 16:52:35.609 GMT [39866] ERROR:  syntax error at or near "INTO" at character 87
2023-01-16 16:52:35.609 GMT [39866] STATEMENT:  SELECT * FROM client.get_or_create_statement(account_identifier, orig_account_number) INTO statement_id;
2023-01-16 16:52:35.609 GMT [39866] ERROR:  column "orig_account_number" does not exist at character 112
2023-01-16 16:52:35.609 GMT [39866] STATEMENT:  INSERT INTO transaction (origin_account_id, dest_account_id, amount, date, debit_statement_id)
	        VALUES (orig_account_number, transaction_account_number, transaction_amount, now(), statement_id);
2023-01-16 16:52:35.610 GMT [39866] ERROR:  syntax error at or near "WHEN" at character 1
2023-01-16 16:52:35.610 GMT [39866] STATEMENT:  WHEN EXISTS (SELECT * FROM client.credit_accounts WHERE account_id = account_identifier AND account_number = orig_account_number) THEN
	        UPDATE credit_account SET outstanding_balance = outstanding_balance + transaction_amount WHERE credit_account.account_number = orig_account_number;
2023-01-16 16:52:35.610 GMT [39866] ERROR:  syntax error at or near "INTO" at character 87
2023-01-16 16:52:35.610 GMT [39866] STATEMENT:  SELECT * FROM client.get_or_create_statement(account_identifier, orig_account_number) INTO statement_id;
2023-01-16 16:52:35.610 GMT [39866] ERROR:  column "orig_account_number" does not exist at character 113
2023-01-16 16:52:35.610 GMT [39866] STATEMENT:  INSERT INTO transaction (origin_account_id, dest_account_id, amount, date, credit_statement_id)
	        VALUES (orig_account_number, transaction_account_number, transaction_amount, now(), statement_id);
2023-01-16 16:52:35.610 GMT [39866] ERROR:  syntax error at or near "WHEN" at character 1
2023-01-16 16:52:35.610 GMT [39866] STATEMENT:  WHEN EXISTS (SELECT * FROM client.savings_accounts WHERE account_id = account_identifier AND account_number = orig_account_number) THEN
	        UPDATE savings_account SET current_balance = current_balance + transaction_amount WHERE savings_account.account_number = orig_account_number;
2023-01-16 16:52:35.614 GMT [39866] ERROR:  syntax error at or near "INTO" at character 87
2023-01-16 16:52:35.614 GMT [39866] STATEMENT:  SELECT * FROM client.get_or_create_statement(account_identifier, orig_account_number) INTO statement_id;
2023-01-16 16:52:35.614 GMT [39866] ERROR:  column "orig_account_number" does not exist at character 114
2023-01-16 16:52:35.614 GMT [39866] STATEMENT:  INSERT INTO transaction (origin_account_id, dest_account_id, amount, date, savings_statement_id)
	        VALUES (orig_account_number, transaction_account_number, transaction_amount, now(), statement_id);
2023-01-16 16:52:35.615 GMT [39866] ERROR:  syntax error at or near "ELSE" at character 1
2023-01-16 16:52:35.615 GMT [39866] STATEMENT:  ELSE
	        RAISE NOTICE 'Account does not exist';
2023-01-16 16:52:35.615 GMT [39866] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:52:35.615 GMT [39866] STATEMENT:  RETURN FALSE;
2023-01-16 16:52:35.615 GMT [39866] ERROR:  syntax error at or near "CASE" at character 5
2023-01-16 16:52:35.615 GMT [39866] STATEMENT:  END CASE;
2023-01-16 16:52:35.615 GMT [39866] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:52:35.615 GMT [39866] STATEMENT:  RETURN TRUE;
2023-01-16 16:52:35.615 GMT [39866] WARNING:  there is no transaction in progress
2023-01-16 16:52:35.615 GMT [39866] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	
	CREATE OR REPLACE FUNCTION client.initiate_transfer(account_identifier INT, orig_account_number INT, transfer_amount NUMERIC, transfer_account_number INT, transfer_account_sort_code INT)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-16 16:52:35.615 GMT [39866] STATEMENT:  $$ LANGUAGE plpgsql;
	
	
	CREATE OR REPLACE FUNCTION client.initiate_transfer(account_identifier INT, orig_account_number INT, transfer_amount NUMERIC, transfer_account_number INT, transfer_account_sort_code INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-16 16:52:35.615 GMT [39866] ERROR:  syntax error at or near "INT" at character 29
2023-01-16 16:52:35.615 GMT [39866] STATEMENT:  DECLARE internal_account_id INT;
2023-01-16 16:52:35.615 GMT [39866] ERROR:  syntax error at or near "INT" at character 19
2023-01-16 16:52:35.615 GMT [39866] STATEMENT:  DECLARE ROW_COUNT INT;
2023-01-16 16:52:35.615 GMT [39866] ERROR:  syntax error at or near "INSERT" at character 11
2023-01-16 16:52:35.615 GMT [39866] STATEMENT:  BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Initiated transfer', CURRENT_DATE);
2023-01-16 16:52:35.615 GMT [39866] ERROR:  relation "client.accounts" does not exist at character 49
2023-01-16 16:52:35.615 GMT [39866] STATEMENT:  SELECT account_id INTO internal_account_id FROM client.accounts
	    WHERE account_number = transfer_account_number AND sort_code = transfer_account_sort_code;
2023-01-16 16:52:35.615 GMT [39866] ERROR:  syntax error at or near "IF" at character 1
2023-01-16 16:52:35.615 GMT [39866] STATEMENT:  IF internal_account_id IS NULL THEN
	       RAISE NOTICE 'EXTERNAL TRANSFER TO LOCAL ACCOUNT %', transfer_account_number;
2023-01-16 16:52:35.615 GMT [39866] ERROR:  syntax error at or near "ELSE" at character 1
2023-01-16 16:52:35.615 GMT [39866] STATEMENT:  ELSE
	        RAISE NOTICE 'INTERNAL TRANSFER TO ACCOUNT %', transfer_account_number;
2023-01-16 16:52:35.616 GMT [39866] ERROR:  syntax error at or near "INTO" at character 136
2023-01-16 16:52:35.616 GMT [39866] STATEMENT:  SELECT * FROM client.place_transaction_into_account(account_identifier, orig_account_number, transfer_account_number, transfer_amount) INTO passed;
2023-01-16 16:52:35.616 GMT [39866] ERROR:  syntax error at or near "GET" at character 1
2023-01-16 16:52:35.616 GMT [39866] STATEMENT:  GET DIAGNOSTICS ROW_COUNT = ROW_COUNT;
2023-01-16 16:52:35.616 GMT [39866] ERROR:  syntax error at or near "passed" at character 1
2023-01-16 16:52:35.616 GMT [39866] STATEMENT:  passed = CASE WHEN ROW_COUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-16 16:52:35.617 GMT [39866] ERROR:  syntax error at or near "IF" at character 5
2023-01-16 16:52:35.617 GMT [39866] STATEMENT:  END IF;
2023-01-16 16:52:35.617 GMT [39866] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:52:35.617 GMT [39866] STATEMENT:  RETURN passed;
2023-01-16 16:52:35.617 GMT [39866] WARNING:  there is no transaction in progress
2023-01-16 16:52:35.617 GMT [39866] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE SCHEMA IF NOT EXISTS unauthenticated;
	SET search_path TO unauthenticated, public;
	
	-- Allows an unauthenticated user to match hashes to hashes of personal information contained in the customer table
	CREATE OR REPLACE VIEW unauthenticated.unauthenticated_personal_information AS
	SELECT id, md5(first_name) AS first_name, md5(last_name) AS last_name, md5(email_address) AS email_address
	FROM customer;
	
	-- Allows an unauthenticated user to view hashes of usernames contained in the user_login table
	CREATE OR REPLACE VIEW unauthenticated.unauthenticated_login AS
	SELECT md5(username) AS username FROM user_login;
	
	-- Allows a user to insert personal information into the online banking system
	CREATE OR REPLACE FUNCTION unauthenticated.create_personal_info(first_name TEXT, last_name TEXT, date_of_birth DATE, phone_number TEXT, email_address TEXT, address_street TEXT, address_city TEXT, address_county TEXT, address_postcode TEXT)
	RETURNS INT AS $$" at character 1
2023-01-16 16:52:35.617 GMT [39866] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE SCHEMA IF NOT EXISTS unauthenticated;
	SET search_path TO unauthenticated, public;
	
	-- Allows an unauthenticated user to match hashes to hashes of personal information contained in the customer table
	CREATE OR REPLACE VIEW unauthenticated.unauthenticated_personal_information AS
	SELECT id, md5(first_name) AS first_name, md5(last_name) AS last_name, md5(email_address) AS email_address
	FROM customer;
	
	-- Allows an unauthenticated user to view hashes of usernames contained in the user_login table
	CREATE OR REPLACE VIEW unauthenticated.unauthenticated_login AS
	SELECT md5(username) AS username FROM user_login;
	
	-- Allows a user to insert personal information into the online banking system
	CREATE OR REPLACE FUNCTION unauthenticated.create_personal_info(first_name TEXT, last_name TEXT, date_of_birth DATE, phone_number TEXT, email_address TEXT, address_street TEXT, address_city TEXT, address_county TEXT, address_postcode TEXT)
	RETURNS INT AS $$
	DECLARE customer_id INT;
2023-01-16 16:52:35.618 GMT [39866] ERROR:  syntax error at or near "IF" at character 11
2023-01-16 16:52:35.618 GMT [39866] STATEMENT:  BEGIN
	    IF NOT EXISTS (SELECT FROM unauthenticated.unauthenticated_personal_information WHERE md5(first_name) = first_name AND md5(last_name) = last_name AND md5(email_address) = email_address) THEN
	        INSERT INTO customer
	        VALUES (first_name, last_name, date_of_birth, phone_number, email_address, address_street, address_city, address_county, address_postcode)
	        RETURNING id INTO customer_id;
2023-01-16 16:52:35.621 GMT [39866] ERROR:  syntax error at or near "ELSE" at character 1
2023-01-16 16:52:35.621 GMT [39866] STATEMENT:  ELSE
	        RAISE NOTICE 'CUSTOMER INFORMATION ALREADY PRESENT';
2023-01-16 16:52:35.621 GMT [39866] ERROR:  relation "unauthenticated.unauthenticated_personal_information" does not exist at character 33
2023-01-16 16:52:35.621 GMT [39866] STATEMENT:  SELECT id INTO customer_id FROM unauthenticated.unauthenticated_personal_information WHERE md5(first_name) = first_name AND md5(last_name) = last_name AND md5(email_address) = email_address;
2023-01-16 16:52:35.621 GMT [39866] ERROR:  syntax error at or near "IF" at character 5
2023-01-16 16:52:35.621 GMT [39866] STATEMENT:  END IF;
2023-01-16 16:52:35.621 GMT [39866] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:52:35.621 GMT [39866] STATEMENT:  RETURN customer_id;
2023-01-16 16:52:35.621 GMT [39866] WARNING:  there is no transaction in progress
2023-01-16 16:52:35.622 GMT [39866] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	-- Allows an unauthenticated user to create an online account
	CREATE OR REPLACE FUNCTION unauthenticated.create_online_account_details(customer_id INT, first_name TEXT, last_name TEXT, email_address TEXT, question_choice_ids INT[], question_answers TEXT[])
	RETURNS INT AS $$" at character 1
2023-01-16 16:52:35.622 GMT [39866] STATEMENT:  $$ LANGUAGE plpgsql;
	
	-- Allows an unauthenticated user to create an online account
	CREATE OR REPLACE FUNCTION unauthenticated.create_online_account_details(customer_id INT, first_name TEXT, last_name TEXT, email_address TEXT, question_choice_ids INT[], question_answers TEXT[])
	RETURNS INT AS $$
	DECLARE account_id INT;
2023-01-16 16:52:35.622 GMT [39866] ERROR:  syntax error at or near "INT" at character 27
2023-01-16 16:52:35.622 GMT [39866] STATEMENT:  DECLARE online_account_id INT;
2023-01-16 16:52:35.622 GMT [39866] ERROR:  syntax error at or near "INT" at character 28
2023-01-16 16:52:35.622 GMT [39866] STATEMENT:  DECLARE question_choice_id INT;
2023-01-16 16:52:35.622 GMT [39866] ERROR:  syntax error at or near "IF" at character 11
2023-01-16 16:52:35.622 GMT [39866] STATEMENT:  BEGIN
	    IF NOT EXISTS (SELECT FROM user_login WHERE username = username) THEN
	        INSERT INTO online_account (date_opened, sort_code, customer_id)
	        VALUES ((SELECT now()), (SELECT num FROM GENERATE_SERIES(1, 6) AS s(num) LIMIT 1), customer_id)
	        RETURNING id INTO account_id;
2023-01-16 16:52:35.622 GMT [39866] ERROR:  syntax error at or near "INTO" at character 131
2023-01-16 16:52:35.622 GMT [39866] STATEMENT:  INSERT INTO user_login (account_id, username, password)
	        VALUES (account_id, username, md5(password))
	        RETURNING id INTO online_account_id;
2023-01-16 16:52:35.622 GMT [39866] ERROR:  syntax error at or near "FOR" at character 1
2023-01-16 16:52:35.622 GMT [39866] STATEMENT:  FOR i IN 0..2 LOOP
	            
	            INSERT INTO user_login_security_question (question_choice_id, login_id)
	            VALUES (question_choice_ids[i], online_account_id)
	            RETURNING id INTO question_choice_id;
2023-01-16 16:52:35.622 GMT [39866] ERROR:  column "answer" of relation "security_question_answer" does not exist at character 39
2023-01-16 16:52:35.622 GMT [39866] STATEMENT:  INSERT INTO security_question_answer (answer, question_id)
	            VALUES (question_answers[i], question_choice_id);
2023-01-16 16:52:35.622 GMT [39866] ERROR:  syntax error at or near "LOOP" at character 5
2023-01-16 16:52:35.622 GMT [39866] STATEMENT:  END LOOP;
2023-01-16 16:52:35.623 GMT [39866] ERROR:  column "account_id" does not exist at character 117
2023-01-16 16:52:35.623 GMT [39866] HINT:  There is a column named "account_id" in table "authentication_log", but it cannot be referenced from this part of the query.
2023-01-16 16:52:35.623 GMT [39866] STATEMENT:  INSERT INTO authentication_log (log_description, log_date, account_id) VALUES ('New online account created', now(), account_id);
2023-01-16 16:52:35.623 GMT [39866] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:52:35.623 GMT [39866] STATEMENT:  RETURN account_id;
2023-01-16 16:52:35.623 GMT [39866] ERROR:  syntax error at or near "ELSE" at character 1
2023-01-16 16:52:35.623 GMT [39866] STATEMENT:  ELSE
	        RAISE NOTICE 'USERNAME ALREADY TAKEN';
2023-01-16 16:52:35.623 GMT [39866] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:52:35.623 GMT [39866] STATEMENT:  RETURN NULL;
2023-01-16 16:52:35.623 GMT [39866] ERROR:  syntax error at or near "IF" at character 5
2023-01-16 16:52:35.623 GMT [39866] STATEMENT:  END IF;
2023-01-16 16:52:35.623 GMT [39866] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 16:52:35.623 GMT [39866] STATEMENT:  RETURN success;
2023-01-16 16:52:35.623 GMT [39866] WARNING:  there is no transaction in progress
2023-01-16 16:52:35.624 GMT [39866] ERROR:  unterminated dollar-quoted string at or near "$$ LANGUAGE plpgsql;
	
	
	
	
	
	-- sample data for customers
	INSERT INTO customer (first_name, last_name, date_of_birth, phone_number, email_address, address_street, address_city, address_county, address_postcode)
	VALUES ('John', 'Smith', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('Jane', 'Doe', '1990-01-01', '01234567890', 'test@gmail.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Bloggs', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('John', 'Bloggs', '1990-01-01', '01234567890', 'hello@yahoo.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('Jane', 'Bloggs', '1990-01-01', '01234567890', 'test@outlook.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Doe', '1990-01-01', '01234567890', 'hello@outlook.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('John', 'Doe', '1990-01-01', '01234567890', 'mybankemail@icloud.com', '1 My Bank Street', 'My Bank City', 'My Bank County', 'MB1 1NK'),
	('Jane', 'Smith', '1990-01-01', '01234567890', 'bankemail@outlook.com', '1 Bank Street', 'Bank City', 'Bank County', 'BA1 1NK'),
	('Joe', 'Smith', '1990-01-01', '01234567890', 'example@icloud.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX');
	
	-- sample data for online account
	INSERT INTO online_account (date_opened, sort_code, customer_id)
	VALUES ('2020-01-01', '123456', 1),
	('2019-01-01', '126485', 2),
	('2018-01-01', '128475', 3),
	('2017-01-01', '129476', 4),
	('2016-01-01', '120386', 5),
	('2017-02-03', '127385', 6),
	('2018-02-04', '128256', 7),
	('2020-01-01', '129386', 8),
	('2020-01-01', '120386', 9);
	
	-- sample data for user login
	INSERT INTO user_login (account_id, username, password)
	VALUES (1, 'johnsmith', 'b29af57c2b3bba21e9df0cece40952c6'),
	(2, 'janedoe', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(3, 'joebloggs', 'b29af57c2b3bba21e9df0cece40952c6'),
	(4, 'johnbloggs', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(5, 'janebloggs', 'b29af57c2b3bba21e9df0cece40952c6'),
	(6, 'joedoe', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(7, 'johndoe', 'b29af57c2b3bba21e9df0cece40952c6'),
	(8, 'joesmith', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(9, 'janesmith', 'b29af57c2b3bba21e9df0cece40952c6');
	
	-- sample data for security question option
	INSERT INTO security_question_option (question_description)
	VALUES ('What is your favourite colour?'),
	('What is your favourite food?'),
	('What is your favourite animal?'),
	('What is your favourite sport?'),
	('What is your favourite movie?'),
	('What is your favourite book?'),
	('What is your favourite song?'),
	('What is your favourite band?'),
	('What is your favourite game?'),
	('What is your favourite TV show?');
	
	--sample data for user login security question
	INSERT INTO user_login_security_question (question_choice_id, login_id)
	VALUES (1, 1),
	(2, 2),
	(3, 3),
	(4, 4),
	(5, 5),
	(6, 6),
	(7, 7),
	(8, 8),
	(9, 9);
	
	-- sample data for security question answer
	INSERT INTO security_question_answer (question_answer, question_id)
	VALUES ('Red', 1),
	('Blue', 2),
	('Green', 3),
	('Yellow', 4),
	('Orange', 5),
	('Purple', 6),
	('Pink', 7),
	('Black', 8),
	('White', 9);
	
	SELECT * FROM savings_statement;
	
	
	SELECT * FROM client.open_savings_account(1);
	
	--sample data for savings account
	SELECT * FROM client.open_savings_account(1);
	SELECT * FROM client.open_savings_account(2);
	SELECT * FROM client.open_savings_account(3);
	SELECT * FROM client.open_savings_account(4);
	
	SELECT * FROM client.open_debit_account(1);
	SELECT * FROM client.open_debit_account(2);
	SELECT * FROM client.open_debit_account(3);
	SELECT * FROM client.open_debit_account(4);
	
	SELECT * FROM client.open_credit_account(1);
	SELECT * FROM client.open_credit_account(2);
	SELECT * FROM client.open_credit_account(3);
	SELECT * FROM client.open_credit_account(4);
	
	SELECT * FROM client.view_accounts(1);
	
	SELECT * FROM client.initiate_transfer(1, 10000000, 100.00, 10000001, 123456);
	
	SELECT * FROM client.view_accounts(1);
	
	
	
	SELECT * FROM client.view_savings_statements(1, 10000000);
	
	SELECT * FROM savings_statement;
	
	-- -- sample data for savings account
	-- INSERT INTO savings_account (current_balance, interest_rate, account_id)
	-- VALUES (2000.00, 2.05, 1),
	-- (1000.00, 2.05, 2),
	-- (5000.00, 2.05, 3),
	-- (10000.00, 2.05, 4),
	-- (20000.00, 2.05, 5),
	-- (50000.00, 2.05, 6),
	-- (100000.00, 2.05, 7),
	-- (200000.00, 2.05, 8);
	
	-- -- sample data for credit account
	-- INSERT INTO credit_account (outstanding_balance, credit_limit, interest_rate, account_id)
	-- VALUES (55.43, 2000.00, 4.22, 1),
	-- (100.00, 1000.00, 4.22, 2),
	-- (200.00, 5000.00, 4.22, 3),
	-- (300.00, 10000.00, 4.22, 4),
	-- (400.00, 20000.00, 4.22, 5),
	-- (500.00, 50000.00, 4.22, 6),
	-- (600.00, 100000.00, 4.22, 7),
	-- (700.00, 200000.00, 4.22, 8);
	
	-- -- sample data for debit account
	-- INSERT INTO debit_account (current_balance, interest_rate, account_id)
	-- VALUES (3465.43, 0.05, 1),
	-- (1000.00, 0.05, 1),
	-- (5000.00, 0.05, 2),
	-- (10000.00, 0.05, 3),
	-- (20000.00, 0.05, 4),
	-- (50000.00, 0.05, 5),
	-- (100000.00, 0.05, 6),
	-- (200000.00, 0.05, 9);
	
	-- -- sample data for loan
	-- INSERT INTO loan (loan_end_date, loan_amount, loan_type, account_id)
	-- VALUES ('2024-01-01', 10000, 'vehicle', 8),
	-- ('2023-03-04', 300000, 'mortgage', 8),
	-- ('2035-03-03', 400000, 'mortgage', 1),
	-- ('2025-04-05', 25000, 'vehicle', 1),
	-- ('2026-05-05', 34000, 'vehicle', 1),
	-- ('2023-06-07', 500000, 'mortgage', 2),
	-- ('2026-04-04', 60000, 'vehicle', 2),
	-- ('2024-03-03', 70000, 'vehicle', 2),
	-- ('2023-02-02', 800000, 'mortgage', 3),
	-- ('2022-01-01', 90000, 'vehicle', 3),
	-- ('2021-01-01', 100000, 'vehicle', 3),
	-- ('2020-01-01', 110000, 'mortgage', 4),
	-- ('2020-01-01', 12000, 'vehicle', 4),
	-- ('2020-01-01', 13000, 'vehicle', 4),
	-- ('2020-01-01', 140000, 'mortgage', 5),
	-- ('2020-01-01', 15000, 'vehicle', 5),
	-- ('2020-01-01', 16000, 'vehicle', 5),
	-- ('2020-01-01', 170000, 'mortgage', 6),
	-- ('2020-01-01', 18000, 'vehicle', 6),
	-- ('2020-01-01', 19000, 'vehicle', 6),
	-- ('2020-01-01', 200000, 'mortgage', 7),
	-- ('2020-01-01', 21000, 'vehicle', 7),
	-- ('2020-01-01', 22000, 'vehicle', 7);
	
	-- CREATE SCHEMA IF NOT EXISTS staff;
	
	-- SET search_path TO public, staff;" at character 1
2023-01-16 16:52:35.624 GMT [39866] STATEMENT:  $$ LANGUAGE plpgsql;
	
	
	
	
	
	-- sample data for customers
	INSERT INTO customer (first_name, last_name, date_of_birth, phone_number, email_address, address_street, address_city, address_county, address_postcode)
	VALUES ('John', 'Smith', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('Jane', 'Doe', '1990-01-01', '01234567890', 'test@gmail.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Bloggs', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('John', 'Bloggs', '1990-01-01', '01234567890', 'hello@yahoo.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('Jane', 'Bloggs', '1990-01-01', '01234567890', 'test@outlook.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Doe', '1990-01-01', '01234567890', 'hello@outlook.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('John', 'Doe', '1990-01-01', '01234567890', 'mybankemail@icloud.com', '1 My Bank Street', 'My Bank City', 'My Bank County', 'MB1 1NK'),
	('Jane', 'Smith', '1990-01-01', '01234567890', 'bankemail@outlook.com', '1 Bank Street', 'Bank City', 'Bank County', 'BA1 1NK'),
	('Joe', 'Smith', '1990-01-01', '01234567890', 'example@icloud.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX');
	
	-- sample data for online account
	INSERT INTO online_account (date_opened, sort_code, customer_id)
	VALUES ('2020-01-01', '123456', 1),
	('2019-01-01', '126485', 2),
	('2018-01-01', '128475', 3),
	('2017-01-01', '129476', 4),
	('2016-01-01', '120386', 5),
	('2017-02-03', '127385', 6),
	('2018-02-04', '128256', 7),
	('2020-01-01', '129386', 8),
	('2020-01-01', '120386', 9);
	
	-- sample data for user login
	INSERT INTO user_login (account_id, username, password)
	VALUES (1, 'johnsmith', 'b29af57c2b3bba21e9df0cece40952c6'),
	(2, 'janedoe', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(3, 'joebloggs', 'b29af57c2b3bba21e9df0cece40952c6'),
	(4, 'johnbloggs', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(5, 'janebloggs', 'b29af57c2b3bba21e9df0cece40952c6'),
	(6, 'joedoe', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(7, 'johndoe', 'b29af57c2b3bba21e9df0cece40952c6'),
	(8, 'joesmith', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(9, 'janesmith', 'b29af57c2b3bba21e9df0cece40952c6');
	
	-- sample data for security question option
	INSERT INTO security_question_option (question_description)
	VALUES ('What is your favourite colour?'),
	('What is your favourite food?'),
	('What is your favourite animal?'),
	('What is your favourite sport?'),
	('What is your favourite movie?'),
	('What is your favourite book?'),
	('What is your favourite song?'),
	('What is your favourite band?'),
	('What is your favourite game?'),
	('What is your favourite TV show?');
	
	--sample data for user login security question
	INSERT INTO user_login_security_question (question_choice_id, login_id)
	VALUES (1, 1),
	(2, 2),
	(3, 3),
	(4, 4),
	(5, 5),
	(6, 6),
	(7, 7),
	(8, 8),
	(9, 9);
	
	-- sample data for security question answer
	INSERT INTO security_question_answer (question_answer, question_id)
	VALUES ('Red', 1),
	('Blue', 2),
	('Green', 3),
	('Yellow', 4),
	('Orange', 5),
	('Purple', 6),
	('Pink', 7),
	('Black', 8),
	('White', 9);
	
	SELECT * FROM savings_statement;
	
	
	SELECT * FROM client.open_savings_account(1);
	
	--sample data for savings account
	SELECT * FROM client.open_savings_account(1);
	SELECT * FROM client.open_savings_account(2);
	SELECT * FROM client.open_savings_account(3);
	SELECT * FROM client.open_savings_account(4);
	
	SELECT * FROM client.open_debit_account(1);
	SELECT * FROM client.open_debit_account(2);
	SELECT * FROM client.open_debit_account(3);
	SELECT * FROM client.open_debit_account(4);
	
	SELECT * FROM client.open_credit_account(1);
	SELECT * FROM client.open_credit_account(2);
	SELECT * FROM client.open_credit_account(3);
	SELECT * FROM client.open_credit_account(4);
	
	SELECT * FROM client.view_accounts(1);
	
	SELECT * FROM client.initiate_transfer(1, 10000000, 100.00, 10000001, 123456);
	
	SELECT * FROM client.view_accounts(1);
	
	
	
	SELECT * FROM client.view_savings_statements(1, 10000000);
	
	SELECT * FROM savings_statement;
	
	-- -- sample data for savings account
	-- INSERT INTO savings_account (current_balance, interest_rate, account_id)
	-- VALUES (2000.00, 2.05, 1),
	-- (1000.00, 2.05, 2),
	-- (5000.00, 2.05, 3),
	-- (10000.00, 2.05, 4),
	-- (20000.00, 2.05, 5),
	-- (50000.00, 2.05, 6),
	-- (100000.00, 2.05, 7),
	-- (200000.00, 2.05, 8);
	
	-- -- sample data for credit account
	-- INSERT INTO credit_account (outstanding_balance, credit_limit, interest_rate, account_id)
	-- VALUES (55.43, 2000.00, 4.22, 1),
	-- (100.00, 1000.00, 4.22, 2),
	-- (200.00, 5000.00, 4.22, 3),
	-- (300.00, 10000.00, 4.22, 4),
	-- (400.00, 20000.00, 4.22, 5),
	-- (500.00, 50000.00, 4.22, 6),
	-- (600.00, 100000.00, 4.22, 7),
	-- (700.00, 200000.00, 4.22, 8);
	
	-- -- sample data for debit account
	-- INSERT INTO debit_account (current_balance, interest_rate, account_id)
	-- VALUES (3465.43, 0.05, 1),
	-- (1000.00, 0.05, 1),
	-- (5000.00, 0.05, 2),
	-- (10000.00, 0.05, 3),
	-- (20000.00, 0.05, 4),
	-- (50000.00, 0.05, 5),
	-- (100000.00, 0.05, 6),
	-- (200000.00, 0.05, 9);
	
	-- -- sample data for loan
	-- INSERT INTO loan (loan_end_date, loan_amount, loan_type, account_id)
	-- VALUES ('2024-01-01', 10000, 'vehicle', 8),
	-- ('2023-03-04', 300000, 'mortgage', 8),
	-- ('2035-03-03', 400000, 'mortgage', 1),
	-- ('2025-04-05', 25000, 'vehicle', 1),
	-- ('2026-05-05', 34000, 'vehicle', 1),
	-- ('2023-06-07', 500000, 'mortgage', 2),
	-- ('2026-04-04', 60000, 'vehicle', 2),
	-- ('2024-03-03', 70000, 'vehicle', 2),
	-- ('2023-02-02', 800000, 'mortgage', 3),
	-- ('2022-01-01', 90000, 'vehicle', 3),
	-- ('2021-01-01', 100000, 'vehicle', 3),
	-- ('2020-01-01', 110000, 'mortgage', 4),
	-- ('2020-01-01', 12000, 'vehicle', 4),
	-- ('2020-01-01', 13000, 'vehicle', 4),
	-- ('2020-01-01', 140000, 'mortgage', 5),
	-- ('2020-01-01', 15000, 'vehicle', 5),
	-- ('2020-01-01', 16000, 'vehicle', 5),
	-- ('2020-01-01', 170000, 'mortgage', 6),
	-- ('2020-01-01', 18000, 'vehicle', 6),
	-- ('2020-01-01', 19000, 'vehicle', 6),
	-- ('2020-01-01', 200000, 'mortgage', 7),
	-- ('2020-01-01', 21000, 'vehicle', 7),
	-- ('2020-01-01', 22000, 'vehicle', 7);
	
	-- CREATE SCHEMA IF NOT EXISTS staff;
	
	-- SET search_path TO public, staff;
2023-01-16 16:53:39.436 GMT [39837] LOG:  received fast shutdown request
2023-01-16 16:53:39.438 GMT [39837] LOG:  aborting any active transactions
2023-01-16 16:53:39.446 GMT [39837] LOG:  background worker "logical replication launcher" (PID 39844) exited with exit code 1
2023-01-16 16:53:39.448 GMT [39839] LOG:  shutting down
2023-01-16 16:53:39.510 GMT [39837] LOG:  database system is shut down
2023-01-16 16:53:41.203 GMT [40129] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 16:53:41.203 GMT [40129] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 16:53:41.205 GMT [40129] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 16:53:41.213 GMT [40130] LOG:  database system was shut down at 2023-01-16 16:53:40 GMT
2023-01-16 16:53:41.222 GMT [40129] LOG:  database system is ready to accept connections
2023-01-16 16:53:42.080 GMT [40168] ERROR:  missing FROM-clause entry for table "account" at character 344
2023-01-16 16:53:42.080 GMT [40168] STATEMENT:  CREATE OR REPLACE VIEW client.debit_accounts AS
	    SELECT account.account_id, account.account_number, debit_account.current_balance, debit_account.interest_rate, debit_overdraft.overdraft_limit, debit_overdraft.overdraft_usage, debit_overdraft.interest_rate AS overdraft_interest_rate
	    FROM client.accounts
	    INNER JOIN debit_account ON account.account_number = debit_account.account_number
	    INNER JOIN debit_overdraft ON account.account_number = debit_overdraft.account_number;
2023-01-16 16:53:42.080 GMT [40168] ERROR:  relation "debit_accounts" does not exist at character 238
2023-01-16 16:53:42.080 GMT [40168] STATEMENT:  CREATE OR REPLACE VIEW client.debit_accounts_statements AS
	    SELECT debit_accounts.account_id, debit_accounts.account_number, debit_statement.id, debit_statement.starting_date, debit_statement.end_date, debit_statement.amount
	    FROM debit_accounts
	    INNER JOIN debit_statement ON debit_accounts.account_number = debit_statement.account_number;
2023-01-16 16:53:42.081 GMT [40168] ERROR:  relation "debit_accounts_statements" does not exist at character 413
2023-01-16 16:53:42.081 GMT [40168] STATEMENT:  CREATE OR REPLACE VIEW client.debit_accounts_statement AS
	    SELECT debit_accounts_statements.account_id, debit_accounts_statements.account_number, debit_accounts_statements.id, debit_accounts_statements.starting_date, debit_accounts_statements.end_date, debit_accounts_statements.amount AS total_amount, transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date
	    FROM debit_accounts_statements
	    INNER JOIN transaction ON debit_accounts_statements.id = transaction.debit_statement_id;
2023-01-16 16:53:42.081 GMT [40168] ERROR:  missing FROM-clause entry for table "account" at character 304
2023-01-16 16:53:42.081 GMT [40168] STATEMENT:  CREATE OR REPLACE VIEW client.credit_accounts AS
	    SELECT account.account_id, account.account_number, credit_account.outstanding_balance, credit_account.credit_limit, credit_account.interest_rate, credit_account_application.application_status
	    FROM client.accounts
	    INNER JOIN credit_account ON account.account_number = credit_account.account_number
	    INNER JOIN credit_account_application ON account.account_number = credit_account_application.account_number;
2023-01-16 16:53:42.081 GMT [40168] ERROR:  relation "credit_accounts" does not exist at character 322
2023-01-16 16:53:42.081 GMT [40168] STATEMENT:  CREATE OR REPLACE VIEW client.credit_accounts_statements AS
	    SELECT credit_accounts.account_id, credit_accounts.account_number, credit_statement.id, credit_statement.starting_date, credit_statement.end_date, credit_statement.amount, credit_statement.minimum_payment, credit_statement.minimum_payment_due_date
	    FROM credit_accounts
	    INNER JOIN credit_statement ON credit_accounts.account_number = credit_statement.account_number;
2023-01-16 16:53:42.081 GMT [40168] ERROR:  relation "credit_accounts_statements" does not exist at character 517
2023-01-16 16:53:42.081 GMT [40168] STATEMENT:  CREATE OR REPLACE VIEW client.credit_accounts_statement AS
	    SELECT credit_accounts_statements.account_id, credit_accounts_statements.account_number, credit_accounts_statements.id, credit_accounts_statements.starting_date, credit_accounts_statements.end_date, credit_accounts_statements.amount AS total_amount, credit_accounts_statements.minimum_payment, credit_accounts_statements.minimum_payment_due_date, transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date
	    FROM credit_accounts_statements
	    INNER JOIN transaction ON credit_accounts_statements.id = transaction.credit_statement_id;
2023-01-16 16:53:42.082 GMT [40168] ERROR:  missing FROM-clause entry for table "account" at character 228
2023-01-16 16:53:42.082 GMT [40168] STATEMENT:  CREATE OR REPLACE VIEW client.savings_accounts AS
	    SELECT account.account_id, account.account_number, savings_account.current_balance, savings_account.interest_rate
	    FROM client.accounts
	    INNER JOIN savings_account ON account.account_number = savings_account.account_number;
2023-01-16 16:53:42.082 GMT [40168] ERROR:  relation "savings_accounts" does not exist at character 252
2023-01-16 16:53:42.082 GMT [40168] STATEMENT:  CREATE OR REPLACE VIEW client.savings_accounts_statements AS
	    SELECT savings_accounts.account_id, savings_accounts.account_number, savings_statement.id, savings_statement.starting_date, savings_statement.end_date, savings_statement.amount
	    FROM savings_accounts
	    INNER JOIN savings_statement ON savings_accounts.account_number = savings_statement.account_number;
2023-01-16 16:53:42.162 GMT [40168] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 236
2023-01-16 16:53:42.162 GMT [40168] HINT:  You will need to rewrite or cast the expression.
2023-01-16 16:53:42.162 GMT [40168] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (date_trunc('month', now()::date), (date_trunc('month', now()::date)) + interval '1 month - 1 day', 0, 0, CURRENT_DATE, credit_account_number)
2023-01-16 16:53:42.162 GMT [40168] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-16 16:53:42.162 GMT [40168] STATEMENT:  SELECT * FROM client.open_credit_account(1);
2023-01-16 16:53:42.163 GMT [40168] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 236
2023-01-16 16:53:42.163 GMT [40168] HINT:  You will need to rewrite or cast the expression.
2023-01-16 16:53:42.163 GMT [40168] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (date_trunc('month', now()::date), (date_trunc('month', now()::date)) + interval '1 month - 1 day', 0, 0, CURRENT_DATE, credit_account_number)
2023-01-16 16:53:42.163 GMT [40168] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-16 16:53:42.163 GMT [40168] STATEMENT:  SELECT * FROM client.open_credit_account(2);
2023-01-16 16:53:42.164 GMT [40168] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 236
2023-01-16 16:53:42.164 GMT [40168] HINT:  You will need to rewrite or cast the expression.
2023-01-16 16:53:42.164 GMT [40168] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (date_trunc('month', now()::date), (date_trunc('month', now()::date)) + interval '1 month - 1 day', 0, 0, CURRENT_DATE, credit_account_number)
2023-01-16 16:53:42.164 GMT [40168] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-16 16:53:42.164 GMT [40168] STATEMENT:  SELECT * FROM client.open_credit_account(3);
2023-01-16 16:53:42.164 GMT [40168] ERROR:  column "minimum_payment_due_date" is of type numeric but expression is of type date at character 236
2023-01-16 16:53:42.164 GMT [40168] HINT:  You will need to rewrite or cast the expression.
2023-01-16 16:53:42.164 GMT [40168] QUERY:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (date_trunc('month', now()::date), (date_trunc('month', now()::date)) + interval '1 month - 1 day', 0, 0, CURRENT_DATE, credit_account_number)
2023-01-16 16:53:42.164 GMT [40168] CONTEXT:  PL/pgSQL function open_credit_account(integer) line 12 at SQL statement
2023-01-16 16:53:42.164 GMT [40168] STATEMENT:  SELECT * FROM client.open_credit_account(4);
2023-01-16 16:53:42.165 GMT [40168] ERROR:  relation "client.credit_accounts" does not exist at character 391
2023-01-16 16:53:42.165 GMT [40168] QUERY:  SELECT account.*, COALESCE(debit_accounts.current_balance, credit_accounts.outstanding_balance, savings_accounts.current_balance) AS balance,
	            COALESCE(debit_accounts.interest_rate, credit_accounts.interest_rate, savings_accounts.interest_rate) AS interest_rate,
	            get_account_type(account.account_number) AS account_type
	            FROM account
	            LEFT JOIN client.credit_accounts ON account.account_number = credit_accounts.account_number
	            LEFT JOIN client.debit_accounts ON account.account_number = debit_accounts.account_number
	            LEFT JOIN client.savings_accounts ON account.account_number = savings_accounts.account_number
	            WHERE account.account_id = account_identifier
2023-01-16 16:53:42.165 GMT [40168] CONTEXT:  PL/pgSQL function view_accounts(integer) line 5 at RETURN QUERY
2023-01-16 16:53:42.165 GMT [40168] STATEMENT:  SELECT * FROM client.view_accounts(1);
2023-01-16 16:53:42.167 GMT [40168] ERROR:  relation "client.debit_accounts" does not exist at character 23
2023-01-16 16:53:42.167 GMT [40168] QUERY:  EXISTS (SELECT * FROM client.debit_accounts WHERE account_id = account_identifier AND account_number = orig_account_number)
2023-01-16 16:53:42.167 GMT [40168] CONTEXT:  PL/pgSQL function place_transaction_into_account(integer,integer,integer,numeric) line 7 at CASE
	SQL statement "SELECT * FROM client.place_transaction_into_account(account_identifier, orig_account_number, transfer_account_number, transfer_amount)"
	PL/pgSQL function initiate_transfer(integer,integer,numeric,integer,integer) line 16 at SQL statement
2023-01-16 16:53:42.167 GMT [40168] STATEMENT:  SELECT * FROM client.initiate_transfer(1, 10000000, 100.00, 10000001, 123456);
2023-01-16 16:53:42.168 GMT [40168] ERROR:  relation "client.credit_accounts" does not exist at character 391
2023-01-16 16:53:42.168 GMT [40168] QUERY:  SELECT account.*, COALESCE(debit_accounts.current_balance, credit_accounts.outstanding_balance, savings_accounts.current_balance) AS balance,
	            COALESCE(debit_accounts.interest_rate, credit_accounts.interest_rate, savings_accounts.interest_rate) AS interest_rate,
	            get_account_type(account.account_number) AS account_type
	            FROM account
	            LEFT JOIN client.credit_accounts ON account.account_number = credit_accounts.account_number
	            LEFT JOIN client.debit_accounts ON account.account_number = debit_accounts.account_number
	            LEFT JOIN client.savings_accounts ON account.account_number = savings_accounts.account_number
	            WHERE account.account_id = account_identifier
2023-01-16 16:53:42.168 GMT [40168] CONTEXT:  PL/pgSQL function view_accounts(integer) line 5 at RETURN QUERY
2023-01-16 16:53:42.168 GMT [40168] STATEMENT:  SELECT * FROM client.view_accounts(1);
2023-01-16 16:53:42.169 GMT [40168] ERROR:  relation "client.savings_accounts_statements" does not exist at character 177
2023-01-16 16:53:42.169 GMT [40168] QUERY:  SELECT savings_accounts_statements.starting_date, savings_accounts_statements.end_date, savings_accounts_statements.amount, savings_accounts_statements.account_id
	        FROM client.savings_accounts_statements
	        WHERE savings_accounts_statements.account_number = orig_account_number
	        AND savings_accounts_statements.account_id = account_identifier
2023-01-16 16:53:42.169 GMT [40168] CONTEXT:  PL/pgSQL function view_savings_statements(integer,integer) line 6 at RETURN QUERY
2023-01-16 16:53:42.169 GMT [40168] STATEMENT:  SELECT * FROM client.view_savings_statements(1, 10000000);
2023-01-16 16:55:12.744 GMT [40129] LOG:  received fast shutdown request
2023-01-16 16:55:12.746 GMT [40129] LOG:  aborting any active transactions
2023-01-16 16:55:12.749 GMT [40129] LOG:  background worker "logical replication launcher" (PID 40136) exited with exit code 1
2023-01-16 16:55:12.753 GMT [40131] LOG:  shutting down
2023-01-16 16:55:12.805 GMT [40129] LOG:  database system is shut down
2023-01-16 16:55:13.918 GMT [40496] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 16:55:13.918 GMT [40496] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 16:55:13.919 GMT [40496] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 16:55:13.924 GMT [40497] LOG:  database system was shut down at 2023-01-16 16:55:13 GMT
2023-01-16 16:55:13.931 GMT [40496] LOG:  database system is ready to accept connections
2023-01-16 16:55:14.694 GMT [40525] ERROR:  missing FROM-clause entry for table "account" at character 344
2023-01-16 16:55:14.694 GMT [40525] STATEMENT:  CREATE OR REPLACE VIEW client.debit_accounts AS
	    SELECT account.account_id, account.account_number, debit_account.current_balance, debit_account.interest_rate, debit_overdraft.overdraft_limit, debit_overdraft.overdraft_usage, debit_overdraft.interest_rate AS overdraft_interest_rate
	    FROM client.accounts
	    INNER JOIN debit_account ON account.account_number = debit_account.account_number
	    INNER JOIN debit_overdraft ON account.account_number = debit_overdraft.account_number;
2023-01-16 16:55:14.694 GMT [40525] ERROR:  relation "debit_accounts" does not exist at character 238
2023-01-16 16:55:14.694 GMT [40525] STATEMENT:  CREATE OR REPLACE VIEW client.debit_accounts_statements AS
	    SELECT debit_accounts.account_id, debit_accounts.account_number, debit_statement.id, debit_statement.starting_date, debit_statement.end_date, debit_statement.amount
	    FROM debit_accounts
	    INNER JOIN debit_statement ON debit_accounts.account_number = debit_statement.account_number;
2023-01-16 16:55:14.694 GMT [40525] ERROR:  relation "debit_accounts_statements" does not exist at character 413
2023-01-16 16:55:14.694 GMT [40525] STATEMENT:  CREATE OR REPLACE VIEW client.debit_accounts_statement AS
	    SELECT debit_accounts_statements.account_id, debit_accounts_statements.account_number, debit_accounts_statements.id, debit_accounts_statements.starting_date, debit_accounts_statements.end_date, debit_accounts_statements.amount AS total_amount, transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date
	    FROM debit_accounts_statements
	    INNER JOIN transaction ON debit_accounts_statements.id = transaction.debit_statement_id;
2023-01-16 16:55:14.694 GMT [40525] ERROR:  missing FROM-clause entry for table "account" at character 304
2023-01-16 16:55:14.694 GMT [40525] STATEMENT:  CREATE OR REPLACE VIEW client.credit_accounts AS
	    SELECT account.account_id, account.account_number, credit_account.outstanding_balance, credit_account.credit_limit, credit_account.interest_rate, credit_account_application.application_status
	    FROM client.accounts
	    INNER JOIN credit_account ON account.account_number = credit_account.account_number
	    INNER JOIN credit_account_application ON account.account_number = credit_account_application.account_number;
2023-01-16 16:55:14.695 GMT [40525] ERROR:  relation "credit_accounts" does not exist at character 322
2023-01-16 16:55:14.695 GMT [40525] STATEMENT:  CREATE OR REPLACE VIEW client.credit_accounts_statements AS
	    SELECT credit_accounts.account_id, credit_accounts.account_number, credit_statement.id, credit_statement.starting_date, credit_statement.end_date, credit_statement.amount, credit_statement.minimum_payment, credit_statement.minimum_payment_due_date
	    FROM credit_accounts
	    INNER JOIN credit_statement ON credit_accounts.account_number = credit_statement.account_number;
2023-01-16 16:55:14.695 GMT [40525] ERROR:  relation "credit_accounts_statements" does not exist at character 517
2023-01-16 16:55:14.695 GMT [40525] STATEMENT:  CREATE OR REPLACE VIEW client.credit_accounts_statement AS
	    SELECT credit_accounts_statements.account_id, credit_accounts_statements.account_number, credit_accounts_statements.id, credit_accounts_statements.starting_date, credit_accounts_statements.end_date, credit_accounts_statements.amount AS total_amount, credit_accounts_statements.minimum_payment, credit_accounts_statements.minimum_payment_due_date, transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date
	    FROM credit_accounts_statements
	    INNER JOIN transaction ON credit_accounts_statements.id = transaction.credit_statement_id;
2023-01-16 16:55:14.695 GMT [40525] ERROR:  missing FROM-clause entry for table "account" at character 228
2023-01-16 16:55:14.695 GMT [40525] STATEMENT:  CREATE OR REPLACE VIEW client.savings_accounts AS
	    SELECT account.account_id, account.account_number, savings_account.current_balance, savings_account.interest_rate
	    FROM client.accounts
	    INNER JOIN savings_account ON account.account_number = savings_account.account_number;
2023-01-16 16:55:14.695 GMT [40525] ERROR:  relation "savings_accounts" does not exist at character 252
2023-01-16 16:55:14.695 GMT [40525] STATEMENT:  CREATE OR REPLACE VIEW client.savings_accounts_statements AS
	    SELECT savings_accounts.account_id, savings_accounts.account_number, savings_statement.id, savings_statement.starting_date, savings_statement.end_date, savings_statement.amount
	    FROM savings_accounts
	    INNER JOIN savings_statement ON savings_accounts.account_number = savings_statement.account_number;
2023-01-16 16:55:14.778 GMT [40525] ERROR:  relation "client.credit_accounts" does not exist at character 391
2023-01-16 16:55:14.778 GMT [40525] QUERY:  SELECT account.*, COALESCE(debit_accounts.current_balance, credit_accounts.outstanding_balance, savings_accounts.current_balance) AS balance,
	            COALESCE(debit_accounts.interest_rate, credit_accounts.interest_rate, savings_accounts.interest_rate) AS interest_rate,
	            get_account_type(account.account_number) AS account_type
	            FROM account
	            LEFT JOIN client.credit_accounts ON account.account_number = credit_accounts.account_number
	            LEFT JOIN client.debit_accounts ON account.account_number = debit_accounts.account_number
	            LEFT JOIN client.savings_accounts ON account.account_number = savings_accounts.account_number
	            WHERE account.account_id = account_identifier
2023-01-16 16:55:14.778 GMT [40525] CONTEXT:  PL/pgSQL function view_accounts(integer) line 5 at RETURN QUERY
2023-01-16 16:55:14.778 GMT [40525] STATEMENT:  SELECT * FROM client.view_accounts(1);
2023-01-16 16:55:14.779 GMT [40525] ERROR:  relation "client.debit_accounts" does not exist at character 23
2023-01-16 16:55:14.779 GMT [40525] QUERY:  EXISTS (SELECT * FROM client.debit_accounts WHERE account_id = account_identifier AND account_number = orig_account_number)
2023-01-16 16:55:14.779 GMT [40525] CONTEXT:  PL/pgSQL function place_transaction_into_account(integer,integer,integer,numeric) line 7 at CASE
	SQL statement "SELECT * FROM client.place_transaction_into_account(account_identifier, orig_account_number, transfer_account_number, transfer_amount)"
	PL/pgSQL function initiate_transfer(integer,integer,numeric,integer,integer) line 16 at SQL statement
2023-01-16 16:55:14.779 GMT [40525] STATEMENT:  SELECT * FROM client.initiate_transfer(1, 10000000, 100.00, 10000001, 123456);
2023-01-16 16:55:14.780 GMT [40525] ERROR:  relation "client.credit_accounts" does not exist at character 391
2023-01-16 16:55:14.780 GMT [40525] QUERY:  SELECT account.*, COALESCE(debit_accounts.current_balance, credit_accounts.outstanding_balance, savings_accounts.current_balance) AS balance,
	            COALESCE(debit_accounts.interest_rate, credit_accounts.interest_rate, savings_accounts.interest_rate) AS interest_rate,
	            get_account_type(account.account_number) AS account_type
	            FROM account
	            LEFT JOIN client.credit_accounts ON account.account_number = credit_accounts.account_number
	            LEFT JOIN client.debit_accounts ON account.account_number = debit_accounts.account_number
	            LEFT JOIN client.savings_accounts ON account.account_number = savings_accounts.account_number
	            WHERE account.account_id = account_identifier
2023-01-16 16:55:14.780 GMT [40525] CONTEXT:  PL/pgSQL function view_accounts(integer) line 5 at RETURN QUERY
2023-01-16 16:55:14.780 GMT [40525] STATEMENT:  SELECT * FROM client.view_accounts(1);
2023-01-16 16:55:14.780 GMT [40525] ERROR:  relation "client.savings_accounts_statements" does not exist at character 177
2023-01-16 16:55:14.780 GMT [40525] QUERY:  SELECT savings_accounts_statements.starting_date, savings_accounts_statements.end_date, savings_accounts_statements.amount, savings_accounts_statements.account_id
	        FROM client.savings_accounts_statements
	        WHERE savings_accounts_statements.account_number = orig_account_number
	        AND savings_accounts_statements.account_id = account_identifier
2023-01-16 16:55:14.780 GMT [40525] CONTEXT:  PL/pgSQL function view_savings_statements(integer,integer) line 6 at RETURN QUERY
2023-01-16 16:55:14.780 GMT [40525] STATEMENT:  SELECT * FROM client.view_savings_statements(1, 10000000);
2023-01-16 16:57:28.814 GMT [40496] LOG:  received fast shutdown request
2023-01-16 16:57:28.816 GMT [40496] LOG:  aborting any active transactions
2023-01-16 16:57:28.822 GMT [40496] LOG:  background worker "logical replication launcher" (PID 40503) exited with exit code 1
2023-01-16 16:57:28.824 GMT [40498] LOG:  shutting down
2023-01-16 16:57:28.872 GMT [40496] LOG:  database system is shut down
2023-01-16 16:57:30.051 GMT [41025] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 16:57:30.051 GMT [41025] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 16:57:30.053 GMT [41025] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 16:57:30.058 GMT [41026] LOG:  database system was shut down at 2023-01-16 16:57:29 GMT
2023-01-16 16:57:30.065 GMT [41025] LOG:  database system is ready to accept connections
2023-01-16 16:57:30.954 GMT [41054] ERROR:  missing FROM-clause entry for table "account" at character 228
2023-01-16 16:57:30.954 GMT [41054] STATEMENT:  CREATE OR REPLACE VIEW client.savings_accounts AS
	    SELECT account.account_id, account.account_number, savings_account.current_balance, savings_account.interest_rate
	    FROM client.accounts
	    INNER JOIN savings_account ON account.account_number = savings_account.account_number;
2023-01-16 16:57:30.954 GMT [41054] ERROR:  relation "savings_accounts" does not exist at character 252
2023-01-16 16:57:30.954 GMT [41054] STATEMENT:  CREATE OR REPLACE VIEW client.savings_accounts_statements AS
	    SELECT savings_accounts.account_id, savings_accounts.account_number, savings_statement.id, savings_statement.starting_date, savings_statement.end_date, savings_statement.amount
	    FROM savings_accounts
	    INNER JOIN savings_statement ON savings_accounts.account_number = savings_statement.account_number;
2023-01-16 16:57:31.060 GMT [41054] ERROR:  relation "client.savings_accounts" does not exist at character 597
2023-01-16 16:57:31.060 GMT [41054] QUERY:  SELECT account.*, COALESCE(debit_accounts.current_balance, credit_accounts.outstanding_balance, savings_accounts.current_balance) AS balance,
	            COALESCE(debit_accounts.interest_rate, credit_accounts.interest_rate, savings_accounts.interest_rate) AS interest_rate,
	            get_account_type(account.account_number) AS account_type
	            FROM account
	            LEFT JOIN client.credit_accounts ON account.account_number = credit_accounts.account_number
	            LEFT JOIN client.debit_accounts ON account.account_number = debit_accounts.account_number
	            LEFT JOIN client.savings_accounts ON account.account_number = savings_accounts.account_number
	            WHERE account.account_id = account_identifier
2023-01-16 16:57:31.060 GMT [41054] CONTEXT:  PL/pgSQL function view_accounts(integer) line 5 at RETURN QUERY
2023-01-16 16:57:31.060 GMT [41054] STATEMENT:  SELECT * FROM client.view_accounts(1);
2023-01-16 16:57:31.063 GMT [41054] ERROR:  relation "client.savings_accounts" does not exist at character 23
2023-01-16 16:57:31.063 GMT [41054] QUERY:  EXISTS (SELECT * FROM client.savings_accounts WHERE account_id = account_identifier AND account_number = orig_account_number)
2023-01-16 16:57:31.063 GMT [41054] CONTEXT:  PL/pgSQL function place_transaction_into_account(integer,integer,integer,numeric) line 7 at CASE
	SQL statement "SELECT * FROM client.place_transaction_into_account(account_identifier, orig_account_number, transfer_account_number, transfer_amount)"
	PL/pgSQL function initiate_transfer(integer,integer,numeric,integer,integer) line 16 at SQL statement
2023-01-16 16:57:31.063 GMT [41054] STATEMENT:  SELECT * FROM client.initiate_transfer(1, 10000000, 100.00, 10000001, 123456);
2023-01-16 16:57:31.064 GMT [41054] ERROR:  relation "client.savings_accounts" does not exist at character 597
2023-01-16 16:57:31.064 GMT [41054] QUERY:  SELECT account.*, COALESCE(debit_accounts.current_balance, credit_accounts.outstanding_balance, savings_accounts.current_balance) AS balance,
	            COALESCE(debit_accounts.interest_rate, credit_accounts.interest_rate, savings_accounts.interest_rate) AS interest_rate,
	            get_account_type(account.account_number) AS account_type
	            FROM account
	            LEFT JOIN client.credit_accounts ON account.account_number = credit_accounts.account_number
	            LEFT JOIN client.debit_accounts ON account.account_number = debit_accounts.account_number
	            LEFT JOIN client.savings_accounts ON account.account_number = savings_accounts.account_number
	            WHERE account.account_id = account_identifier
2023-01-16 16:57:31.064 GMT [41054] CONTEXT:  PL/pgSQL function view_accounts(integer) line 5 at RETURN QUERY
2023-01-16 16:57:31.064 GMT [41054] STATEMENT:  SELECT * FROM client.view_accounts(1);
2023-01-16 16:57:31.064 GMT [41054] ERROR:  relation "client.savings_accounts_statements" does not exist at character 177
2023-01-16 16:57:31.064 GMT [41054] QUERY:  SELECT savings_accounts_statements.starting_date, savings_accounts_statements.end_date, savings_accounts_statements.amount, savings_accounts_statements.account_id
	        FROM client.savings_accounts_statements
	        WHERE savings_accounts_statements.account_number = orig_account_number
	        AND savings_accounts_statements.account_id = account_identifier
2023-01-16 16:57:31.064 GMT [41054] CONTEXT:  PL/pgSQL function view_savings_statements(integer,integer) line 6 at RETURN QUERY
2023-01-16 16:57:31.064 GMT [41054] STATEMENT:  SELECT * FROM client.view_savings_statements(1, 10000000);
2023-01-16 16:57:50.857 GMT [41025] LOG:  received fast shutdown request
2023-01-16 16:57:50.859 GMT [41025] LOG:  aborting any active transactions
2023-01-16 16:57:50.861 GMT [41025] LOG:  background worker "logical replication launcher" (PID 41032) exited with exit code 1
2023-01-16 16:57:50.864 GMT [41027] LOG:  shutting down
2023-01-16 16:57:50.910 GMT [41025] LOG:  database system is shut down
2023-01-16 16:57:52.056 GMT [41202] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 16:57:52.056 GMT [41202] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 16:57:52.062 GMT [41202] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 16:57:52.067 GMT [41203] LOG:  database system was shut down at 2023-01-16 16:57:51 GMT
2023-01-16 16:57:52.072 GMT [41202] LOG:  database system is ready to accept connections
2023-01-16 18:01:04.083 GMT [41202] LOG:  received fast shutdown request
2023-01-16 18:01:04.084 GMT [41202] LOG:  aborting any active transactions
2023-01-16 18:01:04.090 GMT [41202] LOG:  background worker "logical replication launcher" (PID 41209) exited with exit code 1
2023-01-16 18:01:04.093 GMT [41204] LOG:  shutting down
2023-01-16 18:01:04.112 GMT [41202] LOG:  database system is shut down
2023-01-16 18:01:16.865 GMT [51170] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 18:01:16.865 GMT [51170] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 18:01:16.867 GMT [51170] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 18:01:16.871 GMT [51171] LOG:  database system was shut down at 2023-01-16 18:01:16 GMT
2023-01-16 18:01:16.877 GMT [51170] LOG:  database system is ready to accept connections
2023-01-16 18:01:17.762 GMT [51209] ERROR:  column "transaction_id" of relation "pending_transaction" does not exist at character 34
2023-01-16 18:01:17.762 GMT [51209] QUERY:  INSERT INTO pending_transaction (transaction_id, account_id, is_transfer) VALUES (transaction_id, orig_account_number, true)
2023-01-16 18:01:17.762 GMT [51209] CONTEXT:  PL/pgSQL function place_transaction_into_account(integer,integer,integer,numeric) line 27 at SQL statement
	SQL statement "SELECT * FROM client.place_transaction_into_account(account_identifier, orig_account_number, transfer_account_number, transfer_amount)"
	PL/pgSQL function initiate_transfer(integer,integer,numeric,integer,integer) line 16 at SQL statement
2023-01-16 18:01:17.762 GMT [51209] STATEMENT:  SELECT * FROM client.initiate_transfer(1, 10000000, 100.00, 10000001, 123456);
2023-01-16 18:02:25.747 GMT [51170] LOG:  received fast shutdown request
2023-01-16 18:02:25.748 GMT [51170] LOG:  aborting any active transactions
2023-01-16 18:02:25.753 GMT [51170] LOG:  background worker "logical replication launcher" (PID 51177) exited with exit code 1
2023-01-16 18:02:25.753 GMT [51172] LOG:  shutting down
2023-01-16 18:02:25.803 GMT [51170] LOG:  database system is shut down
2023-01-16 18:02:26.894 GMT [51503] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 18:02:26.894 GMT [51503] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 18:02:26.896 GMT [51503] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 18:02:26.902 GMT [51504] LOG:  database system was shut down at 2023-01-16 18:02:26 GMT
2023-01-16 18:02:26.907 GMT [51503] LOG:  database system is ready to accept connections
2023-01-16 18:02:27.701 GMT [51529] ERROR:  insert or update on table "pending_transaction" violates foreign key constraint "pending_transaction_account_id_fkey"
2023-01-16 18:02:27.701 GMT [51529] DETAIL:  Key (account_id)=(10000000) is not present in table "account".
2023-01-16 18:02:27.701 GMT [51529] CONTEXT:  SQL statement "INSERT INTO pending_transaction (id, account_id, is_transfer) VALUES (transaction_id, orig_account_number, true)"
	PL/pgSQL function place_transaction_into_account(integer,integer,integer,numeric) line 27 at SQL statement
	SQL statement "SELECT * FROM client.place_transaction_into_account(account_identifier, orig_account_number, transfer_account_number, transfer_amount)"
	PL/pgSQL function initiate_transfer(integer,integer,numeric,integer,integer) line 16 at SQL statement
2023-01-16 18:02:27.701 GMT [51529] STATEMENT:  SELECT * FROM client.initiate_transfer(1, 10000000, 100.00, 10000001, 123456);
2023-01-16 18:05:18.955 GMT [51503] LOG:  received fast shutdown request
2023-01-16 18:05:18.956 GMT [51503] LOG:  aborting any active transactions
2023-01-16 18:05:18.960 GMT [51503] LOG:  background worker "logical replication launcher" (PID 51510) exited with exit code 1
2023-01-16 18:05:18.962 GMT [51505] LOG:  shutting down
2023-01-16 18:05:19.014 GMT [51503] LOG:  database system is shut down
2023-01-16 18:05:20.106 GMT [52102] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 18:05:20.106 GMT [52102] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 18:05:20.108 GMT [52102] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 18:05:20.112 GMT [52103] LOG:  database system was shut down at 2023-01-16 18:05:19 GMT
2023-01-16 18:05:20.120 GMT [52102] LOG:  database system is ready to accept connections
2023-01-16 18:05:20.752 GMT [52128] ERROR:  syntax error at or near "account_id" at character 120
2023-01-16 18:05:20.752 GMT [52128] STATEMENT:  CREATE TABLE IF NOT EXISTS pending_transaction (
	    id SERIAL PRIMARY KEY REFERENCES transaction(id),
	    FOREIGN KEY account_id INT REFERENCES account(account_number),
	    is_transfer BOOLEAN
	);
2023-01-16 18:05:20.810 GMT [52128] ERROR:  relation "pending_transaction" does not exist at character 315
2023-01-16 18:05:20.810 GMT [52128] STATEMENT:  CREATE OR REPLACE VIEW bank.pending_transactions AS
	    SELECT pending_transaction.id, transaction.origin_account_id, transaction.dest_account_id, transaction.dest_account_sort_code as sort_code, transaction.amount, transaction.date, get_account_type(transaction.origin_account_id) AS origin_account_type
	    FROM pending_transaction
	    INNER JOIN transaction ON pending_transaction.id = transaction.id;
2023-01-16 18:05:20.955 GMT [52128] ERROR:  relation "pending_transaction" does not exist at character 13
2023-01-16 18:05:20.955 GMT [52128] QUERY:  INSERT INTO pending_transaction (id, account_id, is_transfer) VALUES (transaction_id, orig_account_number, true)
2023-01-16 18:05:20.955 GMT [52128] CONTEXT:  PL/pgSQL function place_transaction_into_account(integer,integer,integer,numeric) line 27 at SQL statement
	SQL statement "SELECT * FROM client.place_transaction_into_account(account_identifier, orig_account_number, transfer_account_number, transfer_amount)"
	PL/pgSQL function initiate_transfer(integer,integer,numeric,integer,integer) line 16 at SQL statement
2023-01-16 18:05:20.955 GMT [52128] STATEMENT:  SELECT * FROM client.initiate_transfer(1, 10000000, 100.00, 10000001, 123456);
2023-01-16 18:05:58.672 GMT [52102] LOG:  received fast shutdown request
2023-01-16 18:05:58.674 GMT [52102] LOG:  aborting any active transactions
2023-01-16 18:05:58.678 GMT [52102] LOG:  background worker "logical replication launcher" (PID 52109) exited with exit code 1
2023-01-16 18:05:58.680 GMT [52104] LOG:  shutting down
2023-01-16 18:05:58.735 GMT [52102] LOG:  database system is shut down
2023-01-16 18:05:59.740 GMT [52315] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 18:05:59.741 GMT [52315] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 18:05:59.742 GMT [52315] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 18:05:59.746 GMT [52316] LOG:  database system was shut down at 2023-01-16 18:05:59 GMT
2023-01-16 18:05:59.751 GMT [52315] LOG:  database system is ready to accept connections
2023-01-16 18:06:00.603 GMT [52341] ERROR:  insert or update on table "pending_transaction" violates foreign key constraint "pending_transaction_account_id_fkey"
2023-01-16 18:06:00.603 GMT [52341] DETAIL:  Key (account_id)=(10000000) is not present in table "account".
2023-01-16 18:06:00.603 GMT [52341] CONTEXT:  SQL statement "INSERT INTO pending_transaction (id, account_id, is_transfer) VALUES (transaction_id, orig_account_number, true)"
	PL/pgSQL function place_transaction_into_account(integer,integer,integer,numeric) line 27 at SQL statement
	SQL statement "SELECT * FROM client.place_transaction_into_account(account_identifier, orig_account_number, transfer_account_number, transfer_amount)"
	PL/pgSQL function initiate_transfer(integer,integer,numeric,integer,integer) line 16 at SQL statement
2023-01-16 18:06:00.603 GMT [52341] STATEMENT:  SELECT * FROM client.initiate_transfer(1, 10000000, 100.00, 10000001, 123456);
2023-01-16 18:17:40.058 GMT [52315] LOG:  received fast shutdown request
2023-01-16 18:17:40.060 GMT [52315] LOG:  aborting any active transactions
2023-01-16 18:17:40.064 GMT [52315] LOG:  background worker "logical replication launcher" (PID 52322) exited with exit code 1
2023-01-16 18:17:40.066 GMT [52317] LOG:  shutting down
2023-01-16 18:17:40.078 GMT [52315] LOG:  database system is shut down
2023-01-16 18:17:41.262 GMT [54389] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 18:17:41.263 GMT [54389] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 18:17:41.269 GMT [54389] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 18:17:41.273 GMT [54390] LOG:  database system was shut down at 2023-01-16 18:17:40 GMT
2023-01-16 18:17:41.280 GMT [54389] LOG:  database system is ready to accept connections
2023-01-16 18:17:42.037 GMT [54415] ERROR:  insert or update on table "pending_transaction" violates foreign key constraint "pending_transaction_account_id_fkey"
2023-01-16 18:17:42.037 GMT [54415] DETAIL:  Key (account_id)=(10000000) is not present in table "account".
2023-01-16 18:17:42.037 GMT [54415] CONTEXT:  SQL statement "INSERT INTO pending_transaction (id, account_id, is_transfer) VALUES (transaction_id, orig_account_number, true)"
	PL/pgSQL function place_transaction_into_account(integer,integer,integer,numeric) line 27 at SQL statement
	SQL statement "SELECT * FROM client.place_transaction_into_account(account_identifier, orig_account_number, transfer_account_number, transfer_amount)"
	PL/pgSQL function initiate_transfer(integer,integer,numeric,integer,integer) line 16 at SQL statement
2023-01-16 18:17:42.037 GMT [54415] STATEMENT:  SELECT * FROM client.initiate_transfer(1, 10000000, 100.00, 10000001, 123456);
2023-01-16 18:18:33.172 GMT [54389] LOG:  received fast shutdown request
2023-01-16 18:18:33.174 GMT [54389] LOG:  aborting any active transactions
2023-01-16 18:18:33.181 GMT [54389] LOG:  background worker "logical replication launcher" (PID 54396) exited with exit code 1
2023-01-16 18:18:33.181 GMT [54391] LOG:  shutting down
2023-01-16 18:18:33.235 GMT [54389] LOG:  database system is shut down
2023-01-16 18:18:34.394 GMT [54639] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 18:18:34.394 GMT [54639] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 18:18:34.397 GMT [54639] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 18:18:34.402 GMT [54640] LOG:  database system was shut down at 2023-01-16 18:18:34 GMT
2023-01-16 18:18:34.409 GMT [54639] LOG:  database system is ready to accept connections
2023-01-16 18:18:35.431 GMT [54672] ERROR:  insert or update on table "pending_transaction" violates foreign key constraint "pending_transaction_account_id_fkey"
2023-01-16 18:18:35.431 GMT [54672] DETAIL:  Key (account_id)=(10000001) is not present in table "account".
2023-01-16 18:18:35.431 GMT [54672] CONTEXT:  SQL statement "INSERT INTO pending_transaction (id, account_id, is_transfer) VALUES (transaction_id, orig_account_number, true)"
	PL/pgSQL function place_transaction_into_account(integer,integer,integer,numeric) line 27 at SQL statement
	SQL statement "SELECT * FROM client.place_transaction_into_account(account_identifier, orig_account_number, transfer_account_number, transfer_amount)"
	PL/pgSQL function initiate_transfer(integer,integer,numeric,integer,integer) line 16 at SQL statement
2023-01-16 18:18:35.431 GMT [54672] STATEMENT:  SELECT * FROM client.initiate_transfer(1, 10000001, 100.00, 10000000, 123456);
2023-01-16 18:20:10.408 GMT [54639] LOG:  received fast shutdown request
2023-01-16 18:20:10.412 GMT [54639] LOG:  aborting any active transactions
2023-01-16 18:20:10.416 GMT [54639] LOG:  background worker "logical replication launcher" (PID 54646) exited with exit code 1
2023-01-16 18:20:10.416 GMT [54641] LOG:  shutting down
2023-01-16 18:20:10.462 GMT [54639] LOG:  database system is shut down
2023-01-16 18:20:11.610 GMT [55027] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 18:20:11.610 GMT [55027] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 18:20:11.612 GMT [55027] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 18:20:11.617 GMT [55028] LOG:  database system was shut down at 2023-01-16 18:20:11 GMT
2023-01-16 18:20:11.626 GMT [55027] LOG:  database system is ready to accept connections
2023-01-16 18:20:36.516 GMT [55027] LOG:  received fast shutdown request
2023-01-16 18:20:36.518 GMT [55027] LOG:  aborting any active transactions
2023-01-16 18:20:36.520 GMT [55027] LOG:  background worker "logical replication launcher" (PID 55034) exited with exit code 1
2023-01-16 18:20:36.525 GMT [55029] LOG:  shutting down
2023-01-16 18:20:36.573 GMT [55027] LOG:  database system is shut down
2023-01-16 18:20:37.668 GMT [55231] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 18:20:37.669 GMT [55231] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 18:20:37.670 GMT [55231] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 18:20:37.675 GMT [55232] LOG:  database system was shut down at 2023-01-16 18:20:37 GMT
2023-01-16 18:20:37.680 GMT [55231] LOG:  database system is ready to accept connections
2023-01-16 18:23:27.510 GMT [55231] LOG:  received fast shutdown request
2023-01-16 18:23:27.512 GMT [55231] LOG:  aborting any active transactions
2023-01-16 18:23:27.515 GMT [55231] LOG:  background worker "logical replication launcher" (PID 55238) exited with exit code 1
2023-01-16 18:23:27.519 GMT [55233] LOG:  shutting down
2023-01-16 18:23:27.570 GMT [55231] LOG:  database system is shut down
2023-01-16 18:23:28.628 GMT [55861] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 18:23:28.628 GMT [55861] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 18:23:28.630 GMT [55861] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 18:23:28.634 GMT [55862] LOG:  database system was shut down at 2023-01-16 18:23:28 GMT
2023-01-16 18:23:28.642 GMT [55861] LOG:  database system is ready to accept connections
2023-01-16 18:24:23.996 GMT [55861] LOG:  received fast shutdown request
2023-01-16 18:24:24.001 GMT [55861] LOG:  aborting any active transactions
2023-01-16 18:24:24.007 GMT [55861] LOG:  background worker "logical replication launcher" (PID 55868) exited with exit code 1
2023-01-16 18:24:24.007 GMT [55863] LOG:  shutting down
2023-01-16 18:24:24.060 GMT [55861] LOG:  database system is shut down
2023-01-16 18:24:25.158 GMT [56154] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 18:24:25.158 GMT [56154] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 18:24:25.159 GMT [56154] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 18:24:25.163 GMT [56155] LOG:  database system was shut down at 2023-01-16 18:24:24 GMT
2023-01-16 18:24:25.168 GMT [56154] LOG:  database system is ready to accept connections
2023-01-16 18:25:20.536 GMT [56154] LOG:  received fast shutdown request
2023-01-16 18:25:20.538 GMT [56154] LOG:  aborting any active transactions
2023-01-16 18:25:20.544 GMT [56154] LOG:  background worker "logical replication launcher" (PID 56161) exited with exit code 1
2023-01-16 18:25:20.545 GMT [56156] LOG:  shutting down
2023-01-16 18:25:20.589 GMT [56154] LOG:  database system is shut down
2023-01-16 18:25:21.616 GMT [56424] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 18:25:21.617 GMT [56424] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 18:25:21.618 GMT [56424] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 18:25:21.623 GMT [56425] LOG:  database system was shut down at 2023-01-16 18:25:21 GMT
2023-01-16 18:25:21.628 GMT [56424] LOG:  database system is ready to accept connections
2023-01-16 18:26:19.493 GMT [56424] LOG:  received fast shutdown request
2023-01-16 18:26:19.495 GMT [56424] LOG:  aborting any active transactions
2023-01-16 18:26:19.500 GMT [56424] LOG:  background worker "logical replication launcher" (PID 56431) exited with exit code 1
2023-01-16 18:26:19.500 GMT [56426] LOG:  shutting down
2023-01-16 18:26:19.541 GMT [56424] LOG:  database system is shut down
2023-01-16 18:26:20.617 GMT [56687] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 18:26:20.618 GMT [56687] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 18:26:20.619 GMT [56687] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 18:26:20.624 GMT [56688] LOG:  database system was shut down at 2023-01-16 18:26:20 GMT
2023-01-16 18:26:20.630 GMT [56687] LOG:  database system is ready to accept connections
2023-01-16 18:26:21.441 GMT [56713] ERROR:  insert or update on table "pending_transaction" violates foreign key constraint "pending_transaction_account_id_fkey"
2023-01-16 18:26:21.441 GMT [56713] DETAIL:  Key (account_id)=(10000001) is not present in table "account".
2023-01-16 18:26:21.441 GMT [56713] CONTEXT:  SQL statement "INSERT INTO pending_transaction (id, account_id, is_transfer) VALUES (transaction_id, orig_account_number, true)"
	PL/pgSQL function place_transaction_into_account(integer,integer,integer,numeric,integer) line 27 at SQL statement
	SQL statement "SELECT * FROM client.place_transaction_into_account(account_identifier, orig_account_number, transfer_account_number, transfer_amount, transfer_account_sort_code)"
	PL/pgSQL function initiate_transfer(integer,integer,numeric,integer,integer) line 16 at SQL statement
2023-01-16 18:26:21.441 GMT [56713] STATEMENT:  SELECT * FROM client.initiate_transfer(1, 10000001, 100.00, 10000000, 123456);
2023-01-16 18:29:13.814 GMT [56687] LOG:  received fast shutdown request
2023-01-16 18:29:13.815 GMT [56687] LOG:  aborting any active transactions
2023-01-16 18:29:13.820 GMT [56687] LOG:  background worker "logical replication launcher" (PID 56694) exited with exit code 1
2023-01-16 18:29:13.820 GMT [56689] LOG:  shutting down
2023-01-16 18:29:13.865 GMT [56687] LOG:  database system is shut down
2023-01-16 18:29:14.878 GMT [57292] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 18:29:14.878 GMT [57292] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 18:29:14.879 GMT [57292] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 18:29:14.884 GMT [57293] LOG:  database system was shut down at 2023-01-16 18:29:14 GMT
2023-01-16 18:29:14.890 GMT [57292] LOG:  database system is ready to accept connections
2023-01-16 18:29:15.639 GMT [57318] ERROR:  insert or update on table "pending_transaction" violates foreign key constraint "pending_transaction_account_id_fkey"
2023-01-16 18:29:15.639 GMT [57318] DETAIL:  Key (account_id)=(10000001) is not present in table "account".
2023-01-16 18:29:15.639 GMT [57318] CONTEXT:  SQL statement "INSERT INTO pending_transaction (id, account_id, is_transfer) VALUES (transaction_id, orig_account_number, true)"
	PL/pgSQL function place_transaction_into_account(integer,integer,integer,numeric,integer) line 27 at SQL statement
	SQL statement "SELECT * FROM client.place_transaction_into_account(account_identifier, orig_account_number, transfer_account_number, transfer_amount, transfer_account_sort_code)"
	PL/pgSQL function initiate_transfer(integer,integer,numeric,integer,integer) line 16 at SQL statement
2023-01-16 18:29:15.639 GMT [57318] STATEMENT:  SELECT * FROM client.initiate_transfer(1, 10000001, 100.00, 10000000, 123456);
2023-01-16 18:37:51.899 GMT [57292] LOG:  received fast shutdown request
2023-01-16 18:37:51.902 GMT [57292] LOG:  aborting any active transactions
2023-01-16 18:37:51.907 GMT [57292] LOG:  background worker "logical replication launcher" (PID 57299) exited with exit code 1
2023-01-16 18:37:51.907 GMT [57294] LOG:  shutting down
2023-01-16 18:37:51.925 GMT [57292] LOG:  database system is shut down
2023-01-16 18:37:53.079 GMT [58869] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 18:37:53.080 GMT [58869] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 18:37:53.081 GMT [58869] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 18:37:53.085 GMT [58870] LOG:  database system was shut down at 2023-01-16 18:37:52 GMT
2023-01-16 18:37:53.091 GMT [58869] LOG:  database system is ready to accept connections
2023-01-16 18:37:53.941 GMT [58895] ERROR:  insert or update on table "pending_transaction" violates foreign key constraint "pending_transaction_account_id_fkey"
2023-01-16 18:37:53.941 GMT [58895] DETAIL:  Key (account_id)=(10000001) is not present in table "account".
2023-01-16 18:37:53.941 GMT [58895] STATEMENT:  INSERT INTO pending_transaction(id, account_id, is_transfer) VALUES (1, 10000001, true);
2023-01-16 18:38:58.513 GMT [58869] LOG:  received fast shutdown request
2023-01-16 18:38:58.514 GMT [58869] LOG:  aborting any active transactions
2023-01-16 18:38:58.518 GMT [58869] LOG:  background worker "logical replication launcher" (PID 58876) exited with exit code 1
2023-01-16 18:38:58.519 GMT [58871] LOG:  shutting down
2023-01-16 18:38:58.564 GMT [58869] LOG:  database system is shut down
2023-01-16 18:38:59.616 GMT [59180] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 18:38:59.617 GMT [59180] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 18:38:59.628 GMT [59180] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 18:38:59.634 GMT [59181] LOG:  database system was shut down at 2023-01-16 18:38:59 GMT
2023-01-16 18:38:59.639 GMT [59180] LOG:  database system is ready to accept connections
2023-01-16 18:39:35.957 GMT [59180] LOG:  received fast shutdown request
2023-01-16 18:39:35.958 GMT [59180] LOG:  aborting any active transactions
2023-01-16 18:39:35.962 GMT [59180] LOG:  background worker "logical replication launcher" (PID 59187) exited with exit code 1
2023-01-16 18:39:35.964 GMT [59182] LOG:  shutting down
2023-01-16 18:39:36.007 GMT [59180] LOG:  database system is shut down
2023-01-16 18:39:37.084 GMT [59385] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 18:39:37.084 GMT [59385] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 18:39:37.086 GMT [59385] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 18:39:37.089 GMT [59386] LOG:  database system was shut down at 2023-01-16 18:39:36 GMT
2023-01-16 18:39:37.095 GMT [59385] LOG:  database system is ready to accept connections
2023-01-16 18:48:22.650 GMT [59385] LOG:  received fast shutdown request
2023-01-16 18:48:22.652 GMT [59385] LOG:  aborting any active transactions
2023-01-16 18:48:22.657 GMT [59385] LOG:  background worker "logical replication launcher" (PID 59392) exited with exit code 1
2023-01-16 18:48:22.657 GMT [59387] LOG:  shutting down
2023-01-16 18:48:22.672 GMT [59385] LOG:  database system is shut down
2023-01-16 18:48:23.826 GMT [60886] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 18:48:23.826 GMT [60886] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 18:48:23.830 GMT [60886] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 18:48:23.833 GMT [60887] LOG:  database system was shut down at 2023-01-16 18:48:23 GMT
2023-01-16 18:48:23.840 GMT [60886] LOG:  database system is ready to accept connections
2023-01-16 18:52:09.595 GMT [60886] LOG:  received fast shutdown request
2023-01-16 18:52:09.597 GMT [60886] LOG:  aborting any active transactions
2023-01-16 18:52:09.602 GMT [60886] LOG:  background worker "logical replication launcher" (PID 60893) exited with exit code 1
2023-01-16 18:52:09.602 GMT [60888] LOG:  shutting down
2023-01-16 18:52:09.651 GMT [60886] LOG:  database system is shut down
2023-01-16 18:52:10.802 GMT [61694] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 18:52:10.803 GMT [61694] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 18:52:10.804 GMT [61694] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 18:52:10.808 GMT [61695] LOG:  database system was shut down at 2023-01-16 18:52:10 GMT
2023-01-16 18:52:10.814 GMT [61694] LOG:  database system is ready to accept connections
2023-01-16 18:52:11.663 GMT [61723] ERROR:  account_id 10000001 does not exist
2023-01-16 18:52:11.663 GMT [61723] CONTEXT:  PL/pgSQL function pseudo_fk_account_id() line 4 at RAISE
2023-01-16 18:52:11.663 GMT [61723] STATEMENT:  INSERT INTO pending_transaction(id, account_id, is_transfer) VALUES (1, 10000001, true);
2023-01-16 18:52:48.772 GMT [61694] LOG:  received fast shutdown request
2023-01-16 18:52:48.774 GMT [61694] LOG:  aborting any active transactions
2023-01-16 18:52:48.776 GMT [61694] LOG:  background worker "logical replication launcher" (PID 61701) exited with exit code 1
2023-01-16 18:52:48.779 GMT [61696] LOG:  shutting down
2023-01-16 18:52:48.824 GMT [61694] LOG:  database system is shut down
2023-01-16 18:52:49.819 GMT [62390] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 18:52:49.820 GMT [62390] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 18:52:49.821 GMT [62390] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 18:52:49.825 GMT [62391] LOG:  database system was shut down at 2023-01-16 18:52:49 GMT
2023-01-16 18:52:49.832 GMT [62390] LOG:  database system is ready to accept connections
2023-01-16 18:53:21.047 GMT [62390] LOG:  received fast shutdown request
2023-01-16 18:53:21.049 GMT [62390] LOG:  aborting any active transactions
2023-01-16 18:53:21.054 GMT [62390] LOG:  background worker "logical replication launcher" (PID 62397) exited with exit code 1
2023-01-16 18:53:21.055 GMT [62392] LOG:  shutting down
2023-01-16 18:53:21.104 GMT [62390] LOG:  database system is shut down
2023-01-16 18:53:22.188 GMT [62583] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 18:53:22.188 GMT [62583] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 18:53:22.191 GMT [62583] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 18:53:22.196 GMT [62584] LOG:  database system was shut down at 2023-01-16 18:53:21 GMT
2023-01-16 18:53:22.202 GMT [62583] LOG:  database system is ready to accept connections
2023-01-16 18:53:23.048 GMT [62612] ERROR:  account_id 10000001 does not exist
2023-01-16 18:53:23.048 GMT [62612] CONTEXT:  PL/pgSQL function pseudo_fk_account_id() line 4 at RAISE
2023-01-16 18:53:23.048 GMT [62612] STATEMENT:  INSERT INTO pending_transaction(id, account_id, is_transfer) VALUES (1, 10000001, true);
2023-01-16 18:53:29.995 GMT [62583] LOG:  received fast shutdown request
2023-01-16 18:53:29.997 GMT [62583] LOG:  aborting any active transactions
2023-01-16 18:53:30.002 GMT [62583] LOG:  background worker "logical replication launcher" (PID 62590) exited with exit code 1
2023-01-16 18:53:30.002 GMT [62585] LOG:  shutting down
2023-01-16 18:53:30.064 GMT [62583] LOG:  database system is shut down
2023-01-16 18:53:31.093 GMT [62709] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 18:53:31.093 GMT [62709] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 18:53:31.094 GMT [62709] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 18:53:31.098 GMT [62710] LOG:  database system was shut down at 2023-01-16 18:53:30 GMT
2023-01-16 18:53:31.104 GMT [62709] LOG:  database system is ready to accept connections
2023-01-16 18:54:57.953 GMT [62709] LOG:  received fast shutdown request
2023-01-16 18:54:57.954 GMT [62709] LOG:  aborting any active transactions
2023-01-16 18:54:57.960 GMT [62709] LOG:  background worker "logical replication launcher" (PID 62716) exited with exit code 1
2023-01-16 18:54:57.960 GMT [62711] LOG:  shutting down
2023-01-16 18:54:58.049 GMT [62709] LOG:  database system is shut down
2023-01-16 18:54:59.031 GMT [63069] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 18:54:59.032 GMT [63069] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 18:54:59.033 GMT [63069] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 18:54:59.037 GMT [63070] LOG:  database system was shut down at 2023-01-16 18:54:58 GMT
2023-01-16 18:54:59.042 GMT [63069] LOG:  database system is ready to accept connections
2023-01-16 18:55:42.780 GMT [63069] LOG:  received fast shutdown request
2023-01-16 18:55:42.782 GMT [63069] LOG:  aborting any active transactions
2023-01-16 18:55:42.785 GMT [63069] LOG:  background worker "logical replication launcher" (PID 63076) exited with exit code 1
2023-01-16 18:55:42.790 GMT [63071] LOG:  shutting down
2023-01-16 18:55:42.831 GMT [63069] LOG:  database system is shut down
2023-01-16 18:55:43.935 GMT [63332] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 18:55:43.935 GMT [63332] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 18:55:43.937 GMT [63332] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 18:55:43.941 GMT [63333] LOG:  database system was shut down at 2023-01-16 18:55:43 GMT
2023-01-16 18:55:43.946 GMT [63332] LOG:  database system is ready to accept connections
2023-01-16 18:55:44.746 GMT [63358] ERROR:  function verify_transaction_type(integer) does not exist at character 1
2023-01-16 18:55:44.746 GMT [63358] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2023-01-16 18:55:44.746 GMT [63358] QUERY:  verify_transaction_type(pending_transaction_id) = TRUE
2023-01-16 18:55:44.746 GMT [63358] CONTEXT:  PL/pgSQL function verify_transaction(integer) line 6 at IF
2023-01-16 18:55:44.746 GMT [63358] STATEMENT:  SELECT * FROM bank.verify_transaction(1);
2023-01-16 18:57:40.393 GMT [63332] LOG:  received fast shutdown request
2023-01-16 18:57:40.396 GMT [63332] LOG:  aborting any active transactions
2023-01-16 18:57:40.400 GMT [63332] LOG:  background worker "logical replication launcher" (PID 63339) exited with exit code 1
2023-01-16 18:57:40.400 GMT [63334] LOG:  shutting down
2023-01-16 18:57:40.450 GMT [63332] LOG:  database system is shut down
2023-01-16 18:57:41.534 GMT [63754] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 18:57:41.534 GMT [63754] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 18:57:41.535 GMT [63754] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 18:57:41.538 GMT [63755] LOG:  database system was shut down at 2023-01-16 18:57:41 GMT
2023-01-16 18:57:41.545 GMT [63754] LOG:  database system is ready to accept connections
2023-01-16 18:57:42.382 GMT [63780] ERROR:  column "is_transfer" does not exist at character 87
2023-01-16 18:57:42.382 GMT [63780] QUERY:  EXISTS (SELECT * FROM bank.pending_transactions WHERE id = pending_transaction_id AND is_transfer = TRUE)
2023-01-16 18:57:42.382 GMT [63780] CONTEXT:  PL/pgSQL function verify_transaction_type(integer) line 7 at IF
	PL/pgSQL function verify_transaction(integer) line 6 at IF
2023-01-16 18:57:42.382 GMT [63780] STATEMENT:  SELECT * FROM bank.verify_transaction(1);
2023-01-16 18:58:40.948 GMT [63754] LOG:  received fast shutdown request
2023-01-16 18:58:40.951 GMT [63754] LOG:  aborting any active transactions
2023-01-16 18:58:40.956 GMT [63754] LOG:  background worker "logical replication launcher" (PID 63761) exited with exit code 1
2023-01-16 18:58:40.958 GMT [63756] LOG:  shutting down
2023-01-16 18:58:41.008 GMT [63754] LOG:  database system is shut down
2023-01-16 18:58:41.986 GMT [64057] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 18:58:41.987 GMT [64057] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 18:58:41.988 GMT [64057] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 18:58:41.992 GMT [64058] LOG:  database system was shut down at 2023-01-16 18:58:41 GMT
2023-01-16 18:58:41.997 GMT [64057] LOG:  database system is ready to accept connections
2023-01-16 18:58:42.763 GMT [64083] ERROR:  function verify_transaction_amounts(integer, boolean) does not exist at character 15
2023-01-16 18:58:42.763 GMT [64083] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2023-01-16 18:58:42.763 GMT [64083] QUERY:  SELECT * FROM verify_transaction_amounts(pending_transaction_id, TRUE)
2023-01-16 18:58:42.763 GMT [64083] CONTEXT:  PL/pgSQL function verify_transaction_type(integer) line 9 at SQL statement
	PL/pgSQL function verify_transaction(integer) line 6 at IF
2023-01-16 18:58:42.763 GMT [64083] STATEMENT:  SELECT * FROM bank.verify_transaction(1);
2023-01-16 18:59:23.269 GMT [64057] LOG:  received fast shutdown request
2023-01-16 18:59:23.271 GMT [64057] LOG:  aborting any active transactions
2023-01-16 18:59:23.276 GMT [64057] LOG:  background worker "logical replication launcher" (PID 64064) exited with exit code 1
2023-01-16 18:59:23.278 GMT [64059] LOG:  shutting down
2023-01-16 18:59:23.324 GMT [64057] LOG:  database system is shut down
2023-01-16 18:59:24.451 GMT [64280] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 18:59:24.452 GMT [64280] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 18:59:24.453 GMT [64280] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 18:59:24.458 GMT [64281] LOG:  database system was shut down at 2023-01-16 18:59:24 GMT
2023-01-16 18:59:24.463 GMT [64280] LOG:  database system is ready to accept connections
2023-01-16 18:59:25.280 GMT [64309] ERROR:  subquery must return only one column at character 32
2023-01-16 18:59:25.280 GMT [64309] QUERY:  SELECT * FROM get_account_type((SELECT  FROM bank.pending_transactions WHERE id = pending_transaction_id))
2023-01-16 18:59:25.280 GMT [64309] CONTEXT:  PL/pgSQL function verify_transaction_amounts(integer,boolean) line 20 at SQL statement
	SQL statement "SELECT * FROM bank.verify_transaction_amounts(pending_transaction_id, TRUE)"
	PL/pgSQL function verify_transaction_type(integer) line 9 at SQL statement
	PL/pgSQL function verify_transaction(integer) line 6 at IF
2023-01-16 18:59:25.280 GMT [64309] STATEMENT:  SELECT * FROM bank.verify_transaction(1);
2023-01-16 19:00:25.479 GMT [64280] LOG:  received fast shutdown request
2023-01-16 19:00:25.481 GMT [64280] LOG:  aborting any active transactions
2023-01-16 19:00:25.486 GMT [64280] LOG:  background worker "logical replication launcher" (PID 64287) exited with exit code 1
2023-01-16 19:00:25.486 GMT [64282] LOG:  shutting down
2023-01-16 19:00:25.533 GMT [64280] LOG:  database system is shut down
2023-01-16 19:00:26.621 GMT [64559] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 19:00:26.622 GMT [64559] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 19:00:26.623 GMT [64559] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 19:00:26.628 GMT [64560] LOG:  database system was shut down at 2023-01-16 19:00:26 GMT
2023-01-16 19:00:26.633 GMT [64559] LOG:  database system is ready to accept connections
2023-01-16 19:00:27.454 GMT [64585] ERROR:  column "account_number" does not exist at character 40
2023-01-16 19:00:27.454 GMT [64585] QUERY:  SELECT * FROM get_account_type((SELECT account_number FROM bank.pending_transactions WHERE id = pending_transaction_id))
2023-01-16 19:00:27.454 GMT [64585] CONTEXT:  PL/pgSQL function verify_transaction_amounts(integer,boolean) line 20 at SQL statement
	SQL statement "SELECT * FROM bank.verify_transaction_amounts(pending_transaction_id, TRUE)"
	PL/pgSQL function verify_transaction_type(integer) line 9 at SQL statement
	PL/pgSQL function verify_transaction(integer) line 6 at IF
2023-01-16 19:00:27.454 GMT [64585] STATEMENT:  SELECT * FROM bank.verify_transaction(1);
2023-01-16 19:01:10.384 GMT [64559] LOG:  received fast shutdown request
2023-01-16 19:01:10.386 GMT [64559] LOG:  aborting any active transactions
2023-01-16 19:01:10.392 GMT [64559] LOG:  background worker "logical replication launcher" (PID 64566) exited with exit code 1
2023-01-16 19:01:10.393 GMT [64561] LOG:  shutting down
2023-01-16 19:01:10.442 GMT [64559] LOG:  database system is shut down
2023-01-16 19:01:11.549 GMT [64786] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 19:01:11.549 GMT [64786] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 19:01:11.551 GMT [64786] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 19:01:11.555 GMT [64787] LOG:  database system was shut down at 2023-01-16 19:01:11 GMT
2023-01-16 19:01:11.561 GMT [64786] LOG:  database system is ready to accept connections
2023-01-16 19:01:12.382 GMT [64815] ERROR:  subquery must return only one column at character 32
2023-01-16 19:01:12.382 GMT [64815] QUERY:  SELECT * FROM get_account_type((SELECT  FROM bank.pending_transactions WHERE id = pending_transaction_id))
2023-01-16 19:01:12.382 GMT [64815] CONTEXT:  PL/pgSQL function verify_transaction_amounts(integer,boolean) line 20 at SQL statement
	SQL statement "SELECT * FROM bank.verify_transaction_amounts(pending_transaction_id, TRUE)"
	PL/pgSQL function verify_transaction_type(integer) line 9 at SQL statement
	PL/pgSQL function verify_transaction(integer) line 6 at IF
2023-01-16 19:01:12.382 GMT [64815] STATEMENT:  SELECT * FROM bank.verify_transaction(1);
2023-01-16 19:01:55.093 GMT [64786] LOG:  received fast shutdown request
2023-01-16 19:01:55.094 GMT [64786] LOG:  aborting any active transactions
2023-01-16 19:01:55.099 GMT [64786] LOG:  background worker "logical replication launcher" (PID 64793) exited with exit code 1
2023-01-16 19:01:55.100 GMT [64788] LOG:  shutting down
2023-01-16 19:01:55.148 GMT [64786] LOG:  database system is shut down
2023-01-16 19:01:56.282 GMT [65042] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 19:01:56.282 GMT [65042] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 19:01:56.284 GMT [65042] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 19:01:56.288 GMT [65043] LOG:  database system was shut down at 2023-01-16 19:01:56 GMT
2023-01-16 19:01:56.293 GMT [65042] LOG:  database system is ready to accept connections
2023-01-16 19:01:57.103 GMT [65068] ERROR:  column "account_id" does not exist at character 40
2023-01-16 19:01:57.103 GMT [65068] QUERY:  SELECT * FROM get_account_type((SELECT account_id FROM bank.pending_transactions WHERE id = pending_transaction_id))
2023-01-16 19:01:57.103 GMT [65068] CONTEXT:  PL/pgSQL function verify_transaction_amounts(integer,boolean) line 20 at SQL statement
	SQL statement "SELECT * FROM bank.verify_transaction_amounts(pending_transaction_id, TRUE)"
	PL/pgSQL function verify_transaction_type(integer) line 9 at SQL statement
	PL/pgSQL function verify_transaction(integer) line 6 at IF
2023-01-16 19:01:57.103 GMT [65068] STATEMENT:  SELECT * FROM bank.verify_transaction(1);
2023-01-16 19:02:55.466 GMT [65042] LOG:  received fast shutdown request
2023-01-16 19:02:55.467 GMT [65042] LOG:  aborting any active transactions
2023-01-16 19:02:55.474 GMT [65042] LOG:  background worker "logical replication launcher" (PID 65049) exited with exit code 1
2023-01-16 19:02:55.475 GMT [65044] LOG:  shutting down
2023-01-16 19:02:55.523 GMT [65042] LOG:  database system is shut down
2023-01-16 19:02:56.647 GMT [65315] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 19:02:56.647 GMT [65315] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 19:02:56.649 GMT [65315] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 19:02:56.653 GMT [65316] LOG:  database system was shut down at 2023-01-16 19:02:56 GMT
2023-01-16 19:02:56.657 GMT [65315] LOG:  database system is ready to accept connections
2023-01-16 19:02:57.465 GMT [65341] ERROR:  column "balance" does not exist at character 163
2023-01-16 19:02:57.465 GMT [65341] QUERY:  EXISTS (SELECT * FROM savings_account WHERE account_number = (SELECT transaction_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id) AND balance >= (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id))
2023-01-16 19:02:57.465 GMT [65341] CONTEXT:  PL/pgSQL function verify_transaction_amounts(integer,boolean) line 44 at IF
	SQL statement "SELECT * FROM bank.verify_transaction_amounts(pending_transaction_id, TRUE)"
	PL/pgSQL function verify_transaction_type(integer) line 9 at SQL statement
	PL/pgSQL function verify_transaction(integer) line 6 at IF
2023-01-16 19:02:57.465 GMT [65341] STATEMENT:  SELECT * FROM bank.verify_transaction(1);
2023-01-16 19:03:21.360 GMT [65315] LOG:  received fast shutdown request
2023-01-16 19:03:21.362 GMT [65315] LOG:  aborting any active transactions
2023-01-16 19:03:21.366 GMT [65315] LOG:  background worker "logical replication launcher" (PID 65322) exited with exit code 1
2023-01-16 19:03:21.366 GMT [65317] LOG:  shutting down
2023-01-16 19:03:21.417 GMT [65315] LOG:  database system is shut down
2023-01-16 19:03:22.562 GMT [65493] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 19:03:22.562 GMT [65493] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 19:03:22.564 GMT [65493] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 19:03:22.569 GMT [65494] LOG:  database system was shut down at 2023-01-16 19:03:22 GMT
2023-01-16 19:03:22.576 GMT [65493] LOG:  database system is ready to accept connections
2023-01-16 19:05:05.814 GMT [65493] LOG:  received fast shutdown request
2023-01-16 19:05:05.815 GMT [65493] LOG:  aborting any active transactions
2023-01-16 19:05:05.821 GMT [65493] LOG:  background worker "logical replication launcher" (PID 65500) exited with exit code 1
2023-01-16 19:05:05.821 GMT [65495] LOG:  shutting down
2023-01-16 19:05:05.867 GMT [65493] LOG:  database system is shut down
2023-01-16 19:05:06.961 GMT [65916] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 19:05:06.961 GMT [65916] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 19:05:06.963 GMT [65916] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 19:05:06.967 GMT [65917] LOG:  database system was shut down at 2023-01-16 19:05:06 GMT
2023-01-16 19:05:06.974 GMT [65916] LOG:  database system is ready to accept connections
2023-01-16 19:58:03.890 GMT [65916] LOG:  received fast shutdown request
2023-01-16 19:58:03.892 GMT [65916] LOG:  aborting any active transactions
2023-01-16 19:58:03.897 GMT [65916] LOG:  background worker "logical replication launcher" (PID 65923) exited with exit code 1
2023-01-16 19:58:03.897 GMT [65918] LOG:  shutting down
2023-01-16 19:58:03.914 GMT [65916] LOG:  database system is shut down
2023-01-16 19:58:14.346 GMT [74446] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 19:58:14.347 GMT [74446] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 19:58:14.348 GMT [74446] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 19:58:14.354 GMT [74450] LOG:  database system was shut down at 2023-01-16 19:58:14 GMT
2023-01-16 19:58:14.359 GMT [74446] LOG:  database system is ready to accept connections
2023-01-16 20:27:41.951 GMT [74446] LOG:  received fast shutdown request
2023-01-16 20:27:41.953 GMT [74446] LOG:  aborting any active transactions
2023-01-16 20:27:41.956 GMT [74446] LOG:  background worker "logical replication launcher" (PID 74456) exited with exit code 1
2023-01-16 20:27:41.959 GMT [74451] LOG:  shutting down
2023-01-16 20:27:41.975 GMT [74446] LOG:  database system is shut down
2023-01-16 20:27:46.913 GMT [80003] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 20:27:46.913 GMT [80003] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 20:27:46.914 GMT [80003] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 20:27:46.918 GMT [80007] LOG:  database system was shut down at 2023-01-16 20:27:46 GMT
2023-01-16 20:27:46.925 GMT [80003] LOG:  database system is ready to accept connections
2023-01-16 20:27:47.605 GMT [80032] ERROR:  type account_number_identifier does not exist
2023-01-16 20:27:47.605 GMT [80032] STATEMENT:  CREATE OR REPLACE FUNCTION bank.update_balance_amounts(account_number_identifier, amount)
	RETURNS BOOLEAN AS $$
	DECLARE balances_updated BOOLEAN;
	DECLARE account_type TEXT;
	BEGIN
	    SELECT get_account_type(account_number) INTO account_type;
	    IF account_type = 'DEBIT' THEN 
	        IF EXISTS (SELECT * FROM debit_account WHERE account_number = account_number_identifier AND current_balance - amount < 0) THEN
	            RAISE EXCEPTION 'INSUFFICIENT FUNDS';
	            balances_updated = FALSE;
	        ELSE
	            RAISE NOTICE 'SUFFICIENT FUNDS'
	            UPDATE debit_account SET current_balance = current_balance - amount WHERE account_number = account_number_identifier;
	            balances_updated = TRUE;
	        END IF;
	    ELSIF account_type = 'CREDIT' THEN
	        IF EXISTS (SELECT * FROM credit_account WHERE account_number AND credit_usage + amount < credit_limit)
	            RAISE NOTICE 'SUFFICIENT CREDIT';
	            UPDATE credit_account SET credit_usage = credit_usage + amount WHERE account_number = account_number_identifier;
	            balances_updated = TRUE;
	        ELSE
	            RAISE EXCEPTION 'CREDIT LIMIT EXCEEDED';
	            balances_updated = FALSE;
	        END IF;
	    ELSIF account_type = 'SAVINGS' THEN
	        IF EXISTS (SELECT * FROM savings_account WHERE account_number = account_number_identifier AND balance - amount < 0) THEN
	            RAISE EXCEPTION 'INSUFFICIENT FUNDS';
	            balances_updated = FALSE;
	        ELSE
	            RAISE NOTICE 'SUFFICIENT FUNDS';
	            UPDATE savings_account SET balance = current_balance - amount WHERE account_number = account_number_identifier;
	            balances_updated = TRUE;
	        END IF;
	    END IF;
	    RETURN balances_updated;
	END;
	$$ LANGUAGE plpgsql;
2023-01-16 20:27:47.606 GMT [80032] ERROR:  syntax error at or near "update_balance_amounts" at character 804
2023-01-16 20:27:47.606 GMT [80032] STATEMENT:  CREATE OR REPLACE FUNCTION bank.verify_and_update_transaction_amounts(pending_transaction_id INT, is_transfer BOOLEAN)
	RETURNS BOOLEAN AS $$
	DECLARE transaction_approved BOOLEAN;
	DECLARE account_type TEXT;
	BEGIN
	
	    
	    IF EXISTS (SELECT * FROM bank.accounts WHERE account_number = (SELECT transaction_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id) AND sort_code = (SELECT sort_code FROM bank.pending_transactions WHERE id = pending_transaction_id)) THEN
	        RAISE NOTICE 'INTERNAL TRANSFER OCCURING';
	        IF is_transfer = TRUE THEN
	            IF update_balance_amounts((SELECT orig_account_number FROM pending_transaction WHERE id = pending_transaction_id), (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id)) THEN
	                update_balance_amounts((SELECT dest_account_number FROM pending_transaction WHERE id = pending_transaction_id), (SELECT SUM(amount*-1) FROM bank.pending_transactions WHERE id = pending_transaction_id));
	                transaction_approved = TRUE;
	            ELSE
	                transaction_approved = FALSE;
	            DELETE FROM pending_transaction WHERE id = pending_transaction_id;
	    ELSE
	        RAISE NOTICE 'EXTERNAL TRANSFER OCCURING';
	        IF update_balance_amounts((SELECT orig_account_number FROM pending_transaction WHERE id = pending_transaction_id), (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id)) THEN
	            transaction_approved = TRUE;
	        ELSE
	            transaction_approved = FALSE;
	        DELETE FROM pending_transaction WHERE id = pending_transaction_id;
	    END IF;
	
	        
	    -- SELECT * FROM get_account_type((SELECT origin_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id)) INTO account_type;
	    --     IF account_type = 'DEBIT' THEN
	    --         RAISE NOTICE 'DEBIT ACCOUNT';
	    --         --check balance of debit account
	    --         IF EXISTS (SELECT * FROM debit_account WHERE account_number = (SELECT transaction_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id) AND current_balance >= (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id)) THEN
	    --             RAISE NOTICE 'SUFFICIENT FUNDS';
	    --             UPDATE debit_account SET current_balance = current_balance - (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id) WHERE account_number = (SELECT transaction_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id);
	    --             DELETE FROM pending_transaction WHERE id = pending_transaction_id;
	    --             transaction_approved = TRUE;
	    --         ELSE
	    --             RAISE NOTICE 'INSUFFICIENT FUNDS';
	    --             transaction_approved = FALSE;
	    --         END IF;
	    --     ELSIF account_type = 'CREDIT' THEN
	    --         RAISE NOTICE 'CREDIT ACCOUNT';
	    --         --check credit limit compared to credit usage of credit account
	    --         IF EXISTS (SELECT * FROM credit_account WHERE account_number = (SELECT transaction_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id) AND credit_limit >= (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id)) THEN
	    --             RAISE NOTICE 'SUFFICIENT CREDIT';
	    --             UPDATE credit_account SET credit_usage = credit_usage + (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id) WHERE account_number = (SELECT transaction_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id);
	    --             DELETE FROM pending_transaction WHERE id = pending_transaction_id;
	    --             transaction_approved = TRUE;
	    --         ELSE
	    --             RAISE NOTICE 'INSUFFICIENT CREDIT';
	    --             transaction_approved = FALSE;
	    --         END IF;
	    --     ELSIF account_type = 'SAVINGS' THEN
	    --         RAISE NOTICE 'SAVINGS ACCOUNT';
	    --         --check balance of savings account
	    --         IF EXISTS (SELECT * FROM savings_account WHERE account_number = (SELECT transaction_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id) AND current_balance >= (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id)) THEN
	    --             RAISE NOTICE 'SUFFICIENT FUNDS';
	    --             UPDATE savings_account SET current_balance = current_balance - (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id) WHERE account_number = (SELECT transaction_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id);
	    --             DELETE FROM pending_transaction WHERE id = pending_transaction_id;
	    --             transaction_approved = TRUE;
	    --         ELSE
	    --             RAISE NOTICE 'INSUFFICIENT FUNDS';
	    --             transaction_approved = FALSE;
	    --         END IF;
	    --     ELSE
	    --         RAISE NOTICE 'UNKNOWN ACCOUNT TYPE';
	    --         transaction_approved = FALSE;
	    --     END IF;
	
	    RETURN transaction_approved;
	END;
	$$ LANGUAGE plpgsql;
2023-01-16 20:27:47.727 GMT [80032] ERROR:  function bank.verify_and_update_transaction_amounts(integer, boolean) does not exist at character 15
2023-01-16 20:27:47.727 GMT [80032] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2023-01-16 20:27:47.727 GMT [80032] QUERY:  SELECT * FROM bank.verify_and_update_transaction_amounts(pending_transaction_id, TRUE)
2023-01-16 20:27:47.727 GMT [80032] CONTEXT:  PL/pgSQL function verify_transaction_type(integer) line 9 at SQL statement
	PL/pgSQL function verify_transaction(integer) line 6 at IF
2023-01-16 20:27:47.727 GMT [80032] STATEMENT:  SELECT * FROM bank.verify_transaction(1);
2023-01-16 20:28:46.526 GMT [80003] LOG:  received fast shutdown request
2023-01-16 20:28:46.528 GMT [80003] LOG:  aborting any active transactions
2023-01-16 20:28:46.532 GMT [80003] LOG:  background worker "logical replication launcher" (PID 80013) exited with exit code 1
2023-01-16 20:28:46.532 GMT [80008] LOG:  shutting down
2023-01-16 20:28:46.578 GMT [80003] LOG:  database system is shut down
2023-01-16 20:28:47.755 GMT [80297] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 20:28:47.756 GMT [80297] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 20:28:47.757 GMT [80297] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 20:28:47.762 GMT [80298] LOG:  database system was shut down at 2023-01-16 20:28:47 GMT
2023-01-16 20:28:47.767 GMT [80297] LOG:  database system is ready to accept connections
2023-01-16 20:28:48.473 GMT [80326] ERROR:  syntax error at or near "UPDATE" at character 583
2023-01-16 20:28:48.473 GMT [80326] STATEMENT:  CREATE OR REPLACE FUNCTION bank.update_balance_amounts(account_number_identifier INT, amount NUMERIC)
	RETURNS BOOLEAN AS $$
	DECLARE balances_updated BOOLEAN;
	DECLARE account_type TEXT;
	BEGIN
	    SELECT get_account_type(account_number) INTO account_type;
	    IF account_type = 'DEBIT' THEN 
	        IF EXISTS (SELECT * FROM debit_account WHERE account_number = account_number_identifier AND current_balance - amount < 0) THEN
	            RAISE EXCEPTION 'INSUFFICIENT FUNDS';
	            balances_updated = FALSE;
	        ELSE
	            RAISE NOTICE 'SUFFICIENT FUNDS'
	            UPDATE debit_account SET current_balance = current_balance - amount WHERE account_number = account_number_identifier;
	            balances_updated = TRUE;
	        END IF;
	    ELSIF account_type = 'CREDIT' THEN
	        IF EXISTS (SELECT * FROM credit_account WHERE account_number AND credit_usage + amount < credit_limit)
	            RAISE NOTICE 'SUFFICIENT CREDIT';
	            UPDATE credit_account SET credit_usage = credit_usage + amount WHERE account_number = account_number_identifier;
	            balances_updated = TRUE;
	        ELSE
	            RAISE EXCEPTION 'CREDIT LIMIT EXCEEDED';
	            balances_updated = FALSE;
	        END IF;
	    ELSIF account_type = 'SAVINGS' THEN
	        IF EXISTS (SELECT * FROM savings_account WHERE account_number = account_number_identifier AND balance - amount < 0) THEN
	            RAISE EXCEPTION 'INSUFFICIENT FUNDS';
	            balances_updated = FALSE;
	        ELSE
	            RAISE NOTICE 'SUFFICIENT FUNDS';
	            UPDATE savings_account SET balance = current_balance - amount WHERE account_number = account_number_identifier;
	            balances_updated = TRUE;
	        END IF;
	    END IF;
	    RETURN balances_updated;
	END;
	$$ LANGUAGE plpgsql;
2023-01-16 20:28:48.475 GMT [80326] ERROR:  syntax error at or near "update_balance_amounts" at character 804
2023-01-16 20:28:48.475 GMT [80326] STATEMENT:  CREATE OR REPLACE FUNCTION bank.verify_and_update_transaction_amounts(pending_transaction_id INT, is_transfer BOOLEAN)
	RETURNS BOOLEAN AS $$
	DECLARE transaction_approved BOOLEAN;
	DECLARE account_type TEXT;
	BEGIN
	
	    
	    IF EXISTS (SELECT * FROM bank.accounts WHERE account_number = (SELECT transaction_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id) AND sort_code = (SELECT sort_code FROM bank.pending_transactions WHERE id = pending_transaction_id)) THEN
	        RAISE NOTICE 'INTERNAL TRANSFER OCCURING';
	        IF is_transfer = TRUE THEN
	            IF update_balance_amounts((SELECT orig_account_number FROM pending_transaction WHERE id = pending_transaction_id), (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id)) THEN
	                update_balance_amounts((SELECT dest_account_number FROM pending_transaction WHERE id = pending_transaction_id), (SELECT SUM(amount*-1) FROM bank.pending_transactions WHERE id = pending_transaction_id));
	                transaction_approved = TRUE;
	            ELSE
	                transaction_approved = FALSE;
	            DELETE FROM pending_transaction WHERE id = pending_transaction_id;
	    ELSE
	        RAISE NOTICE 'EXTERNAL TRANSFER OCCURING';
	        IF update_balance_amounts((SELECT orig_account_number FROM pending_transaction WHERE id = pending_transaction_id), (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id)) THEN
	            transaction_approved = TRUE;
	        ELSE
	            transaction_approved = FALSE;
	        DELETE FROM pending_transaction WHERE id = pending_transaction_id;
	    END IF;
	
	        
	    -- SELECT * FROM get_account_type((SELECT origin_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id)) INTO account_type;
	    --     IF account_type = 'DEBIT' THEN
	    --         RAISE NOTICE 'DEBIT ACCOUNT';
	    --         --check balance of debit account
	    --         IF EXISTS (SELECT * FROM debit_account WHERE account_number = (SELECT transaction_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id) AND current_balance >= (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id)) THEN
	    --             RAISE NOTICE 'SUFFICIENT FUNDS';
	    --             UPDATE debit_account SET current_balance = current_balance - (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id) WHERE account_number = (SELECT transaction_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id);
	    --             DELETE FROM pending_transaction WHERE id = pending_transaction_id;
	    --             transaction_approved = TRUE;
	    --         ELSE
	    --             RAISE NOTICE 'INSUFFICIENT FUNDS';
	    --             transaction_approved = FALSE;
	    --         END IF;
	    --     ELSIF account_type = 'CREDIT' THEN
	    --         RAISE NOTICE 'CREDIT ACCOUNT';
	    --         --check credit limit compared to credit usage of credit account
	    --         IF EXISTS (SELECT * FROM credit_account WHERE account_number = (SELECT transaction_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id) AND credit_limit >= (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id)) THEN
	    --             RAISE NOTICE 'SUFFICIENT CREDIT';
	    --             UPDATE credit_account SET credit_usage = credit_usage + (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id) WHERE account_number = (SELECT transaction_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id);
	    --             DELETE FROM pending_transaction WHERE id = pending_transaction_id;
	    --             transaction_approved = TRUE;
	    --         ELSE
	    --             RAISE NOTICE 'INSUFFICIENT CREDIT';
	    --             transaction_approved = FALSE;
	    --         END IF;
	    --     ELSIF account_type = 'SAVINGS' THEN
	    --         RAISE NOTICE 'SAVINGS ACCOUNT';
	    --         --check balance of savings account
	    --         IF EXISTS (SELECT * FROM savings_account WHERE account_number = (SELECT transaction_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id) AND current_balance >= (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id)) THEN
	    --             RAISE NOTICE 'SUFFICIENT FUNDS';
	    --             UPDATE savings_account SET current_balance = current_balance - (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id) WHERE account_number = (SELECT transaction_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id);
	    --             DELETE FROM pending_transaction WHERE id = pending_transaction_id;
	    --             transaction_approved = TRUE;
	    --         ELSE
	    --             RAISE NOTICE 'INSUFFICIENT FUNDS';
	    --             transaction_approved = FALSE;
	    --         END IF;
	    --     ELSE
	    --         RAISE NOTICE 'UNKNOWN ACCOUNT TYPE';
	    --         transaction_approved = FALSE;
	    --     END IF;
	
	    RETURN transaction_approved;
	END;
	$$ LANGUAGE plpgsql;
2023-01-16 20:28:48.615 GMT [80326] ERROR:  function bank.verify_and_update_transaction_amounts(integer, boolean) does not exist at character 15
2023-01-16 20:28:48.615 GMT [80326] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2023-01-16 20:28:48.615 GMT [80326] QUERY:  SELECT * FROM bank.verify_and_update_transaction_amounts(pending_transaction_id, TRUE)
2023-01-16 20:28:48.615 GMT [80326] CONTEXT:  PL/pgSQL function verify_transaction_type(integer) line 9 at SQL statement
	PL/pgSQL function verify_transaction(integer) line 6 at IF
2023-01-16 20:28:48.615 GMT [80326] STATEMENT:  SELECT * FROM bank.verify_transaction(1);
2023-01-16 20:29:08.442 GMT [80297] LOG:  received fast shutdown request
2023-01-16 20:29:08.444 GMT [80297] LOG:  aborting any active transactions
2023-01-16 20:29:08.449 GMT [80297] LOG:  background worker "logical replication launcher" (PID 80304) exited with exit code 1
2023-01-16 20:29:08.449 GMT [80299] LOG:  shutting down
2023-01-16 20:29:08.501 GMT [80297] LOG:  database system is shut down
2023-01-16 20:29:09.557 GMT [80466] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 20:29:09.558 GMT [80466] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 20:29:09.559 GMT [80466] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 20:29:09.564 GMT [80467] LOG:  database system was shut down at 2023-01-16 20:29:09 GMT
2023-01-16 20:29:09.569 GMT [80466] LOG:  database system is ready to accept connections
2023-01-16 20:29:10.258 GMT [80495] ERROR:  missing "THEN" at end of SQL expression at character 949
2023-01-16 20:29:10.258 GMT [80495] STATEMENT:  CREATE OR REPLACE FUNCTION bank.update_balance_amounts(account_number_identifier INT, amount NUMERIC)
	RETURNS BOOLEAN AS $$
	DECLARE balances_updated BOOLEAN;
	DECLARE account_type TEXT;
	BEGIN
	    SELECT get_account_type(account_number) INTO account_type;
	    IF account_type = 'DEBIT' THEN 
	        IF EXISTS (SELECT * FROM debit_account WHERE account_number = account_number_identifier AND current_balance - amount < 0) THEN
	            RAISE EXCEPTION 'INSUFFICIENT FUNDS';
	            balances_updated = FALSE;
	        ELSE
	            RAISE NOTICE 'SUFFICIENT FUNDS';
	            UPDATE debit_account SET current_balance = current_balance - amount WHERE account_number = account_number_identifier;
	            balances_updated = TRUE;
	        END IF;
	    ELSIF account_type = 'CREDIT' THEN
	        IF EXISTS (SELECT * FROM credit_account WHERE account_number AND credit_usage + amount < credit_limit)
	            RAISE NOTICE 'SUFFICIENT CREDIT';
	            UPDATE credit_account SET credit_usage = credit_usage + amount WHERE account_number = account_number_identifier;
	            balances_updated = TRUE;
	        ELSE
	            RAISE EXCEPTION 'CREDIT LIMIT EXCEEDED';
	            balances_updated = FALSE;
	        END IF;
	    ELSIF account_type = 'SAVINGS' THEN
	        IF EXISTS (SELECT * FROM savings_account WHERE account_number = account_number_identifier AND balance - amount < 0) THEN
	            RAISE EXCEPTION 'INSUFFICIENT FUNDS';
	            balances_updated = FALSE;
	        ELSE
	            RAISE NOTICE 'SUFFICIENT FUNDS';
	            UPDATE savings_account SET balance = current_balance - amount WHERE account_number = account_number_identifier;
	            balances_updated = TRUE;
	        END IF;
	    END IF;
	    RETURN balances_updated;
	END;
	$$ LANGUAGE plpgsql;
2023-01-16 20:29:10.259 GMT [80495] ERROR:  syntax error at or near "update_balance_amounts" at character 804
2023-01-16 20:29:10.259 GMT [80495] STATEMENT:  CREATE OR REPLACE FUNCTION bank.verify_and_update_transaction_amounts(pending_transaction_id INT, is_transfer BOOLEAN)
	RETURNS BOOLEAN AS $$
	DECLARE transaction_approved BOOLEAN;
	DECLARE account_type TEXT;
	BEGIN
	
	    
	    IF EXISTS (SELECT * FROM bank.accounts WHERE account_number = (SELECT transaction_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id) AND sort_code = (SELECT sort_code FROM bank.pending_transactions WHERE id = pending_transaction_id)) THEN
	        RAISE NOTICE 'INTERNAL TRANSFER OCCURING';
	        IF is_transfer = TRUE THEN
	            IF update_balance_amounts((SELECT orig_account_number FROM pending_transaction WHERE id = pending_transaction_id), (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id)) THEN
	                update_balance_amounts((SELECT dest_account_number FROM pending_transaction WHERE id = pending_transaction_id), (SELECT SUM(amount*-1) FROM bank.pending_transactions WHERE id = pending_transaction_id));
	                transaction_approved = TRUE;
	            ELSE
	                transaction_approved = FALSE;
	            DELETE FROM pending_transaction WHERE id = pending_transaction_id;
	    ELSE
	        RAISE NOTICE 'EXTERNAL TRANSFER OCCURING';
	        IF update_balance_amounts((SELECT orig_account_number FROM pending_transaction WHERE id = pending_transaction_id), (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id)) THEN
	            transaction_approved = TRUE;
	        ELSE
	            transaction_approved = FALSE;
	        DELETE FROM pending_transaction WHERE id = pending_transaction_id;
	    END IF;
	
	        
	    -- SELECT * FROM get_account_type((SELECT origin_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id)) INTO account_type;
	    --     IF account_type = 'DEBIT' THEN
	    --         RAISE NOTICE 'DEBIT ACCOUNT';
	    --         --check balance of debit account
	    --         IF EXISTS (SELECT * FROM debit_account WHERE account_number = (SELECT transaction_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id) AND current_balance >= (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id)) THEN
	    --             RAISE NOTICE 'SUFFICIENT FUNDS';
	    --             UPDATE debit_account SET current_balance = current_balance - (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id) WHERE account_number = (SELECT transaction_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id);
	    --             DELETE FROM pending_transaction WHERE id = pending_transaction_id;
	    --             transaction_approved = TRUE;
	    --         ELSE
	    --             RAISE NOTICE 'INSUFFICIENT FUNDS';
	    --             transaction_approved = FALSE;
	    --         END IF;
	    --     ELSIF account_type = 'CREDIT' THEN
	    --         RAISE NOTICE 'CREDIT ACCOUNT';
	    --         --check credit limit compared to credit usage of credit account
	    --         IF EXISTS (SELECT * FROM credit_account WHERE account_number = (SELECT transaction_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id) AND credit_limit >= (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id)) THEN
	    --             RAISE NOTICE 'SUFFICIENT CREDIT';
	    --             UPDATE credit_account SET credit_usage = credit_usage + (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id) WHERE account_number = (SELECT transaction_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id);
	    --             DELETE FROM pending_transaction WHERE id = pending_transaction_id;
	    --             transaction_approved = TRUE;
	    --         ELSE
	    --             RAISE NOTICE 'INSUFFICIENT CREDIT';
	    --             transaction_approved = FALSE;
	    --         END IF;
	    --     ELSIF account_type = 'SAVINGS' THEN
	    --         RAISE NOTICE 'SAVINGS ACCOUNT';
	    --         --check balance of savings account
	    --         IF EXISTS (SELECT * FROM savings_account WHERE account_number = (SELECT transaction_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id) AND current_balance >= (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id)) THEN
	    --             RAISE NOTICE 'SUFFICIENT FUNDS';
	    --             UPDATE savings_account SET current_balance = current_balance - (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id) WHERE account_number = (SELECT transaction_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id);
	    --             DELETE FROM pending_transaction WHERE id = pending_transaction_id;
	    --             transaction_approved = TRUE;
	    --         ELSE
	    --             RAISE NOTICE 'INSUFFICIENT FUNDS';
	    --             transaction_approved = FALSE;
	    --         END IF;
	    --     ELSE
	    --         RAISE NOTICE 'UNKNOWN ACCOUNT TYPE';
	    --         transaction_approved = FALSE;
	    --     END IF;
	
	    RETURN transaction_approved;
	END;
	$$ LANGUAGE plpgsql;
2023-01-16 20:29:10.374 GMT [80495] ERROR:  function bank.verify_and_update_transaction_amounts(integer, boolean) does not exist at character 15
2023-01-16 20:29:10.374 GMT [80495] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2023-01-16 20:29:10.374 GMT [80495] QUERY:  SELECT * FROM bank.verify_and_update_transaction_amounts(pending_transaction_id, TRUE)
2023-01-16 20:29:10.374 GMT [80495] CONTEXT:  PL/pgSQL function verify_transaction_type(integer) line 9 at SQL statement
	PL/pgSQL function verify_transaction(integer) line 6 at IF
2023-01-16 20:29:10.374 GMT [80495] STATEMENT:  SELECT * FROM bank.verify_transaction(1);
2023-01-16 20:29:34.723 GMT [80466] LOG:  received fast shutdown request
2023-01-16 20:29:34.725 GMT [80466] LOG:  aborting any active transactions
2023-01-16 20:29:34.731 GMT [80466] LOG:  background worker "logical replication launcher" (PID 80473) exited with exit code 1
2023-01-16 20:29:34.734 GMT [80468] LOG:  shutting down
2023-01-16 20:29:34.780 GMT [80466] LOG:  database system is shut down
2023-01-16 20:29:35.865 GMT [80643] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 20:29:35.866 GMT [80643] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 20:29:35.867 GMT [80643] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 20:29:35.871 GMT [80644] LOG:  database system was shut down at 2023-01-16 20:29:35 GMT
2023-01-16 20:29:35.875 GMT [80643] LOG:  database system is ready to accept connections
2023-01-16 20:29:36.616 GMT [80669] ERROR:  syntax error at or near "update_balance_amounts" at character 804
2023-01-16 20:29:36.616 GMT [80669] STATEMENT:  CREATE OR REPLACE FUNCTION bank.verify_and_update_transaction_amounts(pending_transaction_id INT, is_transfer BOOLEAN)
	RETURNS BOOLEAN AS $$
	DECLARE transaction_approved BOOLEAN;
	DECLARE account_type TEXT;
	BEGIN
	
	    
	    IF EXISTS (SELECT * FROM bank.accounts WHERE account_number = (SELECT transaction_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id) AND sort_code = (SELECT sort_code FROM bank.pending_transactions WHERE id = pending_transaction_id)) THEN
	        RAISE NOTICE 'INTERNAL TRANSFER OCCURING';
	        IF is_transfer = TRUE THEN
	            IF update_balance_amounts((SELECT orig_account_number FROM pending_transaction WHERE id = pending_transaction_id), (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id)) THEN
	                update_balance_amounts((SELECT dest_account_number FROM pending_transaction WHERE id = pending_transaction_id), (SELECT SUM(amount*-1) FROM bank.pending_transactions WHERE id = pending_transaction_id));
	                transaction_approved = TRUE;
	            ELSE
	                transaction_approved = FALSE;
	            DELETE FROM pending_transaction WHERE id = pending_transaction_id;
	    ELSE
	        RAISE NOTICE 'EXTERNAL TRANSFER OCCURING';
	        IF update_balance_amounts((SELECT orig_account_number FROM pending_transaction WHERE id = pending_transaction_id), (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id)) THEN
	            transaction_approved = TRUE;
	        ELSE
	            transaction_approved = FALSE;
	        DELETE FROM pending_transaction WHERE id = pending_transaction_id;
	    END IF;
	
	        
	    -- SELECT * FROM get_account_type((SELECT origin_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id)) INTO account_type;
	    --     IF account_type = 'DEBIT' THEN
	    --         RAISE NOTICE 'DEBIT ACCOUNT';
	    --         --check balance of debit account
	    --         IF EXISTS (SELECT * FROM debit_account WHERE account_number = (SELECT transaction_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id) AND current_balance >= (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id)) THEN
	    --             RAISE NOTICE 'SUFFICIENT FUNDS';
	    --             UPDATE debit_account SET current_balance = current_balance - (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id) WHERE account_number = (SELECT transaction_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id);
	    --             DELETE FROM pending_transaction WHERE id = pending_transaction_id;
	    --             transaction_approved = TRUE;
	    --         ELSE
	    --             RAISE NOTICE 'INSUFFICIENT FUNDS';
	    --             transaction_approved = FALSE;
	    --         END IF;
	    --     ELSIF account_type = 'CREDIT' THEN
	    --         RAISE NOTICE 'CREDIT ACCOUNT';
	    --         --check credit limit compared to credit usage of credit account
	    --         IF EXISTS (SELECT * FROM credit_account WHERE account_number = (SELECT transaction_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id) AND credit_limit >= (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id)) THEN
	    --             RAISE NOTICE 'SUFFICIENT CREDIT';
	    --             UPDATE credit_account SET credit_usage = credit_usage + (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id) WHERE account_number = (SELECT transaction_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id);
	    --             DELETE FROM pending_transaction WHERE id = pending_transaction_id;
	    --             transaction_approved = TRUE;
	    --         ELSE
	    --             RAISE NOTICE 'INSUFFICIENT CREDIT';
	    --             transaction_approved = FALSE;
	    --         END IF;
	    --     ELSIF account_type = 'SAVINGS' THEN
	    --         RAISE NOTICE 'SAVINGS ACCOUNT';
	    --         --check balance of savings account
	    --         IF EXISTS (SELECT * FROM savings_account WHERE account_number = (SELECT transaction_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id) AND current_balance >= (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id)) THEN
	    --             RAISE NOTICE 'SUFFICIENT FUNDS';
	    --             UPDATE savings_account SET current_balance = current_balance - (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id) WHERE account_number = (SELECT transaction_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id);
	    --             DELETE FROM pending_transaction WHERE id = pending_transaction_id;
	    --             transaction_approved = TRUE;
	    --         ELSE
	    --             RAISE NOTICE 'INSUFFICIENT FUNDS';
	    --             transaction_approved = FALSE;
	    --         END IF;
	    --     ELSE
	    --         RAISE NOTICE 'UNKNOWN ACCOUNT TYPE';
	    --         transaction_approved = FALSE;
	    --     END IF;
	
	    RETURN transaction_approved;
	END;
	$$ LANGUAGE plpgsql;
2023-01-16 20:29:36.732 GMT [80669] ERROR:  function bank.verify_and_update_transaction_amounts(integer, boolean) does not exist at character 15
2023-01-16 20:29:36.732 GMT [80669] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2023-01-16 20:29:36.732 GMT [80669] QUERY:  SELECT * FROM bank.verify_and_update_transaction_amounts(pending_transaction_id, TRUE)
2023-01-16 20:29:36.732 GMT [80669] CONTEXT:  PL/pgSQL function verify_transaction_type(integer) line 9 at SQL statement
	PL/pgSQL function verify_transaction(integer) line 6 at IF
2023-01-16 20:29:36.732 GMT [80669] STATEMENT:  SELECT * FROM bank.verify_transaction(1);
2023-01-16 20:33:12.138 GMT [80643] LOG:  received fast shutdown request
2023-01-16 20:33:12.140 GMT [80643] LOG:  aborting any active transactions
2023-01-16 20:33:12.146 GMT [80643] LOG:  background worker "logical replication launcher" (PID 80650) exited with exit code 1
2023-01-16 20:33:12.146 GMT [80645] LOG:  shutting down
2023-01-16 20:33:12.208 GMT [80643] LOG:  database system is shut down
2023-01-16 20:33:13.218 GMT [81384] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 20:33:13.218 GMT [81384] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 20:33:13.219 GMT [81384] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 20:33:13.223 GMT [81385] LOG:  database system was shut down at 2023-01-16 20:33:12 GMT
2023-01-16 20:33:13.228 GMT [81384] LOG:  database system is ready to accept connections
2023-01-16 20:33:13.917 GMT [81413] ERROR:  syntax error at or near "update_balance_amounts" at character 811
2023-01-16 20:33:13.917 GMT [81413] STATEMENT:  CREATE OR REPLACE FUNCTION bank.verify_and_update_transaction_amounts(pending_transaction_id INT, is_transfer BOOLEAN)
	RETURNS BOOLEAN AS $$
	DECLARE transaction_approved BOOLEAN;
	DECLARE account_type TEXT;
	BEGIN
	
	    
	    IF EXISTS (SELECT * FROM bank.accounts WHERE account_number = (SELECT transaction_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id) AND sort_code = (SELECT sort_code FROM bank.pending_transactions WHERE id = pending_transaction_id)) THEN
	        RAISE NOTICE 'INTERNAL TRANSFER OCCURING';
	        IF is_transfer = TRUE THEN
	            IF update_balance_amounts((SELECT orig_account_number FROM pending_transaction WHERE id = pending_transaction_id), (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id)) = TRUE THEN
	                update_balance_amounts((SELECT dest_account_number FROM pending_transaction WHERE id = pending_transaction_id), (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id));
	                transaction_approved = TRUE;
	            ELSE
	                transaction_approved = FALSE;
	            DELETE FROM pending_transaction WHERE id = pending_transaction_id;
	    ELSE
	        RAISE NOTICE 'EXTERNAL TRANSFER OCCURING';
	        IF update_balance_amounts((SELECT orig_account_number FROM pending_transaction WHERE id = pending_transaction_id), (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id)) THEN
	            transaction_approved = TRUE;
	        ELSE
	            transaction_approved = FALSE;
	        DELETE FROM pending_transaction WHERE id = pending_transaction_id;
	    END IF;
	
	        
	    -- SELECT * FROM get_account_type((SELECT origin_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id)) INTO account_type;
	    --     IF account_type = 'DEBIT' THEN
	    --         RAISE NOTICE 'DEBIT ACCOUNT';
	    --         --check balance of debit account
	    --         IF EXISTS (SELECT * FROM debit_account WHERE account_number = (SELECT transaction_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id) AND current_balance >= (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id)) THEN
	    --             RAISE NOTICE 'SUFFICIENT FUNDS';
	    --             UPDATE debit_account SET current_balance = current_balance - (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id) WHERE account_number = (SELECT transaction_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id);
	    --             DELETE FROM pending_transaction WHERE id = pending_transaction_id;
	    --             transaction_approved = TRUE;
	    --         ELSE
	    --             RAISE NOTICE 'INSUFFICIENT FUNDS';
	    --             transaction_approved = FALSE;
	    --         END IF;
	    --     ELSIF account_type = 'CREDIT' THEN
	    --         RAISE NOTICE 'CREDIT ACCOUNT';
	    --         --check credit limit compared to credit usage of credit account
	    --         IF EXISTS (SELECT * FROM credit_account WHERE account_number = (SELECT transaction_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id) AND credit_limit >= (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id)) THEN
	    --             RAISE NOTICE 'SUFFICIENT CREDIT';
	    --             UPDATE credit_account SET credit_usage = credit_usage + (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id) WHERE account_number = (SELECT transaction_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id);
	    --             DELETE FROM pending_transaction WHERE id = pending_transaction_id;
	    --             transaction_approved = TRUE;
	    --         ELSE
	    --             RAISE NOTICE 'INSUFFICIENT CREDIT';
	    --             transaction_approved = FALSE;
	    --         END IF;
	    --     ELSIF account_type = 'SAVINGS' THEN
	    --         RAISE NOTICE 'SAVINGS ACCOUNT';
	    --         --check balance of savings account
	    --         IF EXISTS (SELECT * FROM savings_account WHERE account_number = (SELECT transaction_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id) AND current_balance >= (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id)) THEN
	    --             RAISE NOTICE 'SUFFICIENT FUNDS';
	    --             UPDATE savings_account SET current_balance = current_balance - (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id) WHERE account_number = (SELECT transaction_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id);
	    --             DELETE FROM pending_transaction WHERE id = pending_transaction_id;
	    --             transaction_approved = TRUE;
	    --         ELSE
	    --             RAISE NOTICE 'INSUFFICIENT FUNDS';
	    --             transaction_approved = FALSE;
	    --         END IF;
	    --     ELSE
	    --         RAISE NOTICE 'UNKNOWN ACCOUNT TYPE';
	    --         transaction_approved = FALSE;
	    --     END IF;
	
	    RETURN transaction_approved;
	END;
	$$ LANGUAGE plpgsql;
2023-01-16 20:33:14.038 GMT [81413] ERROR:  function bank.verify_and_update_transaction_amounts(integer, boolean) does not exist at character 15
2023-01-16 20:33:14.038 GMT [81413] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2023-01-16 20:33:14.038 GMT [81413] QUERY:  SELECT * FROM bank.verify_and_update_transaction_amounts(pending_transaction_id, TRUE)
2023-01-16 20:33:14.038 GMT [81413] CONTEXT:  PL/pgSQL function verify_transaction_type(integer) line 9 at SQL statement
	PL/pgSQL function verify_transaction(integer) line 6 at IF
2023-01-16 20:33:14.038 GMT [81413] STATEMENT:  SELECT * FROM bank.verify_transaction(1);
2023-01-16 20:36:27.197 GMT [81384] LOG:  received fast shutdown request
2023-01-16 20:36:27.200 GMT [81384] LOG:  aborting any active transactions
2023-01-16 20:36:27.204 GMT [81384] LOG:  background worker "logical replication launcher" (PID 81391) exited with exit code 1
2023-01-16 20:36:27.205 GMT [81386] LOG:  shutting down
2023-01-16 20:36:27.267 GMT [81384] LOG:  database system is shut down
2023-01-16 20:36:28.400 GMT [82077] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 20:36:28.401 GMT [82077] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 20:36:28.403 GMT [82077] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 20:36:28.408 GMT [82078] LOG:  database system was shut down at 2023-01-16 20:36:28 GMT
2023-01-16 20:36:28.415 GMT [82077] LOG:  database system is ready to accept connections
2023-01-16 20:36:29.153 GMT [82103] ERROR:  syntax error at or near "update_balance_amounts" at character 811
2023-01-16 20:36:29.153 GMT [82103] STATEMENT:  CREATE OR REPLACE FUNCTION bank.verify_and_update_transaction_amounts(pending_transaction_id INT, is_transfer BOOLEAN)
	RETURNS BOOLEAN AS $$
	DECLARE transaction_approved BOOLEAN;
	DECLARE account_type TEXT;
	BEGIN
	
	    
	    IF EXISTS (SELECT * FROM bank.accounts WHERE account_number = (SELECT transaction_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id) AND sort_code = (SELECT sort_code FROM bank.pending_transactions WHERE id = pending_transaction_id)) THEN
	        RAISE NOTICE 'INTERNAL TRANSFER OCCURING';
	        IF is_transfer = TRUE THEN
	            IF update_balance_amounts((SELECT orig_account_number FROM pending_transaction WHERE id = pending_transaction_id), (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id)) = TRUE THEN
	                update_balance_amounts((SELECT dest_account_number FROM pending_transaction WHERE id = pending_transaction_id), (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id));
	                transaction_approved = TRUE;
	            ELSE
	                transaction_approved = FALSE;
	            DELETE FROM pending_transaction WHERE id = pending_transaction_id;
	            END IF;
	        ELSE;
	            IF update_balance_amounts((SELECT orig_account_number FROM pending_transaction WHERE id = pending_transaction_id), (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id)) = TRUE THEN
	                transaction_approved = TRUE;
	            ELSE
	                transaction_approved = FALSE;
	            DELETE FROM pending_transaction WHERE id = pending_transaction_id;
	            END IF;
	        END IF;
	    ELSE
	        RAISE NOTICE 'EXTERNAL TRANSFER OCCURING';
	        IF update_balance_amounts((SELECT orig_account_number FROM pending_transaction WHERE id = pending_transaction_id), (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id)) THEN
	            transaction_approved = TRUE;
	        ELSE
	            transaction_approved = FALSE;
	        DELETE FROM pending_transaction WHERE id = pending_transaction_id;
	    END IF;
	
	        
	    -- SELECT * FROM get_account_type((SELECT origin_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id)) INTO account_type;
	    --     IF account_type = 'DEBIT' THEN
	    --         RAISE NOTICE 'DEBIT ACCOUNT';
	    --         --check balance of debit account
	    --         IF EXISTS (SELECT * FROM debit_account WHERE account_number = (SELECT transaction_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id) AND current_balance >= (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id)) THEN
	    --             RAISE NOTICE 'SUFFICIENT FUNDS';
	    --             UPDATE debit_account SET current_balance = current_balance - (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id) WHERE account_number = (SELECT transaction_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id);
	    --             DELETE FROM pending_transaction WHERE id = pending_transaction_id;
	    --             transaction_approved = TRUE;
	    --         ELSE
	    --             RAISE NOTICE 'INSUFFICIENT FUNDS';
	    --             transaction_approved = FALSE;
	    --         END IF;
	    --     ELSIF account_type = 'CREDIT' THEN
	    --         RAISE NOTICE 'CREDIT ACCOUNT';
	    --         --check credit limit compared to credit usage of credit account
	    --         IF EXISTS (SELECT * FROM credit_account WHERE account_number = (SELECT transaction_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id) AND credit_limit >= (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id)) THEN
	    --             RAISE NOTICE 'SUFFICIENT CREDIT';
	    --             UPDATE credit_account SET credit_usage = credit_usage + (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id) WHERE account_number = (SELECT transaction_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id);
	    --             DELETE FROM pending_transaction WHERE id = pending_transaction_id;
	    --             transaction_approved = TRUE;
	    --         ELSE
	    --             RAISE NOTICE 'INSUFFICIENT CREDIT';
	    --             transaction_approved = FALSE;
	    --         END IF;
	    --     ELSIF account_type = 'SAVINGS' THEN
	    --         RAISE NOTICE 'SAVINGS ACCOUNT';
	    --         --check balance of savings account
	    --         IF EXISTS (SELECT * FROM savings_account WHERE account_number = (SELECT transaction_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id) AND current_balance >= (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id)) THEN
	    --             RAISE NOTICE 'SUFFICIENT FUNDS';
	    --             UPDATE savings_account SET current_balance = current_balance - (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id) WHERE account_number = (SELECT transaction_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id);
	    --             DELETE FROM pending_transaction WHERE id = pending_transaction_id;
	    --             transaction_approved = TRUE;
	    --         ELSE
	    --             RAISE NOTICE 'INSUFFICIENT FUNDS';
	    --             transaction_approved = FALSE;
	    --         END IF;
	    --     ELSE
	    --         RAISE NOTICE 'UNKNOWN ACCOUNT TYPE';
	    --         transaction_approved = FALSE;
	    --     END IF;
	
	    RETURN transaction_approved;
	END;
	$$ LANGUAGE plpgsql;
2023-01-16 20:36:29.286 GMT [82103] ERROR:  function bank.verify_and_update_transaction_amounts(integer, boolean) does not exist at character 15
2023-01-16 20:36:29.286 GMT [82103] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2023-01-16 20:36:29.286 GMT [82103] QUERY:  SELECT * FROM bank.verify_and_update_transaction_amounts(pending_transaction_id, TRUE)
2023-01-16 20:36:29.286 GMT [82103] CONTEXT:  PL/pgSQL function verify_transaction_type(integer) line 9 at SQL statement
	PL/pgSQL function verify_transaction(integer) line 6 at IF
2023-01-16 20:36:29.286 GMT [82103] STATEMENT:  SELECT * FROM bank.verify_transaction(1);
2023-01-16 20:37:03.063 GMT [82077] LOG:  received fast shutdown request
2023-01-16 20:37:03.065 GMT [82077] LOG:  aborting any active transactions
2023-01-16 20:37:03.070 GMT [82077] LOG:  background worker "logical replication launcher" (PID 82084) exited with exit code 1
2023-01-16 20:37:03.073 GMT [82079] LOG:  shutting down
2023-01-16 20:37:03.125 GMT [82077] LOG:  database system is shut down
2023-01-16 20:37:04.275 GMT [82283] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 20:37:04.275 GMT [82283] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 20:37:04.276 GMT [82283] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 20:37:04.282 GMT [82284] LOG:  database system was shut down at 2023-01-16 20:37:04 GMT
2023-01-16 20:37:04.288 GMT [82283] LOG:  database system is ready to accept connections
2023-01-16 20:37:04.994 GMT [82312] ERROR:  syntax error at or near "update_balance_amounts" at character 811
2023-01-16 20:37:04.994 GMT [82312] STATEMENT:  CREATE OR REPLACE FUNCTION bank.verify_and_update_transaction_amounts(pending_transaction_id INT, is_transfer BOOLEAN)
	RETURNS BOOLEAN AS $$
	DECLARE transaction_approved BOOLEAN;
	DECLARE account_type TEXT;
	BEGIN
	
	    
	    IF EXISTS (SELECT * FROM bank.accounts WHERE account_number = (SELECT transaction_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id) AND sort_code = (SELECT sort_code FROM bank.pending_transactions WHERE id = pending_transaction_id)) THEN
	        RAISE NOTICE 'INTERNAL TRANSFER OCCURING';
	        IF is_transfer = TRUE THEN
	            IF update_balance_amounts((SELECT orig_account_number FROM pending_transaction WHERE id = pending_transaction_id), (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id)) = TRUE THEN
	                update_balance_amounts((SELECT dest_account_number FROM pending_transaction WHERE id = pending_transaction_id), (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id));
	                transaction_approved = TRUE;
	            ELSE
	                transaction_approved = FALSE;
	            DELETE FROM pending_transaction WHERE id = pending_transaction_id;
	            END IF;
	        ELSE;
	            IF update_balance_amounts((SELECT orig_account_number FROM pending_transaction WHERE id = pending_transaction_id), (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id)) = TRUE THEN
	                transaction_approved = TRUE;
	            ELSE
	                transaction_approved = FALSE;
	            DELETE FROM pending_transaction WHERE id = pending_transaction_id;
	            END IF;
	        END IF;
	    ELSE
	        RAISE NOTICE 'EXTERNAL TRANSFER OCCURING';
	        IF update_balance_amounts((SELECT orig_account_number FROM pending_transaction WHERE id = pending_transaction_id), (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id)) THEN
	            transaction_approved = TRUE;
	        ELSE
	            transaction_approved = FALSE;
	        DELETE FROM pending_transaction WHERE id = pending_transaction_id;
	        END IF;
	    END IF;
	
	        
	    -- SELECT * FROM get_account_type((SELECT origin_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id)) INTO account_type;
	    --     IF account_type = 'DEBIT' THEN
	    --         RAISE NOTICE 'DEBIT ACCOUNT';
	    --         --check balance of debit account
	    --         IF EXISTS (SELECT * FROM debit_account WHERE account_number = (SELECT transaction_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id) AND current_balance >= (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id)) THEN
	    --             RAISE NOTICE 'SUFFICIENT FUNDS';
	    --             UPDATE debit_account SET current_balance = current_balance - (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id) WHERE account_number = (SELECT transaction_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id);
	    --             DELETE FROM pending_transaction WHERE id = pending_transaction_id;
	    --             transaction_approved = TRUE;
	    --         ELSE
	    --             RAISE NOTICE 'INSUFFICIENT FUNDS';
	    --             transaction_approved = FALSE;
	    --         END IF;
	    --     ELSIF account_type = 'CREDIT' THEN
	    --         RAISE NOTICE 'CREDIT ACCOUNT';
	    --         --check credit limit compared to credit usage of credit account
	    --         IF EXISTS (SELECT * FROM credit_account WHERE account_number = (SELECT transaction_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id) AND credit_limit >= (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id)) THEN
	    --             RAISE NOTICE 'SUFFICIENT CREDIT';
	    --             UPDATE credit_account SET credit_usage = credit_usage + (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id) WHERE account_number = (SELECT transaction_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id);
	    --             DELETE FROM pending_transaction WHERE id = pending_transaction_id;
	    --             transaction_approved = TRUE;
	    --         ELSE
	    --             RAISE NOTICE 'INSUFFICIENT CREDIT';
	    --             transaction_approved = FALSE;
	    --         END IF;
	    --     ELSIF account_type = 'SAVINGS' THEN
	    --         RAISE NOTICE 'SAVINGS ACCOUNT';
	    --         --check balance of savings account
	    --         IF EXISTS (SELECT * FROM savings_account WHERE account_number = (SELECT transaction_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id) AND current_balance >= (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id)) THEN
	    --             RAISE NOTICE 'SUFFICIENT FUNDS';
	    --             UPDATE savings_account SET current_balance = current_balance - (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id) WHERE account_number = (SELECT transaction_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id);
	    --             DELETE FROM pending_transaction WHERE id = pending_transaction_id;
	    --             transaction_approved = TRUE;
	    --         ELSE
	    --             RAISE NOTICE 'INSUFFICIENT FUNDS';
	    --             transaction_approved = FALSE;
	    --         END IF;
	    --     ELSE
	    --         RAISE NOTICE 'UNKNOWN ACCOUNT TYPE';
	    --         transaction_approved = FALSE;
	    --     END IF;
	
	    RETURN transaction_approved;
	END;
	$$ LANGUAGE plpgsql;
2023-01-16 20:37:05.157 GMT [82312] ERROR:  function bank.verify_and_update_transaction_amounts(integer, boolean) does not exist at character 15
2023-01-16 20:37:05.157 GMT [82312] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2023-01-16 20:37:05.157 GMT [82312] QUERY:  SELECT * FROM bank.verify_and_update_transaction_amounts(pending_transaction_id, TRUE)
2023-01-16 20:37:05.157 GMT [82312] CONTEXT:  PL/pgSQL function verify_transaction_type(integer) line 9 at SQL statement
	PL/pgSQL function verify_transaction(integer) line 6 at IF
2023-01-16 20:37:05.157 GMT [82312] STATEMENT:  SELECT * FROM bank.verify_transaction(1);
2023-01-16 20:38:37.702 GMT [82283] LOG:  received fast shutdown request
2023-01-16 20:38:37.704 GMT [82283] LOG:  aborting any active transactions
2023-01-16 20:38:37.709 GMT [82283] LOG:  background worker "logical replication launcher" (PID 82290) exited with exit code 1
2023-01-16 20:38:37.710 GMT [82285] LOG:  shutting down
2023-01-16 20:38:37.758 GMT [82283] LOG:  database system is shut down
2023-01-16 20:38:38.843 GMT [82673] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 20:38:38.843 GMT [82673] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 20:38:38.846 GMT [82673] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 20:38:38.851 GMT [82674] LOG:  database system was shut down at 2023-01-16 20:38:38 GMT
2023-01-16 20:38:38.856 GMT [82673] LOG:  database system is ready to accept connections
2023-01-16 20:38:39.545 GMT [82699] ERROR:  syntax error at or near ";" at character 1229
2023-01-16 20:38:39.545 GMT [82699] STATEMENT:  CREATE OR REPLACE FUNCTION bank.verify_and_update_transaction_amounts(pending_transaction_id INT, is_transfer BOOLEAN)
	RETURNS BOOLEAN AS $$
	DECLARE transaction_approved BOOLEAN;
	DECLARE account_type TEXT;
	BEGIN
	
	    
	    IF EXISTS (SELECT * FROM bank.accounts WHERE account_number = (SELECT transaction_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id) AND sort_code = (SELECT sort_code FROM bank.pending_transactions WHERE id = pending_transaction_id)) THEN
	        RAISE NOTICE 'INTERNAL TRANSFER OCCURING';
	        IF is_transfer = TRUE THEN
	            IF update_balance_amounts((SELECT orig_account_number FROM pending_transaction WHERE id = pending_transaction_id), (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id)) = TRUE THEN
	                --update_balance_amounts((SELECT dest_account_number FROM pending_transaction WHERE id = pending_transaction_id), (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id));
	                transaction_approved = TRUE;
	            ELSE
	                transaction_approved = FALSE;
	            END IF;
	
	            DELETE FROM pending_transaction WHERE id = pending_transaction_id;
	
	        ELSE;
	            IF update_balance_amounts((SELECT orig_account_number FROM pending_transaction WHERE id = pending_transaction_id), (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id)) = TRUE THEN
	                transaction_approved = TRUE;
	            ELSE
	                transaction_approved = FALSE;
	            END IF;
	
	            DELETE FROM pending_transaction WHERE id = pending_transaction_id;
	        END IF;
	    ELSE
	        RAISE NOTICE 'EXTERNAL TRANSFER OCCURING';
	        IF update_balance_amounts((SELECT orig_account_number FROM pending_transaction WHERE id = pending_transaction_id), (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id)) THEN
	            transaction_approved = TRUE;
	        ELSE
	            transaction_approved = FALSE;
	        DELETE FROM pending_transaction WHERE id = pending_transaction_id;
	        END IF;
	    END IF;
	
	        
	    -- SELECT * FROM get_account_type((SELECT origin_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id)) INTO account_type;
	    --     IF account_type = 'DEBIT' THEN
	    --         RAISE NOTICE 'DEBIT ACCOUNT';
	    --         --check balance of debit account
	    --         IF EXISTS (SELECT * FROM debit_account WHERE account_number = (SELECT transaction_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id) AND current_balance >= (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id)) THEN
	    --             RAISE NOTICE 'SUFFICIENT FUNDS';
	    --             UPDATE debit_account SET current_balance = current_balance - (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id) WHERE account_number = (SELECT transaction_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id);
	    --             DELETE FROM pending_transaction WHERE id = pending_transaction_id;
	    --             transaction_approved = TRUE;
	    --         ELSE
	    --             RAISE NOTICE 'INSUFFICIENT FUNDS';
	    --             transaction_approved = FALSE;
	    --         END IF;
	    --     ELSIF account_type = 'CREDIT' THEN
	    --         RAISE NOTICE 'CREDIT ACCOUNT';
	    --         --check credit limit compared to credit usage of credit account
	    --         IF EXISTS (SELECT * FROM credit_account WHERE account_number = (SELECT transaction_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id) AND credit_limit >= (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id)) THEN
	    --             RAISE NOTICE 'SUFFICIENT CREDIT';
	    --             UPDATE credit_account SET credit_usage = credit_usage + (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id) WHERE account_number = (SELECT transaction_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id);
	    --             DELETE FROM pending_transaction WHERE id = pending_transaction_id;
	    --             transaction_approved = TRUE;
	    --         ELSE
	    --             RAISE NOTICE 'INSUFFICIENT CREDIT';
	    --             transaction_approved = FALSE;
	    --         END IF;
	    --     ELSIF account_type = 'SAVINGS' THEN
	    --         RAISE NOTICE 'SAVINGS ACCOUNT';
	    --         --check balance of savings account
	    --         IF EXISTS (SELECT * FROM savings_account WHERE account_number = (SELECT transaction_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id) AND current_balance >= (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id)) THEN
	    --             RAISE NOTICE 'SUFFICIENT FUNDS';
	    --             UPDATE savings_account SET current_balance = current_balance - (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id) WHERE account_number = (SELECT transaction_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id);
	    --             DELETE FROM pending_transaction WHERE id = pending_transaction_id;
	    --             transaction_approved = TRUE;
	    --         ELSE
	    --             RAISE NOTICE 'INSUFFICIENT FUNDS';
	    --             transaction_approved = FALSE;
	    --         END IF;
	    --     ELSE
	    --         RAISE NOTICE 'UNKNOWN ACCOUNT TYPE';
	    --         transaction_approved = FALSE;
	    --     END IF;
	
	    RETURN transaction_approved;
	END;
	$$ LANGUAGE plpgsql;
2023-01-16 20:38:39.674 GMT [82699] ERROR:  function bank.verify_and_update_transaction_amounts(integer, boolean) does not exist at character 15
2023-01-16 20:38:39.674 GMT [82699] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2023-01-16 20:38:39.674 GMT [82699] QUERY:  SELECT * FROM bank.verify_and_update_transaction_amounts(pending_transaction_id, TRUE)
2023-01-16 20:38:39.674 GMT [82699] CONTEXT:  PL/pgSQL function verify_transaction_type(integer) line 9 at SQL statement
	PL/pgSQL function verify_transaction(integer) line 6 at IF
2023-01-16 20:38:39.674 GMT [82699] STATEMENT:  SELECT * FROM bank.verify_transaction(1);
2023-01-16 20:39:30.628 GMT [82673] LOG:  received fast shutdown request
2023-01-16 20:39:30.630 GMT [82673] LOG:  aborting any active transactions
2023-01-16 20:39:30.637 GMT [82673] LOG:  background worker "logical replication launcher" (PID 82680) exited with exit code 1
2023-01-16 20:39:30.637 GMT [82675] LOG:  shutting down
2023-01-16 20:39:30.681 GMT [82673] LOG:  database system is shut down
2023-01-16 20:39:31.777 GMT [82946] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 20:39:31.777 GMT [82946] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 20:39:31.779 GMT [82946] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 20:39:31.784 GMT [82947] LOG:  database system was shut down at 2023-01-16 20:39:31 GMT
2023-01-16 20:39:31.791 GMT [82946] LOG:  database system is ready to accept connections
2023-01-16 20:39:32.616 GMT [82975] ERROR:  column "transaction_account_id" does not exist at character 68
2023-01-16 20:39:32.616 GMT [82975] QUERY:  EXISTS (SELECT * FROM bank.accounts WHERE account_number = (SELECT transaction_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id) AND sort_code = (SELECT sort_code FROM bank.pending_transactions WHERE id = pending_transaction_id))
2023-01-16 20:39:32.616 GMT [82975] CONTEXT:  PL/pgSQL function verify_and_update_transaction_amounts(integer,boolean) line 7 at IF
	SQL statement "SELECT * FROM bank.verify_and_update_transaction_amounts(pending_transaction_id, TRUE)"
	PL/pgSQL function verify_transaction_type(integer) line 9 at SQL statement
	PL/pgSQL function verify_transaction(integer) line 6 at IF
2023-01-16 20:39:32.616 GMT [82975] STATEMENT:  SELECT * FROM bank.verify_transaction(1);
2023-01-16 20:40:56.984 GMT [82946] LOG:  received fast shutdown request
2023-01-16 20:40:56.986 GMT [82946] LOG:  aborting any active transactions
2023-01-16 20:40:56.991 GMT [82946] LOG:  background worker "logical replication launcher" (PID 82953) exited with exit code 1
2023-01-16 20:40:56.992 GMT [82948] LOG:  shutting down
2023-01-16 20:40:57.040 GMT [82946] LOG:  database system is shut down
2023-01-16 20:40:58.094 GMT [83290] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 20:40:58.095 GMT [83290] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 20:40:58.096 GMT [83290] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 20:40:58.101 GMT [83291] LOG:  database system was shut down at 2023-01-16 20:40:57 GMT
2023-01-16 20:40:58.107 GMT [83290] LOG:  database system is ready to accept connections
2023-01-16 20:40:58.964 GMT [83319] ERROR:  column "orig_account_number" does not exist at character 32
2023-01-16 20:40:58.964 GMT [83319] QUERY:  update_balance_amounts((SELECT orig_account_number FROM pending_transaction WHERE id = pending_transaction_id), (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id))
2023-01-16 20:40:58.964 GMT [83319] CONTEXT:  PL/pgSQL function verify_and_update_transaction_amounts(integer,boolean) line 30 at IF
	SQL statement "SELECT * FROM bank.verify_and_update_transaction_amounts(pending_transaction_id, TRUE)"
	PL/pgSQL function verify_transaction_type(integer) line 9 at SQL statement
	PL/pgSQL function verify_transaction(integer) line 6 at IF
2023-01-16 20:40:58.964 GMT [83319] STATEMENT:  SELECT * FROM bank.verify_transaction(1);
2023-01-16 20:42:10.468 GMT [83290] LOG:  received fast shutdown request
2023-01-16 20:42:10.470 GMT [83290] LOG:  aborting any active transactions
2023-01-16 20:42:10.472 GMT [83290] LOG:  background worker "logical replication launcher" (PID 83297) exited with exit code 1
2023-01-16 20:42:10.475 GMT [83292] LOG:  shutting down
2023-01-16 20:42:10.526 GMT [83290] LOG:  database system is shut down
2023-01-16 20:42:11.552 GMT [83604] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 20:42:11.552 GMT [83604] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 20:42:11.553 GMT [83604] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 20:42:11.559 GMT [83605] LOG:  database system was shut down at 2023-01-16 20:42:11 GMT
2023-01-16 20:42:11.565 GMT [83604] LOG:  database system is ready to accept connections
2023-01-16 20:42:12.374 GMT [83630] ERROR:  column "orig_account_number" does not exist at character 32
2023-01-16 20:42:12.374 GMT [83630] QUERY:  update_balance_amounts((SELECT orig_account_number FROM transaction WHERE id = pending_transaction_id), (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id))
2023-01-16 20:42:12.374 GMT [83630] CONTEXT:  PL/pgSQL function verify_and_update_transaction_amounts(integer,boolean) line 30 at IF
	SQL statement "SELECT * FROM bank.verify_and_update_transaction_amounts(pending_transaction_id, TRUE)"
	PL/pgSQL function verify_transaction_type(integer) line 9 at SQL statement
	PL/pgSQL function verify_transaction(integer) line 6 at IF
2023-01-16 20:42:12.374 GMT [83630] STATEMENT:  SELECT * FROM bank.verify_transaction(1);
2023-01-16 20:44:23.114 GMT [83604] LOG:  received fast shutdown request
2023-01-16 20:44:23.116 GMT [83604] LOG:  aborting any active transactions
2023-01-16 20:44:23.121 GMT [83604] LOG:  background worker "logical replication launcher" (PID 83611) exited with exit code 1
2023-01-16 20:44:23.121 GMT [83606] LOG:  shutting down
2023-01-16 20:44:23.167 GMT [83604] LOG:  database system is shut down
2023-01-16 20:44:24.349 GMT [84096] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 20:44:24.350 GMT [84096] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 20:44:24.351 GMT [84096] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 20:44:24.357 GMT [84097] LOG:  database system was shut down at 2023-01-16 20:44:24 GMT
2023-01-16 20:44:24.364 GMT [84096] LOG:  database system is ready to accept connections
2023-01-16 20:44:25.170 GMT [84122] ERROR:  column "orig_account_number" does not exist at character 32
2023-01-16 20:44:25.170 GMT [84122] QUERY:  update_balance_amounts((SELECT orig_account_number FROM transaction WHERE id = pending_transaction_id), (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id)) = TRUE
2023-01-16 20:44:25.170 GMT [84122] CONTEXT:  PL/pgSQL function verify_and_update_transaction_amounts(integer,boolean) line 10 at IF
	SQL statement "SELECT * FROM bank.verify_and_update_transaction_amounts(pending_transaction_id, TRUE)"
	PL/pgSQL function verify_transaction_type(integer) line 9 at SQL statement
	PL/pgSQL function verify_transaction(integer) line 6 at IF
2023-01-16 20:44:25.170 GMT [84122] STATEMENT:  SELECT * FROM bank.verify_transaction(1);
2023-01-16 20:44:36.206 GMT [84096] LOG:  received fast shutdown request
2023-01-16 20:44:36.208 GMT [84096] LOG:  aborting any active transactions
2023-01-16 20:44:36.212 GMT [84096] LOG:  background worker "logical replication launcher" (PID 84103) exited with exit code 1
2023-01-16 20:44:36.213 GMT [84098] LOG:  shutting down
2023-01-16 20:44:36.264 GMT [84096] LOG:  database system is shut down
2023-01-16 20:44:37.337 GMT [84241] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 20:44:37.338 GMT [84241] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 20:44:37.340 GMT [84241] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 20:44:37.345 GMT [84242] LOG:  database system was shut down at 2023-01-16 20:44:37 GMT
2023-01-16 20:44:37.351 GMT [84241] LOG:  database system is ready to accept connections
2023-01-16 20:44:38.260 GMT [84270] ERROR:  column "orig_account_id" does not exist at character 68
2023-01-16 20:44:38.260 GMT [84270] HINT:  Perhaps you meant to reference the column "pending_transactions.origin_account_id".
2023-01-16 20:44:38.260 GMT [84270] QUERY:  EXISTS (SELECT * FROM bank.accounts WHERE account_number = (SELECT orig_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id) AND sort_code = (SELECT sort_code FROM bank.pending_transactions WHERE id = pending_transaction_id))
2023-01-16 20:44:38.260 GMT [84270] CONTEXT:  PL/pgSQL function verify_and_update_transaction_amounts(integer,boolean) line 7 at IF
	SQL statement "SELECT * FROM bank.verify_and_update_transaction_amounts(pending_transaction_id, TRUE)"
	PL/pgSQL function verify_transaction_type(integer) line 9 at SQL statement
	PL/pgSQL function verify_transaction(integer) line 6 at IF
2023-01-16 20:44:38.260 GMT [84270] STATEMENT:  SELECT * FROM bank.verify_transaction(1);
2023-01-16 20:44:55.580 GMT [84241] LOG:  received fast shutdown request
2023-01-16 20:44:55.583 GMT [84241] LOG:  aborting any active transactions
2023-01-16 20:44:55.588 GMT [84241] LOG:  background worker "logical replication launcher" (PID 84248) exited with exit code 1
2023-01-16 20:44:55.588 GMT [84243] LOG:  shutting down
2023-01-16 20:44:55.638 GMT [84241] LOG:  database system is shut down
2023-01-16 20:44:56.824 GMT [84411] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 20:44:56.824 GMT [84411] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 20:44:56.826 GMT [84411] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 20:44:56.830 GMT [84412] LOG:  database system was shut down at 2023-01-16 20:44:56 GMT
2023-01-16 20:44:56.837 GMT [84411] LOG:  database system is ready to accept connections
2023-01-16 20:44:57.708 GMT [84437] ERROR:  column "orig_account_number" does not exist at character 32
2023-01-16 20:44:57.708 GMT [84437] QUERY:  update_balance_amounts((SELECT orig_account_number FROM transaction WHERE id = pending_transaction_id), (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id)) = TRUE
2023-01-16 20:44:57.708 GMT [84437] CONTEXT:  PL/pgSQL function verify_and_update_transaction_amounts(integer,boolean) line 10 at IF
	SQL statement "SELECT * FROM bank.verify_and_update_transaction_amounts(pending_transaction_id, TRUE)"
	PL/pgSQL function verify_transaction_type(integer) line 9 at SQL statement
	PL/pgSQL function verify_transaction(integer) line 6 at IF
2023-01-16 20:44:57.708 GMT [84437] STATEMENT:  SELECT * FROM bank.verify_transaction(1);
2023-01-16 20:45:35.371 GMT [84411] LOG:  received fast shutdown request
2023-01-16 20:45:35.373 GMT [84411] LOG:  aborting any active transactions
2023-01-16 20:45:35.375 GMT [84411] LOG:  background worker "logical replication launcher" (PID 84418) exited with exit code 1
2023-01-16 20:45:35.378 GMT [84413] LOG:  shutting down
2023-01-16 20:45:35.423 GMT [84411] LOG:  database system is shut down
2023-01-16 20:45:36.549 GMT [84647] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 20:45:36.549 GMT [84647] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 20:45:36.550 GMT [84647] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 20:45:36.558 GMT [84648] LOG:  database system was shut down at 2023-01-16 20:45:36 GMT
2023-01-16 20:45:36.563 GMT [84647] LOG:  database system is ready to accept connections
2023-01-16 20:45:37.451 GMT [84676] ERROR:  column "origin_account_number" does not exist at character 32
2023-01-16 20:45:37.451 GMT [84676] QUERY:  update_balance_amounts((SELECT origin_account_number FROM transaction WHERE id = pending_transaction_id), (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id)) = TRUE
2023-01-16 20:45:37.451 GMT [84676] CONTEXT:  PL/pgSQL function verify_and_update_transaction_amounts(integer,boolean) line 10 at IF
	SQL statement "SELECT * FROM bank.verify_and_update_transaction_amounts(pending_transaction_id, TRUE)"
	PL/pgSQL function verify_transaction_type(integer) line 9 at SQL statement
	PL/pgSQL function verify_transaction(integer) line 6 at IF
2023-01-16 20:45:37.451 GMT [84676] STATEMENT:  SELECT * FROM bank.verify_transaction(1);
2023-01-16 20:47:30.941 GMT [84647] LOG:  received fast shutdown request
2023-01-16 20:47:30.943 GMT [84647] LOG:  aborting any active transactions
2023-01-16 20:47:30.947 GMT [84647] LOG:  background worker "logical replication launcher" (PID 84654) exited with exit code 1
2023-01-16 20:47:30.949 GMT [84649] LOG:  shutting down
2023-01-16 20:47:30.996 GMT [84647] LOG:  database system is shut down
2023-01-16 20:47:32.031 GMT [85079] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 20:47:32.031 GMT [85079] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 20:47:32.033 GMT [85079] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 20:47:32.037 GMT [85080] LOG:  database system was shut down at 2023-01-16 20:47:31 GMT
2023-01-16 20:47:32.042 GMT [85079] LOG:  database system is ready to accept connections
2023-01-16 20:47:32.878 GMT [85105] ERROR:  function update_balance_amounts(integer, numeric) does not exist at character 1
2023-01-16 20:47:32.878 GMT [85105] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2023-01-16 20:47:32.878 GMT [85105] QUERY:  update_balance_amounts((SELECT origin_account_id FROM transaction WHERE id = pending_transaction_id), (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id)) = TRUE
2023-01-16 20:47:32.878 GMT [85105] CONTEXT:  PL/pgSQL function verify_and_update_transaction_amounts(integer,boolean) line 10 at IF
	SQL statement "SELECT * FROM bank.verify_and_update_transaction_amounts(pending_transaction_id, TRUE)"
	PL/pgSQL function verify_transaction_type(integer) line 9 at SQL statement
	PL/pgSQL function verify_transaction(integer) line 6 at IF
2023-01-16 20:47:32.878 GMT [85105] STATEMENT:  SELECT * FROM bank.verify_transaction(1);
2023-01-16 20:48:58.591 GMT [85079] LOG:  received fast shutdown request
2023-01-16 20:48:58.593 GMT [85079] LOG:  aborting any active transactions
2023-01-16 20:48:58.599 GMT [85079] LOG:  background worker "logical replication launcher" (PID 85086) exited with exit code 1
2023-01-16 20:48:58.600 GMT [85081] LOG:  shutting down
2023-01-16 20:48:58.645 GMT [85079] LOG:  database system is shut down
2023-01-16 20:48:59.736 GMT [85433] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 20:48:59.736 GMT [85433] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 20:48:59.738 GMT [85433] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 20:48:59.743 GMT [85434] LOG:  database system was shut down at 2023-01-16 20:48:59 GMT
2023-01-16 20:48:59.748 GMT [85433] LOG:  database system is ready to accept connections
2023-01-16 20:49:00.641 GMT [85459] ERROR:  column "account_number" does not exist at character 25
2023-01-16 20:49:00.641 GMT [85459] QUERY:  SELECT get_account_type(account_number)
2023-01-16 20:49:00.641 GMT [85459] CONTEXT:  PL/pgSQL function update_balance_amounts(integer,numeric) line 5 at SQL statement
	SQL expression "bank.update_balance_amounts((SELECT origin_account_id FROM transaction WHERE id = pending_transaction_id), (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id)) = TRUE"
	PL/pgSQL function verify_and_update_transaction_amounts(integer,boolean) line 10 at IF
	SQL statement "SELECT * FROM bank.verify_and_update_transaction_amounts(pending_transaction_id, TRUE)"
	PL/pgSQL function verify_transaction_type(integer) line 9 at SQL statement
	PL/pgSQL function verify_transaction(integer) line 6 at IF
2023-01-16 20:49:00.641 GMT [85459] STATEMENT:  SELECT * FROM bank.verify_transaction(1);
2023-01-16 20:49:25.493 GMT [85433] LOG:  received fast shutdown request
2023-01-16 20:49:25.495 GMT [85433] LOG:  aborting any active transactions
2023-01-16 20:49:25.500 GMT [85433] LOG:  background worker "logical replication launcher" (PID 85440) exited with exit code 1
2023-01-16 20:49:25.501 GMT [85435] LOG:  shutting down
2023-01-16 20:49:25.560 GMT [85433] LOG:  database system is shut down
2023-01-16 20:49:31.566 GMT [85651] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 20:49:31.566 GMT [85651] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 20:49:31.568 GMT [85651] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 20:49:31.572 GMT [85652] LOG:  database system was shut down at 2023-01-16 20:49:31 GMT
2023-01-16 20:49:31.576 GMT [85651] LOG:  database system is ready to accept connections
2023-01-16 20:49:32.394 GMT [85677] ERROR:  column "balance" does not exist at character 92
2023-01-16 20:49:32.394 GMT [85677] QUERY:  EXISTS (SELECT * FROM savings_account WHERE account_number = account_number_identifier AND balance - amount < 0)
2023-01-16 20:49:32.394 GMT [85677] CONTEXT:  PL/pgSQL function update_balance_amounts(integer,numeric) line 25 at IF
	SQL expression "bank.update_balance_amounts((SELECT origin_account_id FROM transaction WHERE id = pending_transaction_id), (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id)) = TRUE"
	PL/pgSQL function verify_and_update_transaction_amounts(integer,boolean) line 10 at IF
	SQL statement "SELECT * FROM bank.verify_and_update_transaction_amounts(pending_transaction_id, TRUE)"
	PL/pgSQL function verify_transaction_type(integer) line 9 at SQL statement
	PL/pgSQL function verify_transaction(integer) line 6 at IF
2023-01-16 20:49:32.394 GMT [85677] STATEMENT:  SELECT * FROM bank.verify_transaction(1);
2023-01-16 20:50:14.050 GMT [85651] LOG:  received fast shutdown request
2023-01-16 20:50:14.053 GMT [85651] LOG:  aborting any active transactions
2023-01-16 20:50:14.058 GMT [85651] LOG:  background worker "logical replication launcher" (PID 85658) exited with exit code 1
2023-01-16 20:50:14.058 GMT [85653] LOG:  shutting down
2023-01-16 20:50:14.108 GMT [85651] LOG:  database system is shut down
2023-01-16 20:50:15.165 GMT [85879] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 20:50:15.165 GMT [85879] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 20:50:15.168 GMT [85879] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 20:50:15.172 GMT [85880] LOG:  database system was shut down at 2023-01-16 20:50:14 GMT
2023-01-16 20:50:15.179 GMT [85879] LOG:  database system is ready to accept connections
2023-01-16 20:50:16.020 GMT [85905] ERROR:  column "balance" of relation "savings_account" does not exist at character 28
2023-01-16 20:50:16.020 GMT [85905] QUERY:  UPDATE savings_account SET balance = current_balance - amount WHERE account_number = account_number_identifier
2023-01-16 20:50:16.020 GMT [85905] CONTEXT:  PL/pgSQL function update_balance_amounts(integer,numeric) line 30 at SQL statement
	SQL expression "bank.update_balance_amounts((SELECT origin_account_id FROM transaction WHERE id = pending_transaction_id), (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id)) = TRUE"
	PL/pgSQL function verify_and_update_transaction_amounts(integer,boolean) line 10 at IF
	SQL statement "SELECT * FROM bank.verify_and_update_transaction_amounts(pending_transaction_id, TRUE)"
	PL/pgSQL function verify_transaction_type(integer) line 9 at SQL statement
	PL/pgSQL function verify_transaction(integer) line 6 at IF
2023-01-16 20:50:16.020 GMT [85905] STATEMENT:  SELECT * FROM bank.verify_transaction(1);
2023-01-16 20:50:35.135 GMT [85879] LOG:  received fast shutdown request
2023-01-16 20:50:35.136 GMT [85879] LOG:  aborting any active transactions
2023-01-16 20:50:35.140 GMT [85879] LOG:  background worker "logical replication launcher" (PID 85886) exited with exit code 1
2023-01-16 20:50:35.140 GMT [85881] LOG:  shutting down
2023-01-16 20:50:35.192 GMT [85879] LOG:  database system is shut down
2023-01-16 20:50:36.267 GMT [86045] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 20:50:36.267 GMT [86045] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 20:50:36.269 GMT [86045] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 20:50:36.273 GMT [86046] LOG:  database system was shut down at 2023-01-16 20:50:36 GMT
2023-01-16 20:50:36.278 GMT [86045] LOG:  database system is ready to accept connections
2023-01-16 20:51:10.521 GMT [86045] LOG:  received fast shutdown request
2023-01-16 20:51:10.525 GMT [86045] LOG:  aborting any active transactions
2023-01-16 20:51:10.530 GMT [86045] LOG:  background worker "logical replication launcher" (PID 86052) exited with exit code 1
2023-01-16 20:51:10.530 GMT [86047] LOG:  shutting down
2023-01-16 20:51:10.575 GMT [86045] LOG:  database system is shut down
2023-01-16 20:51:11.639 GMT [86259] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 20:51:11.640 GMT [86259] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 20:51:11.642 GMT [86259] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 20:51:11.647 GMT [86260] LOG:  database system was shut down at 2023-01-16 20:51:11 GMT
2023-01-16 20:51:11.655 GMT [86259] LOG:  database system is ready to accept connections
2023-01-16 20:51:12.393 GMT [86285] ERROR:  syntax error at or near "bank" at character 799
2023-01-16 20:51:12.393 GMT [86285] STATEMENT:  CREATE OR REPLACE FUNCTION bank.verify_and_update_transaction_amounts(pending_transaction_id INT, is_transfer BOOLEAN)
	RETURNS BOOLEAN AS $$
	DECLARE transaction_approved BOOLEAN;
	DECLARE account_type TEXT;
	BEGIN
	
	    
	    IF EXISTS (SELECT * FROM bank.accounts WHERE account_number = (SELECT dest_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id) AND sort_code = (SELECT sort_code FROM bank.pending_transactions WHERE id = pending_transaction_id)) THEN
	        RAISE NOTICE 'INTERNAL TRANSFER OCCURING';
	        IF is_transfer = TRUE THEN
	            IF bank.update_balance_amounts((SELECT origin_account_id FROM transaction WHERE id = pending_transaction_id), (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id)) = TRUE THEN
	                bank.update_balance_amounts((SELECT dest_account_number FROM pending_transaction WHERE id = pending_transaction_id), (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id));
	                transaction_approved = TRUE;
	            ELSE
	                transaction_approved = FALSE;
	            END IF;
	
	            DELETE FROM pending_transaction WHERE id = pending_transaction_id;
	
	        ELSE
	            IF bank.update_balance_amounts((SELECT origin_account_id FROM transaction WHERE id = pending_transaction_id), (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id)) = TRUE THEN
	                transaction_approved = TRUE;
	            ELSE
	                transaction_approved = FALSE;
	            END IF;
	
	            DELETE FROM pending_transaction WHERE id = pending_transaction_id;
	        END IF;
	    ELSE
	        RAISE NOTICE 'EXTERNAL TRANSFER OCCURING';
	        IF bank.update_balance_amounts((SELECT origin_account_id FROM transaction WHERE id = pending_transaction_id), (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id)) THEN
	            transaction_approved = TRUE;
	        ELSE
	            transaction_approved = FALSE;
	        DELETE FROM pending_transaction WHERE id = pending_transaction_id;
	        END IF;
	    END IF;
	
	        
	    -- SELECT * FROM get_account_type((SELECT origin_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id)) INTO account_type;
	    --     IF account_type = 'DEBIT' THEN
	    --         RAISE NOTICE 'DEBIT ACCOUNT';
	    --         --check balance of debit account
	    --         IF EXISTS (SELECT * FROM debit_account WHERE account_number = (SELECT transaction_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id) AND current_balance >= (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id)) THEN
	    --             RAISE NOTICE 'SUFFICIENT FUNDS';
	    --             UPDATE debit_account SET current_balance = current_balance - (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id) WHERE account_number = (SELECT transaction_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id);
	    --             DELETE FROM pending_transaction WHERE id = pending_transaction_id;
	    --             transaction_approved = TRUE;
	    --         ELSE
	    --             RAISE NOTICE 'INSUFFICIENT FUNDS';
	    --             transaction_approved = FALSE;
	    --         END IF;
	    --     ELSIF account_type = 'CREDIT' THEN
	    --         RAISE NOTICE 'CREDIT ACCOUNT';
	    --         --check credit limit compared to credit usage of credit account
	    --         IF EXISTS (SELECT * FROM credit_account WHERE account_number = (SELECT transaction_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id) AND credit_limit >= (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id)) THEN
	    --             RAISE NOTICE 'SUFFICIENT CREDIT';
	    --             UPDATE credit_account SET credit_usage = credit_usage + (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id) WHERE account_number = (SELECT transaction_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id);
	    --             DELETE FROM pending_transaction WHERE id = pending_transaction_id;
	    --             transaction_approved = TRUE;
	    --         ELSE
	    --             RAISE NOTICE 'INSUFFICIENT CREDIT';
	    --             transaction_approved = FALSE;
	    --         END IF;
	    --     ELSIF account_type = 'SAVINGS' THEN
	    --         RAISE NOTICE 'SAVINGS ACCOUNT';
	    --         --check balance of savings account
	    --         IF EXISTS (SELECT * FROM savings_account WHERE account_number = (SELECT transaction_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id) AND current_balance >= (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id)) THEN
	    --             RAISE NOTICE 'SUFFICIENT FUNDS';
	    --             UPDATE savings_account SET current_balance = current_balance - (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id) WHERE account_number = (SELECT transaction_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id);
	    --             DELETE FROM pending_transaction WHERE id = pending_transaction_id;
	    --             transaction_approved = TRUE;
	    --         ELSE
	    --             RAISE NOTICE 'INSUFFICIENT FUNDS';
	    --             transaction_approved = FALSE;
	    --         END IF;
	    --     ELSE
	    --         RAISE NOTICE 'UNKNOWN ACCOUNT TYPE';
	    --         transaction_approved = FALSE;
	    --     END IF;
	
	    RETURN transaction_approved;
	END;
	$$ LANGUAGE plpgsql;
2023-01-16 20:51:12.547 GMT [86285] ERROR:  function bank.verify_and_update_transaction_amounts(integer, boolean) does not exist at character 15
2023-01-16 20:51:12.547 GMT [86285] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2023-01-16 20:51:12.547 GMT [86285] QUERY:  SELECT * FROM bank.verify_and_update_transaction_amounts(pending_transaction_id, TRUE)
2023-01-16 20:51:12.547 GMT [86285] CONTEXT:  PL/pgSQL function verify_transaction_type(integer) line 9 at SQL statement
	PL/pgSQL function verify_transaction(integer) line 6 at IF
2023-01-16 20:51:12.547 GMT [86285] STATEMENT:  SELECT * FROM bank.verify_transaction(1);
2023-01-16 20:51:37.150 GMT [86259] LOG:  received fast shutdown request
2023-01-16 20:51:37.152 GMT [86259] LOG:  aborting any active transactions
2023-01-16 20:51:37.156 GMT [86259] LOG:  background worker "logical replication launcher" (PID 86266) exited with exit code 1
2023-01-16 20:51:37.157 GMT [86261] LOG:  shutting down
2023-01-16 20:51:37.211 GMT [86259] LOG:  database system is shut down
2023-01-16 20:51:38.281 GMT [86464] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 20:51:38.282 GMT [86464] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 20:51:38.284 GMT [86464] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 20:51:38.288 GMT [86465] LOG:  database system was shut down at 2023-01-16 20:51:38 GMT
2023-01-16 20:51:38.294 GMT [86464] LOG:  database system is ready to accept connections
2023-01-16 20:51:39.015 GMT [86490] ERROR:  syntax error at or near "bank" at character 861
2023-01-16 20:51:39.015 GMT [86490] STATEMENT:  CREATE OR REPLACE FUNCTION bank.verify_and_update_transaction_amounts(pending_transaction_id INT, is_transfer BOOLEAN)
	RETURNS BOOLEAN AS $$
	DECLARE transaction_approved BOOLEAN;
	DECLARE account_type TEXT;
	BEGIN
	
	    
	    IF EXISTS (SELECT * FROM bank.accounts WHERE account_number = (SELECT dest_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id) AND sort_code = (SELECT sort_code FROM bank.pending_transactions WHERE id = pending_transaction_id)) THEN
	        RAISE NOTICE 'INTERNAL TRANSFER OCCURING';
	        IF is_transfer = TRUE THEN
	            IF bank.update_balance_amounts((SELECT origin_account_id FROM transaction WHERE id = pending_transaction_id), (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id)) = TRUE THEN
	                
	                transaction_approved = TRUE;
	                bank.update_balance_amounts((SELECT dest_account_number FROM pending_transaction WHERE id = pending_transaction_id), (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id));
	            ELSE
	                transaction_approved = FALSE;
	            END IF;
	
	            DELETE FROM pending_transaction WHERE id = pending_transaction_id;
	
	        ELSE
	            IF bank.update_balance_amounts((SELECT origin_account_id FROM transaction WHERE id = pending_transaction_id), (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id)) = TRUE THEN
	                transaction_approved = TRUE;
	            ELSE
	                transaction_approved = FALSE;
	            END IF;
	
	            DELETE FROM pending_transaction WHERE id = pending_transaction_id;
	        END IF;
	    ELSE
	        RAISE NOTICE 'EXTERNAL TRANSFER OCCURING';
	        IF bank.update_balance_amounts((SELECT origin_account_id FROM transaction WHERE id = pending_transaction_id), (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id)) THEN
	            transaction_approved = TRUE;
	        ELSE
	            transaction_approved = FALSE;
	        DELETE FROM pending_transaction WHERE id = pending_transaction_id;
	        END IF;
	    END IF;
	
	        
	    -- SELECT * FROM get_account_type((SELECT origin_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id)) INTO account_type;
	    --     IF account_type = 'DEBIT' THEN
	    --         RAISE NOTICE 'DEBIT ACCOUNT';
	    --         --check balance of debit account
	    --         IF EXISTS (SELECT * FROM debit_account WHERE account_number = (SELECT transaction_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id) AND current_balance >= (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id)) THEN
	    --             RAISE NOTICE 'SUFFICIENT FUNDS';
	    --             UPDATE debit_account SET current_balance = current_balance - (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id) WHERE account_number = (SELECT transaction_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id);
	    --             DELETE FROM pending_transaction WHERE id = pending_transaction_id;
	    --             transaction_approved = TRUE;
	    --         ELSE
	    --             RAISE NOTICE 'INSUFFICIENT FUNDS';
	    --             transaction_approved = FALSE;
	    --         END IF;
	    --     ELSIF account_type = 'CREDIT' THEN
	    --         RAISE NOTICE 'CREDIT ACCOUNT';
	    --         --check credit limit compared to credit usage of credit account
	    --         IF EXISTS (SELECT * FROM credit_account WHERE account_number = (SELECT transaction_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id) AND credit_limit >= (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id)) THEN
	    --             RAISE NOTICE 'SUFFICIENT CREDIT';
	    --             UPDATE credit_account SET credit_usage = credit_usage + (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id) WHERE account_number = (SELECT transaction_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id);
	    --             DELETE FROM pending_transaction WHERE id = pending_transaction_id;
	    --             transaction_approved = TRUE;
	    --         ELSE
	    --             RAISE NOTICE 'INSUFFICIENT CREDIT';
	    --             transaction_approved = FALSE;
	    --         END IF;
	    --     ELSIF account_type = 'SAVINGS' THEN
	    --         RAISE NOTICE 'SAVINGS ACCOUNT';
	    --         --check balance of savings account
	    --         IF EXISTS (SELECT * FROM savings_account WHERE account_number = (SELECT transaction_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id) AND current_balance >= (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id)) THEN
	    --             RAISE NOTICE 'SUFFICIENT FUNDS';
	    --             UPDATE savings_account SET current_balance = current_balance - (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id) WHERE account_number = (SELECT transaction_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id);
	    --             DELETE FROM pending_transaction WHERE id = pending_transaction_id;
	    --             transaction_approved = TRUE;
	    --         ELSE
	    --             RAISE NOTICE 'INSUFFICIENT FUNDS';
	    --             transaction_approved = FALSE;
	    --         END IF;
	    --     ELSE
	    --         RAISE NOTICE 'UNKNOWN ACCOUNT TYPE';
	    --         transaction_approved = FALSE;
	    --     END IF;
	
	    RETURN transaction_approved;
	END;
	$$ LANGUAGE plpgsql;
2023-01-16 20:51:39.139 GMT [86490] ERROR:  function bank.verify_and_update_transaction_amounts(integer, boolean) does not exist at character 15
2023-01-16 20:51:39.139 GMT [86490] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2023-01-16 20:51:39.139 GMT [86490] QUERY:  SELECT * FROM bank.verify_and_update_transaction_amounts(pending_transaction_id, TRUE)
2023-01-16 20:51:39.139 GMT [86490] CONTEXT:  PL/pgSQL function verify_transaction_type(integer) line 9 at SQL statement
	PL/pgSQL function verify_transaction(integer) line 6 at IF
2023-01-16 20:51:39.139 GMT [86490] STATEMENT:  SELECT * FROM bank.verify_transaction(1);
2023-01-16 20:53:27.923 GMT [86464] LOG:  received fast shutdown request
2023-01-16 20:53:27.924 GMT [86464] LOG:  aborting any active transactions
2023-01-16 20:53:27.928 GMT [86464] LOG:  background worker "logical replication launcher" (PID 86471) exited with exit code 1
2023-01-16 20:53:27.928 GMT [86466] LOG:  shutting down
2023-01-16 20:53:27.974 GMT [86464] LOG:  database system is shut down
2023-01-16 20:53:29.078 GMT [86888] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 20:53:29.079 GMT [86888] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 20:53:29.081 GMT [86888] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 20:53:29.086 GMT [86889] LOG:  database system was shut down at 2023-01-16 20:53:28 GMT
2023-01-16 20:53:29.092 GMT [86888] LOG:  database system is ready to accept connections
2023-01-16 20:53:29.909 GMT [86917] ERROR:  column "dest_account_number" does not exist at character 37
2023-01-16 20:53:29.909 GMT [86917] QUERY:  bank.update_balance_amounts((SELECT dest_account_number FROM pending_transaction WHERE id = pending_transaction_id), (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id))
2023-01-16 20:53:29.909 GMT [86917] CONTEXT:  PL/pgSQL function verify_and_update_transaction_amounts(integer,boolean) line 11 at IF
	SQL statement "SELECT * FROM bank.verify_and_update_transaction_amounts(pending_transaction_id, TRUE)"
	PL/pgSQL function verify_transaction_type(integer) line 9 at SQL statement
	PL/pgSQL function verify_transaction(integer) line 6 at IF
2023-01-16 20:53:29.909 GMT [86917] STATEMENT:  SELECT * FROM bank.verify_transaction(1);
2023-01-16 20:53:50.621 GMT [86888] LOG:  received fast shutdown request
2023-01-16 20:53:50.622 GMT [86888] LOG:  aborting any active transactions
2023-01-16 20:53:50.626 GMT [86888] LOG:  background worker "logical replication launcher" (PID 86895) exited with exit code 1
2023-01-16 20:53:50.629 GMT [86890] LOG:  shutting down
2023-01-16 20:53:50.674 GMT [86888] LOG:  database system is shut down
2023-01-16 20:53:51.659 GMT [87062] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 20:53:51.659 GMT [87062] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 20:53:51.661 GMT [87062] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 20:53:51.665 GMT [87063] LOG:  database system was shut down at 2023-01-16 20:53:51 GMT
2023-01-16 20:53:51.671 GMT [87062] LOG:  database system is ready to accept connections
2023-01-16 20:53:52.546 GMT [87088] ERROR:  column "dest_account_id" does not exist at character 37
2023-01-16 20:53:52.546 GMT [87088] QUERY:  bank.update_balance_amounts((SELECT dest_account_id FROM pending_transaction WHERE id = pending_transaction_id), (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id))
2023-01-16 20:53:52.546 GMT [87088] CONTEXT:  PL/pgSQL function verify_and_update_transaction_amounts(integer,boolean) line 11 at IF
	SQL statement "SELECT * FROM bank.verify_and_update_transaction_amounts(pending_transaction_id, TRUE)"
	PL/pgSQL function verify_transaction_type(integer) line 9 at SQL statement
	PL/pgSQL function verify_transaction(integer) line 6 at IF
2023-01-16 20:53:52.546 GMT [87088] STATEMENT:  SELECT * FROM bank.verify_transaction(1);
2023-01-16 20:54:04.263 GMT [87062] LOG:  received fast shutdown request
2023-01-16 20:54:04.264 GMT [87062] LOG:  aborting any active transactions
2023-01-16 20:54:04.268 GMT [87062] LOG:  background worker "logical replication launcher" (PID 87069) exited with exit code 1
2023-01-16 20:54:04.269 GMT [87064] LOG:  shutting down
2023-01-16 20:54:04.316 GMT [87062] LOG:  database system is shut down
2023-01-16 20:54:05.370 GMT [87206] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 20:54:05.370 GMT [87206] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 20:54:05.372 GMT [87206] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 20:54:05.377 GMT [87207] LOG:  database system was shut down at 2023-01-16 20:54:05 GMT
2023-01-16 20:54:05.382 GMT [87206] LOG:  database system is ready to accept connections
2023-01-16 20:54:28.296 GMT [87206] LOG:  received fast shutdown request
2023-01-16 20:54:28.297 GMT [87206] LOG:  aborting any active transactions
2023-01-16 20:54:28.302 GMT [87206] LOG:  background worker "logical replication launcher" (PID 87213) exited with exit code 1
2023-01-16 20:54:28.303 GMT [87208] LOG:  shutting down
2023-01-16 20:54:28.355 GMT [87206] LOG:  database system is shut down
2023-01-16 20:54:29.454 GMT [87385] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 20:54:29.454 GMT [87385] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 20:54:29.456 GMT [87385] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 20:54:29.459 GMT [87386] LOG:  database system was shut down at 2023-01-16 20:54:29 GMT
2023-01-16 20:54:29.464 GMT [87385] LOG:  database system is ready to accept connections
2023-01-16 20:55:12.454 GMT [87385] LOG:  received fast shutdown request
2023-01-16 20:55:12.456 GMT [87385] LOG:  aborting any active transactions
2023-01-16 20:55:12.458 GMT [87385] LOG:  background worker "logical replication launcher" (PID 87392) exited with exit code 1
2023-01-16 20:55:12.460 GMT [87387] LOG:  shutting down
2023-01-16 20:55:12.516 GMT [87385] LOG:  database system is shut down
2023-01-16 20:55:13.543 GMT [87642] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 20:55:13.543 GMT [87642] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 20:55:13.544 GMT [87642] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 20:55:13.549 GMT [87643] LOG:  database system was shut down at 2023-01-16 20:55:13 GMT
2023-01-16 20:55:13.555 GMT [87642] LOG:  database system is ready to accept connections
2023-01-16 20:55:45.893 GMT [87642] LOG:  received fast shutdown request
2023-01-16 20:55:45.894 GMT [87642] LOG:  aborting any active transactions
2023-01-16 20:55:45.900 GMT [87642] LOG:  background worker "logical replication launcher" (PID 87649) exited with exit code 1
2023-01-16 20:55:45.901 GMT [87644] LOG:  shutting down
2023-01-16 20:55:45.951 GMT [87642] LOG:  database system is shut down
2023-01-16 20:55:47.007 GMT [87834] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 20:55:47.007 GMT [87834] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 20:55:47.009 GMT [87834] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 20:55:47.014 GMT [87835] LOG:  database system was shut down at 2023-01-16 20:55:46 GMT
2023-01-16 20:55:47.019 GMT [87834] LOG:  database system is ready to accept connections
2023-01-16 20:56:02.508 GMT [87834] LOG:  received fast shutdown request
2023-01-16 20:56:02.510 GMT [87834] LOG:  aborting any active transactions
2023-01-16 20:56:02.516 GMT [87834] LOG:  background worker "logical replication launcher" (PID 87841) exited with exit code 1
2023-01-16 20:56:02.516 GMT [87836] LOG:  shutting down
2023-01-16 20:56:02.573 GMT [87834] LOG:  database system is shut down
2023-01-16 20:56:03.781 GMT [87987] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 20:56:03.781 GMT [87987] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 20:56:03.783 GMT [87987] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 20:56:03.789 GMT [87988] LOG:  database system was shut down at 2023-01-16 20:56:03 GMT
2023-01-16 20:56:03.794 GMT [87987] LOG:  database system is ready to accept connections
2023-01-16 20:57:21.160 GMT [87987] LOG:  received fast shutdown request
2023-01-16 20:57:21.162 GMT [87987] LOG:  aborting any active transactions
2023-01-16 20:57:21.167 GMT [87987] LOG:  background worker "logical replication launcher" (PID 87994) exited with exit code 1
2023-01-16 20:57:21.169 GMT [87989] LOG:  shutting down
2023-01-16 20:57:21.220 GMT [87987] LOG:  database system is shut down
2023-01-16 20:57:22.258 GMT [88305] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 20:57:22.258 GMT [88305] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 20:57:22.260 GMT [88305] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 20:57:22.264 GMT [88306] LOG:  database system was shut down at 2023-01-16 20:57:22 GMT
2023-01-16 20:57:22.269 GMT [88305] LOG:  database system is ready to accept connections
2023-01-16 20:57:54.798 GMT [88305] LOG:  received fast shutdown request
2023-01-16 20:57:54.800 GMT [88305] LOG:  aborting any active transactions
2023-01-16 20:57:54.802 GMT [88305] LOG:  background worker "logical replication launcher" (PID 88312) exited with exit code 1
2023-01-16 20:57:54.806 GMT [88307] LOG:  shutting down
2023-01-16 20:57:54.850 GMT [88305] LOG:  database system is shut down
2023-01-16 20:57:55.987 GMT [88534] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 20:57:55.987 GMT [88534] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 20:57:55.988 GMT [88534] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 20:57:55.993 GMT [88535] LOG:  database system was shut down at 2023-01-16 20:57:55 GMT
2023-01-16 20:57:55.999 GMT [88534] LOG:  database system is ready to accept connections
2023-01-16 20:58:12.461 GMT [88534] LOG:  received fast shutdown request
2023-01-16 20:58:12.462 GMT [88534] LOG:  aborting any active transactions
2023-01-16 20:58:12.469 GMT [88534] LOG:  background worker "logical replication launcher" (PID 88541) exited with exit code 1
2023-01-16 20:58:12.469 GMT [88536] LOG:  shutting down
2023-01-16 20:58:12.516 GMT [88534] LOG:  database system is shut down
2023-01-16 20:58:13.629 GMT [88694] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 20:58:13.629 GMT [88694] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 20:58:13.630 GMT [88694] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 20:58:13.636 GMT [88695] LOG:  database system was shut down at 2023-01-16 20:58:13 GMT
2023-01-16 20:58:13.642 GMT [88694] LOG:  database system is ready to accept connections
2023-01-16 20:59:03.535 GMT [88694] LOG:  received fast shutdown request
2023-01-16 20:59:03.537 GMT [88694] LOG:  aborting any active transactions
2023-01-16 20:59:03.540 GMT [88694] LOG:  background worker "logical replication launcher" (PID 88701) exited with exit code 1
2023-01-16 20:59:03.542 GMT [88696] LOG:  shutting down
2023-01-16 20:59:03.593 GMT [88694] LOG:  database system is shut down
2023-01-16 20:59:04.722 GMT [88946] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 20:59:04.722 GMT [88946] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 20:59:04.724 GMT [88946] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 20:59:04.728 GMT [88947] LOG:  database system was shut down at 2023-01-16 20:59:04 GMT
2023-01-16 20:59:04.735 GMT [88946] LOG:  database system is ready to accept connections
2023-01-16 20:59:13.153 GMT [88946] LOG:  received fast shutdown request
2023-01-16 20:59:13.155 GMT [88946] LOG:  aborting any active transactions
2023-01-16 20:59:13.164 GMT [88946] LOG:  background worker "logical replication launcher" (PID 88953) exited with exit code 1
2023-01-16 20:59:13.164 GMT [88948] LOG:  shutting down
2023-01-16 20:59:13.222 GMT [88946] LOG:  database system is shut down
2023-01-16 20:59:14.213 GMT [89067] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 20:59:14.213 GMT [89067] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 20:59:14.215 GMT [89067] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 20:59:14.221 GMT [89068] LOG:  database system was shut down at 2023-01-16 20:59:13 GMT
2023-01-16 20:59:14.226 GMT [89067] LOG:  database system is ready to accept connections
2023-01-16 20:59:24.900 GMT [89067] LOG:  received fast shutdown request
2023-01-16 20:59:24.902 GMT [89067] LOG:  aborting any active transactions
2023-01-16 20:59:24.907 GMT [89067] LOG:  background worker "logical replication launcher" (PID 89074) exited with exit code 1
2023-01-16 20:59:24.908 GMT [89069] LOG:  shutting down
2023-01-16 20:59:24.955 GMT [89067] LOG:  database system is shut down
2023-01-16 20:59:26.061 GMT [89224] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 20:59:26.062 GMT [89224] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 20:59:26.063 GMT [89224] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 20:59:26.067 GMT [89225] LOG:  database system was shut down at 2023-01-16 20:59:25 GMT
2023-01-16 20:59:26.073 GMT [89224] LOG:  database system is ready to accept connections
2023-01-16 20:59:53.575 GMT [89224] LOG:  received fast shutdown request
2023-01-16 20:59:53.577 GMT [89224] LOG:  aborting any active transactions
2023-01-16 20:59:53.581 GMT [89224] LOG:  background worker "logical replication launcher" (PID 89231) exited with exit code 1
2023-01-16 20:59:53.581 GMT [89226] LOG:  shutting down
2023-01-16 20:59:53.634 GMT [89224] LOG:  database system is shut down
2023-01-16 20:59:54.690 GMT [89411] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 20:59:54.690 GMT [89411] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 20:59:54.693 GMT [89411] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 20:59:54.698 GMT [89412] LOG:  database system was shut down at 2023-01-16 20:59:54 GMT
2023-01-16 20:59:54.703 GMT [89411] LOG:  database system is ready to accept connections
2023-01-16 21:00:05.504 GMT [89411] LOG:  received fast shutdown request
2023-01-16 21:00:05.506 GMT [89411] LOG:  aborting any active transactions
2023-01-16 21:00:05.510 GMT [89411] LOG:  background worker "logical replication launcher" (PID 89418) exited with exit code 1
2023-01-16 21:00:05.512 GMT [89413] LOG:  shutting down
2023-01-16 21:00:05.562 GMT [89411] LOG:  database system is shut down
2023-01-16 21:00:06.682 GMT [89548] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 21:00:06.683 GMT [89548] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 21:00:06.684 GMT [89548] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 21:00:06.688 GMT [89549] LOG:  database system was shut down at 2023-01-16 21:00:06 GMT
2023-01-16 21:00:06.693 GMT [89548] LOG:  database system is ready to accept connections
2023-01-16 21:00:37.919 GMT [89548] LOG:  received fast shutdown request
2023-01-16 21:00:37.921 GMT [89548] LOG:  aborting any active transactions
2023-01-16 21:00:37.923 GMT [89548] LOG:  background worker "logical replication launcher" (PID 89555) exited with exit code 1
2023-01-16 21:00:37.927 GMT [89550] LOG:  shutting down
2023-01-16 21:00:37.978 GMT [89548] LOG:  database system is shut down
2023-01-16 21:00:39.089 GMT [89760] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 21:00:39.089 GMT [89760] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 21:00:39.091 GMT [89760] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 21:00:39.095 GMT [89761] LOG:  database system was shut down at 2023-01-16 21:00:38 GMT
2023-01-16 21:00:39.102 GMT [89760] LOG:  database system is ready to accept connections
2023-01-16 21:01:17.986 GMT [89760] LOG:  received fast shutdown request
2023-01-16 21:01:17.988 GMT [89760] LOG:  aborting any active transactions
2023-01-16 21:01:17.991 GMT [89760] LOG:  background worker "logical replication launcher" (PID 89767) exited with exit code 1
2023-01-16 21:01:17.997 GMT [89762] LOG:  shutting down
2023-01-16 21:01:18.041 GMT [89760] LOG:  database system is shut down
2023-01-16 21:01:19.170 GMT [89975] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 21:01:19.171 GMT [89975] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 21:01:19.173 GMT [89975] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 21:01:19.179 GMT [89976] LOG:  database system was shut down at 2023-01-16 21:01:18 GMT
2023-01-16 21:01:19.184 GMT [89975] LOG:  database system is ready to accept connections
2023-01-16 21:01:30.216 GMT [89975] LOG:  received fast shutdown request
2023-01-16 21:01:30.217 GMT [89975] LOG:  aborting any active transactions
2023-01-16 21:01:30.224 GMT [89975] LOG:  background worker "logical replication launcher" (PID 89982) exited with exit code 1
2023-01-16 21:01:30.224 GMT [89977] LOG:  shutting down
2023-01-16 21:01:30.271 GMT [89975] LOG:  database system is shut down
2023-01-16 21:01:31.327 GMT [90119] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 21:01:31.327 GMT [90119] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 21:01:31.329 GMT [90119] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 21:01:31.333 GMT [90120] LOG:  database system was shut down at 2023-01-16 21:01:31 GMT
2023-01-16 21:01:31.339 GMT [90119] LOG:  database system is ready to accept connections
2023-01-16 21:02:51.364 GMT [90119] LOG:  received fast shutdown request
2023-01-16 21:02:51.366 GMT [90119] LOG:  aborting any active transactions
2023-01-16 21:02:51.372 GMT [90119] LOG:  background worker "logical replication launcher" (PID 90126) exited with exit code 1
2023-01-16 21:02:51.372 GMT [90121] LOG:  shutting down
2023-01-16 21:02:51.419 GMT [90119] LOG:  database system is shut down
2023-01-16 21:02:52.530 GMT [90445] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 21:02:52.530 GMT [90445] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 21:02:52.532 GMT [90445] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 21:02:52.536 GMT [90446] LOG:  database system was shut down at 2023-01-16 21:02:52 GMT
2023-01-16 21:02:52.542 GMT [90445] LOG:  database system is ready to accept connections
2023-01-16 21:02:53.325 GMT [90474] ERROR:  syntax error at or near "client" at character 437
2023-01-16 21:02:53.325 GMT [90474] STATEMENT:  CREATE OR REPLACE FUNCTION client.initiate_transfer(account_identifier INT, orig_account_number INT, transfer_amount NUMERIC, transfer_account_number INT, transfer_account_sort_code INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE internal_account_id INT;
	DECLARE ROW_COUNT INT;
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Initiated transfer', CURRENT_DATE);
	
	    client.place_transaction_into_account(account_identifier, orig_account_number, transfer_account_number, transfer_amount, transfer_account_sort_code);
	
	    -- SELECT account_id INTO internal_account_id FROM client.accounts
	    -- WHERE account_number = transfer_account_number AND sort_code = transfer_account_sort_code;
	
	    -- IF internal_account_id IS NULL THEN
	    --    RAISE NOTICE 'EXTERNAL TRANSFER TO LOCAL ACCOUNT %', transfer_account_number;
	       
	    -- ELSE
	    --     RAISE NOTICE 'INTERNAL TRANSFER TO ACCOUNT %', transfer_account_number;
	    --     SELECT * FROM client.place_transaction_into_account(account_identifier, orig_account_number, transfer_account_number, transfer_amount, transfer_account_sort_code) INTO passed;
	    --     --SELECT * FROM client.place_transaction_out_of_account(account_identifier, transfer_account_number, orig_account_number, transfer_amount) INTO passed;
	    --     GET DIAGNOSTICS ROW_COUNT = ROW_COUNT;
	    --     passed = CASE WHEN ROW_COUNT = 1 THEN TRUE ELSE FALSE END;
	    END IF;
	
	    RETURN passed;
	
	END;
	$$ LANGUAGE plpgsql;
2023-01-16 21:02:53.373 GMT [90474] ERROR:  function client.initiate_transfer(integer, integer, numeric, integer, integer) does not exist at character 15
2023-01-16 21:02:53.373 GMT [90474] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2023-01-16 21:02:53.373 GMT [90474] STATEMENT:  SELECT * FROM client.initiate_transfer(1, 10000001, 100.00, 20000000, 123456);
2023-01-16 21:03:13.955 GMT [90445] LOG:  received fast shutdown request
2023-01-16 21:03:13.957 GMT [90445] LOG:  aborting any active transactions
2023-01-16 21:03:13.960 GMT [90445] LOG:  background worker "logical replication launcher" (PID 90452) exited with exit code 1
2023-01-16 21:03:13.960 GMT [90447] LOG:  shutting down
2023-01-16 21:03:14.011 GMT [90445] LOG:  database system is shut down
2023-01-16 21:03:15.121 GMT [90618] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 21:03:15.122 GMT [90618] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 21:03:15.123 GMT [90618] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 21:03:15.127 GMT [90619] LOG:  database system was shut down at 2023-01-16 21:03:14 GMT
2023-01-16 21:03:15.132 GMT [90618] LOG:  database system is ready to accept connections
2023-01-16 21:03:15.975 GMT [90644] ERROR:  syntax error at or near "client" at character 437
2023-01-16 21:03:15.975 GMT [90644] STATEMENT:  CREATE OR REPLACE FUNCTION client.initiate_transfer(account_identifier INT, orig_account_number INT, transfer_amount NUMERIC, transfer_account_number INT, transfer_account_sort_code INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE internal_account_id INT;
	DECLARE ROW_COUNT INT;
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Initiated transfer', CURRENT_DATE);
	
	    client.place_transaction_into_account(account_identifier, orig_account_number, transfer_account_number, transfer_amount, transfer_account_sort_code);
	
	    -- SELECT account_id INTO internal_account_id FROM client.accounts
	    -- WHERE account_number = transfer_account_number AND sort_code = transfer_account_sort_code;
	
	    -- IF internal_account_id IS NULL THEN
	    --    RAISE NOTICE 'EXTERNAL TRANSFER TO LOCAL ACCOUNT %', transfer_account_number;
	       
	    -- ELSE
	    --     RAISE NOTICE 'INTERNAL TRANSFER TO ACCOUNT %', transfer_account_number;
	    --     SELECT * FROM client.place_transaction_into_account(account_identifier, orig_account_number, transfer_account_number, transfer_amount, transfer_account_sort_code) INTO passed;
	    --     --SELECT * FROM client.place_transaction_out_of_account(account_identifier, transfer_account_number, orig_account_number, transfer_amount) INTO passed;
	    --     GET DIAGNOSTICS ROW_COUNT = ROW_COUNT;
	    --     passed = CASE WHEN ROW_COUNT = 1 THEN TRUE ELSE FALSE END;
	    --END IF;
	
	    RETURN passed;
	
	END;
	$$ LANGUAGE plpgsql;
2023-01-16 21:03:16.040 GMT [90644] ERROR:  function client.initiate_transfer(integer, integer, numeric, integer, integer) does not exist at character 15
2023-01-16 21:03:16.040 GMT [90644] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2023-01-16 21:03:16.040 GMT [90644] STATEMENT:  SELECT * FROM client.initiate_transfer(1, 10000001, 100.00, 20000000, 123456);
2023-01-16 21:03:35.243 GMT [90618] LOG:  received fast shutdown request
2023-01-16 21:03:35.246 GMT [90618] LOG:  aborting any active transactions
2023-01-16 21:03:35.252 GMT [90618] LOG:  background worker "logical replication launcher" (PID 90625) exited with exit code 1
2023-01-16 21:03:35.253 GMT [90620] LOG:  shutting down
2023-01-16 21:03:35.301 GMT [90618] LOG:  database system is shut down
2023-01-16 21:03:36.407 GMT [90805] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 21:03:36.407 GMT [90805] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 21:03:36.408 GMT [90805] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 21:03:36.415 GMT [90807] LOG:  database system was shut down at 2023-01-16 21:03:36 GMT
2023-01-16 21:03:36.422 GMT [90805] LOG:  database system is ready to accept connections
2023-01-16 21:03:37.208 GMT [90832] ERROR:  query has no destination for result data
2023-01-16 21:03:37.208 GMT [90832] HINT:  If you want to discard the results of a SELECT, use PERFORM instead.
2023-01-16 21:03:37.208 GMT [90832] CONTEXT:  PL/pgSQL function initiate_transfer(integer,integer,numeric,integer,integer) line 8 at SQL statement
2023-01-16 21:03:37.208 GMT [90832] STATEMENT:  SELECT * FROM client.initiate_transfer(1, 10000001, 100.00, 20000000, 123456);
2023-01-16 21:04:05.387 GMT [90805] LOG:  received fast shutdown request
2023-01-16 21:04:05.388 GMT [90805] LOG:  aborting any active transactions
2023-01-16 21:04:05.392 GMT [90805] LOG:  background worker "logical replication launcher" (PID 90813) exited with exit code 1
2023-01-16 21:04:05.395 GMT [90808] LOG:  shutting down
2023-01-16 21:04:05.441 GMT [90805] LOG:  database system is shut down
2023-01-16 21:04:06.589 GMT [90995] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 21:04:06.589 GMT [90995] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 21:04:06.591 GMT [90995] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 21:04:06.596 GMT [90996] LOG:  database system was shut down at 2023-01-16 21:04:06 GMT
2023-01-16 21:04:06.601 GMT [90995] LOG:  database system is ready to accept connections
2023-01-16 21:09:09.201 GMT [90995] LOG:  received fast shutdown request
2023-01-16 21:09:09.202 GMT [90995] LOG:  aborting any active transactions
2023-01-16 21:09:09.207 GMT [90995] LOG:  background worker "logical replication launcher" (PID 91002) exited with exit code 1
2023-01-16 21:09:09.245 GMT [90997] LOG:  shutting down
2023-01-16 21:09:09.257 GMT [90995] LOG:  database system is shut down
2023-01-16 21:09:10.390 GMT [92024] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 21:09:10.390 GMT [92024] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 21:09:10.392 GMT [92024] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 21:09:10.396 GMT [92028] LOG:  database system was shut down at 2023-01-16 21:09:10 GMT
2023-01-16 21:09:10.401 GMT [92024] LOG:  database system is ready to accept connections
2023-01-16 21:09:11.239 GMT [92053] ERROR:  query has no destination for result data
2023-01-16 21:09:11.239 GMT [92053] HINT:  If you want to discard the results of a SELECT, use PERFORM instead.
2023-01-16 21:09:11.239 GMT [92053] CONTEXT:  PL/pgSQL function transaction_verification() line 4 at SQL statement
	SQL statement "INSERT INTO pending_transaction (id, account_id, is_transfer) VALUES (transaction_id, orig_account_number, true)"
	PL/pgSQL function place_transaction_into_account(integer,integer,integer,numeric,integer) line 27 at SQL statement
	SQL statement "SELECT * FROM client.place_transaction_into_account(account_identifier, orig_account_number, transfer_account_number, transfer_amount, transfer_account_sort_code)"
	PL/pgSQL function initiate_transfer(integer,integer,numeric,integer,integer) line 8 at SQL statement
2023-01-16 21:09:11.239 GMT [92053] STATEMENT:  SELECT * FROM client.initiate_transfer(1, 10000001, 100.00, 20000000, 123456);
2023-01-16 21:10:32.304 GMT [92024] LOG:  received fast shutdown request
2023-01-16 21:10:32.306 GMT [92024] LOG:  aborting any active transactions
2023-01-16 21:10:32.308 GMT [92024] LOG:  background worker "logical replication launcher" (PID 92034) exited with exit code 1
2023-01-16 21:10:32.312 GMT [92029] LOG:  shutting down
2023-01-16 21:10:32.359 GMT [92024] LOG:  database system is shut down
2023-01-16 21:10:33.503 GMT [92377] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 21:10:33.503 GMT [92377] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 21:10:33.504 GMT [92377] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 21:10:33.509 GMT [92378] LOG:  database system was shut down at 2023-01-16 21:10:33 GMT
2023-01-16 21:10:33.515 GMT [92377] LOG:  database system is ready to accept connections
2023-01-16 21:29:55.064 GMT [92377] LOG:  received fast shutdown request
2023-01-16 21:29:55.066 GMT [92377] LOG:  aborting any active transactions
2023-01-16 21:29:55.071 GMT [92377] LOG:  background worker "logical replication launcher" (PID 92384) exited with exit code 1
2023-01-16 21:29:55.071 GMT [92379] LOG:  shutting down
2023-01-16 21:29:55.089 GMT [92377] LOG:  database system is shut down
2023-01-16 21:29:59.754 GMT [95715] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 21:29:59.754 GMT [95715] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 21:29:59.757 GMT [95715] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 21:29:59.764 GMT [95716] LOG:  database system was shut down at 2023-01-16 21:29:59 GMT
2023-01-16 21:29:59.773 GMT [95715] LOG:  database system is ready to accept connections
2023-01-16 21:30:00.799 GMT [95744] ERROR:  no language specified
2023-01-16 21:30:00.799 GMT [95744] STATEMENT:  CREATE OR REPLACE FUNCTION staff.view_personal_information(first_name, last_name);
2023-01-16 21:30:00.799 GMT [95744] ERROR:  syntax error at or near "RETURNS" at character 1
2023-01-16 21:30:00.799 GMT [95744] STATEMENT:  RETURNS TABLE(first_name TEXT, last_name TEXT, )
	CREATE SCHEMA IF NOT EXISTS client;
2023-01-16 21:30:00.801 GMT [95744] ERROR:  schema "client" does not exist
2023-01-16 21:30:00.801 GMT [95744] STATEMENT:  CREATE OR REPLACE VIEW client.accounts AS
	    SELECT account.account_number, account.account_id, online_account.sort_code FROM account
	    INNER JOIN online_account ON account.account_id = online_account.id;
2023-01-16 21:30:00.802 GMT [95744] ERROR:  relation "client.accounts" does not exist at character 298
2023-01-16 21:30:00.802 GMT [95744] STATEMENT:  CREATE OR REPLACE VIEW client.debit_accounts AS
	    SELECT accounts.account_id, accounts.account_number, debit_account.current_balance, debit_account.interest_rate, debit_overdraft.overdraft_limit, debit_overdraft.overdraft_usage, debit_overdraft.interest_rate AS overdraft_interest_rate
	    FROM client.accounts
	    INNER JOIN debit_account ON accounts.account_number = debit_account.account_number
	    INNER JOIN debit_overdraft ON accounts.account_number = debit_overdraft.account_number;
2023-01-16 21:30:00.802 GMT [95744] ERROR:  relation "debit_accounts" does not exist at character 238
2023-01-16 21:30:00.802 GMT [95744] STATEMENT:  CREATE OR REPLACE VIEW client.debit_accounts_statements AS
	    SELECT debit_accounts.account_id, debit_accounts.account_number, debit_statement.id, debit_statement.starting_date, debit_statement.end_date, debit_statement.amount
	    FROM debit_accounts
	    INNER JOIN debit_statement ON debit_accounts.account_number = debit_statement.account_number;
2023-01-16 21:30:00.802 GMT [95744] ERROR:  relation "debit_accounts_statements" does not exist at character 413
2023-01-16 21:30:00.802 GMT [95744] STATEMENT:  CREATE OR REPLACE VIEW client.debit_accounts_statement AS
	    SELECT debit_accounts_statements.account_id, debit_accounts_statements.account_number, debit_accounts_statements.id, debit_accounts_statements.starting_date, debit_accounts_statements.end_date, debit_accounts_statements.amount AS total_amount, transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date
	    FROM debit_accounts_statements
	    INNER JOIN transaction ON debit_accounts_statements.id = transaction.debit_statement_id;
2023-01-16 21:30:00.803 GMT [95744] ERROR:  relation "client.accounts" does not exist at character 257
2023-01-16 21:30:00.803 GMT [95744] STATEMENT:  CREATE OR REPLACE VIEW client.credit_accounts AS
	    SELECT accounts.account_id, accounts.account_number, credit_account.outstanding_balance, credit_account.credit_limit, credit_account.interest_rate, credit_account_application.application_status
	    FROM client.accounts
	    INNER JOIN credit_account ON accounts.account_number = credit_account.account_number
	    INNER JOIN credit_account_application ON accounts.account_number = credit_account_application.account_number;
2023-01-16 21:30:00.803 GMT [95744] ERROR:  relation "credit_accounts" does not exist at character 322
2023-01-16 21:30:00.803 GMT [95744] STATEMENT:  CREATE OR REPLACE VIEW client.credit_accounts_statements AS
	    SELECT credit_accounts.account_id, credit_accounts.account_number, credit_statement.id, credit_statement.starting_date, credit_statement.end_date, credit_statement.amount, credit_statement.minimum_payment, credit_statement.minimum_payment_due_date
	    FROM credit_accounts
	    INNER JOIN credit_statement ON credit_accounts.account_number = credit_statement.account_number;
2023-01-16 21:30:00.804 GMT [95744] ERROR:  relation "credit_accounts_statements" does not exist at character 517
2023-01-16 21:30:00.804 GMT [95744] STATEMENT:  CREATE OR REPLACE VIEW client.credit_accounts_statement AS
	    SELECT credit_accounts_statements.account_id, credit_accounts_statements.account_number, credit_accounts_statements.id, credit_accounts_statements.starting_date, credit_accounts_statements.end_date, credit_accounts_statements.amount AS total_amount, credit_accounts_statements.minimum_payment, credit_accounts_statements.minimum_payment_due_date, transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date
	    FROM credit_accounts_statements
	    INNER JOIN transaction ON credit_accounts_statements.id = transaction.credit_statement_id;
2023-01-16 21:30:00.804 GMT [95744] ERROR:  relation "client.accounts" does not exist at character 180
2023-01-16 21:30:00.804 GMT [95744] STATEMENT:  CREATE OR REPLACE VIEW client.savings_accounts AS
	    SELECT accounts.account_id, accounts.account_number, savings_account.current_balance, savings_account.interest_rate
	    FROM client.accounts
	    INNER JOIN savings_account ON accounts.account_number = savings_account.account_number;
2023-01-16 21:30:00.804 GMT [95744] ERROR:  relation "savings_accounts" does not exist at character 252
2023-01-16 21:30:00.804 GMT [95744] STATEMENT:  CREATE OR REPLACE VIEW client.savings_accounts_statements AS
	    SELECT savings_accounts.account_id, savings_accounts.account_number, savings_statement.id, savings_statement.starting_date, savings_statement.end_date, savings_statement.amount
	    FROM savings_accounts
	    INNER JOIN savings_statement ON savings_accounts.account_number = savings_statement.account_number;
2023-01-16 21:30:00.805 GMT [95744] ERROR:  schema "client" does not exist
2023-01-16 21:30:00.805 GMT [95744] STATEMENT:  CREATE OR REPLACE VIEW client.loans AS
	    SELECT loan.account_id, loan.id, loan.amount, loan.interest_rate, loan.loan_type, loan.end_date, loan_application.application_status
	    FROM loan
	    INNER JOIN loan_application ON loan.id = loan_application.loan_id;
2023-01-16 21:30:00.805 GMT [95744] ERROR:  relation "client.loans" does not exist at character 185
2023-01-16 21:30:00.805 GMT [95744] STATEMENT:  CREATE OR REPLACE VIEW client.loan_statements AS
	    SELECT loans.account_id, loans.id, loan_statement.id as statement_id, loan_statement.starting_date, loan_statement.amount
	    FROM client.loans
	    INNER JOIN loan_statement ON loans.id = loan_statement.loan_id;
2023-01-16 21:30:00.805 GMT [95744] ERROR:  schema "client" does not exist
2023-01-16 21:30:00.805 GMT [95744] STATEMENT:  CREATE OR REPLACE VIEW client.loan_applications AS
	    SELECT loan.account_id, loan_application.id, loan_application.application_status, loan_application.loan_id
	    FROM loan_application
	    INNER JOIN loan ON loan_application.loan_id = loan.id;
2023-01-16 21:30:00.806 GMT [95744] ERROR:  schema "client" does not exist
2023-01-16 21:30:00.806 GMT [95744] STATEMENT:  CREATE OR REPLACE FUNCTION client.update_personal_information(account_identifier INT, first_name TEXT, last_name TEXT, date_of_birth DATE, phone_number TEXT, email_address TEXT, address_street TEXT, address_city TEXT, address_county TEXT, address_postcode TEXT, account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	BEGIN
	    UPDATE customer SET first_name = first_name, last_name = last_name, date_of_birth = date_of_birth, phone_number = phone_number, email_address = email_address, address_street = address_street, address_city = address_city, address_county = address_county, address_postcode = address_postcode
	    WHERE id = (SELECT customer_id FROM online_account WHERE id = account_identifier);
	
	    -- INSERT INTO management_log (log_description, log_date, account_id) VALUES ('Updated personal information', CURRENT_DATE, account_identifier);
	    passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
	    RETURN passed;
	END;
	$$ LANGUAGE plpgsql;
2023-01-16 21:30:00.806 GMT [95744] ERROR:  schema "client" does not exist
2023-01-16 21:30:00.806 GMT [95744] STATEMENT:  CREATE OR REPLACE FUNCTION client.update_password(account_identifier INT, new_password TEXT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE ROW_COUNT INT;
	BEGIN
	    UPDATE user_login SET password = md5(new_password)
	    WHERE account_id = account_identifier;
	    GET DIAGNOSTICS ROW_COUNT = ROW_COUNT;
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Updated password', CURRENT_DATE);
	    passed = CASE WHEN ROW_COUNT = 1 THEN TRUE ELSE FALSE END;
	    RETURN passed;
	END;
	$$ LANGUAGE plpgsql;
2023-01-16 21:30:00.806 GMT [95744] ERROR:  schema "client" does not exist
2023-01-16 21:30:00.806 GMT [95744] STATEMENT:  CREATE OR REPLACE FUNCTION client.update_email(account_identifier INT, new_email TEXT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE ROW_COUNT INT;
	BEGIN
	    UPDATE user_login SET email = new_email
	    WHERE account_id = account_identifier;
	
	    GET DIAGNOSTICS ROW_COUNT = ROW_COUNT;
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Updated email', CURRENT_DATE);
	    passed = CASE WHEN ROW_COUNT = 1 THEN TRUE ELSE FALSE END;
	    RETURN passed;
	END;
	$$ LANGUAGE plpgsql;
2023-01-16 21:30:00.806 GMT [95744] ERROR:  schema "client" does not exist
2023-01-16 21:30:00.806 GMT [95744] STATEMENT:  CREATE OR REPLACE FUNCTION client.open_debit_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE debit_account_number INT;
	DECLARE next_account_number INT;
	DECLARE ROW_COUNT INT;
	BEGIN
	
	    SELECT get_next_account_number() INTO next_account_number;
	
	    INSERT INTO debit_account (account_number, account_id, current_balance, interest_rate) VALUES (next_account_number ,account_id, 0, 0.01) RETURNING account_number INTO debit_account_number;
	    GET DIAGNOSTICS ROW_COUNT = ROW_COUNT;
	    INSERT INTO debit_statement (starting_date, end_date, amount, account_number) VALUES (date_trunc('month', now()::date), (date_trunc('month', now()::date)) + interval '1 month - 1 day', 0, debit_account_number);
	    INSERT INTO debit_overdraft (overdraft_usage, overdraft_limit, interest_rate, account_number) VALUES (0, 0, 0.01, debit_account_number);
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened debit account', CURRENT_DATE);
	    passed = CASE WHEN ROW_COUNT = 1 THEN TRUE ELSE FALSE END;
	    RETURN passed;
	END;
	$$ LANGUAGE plpgsql;
2023-01-16 21:30:00.807 GMT [95744] ERROR:  schema "client" does not exist
2023-01-16 21:30:00.807 GMT [95744] STATEMENT:  CREATE OR REPLACE FUNCTION client.open_credit_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE credit_account_number INT;
	DECLARE next_account_number INT;
	DECLARE ROW_COUNT INT;
	BEGIN
	
	    SELECT get_next_account_number() INTO next_account_number;
	
	    INSERT INTO credit_account (account_number, outstanding_balance, credit_limit, interest_rate, account_id) VALUES (next_account_number ,0, 0, 24.9, account_id) RETURNING account_number INTO credit_account_number;
	    GET DIAGNOSTICS ROW_COUNT = ROW_COUNT;
	    INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (date_trunc('month', now()::date), (date_trunc('month', now()::date)) + interval '1 month - 1 day', 0, 0, CURRENT_DATE, credit_account_number);
	    INSERT INTO credit_account_application (account_number, application_status) VALUES (credit_account_number, 'PENDING');
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened credit account', CURRENT_DATE);
	    passed = CASE WHEN ROW_COUNT = 1 THEN TRUE ELSE FALSE END;
	    return PASSED;
	END
	$$ LANGUAGE plpgsql;
2023-01-16 21:30:00.807 GMT [95744] ERROR:  schema "client" does not exist
2023-01-16 21:30:00.807 GMT [95744] STATEMENT:  CREATE OR REPLACE FUNCTION client.open_savings_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE savings_account_id INT;
	DECLARE next_account_number INT;
	DECLARE ROW_COUNT INT;
	BEGIN
	
	    SELECT get_next_account_number() INTO next_account_number;
	
	    INSERT INTO savings_account (account_number, account_id, current_balance, interest_rate) VALUES (next_account_number ,account_id, 10000, 0.01) RETURNING account_number INTO savings_account_id;
	    GET DIAGNOSTICS ROW_COUNT = ROW_COUNT;
	    INSERT INTO savings_statement (starting_date, end_date, amount, account_number) VALUES (date_trunc('month', now()::date), (date_trunc('month', now()::date)) + interval '1 month - 1 day', 0, savings_account_id);
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened savings account', CURRENT_DATE);
	    passed = CASE WHEN ROW_COUNT = 1 THEN TRUE ELSE FALSE END;
	    RETURN passed;
	END;
	$$ LANGUAGE plpgsql;
2023-01-16 21:30:00.807 GMT [95744] ERROR:  schema "client" does not exist
2023-01-16 21:30:00.807 GMT [95744] STATEMENT:  CREATE OR REPLACE FUNCTION client.open_loan(account_id INT, loan_amount INT, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE loan_id INT;
	DECLARE ROW_COUNT INT;
	BEGIN
	    INSERT INTO loan (account_id, loan_amount, loan_end_date, loan_type, loan_interest_rate) VALUES (account_id, loan_amount, loan_end_date, loan_type, loan_interest_rate) RETURNING id INTO loan_id;
	    GET DIAGNOSTICS ROW_COUNT = ROW_COUNT;
	    INSERT INTO loan_statement (starting_date, end_date, amount, account_id) VALUES (date_trunc('month', now()::date), (date_trunc('month', now()::date)) + interval '1 month - 1 day', 0, loan_id);
	    INSERT INTO loan_application (loan_id, application_status) VALUES (loan_id, 'PENDING');
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened loan', CURRENT_DATE);
	    passed = CASE WHEN ROW_COUNT = 1 THEN TRUE ELSE FALSE END;
	    RETURN passed;
	END;
	$$ LANGUAGE plpgsql;
2023-01-16 21:30:00.807 GMT [95744] ERROR:  schema "client" does not exist
2023-01-16 21:30:00.807 GMT [95744] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_personal_information(account_id INT)
	RETURNS TABLE (first_name TEXT, last_name TEXT, email TEXT, phone_number TEXT, address TEXT, city TEXT, country TEXT, postal_code TEXT) AS $$
	BEGIN
	    RETURN QUERY
	        SELECT first_name, last_name, email, phone_number, address, city, country, postal_code
	            FROM customer
	        INNER JOIN account ON account.customer_id = customer.id
	        WHERE account.id = account_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-16 21:30:00.807 GMT [95744] ERROR:  schema "client" does not exist
2023-01-16 21:30:00.807 GMT [95744] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_accounts(account_identifier INT)
	RETURNS TABLE (account_number INT, account_id INT, balance NUMERIC, interest_rate NUMERIC, account_type TEXT) AS $$
	
	BEGIN
	
	    RETURN QUERY
	        SELECT account.*, COALESCE(debit_accounts.current_balance, credit_accounts.outstanding_balance, savings_accounts.current_balance) AS balance,
	            COALESCE(debit_accounts.interest_rate, credit_accounts.interest_rate, savings_accounts.interest_rate) AS interest_rate,
	            get_account_type(account.account_number) AS account_type
	            FROM account
	            LEFT JOIN client.credit_accounts ON account.account_number = credit_accounts.account_number
	            LEFT JOIN client.debit_accounts ON account.account_number = debit_accounts.account_number
	            LEFT JOIN client.savings_accounts ON account.account_number = savings_accounts.account_number
	            WHERE account.account_id = account_identifier;
	
	END;
	$$ LANGUAGE plpgsql;
2023-01-16 21:30:00.808 GMT [95744] ERROR:  schema "client" does not exist
2023-01-16 21:30:00.808 GMT [95744] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_debit_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, overdraft_limit NUMERIC, overdraft_usage NUMERIC, overdraft_interest_rate NUMERIC, external_account_number INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed debit accounts', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT * FROM client.debit_accounts WHERE account_id = account_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-16 21:30:00.808 GMT [95744] ERROR:  schema "client" does not exist
2023-01-16 21:30:00.808 GMT [95744] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_credit_accounts(account_id INT)
	RETURNS TABLE (id INT, outstanding_balance NUMERIC, credit_limit NUMERIC, interest_rate NUMERIC, application_status TEXT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit accounts', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT * FROM client.credit_accounts WHERE account_id = account_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-16 21:30:00.808 GMT [95744] ERROR:  schema "client" does not exist
2023-01-16 21:30:00.808 GMT [95744] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_savings_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, external_account_number INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings accounts', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT * FROM client.savings_accounts WHERE account_id = account_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-16 21:30:00.808 GMT [95744] ERROR:  schema "client" does not exist
2023-01-16 21:30:00.808 GMT [95744] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_loans(account_id INT)
	RETURNS TABLE (id INT, loan_amount NUMERIC, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC, application_status TEXT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed loans', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT * FROM client.loans WHERE account_id = account_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-16 21:30:00.808 GMT [95744] ERROR:  schema "client" does not exist
2023-01-16 21:30:00.808 GMT [95744] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_savings_statements(account_identifier INT, orig_account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Viewed savings statements', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT savings_accounts_statements.starting_date, savings_accounts_statements.end_date, savings_accounts_statements.amount, savings_accounts_statements.account_id
	        FROM client.savings_accounts_statements
	        WHERE savings_accounts_statements.account_number = orig_account_number
	        AND savings_accounts_statements.account_id = account_identifier;
	END;
	$$ LANGUAGE plpgsql;
2023-01-16 21:30:00.808 GMT [95744] ERROR:  schema "client" does not exist
2023-01-16 21:30:00.808 GMT [95744] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_debit_statements(account_identifier INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Viewed debit statements', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT debit_accounts_statements.account_id, debit_accounts_statements.account_number, debit_accounts_statements.starting_date, debit_accounts_statements.end_date, debit_accounts_statements.amount
	        FROM client.debit_accounts_statements
	        WHERE debit_accounts_statements.account_number = account_number
	        AND debit_accounts_statements.account_id = account_identifier;
	END;
	$$ LANGUAGE plpgsql;
2023-01-16 21:30:00.809 GMT [95744] ERROR:  schema "client" does not exist
2023-01-16 21:30:00.809 GMT [95744] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_credit_statements(account_identifier INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Viewed credit statements', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statements.account_id, credit_accounts_statements.account_number, credit_accounts_statements.starting_date, credit_accounts_statements.end_date, credit_accounts_statements.amount
	        FROM client.credit_accounts_statements
	        WHERE credit_accounts_statements.account_number = account_number
	        AND credit_accounts_statements.account_id = account_identifier;
	END;
	$$ LANGUAGE plpgsql;
2023-01-16 21:30:00.809 GMT [95744] ERROR:  schema "client" does not exist
2023-01-16 21:30:00.809 GMT [95744] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_debit_statement(account_identifier INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Viewed debit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT debit_accounts_statement.account_id, debit_accounts_statement.account_number, debit_accounts_statement.starting_date, debit_accounts_statement.end_date, debit_accounts_statement.amount
	        FROM client.debit_accounts_statement
	        WHERE debit_accounts_statement.account_id = account_identifier
	        AND debit_accounts_statement.account_number = account_number
	        AND debit_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-16 21:30:00.810 GMT [95744] ERROR:  schema "client" does not exist
2023-01-16 21:30:00.810 GMT [95744] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_credit_statement(account_identifier INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT credit_accounts_statement.account_id, credit_accounts_statement.account_number, credit_accounts_statement.starting_date, credit_accounts_statement.end_date, credit_accounts_statement.amount
	        FROM client.credit_accounts_statement
	        WHERE credit_accounts_statement.account_id = account_identifier
	        AND credit_accounts_statement.account_number = account_number
	        AND credit_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-16 21:30:00.810 GMT [95744] ERROR:  schema "client" does not exist
2023-01-16 21:30:00.810 GMT [95744] STATEMENT:  CREATE OR REPLACE FUNCTION client.view_savings_statement(account_identifier INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statement', CURRENT_DATE);
	
	    RETURN QUERY
	        SELECT savings_accounts_statement.account_id, savings_accounts_statement.account_number, savings_accounts_statement.starting_date, savings_accounts_statement.end_date, savings_accounts_statement.amount
	        FROM client.savings_accounts_statement
	        WHERE savings_accounts_statement.account_id = account_identifier
	        AND savings_accounts_statement.account_number = account_number
	        AND savings_accounts_statement.statement_id = statement_id;
	END;
	$$ LANGUAGE plpgsql;
2023-01-16 21:30:00.810 GMT [95744] ERROR:  schema "client" does not exist
2023-01-16 21:30:00.810 GMT [95744] STATEMENT:  CREATE OR REPLACE FUNCTION client.get_or_create_statement(account_identifier INT, orig_account_number INT)
	RETURNS INT AS $$
	DECLARE statement_id INT;
	BEGIN
	    CASE WHEN EXISTS (SELECT * FROM client.debit_accounts WHERE account_id = account_identifier AND account_number = orig_account_number) THEN
	        IF EXISTS (SELECT * FROM debit_statement WHERE account_number = orig_account_number AND starting_date <= now()::date AND end_date >= now()::date) THEN
	            SELECT id INTO statement_id FROM debit_statement WHERE account_number = orig_account_number AND starting_date <= now()::date AND end_date >= now()::date;
	            RETURN statement_id;
	        ELSE 
	            INSERT INTO debit_statement (account_number, starting_date, end_date, amount) VALUES (orig_account_number, date_trunc('month', now()::date), now()::date + 30, 0);
	            SELECT id INTO statement_id FROM debit_statement WHERE account_number = orig_account_number AND starting_date <= now()::date AND end_date >= now()::date;
	            RETURN statement_id;
	        END IF;
	    WHEN EXISTS (SELECT * FROM client.credit_accounts WHERE account_id = account_identifier AND account_number = orig_account_number) THEN
	        IF EXISTS (SELECT * FROM credit_statement WHERE account_number = orig_account_number AND starting_date <= now()::date AND end_date >= now()::date) THEN
	            SELECT id INTO statement_id FROM credit_statement WHERE account_number = orig_account_number AND starting_date <= now()::date AND end_date >= now()::date;
	            return statement_id;
	        ELSE 
	            INSERT INTO credit_statement (account_number, starting_date, end_date, amount) VALUES (orig_account_number, date_trunc('month', now()::date), now()::date + 30, 0);
	            SELECT id INTO statement_id FROM credit_statement WHERE account_number = orig_account_number AND starting_date <= now()::date AND end_date >= now()::date;
	            return statement_id;
	        END IF;
	    WHEN EXISTS (SELECT * FROM client.savings_accounts WHERE account_id = account_identifier AND account_number = orig_account_number) THEN
	        IF EXISTS (SELECT * FROM savings_statement WHERE account_number = orig_account_number AND starting_date <= now()::date AND end_date >= now()::date) THEN
	            SELECT id INTO statement_id FROM savings_statement WHERE account_number = orig_account_number AND starting_date <= now()::date AND end_date >= now()::date;
	            return statement_id;
	        ELSE
	            INSERT INTO savings_statement (account_number, starting_date, end_date, amount) VALUES (orig_account_number, date_trunc('month', now()::date), now()::date + 30, 0);
	            SELECT id INTO statement_id FROM savings_statement WHERE account_number = orig_account_number AND starting_date <= now()::date AND end_date >= now()::date;
	            return statement_id;
	        END IF;
	    END CASE;
	END;
	$$ LANGUAGE plpgsql;
2023-01-16 21:30:00.811 GMT [95744] ERROR:  schema "client" does not exist
2023-01-16 21:30:00.811 GMT [95744] STATEMENT:  CREATE OR REPLACE FUNCTION client.place_transaction_into_account(account_identifier INT, orig_account_number INT, transaction_account_number INT, transaction_amount NUMERIC, transfer_account_sort_code INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE statement_id INT;
	DECLARE transaction_id INT;
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Placed transaction into account', CURRENT_DATE);
	
	    CASE WHEN EXISTS (SELECT * FROM client.debit_accounts WHERE account_id = account_identifier AND account_number = orig_account_number) THEN
	        --UPDATE debit_account SET current_balance = current_balance - transaction_amount WHERE debit_account.account_number = orig_account_number;
	        SELECT * FROM client.get_or_create_statement(account_identifier, orig_account_number) INTO statement_id;
	        INSERT INTO transaction (origin_account_id, dest_account_id, amount, date, debit_statement_id, dest_account_sort_code, approved)
	        VALUES (orig_account_number, transaction_account_number, transaction_amount, now(), statement_id, transfer_account_sort_code, FALSE) RETURNING id INTO transaction_id;
	        INSERT INTO pending_transaction (id, account_id, is_transfer) VALUES (transaction_id, orig_account_number, true);
	
	    WHEN EXISTS (SELECT * FROM client.credit_accounts WHERE account_id = account_identifier AND account_number = orig_account_number) THEN
	        --UPDATE credit_account SET outstanding_balance = outstanding_balance - transaction_amount WHERE credit_account.account_number = orig_account_number;
	        SELECT * FROM client.get_or_create_statement(account_identifier, orig_account_number) INTO statement_id;
	        INSERT INTO transaction (origin_account_id, dest_account_id, amount, date, credit_statement_id, dest_account_sort_code, approved)
	        VALUES (orig_account_number, transaction_account_number, transaction_amount, now(), statement_id, transfer_account_sort_code, FALSE) RETURNING id INTO transaction_id;
	        INSERT INTO pending_transaction (id, account_id, is_transfer) VALUES (transaction_id, orig_account_number, true);
	
	    WHEN EXISTS (SELECT * FROM client.savings_accounts WHERE account_id = account_identifier AND account_number = orig_account_number) THEN
	        --UPDATE savings_account SET current_balance = current_balance - transaction_amount WHERE savings_account.account_number = orig_account_number;
	        SELECT * FROM client.get_or_create_statement(account_identifier, orig_account_number) INTO statement_id;
	        INSERT INTO transaction (origin_account_id, dest_account_id, amount, date, savings_statement_id, dest_account_sort_code, approved)
	        VALUES (orig_account_number, transaction_account_number, transaction_amount, now(), statement_id, transfer_account_sort_code, FALSE) RETURNING id INTO transaction_id;
	        INSERT INTO pending_transaction (id, account_id, is_transfer) VALUES (transaction_id, orig_account_number, true);
	    ELSE
	        RAISE NOTICE 'Account does not exist';
	        RETURN FALSE;
	    END CASE;
	    RETURN TRUE;
	END;
	$$ LANGUAGE plpgsql;
2023-01-16 21:30:00.811 GMT [95744] ERROR:  schema "client" does not exist
2023-01-16 21:30:00.811 GMT [95744] STATEMENT:  CREATE OR REPLACE FUNCTION client.initiate_transfer(account_identifier INT, orig_account_number INT, transfer_amount NUMERIC, transfer_account_number INT, transfer_account_sort_code INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE internal_account_id INT;
	DECLARE ROW_COUNT INT;
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Initiated transfer', CURRENT_DATE);
	
	    SELECT * FROM client.place_transaction_into_account(account_identifier, orig_account_number, transfer_account_number, transfer_amount, transfer_account_sort_code) INTO passed;
	
	    RETURN passed;
	
	END;
	$$ LANGUAGE plpgsql;
2023-01-16 21:30:00.834 GMT [95744] ERROR:  schema "client" does not exist at character 15
2023-01-16 21:30:00.834 GMT [95744] STATEMENT:  SELECT * FROM client.open_savings_account(1);
2023-01-16 21:30:00.834 GMT [95744] ERROR:  schema "client" does not exist at character 15
2023-01-16 21:30:00.834 GMT [95744] STATEMENT:  SELECT * FROM client.open_savings_account(1);
2023-01-16 21:30:00.834 GMT [95744] ERROR:  schema "client" does not exist at character 15
2023-01-16 21:30:00.834 GMT [95744] STATEMENT:  SELECT * FROM client.open_savings_account(2);
2023-01-16 21:30:00.835 GMT [95744] ERROR:  schema "client" does not exist at character 15
2023-01-16 21:30:00.835 GMT [95744] STATEMENT:  SELECT * FROM client.open_savings_account(3);
2023-01-16 21:30:00.835 GMT [95744] ERROR:  schema "client" does not exist at character 15
2023-01-16 21:30:00.835 GMT [95744] STATEMENT:  SELECT * FROM client.open_savings_account(4);
2023-01-16 21:30:00.835 GMT [95744] ERROR:  schema "client" does not exist at character 15
2023-01-16 21:30:00.835 GMT [95744] STATEMENT:  SELECT * FROM client.open_debit_account(1);
2023-01-16 21:30:00.835 GMT [95744] ERROR:  schema "client" does not exist at character 15
2023-01-16 21:30:00.835 GMT [95744] STATEMENT:  SELECT * FROM client.open_debit_account(2);
2023-01-16 21:30:00.835 GMT [95744] ERROR:  schema "client" does not exist at character 15
2023-01-16 21:30:00.835 GMT [95744] STATEMENT:  SELECT * FROM client.open_debit_account(3);
2023-01-16 21:30:00.835 GMT [95744] ERROR:  schema "client" does not exist at character 15
2023-01-16 21:30:00.835 GMT [95744] STATEMENT:  SELECT * FROM client.open_debit_account(4);
2023-01-16 21:30:00.835 GMT [95744] ERROR:  schema "client" does not exist at character 15
2023-01-16 21:30:00.835 GMT [95744] STATEMENT:  SELECT * FROM client.open_credit_account(1);
2023-01-16 21:30:00.835 GMT [95744] ERROR:  schema "client" does not exist at character 15
2023-01-16 21:30:00.835 GMT [95744] STATEMENT:  SELECT * FROM client.open_credit_account(2);
2023-01-16 21:30:00.835 GMT [95744] ERROR:  schema "client" does not exist at character 15
2023-01-16 21:30:00.835 GMT [95744] STATEMENT:  SELECT * FROM client.open_credit_account(3);
2023-01-16 21:30:00.835 GMT [95744] ERROR:  schema "client" does not exist at character 15
2023-01-16 21:30:00.835 GMT [95744] STATEMENT:  SELECT * FROM client.open_credit_account(4);
2023-01-16 21:30:00.836 GMT [95744] ERROR:  schema "client" does not exist at character 15
2023-01-16 21:30:00.836 GMT [95744] STATEMENT:  SELECT * FROM client.view_accounts(1);
2023-01-16 21:30:00.836 GMT [95744] ERROR:  schema "client" does not exist at character 15
2023-01-16 21:30:00.836 GMT [95744] STATEMENT:  SELECT * FROM client.initiate_transfer(1, 10000001, 100.00, 20000000, 123456);
2023-01-16 21:30:00.837 GMT [95744] ERROR:  schema "client" does not exist at character 15
2023-01-16 21:30:00.837 GMT [95744] STATEMENT:  SELECT * FROM client.view_accounts(1);
2023-01-16 21:30:32.382 GMT [95715] LOG:  received fast shutdown request
2023-01-16 21:30:32.384 GMT [95715] LOG:  aborting any active transactions
2023-01-16 21:30:32.389 GMT [95715] LOG:  background worker "logical replication launcher" (PID 95722) exited with exit code 1
2023-01-16 21:30:32.390 GMT [95717] LOG:  shutting down
2023-01-16 21:30:32.451 GMT [95715] LOG:  database system is shut down
2023-01-16 21:30:33.758 GMT [95939] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 21:30:33.758 GMT [95939] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 21:30:33.760 GMT [95939] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 21:30:33.763 GMT [95940] LOG:  database system was shut down at 2023-01-16 21:30:33 GMT
2023-01-16 21:30:33.770 GMT [95939] LOG:  database system is ready to accept connections
2023-01-16 21:44:37.499 GMT [95939] LOG:  received fast shutdown request
2023-01-16 21:44:37.502 GMT [95939] LOG:  aborting any active transactions
2023-01-16 21:44:37.509 GMT [95939] LOG:  background worker "logical replication launcher" (PID 95946) exited with exit code 1
2023-01-16 21:44:37.512 GMT [95941] LOG:  shutting down
2023-01-16 21:44:37.530 GMT [95939] LOG:  database system is shut down
2023-01-16 21:44:38.746 GMT [98528] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 21:44:38.747 GMT [98528] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 21:44:38.748 GMT [98528] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 21:44:38.754 GMT [98529] LOG:  database system was shut down at 2023-01-16 21:44:38 GMT
2023-01-16 21:44:38.761 GMT [98528] LOG:  database system is ready to accept connections
2023-01-16 21:44:39.606 GMT [98554] ERROR:  syntax error at or near "DECLARE" at character 601
2023-01-16 21:44:39.606 GMT [98554] STATEMENT:  CREATE OR REPLACE FUNCTION bank.update_loan_amounts(loan_id INT, payment_amount NUMERIC)
	RETURNS BOOLEAN AS $$
	DECLARE loan_updated BOOLEAN;
	BEGIN
	    IF EXISTS (SELECT * FROM loan WHERE id = loan_id AND amount - payment_amount < 0) THEN
	        RAISE EXCEPTION 'LOAN OVERPAID';
	        loan_updated = FALSE;
	    ELSE
	        UPDATE loan SET current_balance = amount - payment_amount WHERE id = loan_id;
	        loan_updated = TRUE;
	    END IF;
	    RETURN loan_updated;
	END;
	
	CREATE OR REPLACE FUNCTION bank.update_balance_amounts(account_number_identifier INT, amount NUMERIC)
	RETURNS BOOLEAN AS $$
	DECLARE balances_updated BOOLEAN;
2023-01-16 21:44:39.606 GMT [98554] ERROR:  syntax error at or near "TEXT" at character 22
2023-01-16 21:44:39.606 GMT [98554] STATEMENT:  DECLARE account_type TEXT;
2023-01-16 21:44:39.606 GMT [98554] ERROR:  syntax error at or near "SELECT" at character 11
2023-01-16 21:44:39.606 GMT [98554] STATEMENT:  BEGIN
	    SELECT get_account_type(account_number_identifier) INTO account_type;
2023-01-16 21:44:39.606 GMT [98554] ERROR:  syntax error at or near "IF" at character 1
2023-01-16 21:44:39.606 GMT [98554] STATEMENT:  IF account_type = 'DEBIT' THEN 
	        IF EXISTS (SELECT * FROM debit_account WHERE account_number = account_number_identifier AND current_balance - amount < 0) THEN
	            RAISE EXCEPTION 'INSUFFICIENT FUNDS';
2023-01-16 21:44:39.606 GMT [98554] ERROR:  syntax error at or near "balances_updated" at character 1
2023-01-16 21:44:39.606 GMT [98554] STATEMENT:  balances_updated = FALSE;
2023-01-16 21:44:39.607 GMT [98554] ERROR:  syntax error at or near "ELSE" at character 1
2023-01-16 21:44:39.607 GMT [98554] STATEMENT:  ELSE
	            RAISE NOTICE 'SUFFICIENT FUNDS';
2023-01-16 21:44:39.607 GMT [98554] ERROR:  column "account_number_identifier" does not exist at character 92
2023-01-16 21:44:39.607 GMT [98554] STATEMENT:  UPDATE debit_account SET current_balance = current_balance - amount WHERE account_number = account_number_identifier;
2023-01-16 21:44:39.607 GMT [98554] ERROR:  syntax error at or near "balances_updated" at character 1
2023-01-16 21:44:39.607 GMT [98554] STATEMENT:  balances_updated = TRUE;
2023-01-16 21:44:39.607 GMT [98554] ERROR:  syntax error at or near "IF" at character 5
2023-01-16 21:44:39.607 GMT [98554] STATEMENT:  END IF;
2023-01-16 21:44:39.608 GMT [98554] ERROR:  syntax error at or near "ELSIF" at character 1
2023-01-16 21:44:39.608 GMT [98554] STATEMENT:  ELSIF account_type = 'CREDIT' THEN
	        IF EXISTS (SELECT * FROM credit_account WHERE account_number AND credit_usage + amount < credit_limit) THEN
	            RAISE NOTICE 'SUFFICIENT CREDIT';
2023-01-16 21:44:39.608 GMT [98554] ERROR:  column "account_number_identifier" does not exist at character 87
2023-01-16 21:44:39.608 GMT [98554] STATEMENT:  UPDATE credit_account SET credit_usage = credit_usage + amount WHERE account_number = account_number_identifier;
2023-01-16 21:44:39.608 GMT [98554] ERROR:  syntax error at or near "balances_updated" at character 1
2023-01-16 21:44:39.608 GMT [98554] STATEMENT:  balances_updated = TRUE;
2023-01-16 21:44:39.608 GMT [98554] ERROR:  syntax error at or near "ELSE" at character 1
2023-01-16 21:44:39.608 GMT [98554] STATEMENT:  ELSE
	            RAISE EXCEPTION 'CREDIT LIMIT EXCEEDED';
2023-01-16 21:44:39.608 GMT [98554] ERROR:  syntax error at or near "balances_updated" at character 1
2023-01-16 21:44:39.608 GMT [98554] STATEMENT:  balances_updated = FALSE;
2023-01-16 21:44:39.608 GMT [98554] ERROR:  syntax error at or near "IF" at character 5
2023-01-16 21:44:39.608 GMT [98554] STATEMENT:  END IF;
2023-01-16 21:44:39.609 GMT [98554] ERROR:  syntax error at or near "ELSIF" at character 1
2023-01-16 21:44:39.609 GMT [98554] STATEMENT:  ELSIF account_type = 'SAVINGS' THEN
	        IF EXISTS (SELECT * FROM savings_account WHERE account_number = account_number_identifier AND current_balance - amount < 0) THEN
	            RAISE EXCEPTION 'INSUFFICIENT FUNDS';
2023-01-16 21:44:39.609 GMT [98554] ERROR:  syntax error at or near "balances_updated" at character 1
2023-01-16 21:44:39.609 GMT [98554] STATEMENT:  balances_updated = FALSE;
2023-01-16 21:44:39.609 GMT [98554] ERROR:  syntax error at or near "ELSE" at character 1
2023-01-16 21:44:39.609 GMT [98554] STATEMENT:  ELSE
	            RAISE NOTICE 'SUFFICIENT FUNDS';
2023-01-16 21:44:39.609 GMT [98554] ERROR:  column "account_number_identifier" does not exist at character 94
2023-01-16 21:44:39.609 GMT [98554] STATEMENT:  UPDATE savings_account SET current_balance = current_balance - amount WHERE account_number = account_number_identifier;
2023-01-16 21:44:39.609 GMT [98554] ERROR:  syntax error at or near "balances_updated" at character 1
2023-01-16 21:44:39.609 GMT [98554] STATEMENT:  balances_updated = TRUE;
2023-01-16 21:44:39.609 GMT [98554] ERROR:  syntax error at or near "IF" at character 5
2023-01-16 21:44:39.609 GMT [98554] STATEMENT:  END IF;
2023-01-16 21:44:39.610 GMT [98554] ERROR:  syntax error at or near "IF" at character 5
2023-01-16 21:44:39.610 GMT [98554] STATEMENT:  END IF;
2023-01-16 21:44:39.610 GMT [98554] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 21:44:39.610 GMT [98554] STATEMENT:  RETURN balances_updated;
2023-01-16 21:44:39.610 GMT [98554] WARNING:  there is no transaction in progress
2023-01-16 21:44:39.610 GMT [98554] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	
	CREATE OR REPLACE FUNCTION bank.verify_and_update_transaction_amounts(pending_transaction_id INT, is_transfer BOOLEAN, is_loan_payment BOOLEAN)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-16 21:44:39.610 GMT [98554] STATEMENT:  $$ LANGUAGE plpgsql;
	
	
	CREATE OR REPLACE FUNCTION bank.verify_and_update_transaction_amounts(pending_transaction_id INT, is_transfer BOOLEAN, is_loan_payment BOOLEAN)
	RETURNS BOOLEAN AS $$
	DECLARE transaction_approved BOOLEAN;
2023-01-16 21:44:39.611 GMT [98554] ERROR:  syntax error at or near "TEXT" at character 22
2023-01-16 21:44:39.611 GMT [98554] STATEMENT:  DECLARE account_type TEXT;
2023-01-16 21:44:39.611 GMT [98554] ERROR:  syntax error at or near "IF" at character 16
2023-01-16 21:44:39.611 GMT [98554] STATEMENT:  BEGIN
	    
	    IF EXISTS (SELECT * FROM bank.accounts WHERE account_number = (SELECT dest_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id) AND sort_code = (SELECT sort_code FROM bank.pending_transactions WHERE id = pending_transaction_id)) THEN
	        RAISE NOTICE 'INTERNAL TRANSFER OCCURING';
2023-01-16 21:44:39.611 GMT [98554] ERROR:  syntax error at or near "IF" at character 1
2023-01-16 21:44:39.611 GMT [98554] STATEMENT:  IF is_loan_payment = TRUE THEN
	            IF bank.update_loan_amounts((SELECT dest_account_id FROM transaction WHERE id = pending_transaction_id), (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id)) = TRUE THEN
	                IF bank.update_balance_amounts((SELECT origin_account_id FROM transaction WHERE id = pending_transaction_id), (SELECT SUM(amount*-1) FROM bank.pending_transactions WHERE id = pending_transaction_id)) = TRUE THEN
	                    transaction_approved = TRUE;
2023-01-16 21:44:39.611 GMT [98554] ERROR:  syntax error at or near "ELSE" at character 1
2023-01-16 21:44:39.611 GMT [98554] STATEMENT:  ELSE
	                    transaction_approved = FALSE;
2023-01-16 21:44:39.611 GMT [98554] ERROR:  syntax error at or near "IF" at character 5
2023-01-16 21:44:39.611 GMT [98554] STATEMENT:  END IF;
2023-01-16 21:44:39.611 GMT [98554] ERROR:  syntax error at or near "ELSE" at character 1
2023-01-16 21:44:39.611 GMT [98554] STATEMENT:  ELSE
	                transaction_approved = FALSE;
2023-01-16 21:44:39.611 GMT [98554] ERROR:  syntax error at or near "IF" at character 5
2023-01-16 21:44:39.611 GMT [98554] STATEMENT:  END IF;
2023-01-16 21:44:39.612 GMT [98554] ERROR:  column "pending_transaction_id" does not exist at character 44
2023-01-16 21:44:39.612 GMT [98554] STATEMENT:  DELETE FROM pending_transaction WHERE id = pending_transaction_id;
2023-01-16 21:44:39.612 GMT [98554] ERROR:  syntax error at or near "IF" at character 1
2023-01-16 21:44:39.612 GMT [98554] STATEMENT:  IF is_transfer = TRUE THEN
	            IF bank.update_balance_amounts((SELECT origin_account_id FROM transaction WHERE id = pending_transaction_id), (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id)) = TRUE THEN
	                IF bank.update_balance_amounts((SELECT dest_account_id FROM transaction WHERE id = pending_transaction_id), (SELECT SUM(amount*-1) FROM bank.pending_transactions WHERE id = pending_transaction_id)) THEN
	                    transaction_approved = TRUE;
2023-01-16 21:44:39.612 GMT [98554] ERROR:  syntax error at or near "IF" at character 5
2023-01-16 21:44:39.612 GMT [98554] STATEMENT:  END IF;
2023-01-16 21:44:39.612 GMT [98554] ERROR:  syntax error at or near "ELSE" at character 1
2023-01-16 21:44:39.612 GMT [98554] STATEMENT:  ELSE
	                transaction_approved = FALSE;
2023-01-16 21:44:39.612 GMT [98554] ERROR:  syntax error at or near "IF" at character 5
2023-01-16 21:44:39.612 GMT [98554] STATEMENT:  END IF;
2023-01-16 21:44:39.612 GMT [98554] ERROR:  column "pending_transaction_id" does not exist at character 44
2023-01-16 21:44:39.612 GMT [98554] STATEMENT:  DELETE FROM pending_transaction WHERE id = pending_transaction_id;
2023-01-16 21:44:39.612 GMT [98554] ERROR:  syntax error at or near "ELSE" at character 1
2023-01-16 21:44:39.612 GMT [98554] STATEMENT:  ELSE
	            IF bank.update_balance_amounts((SELECT origin_account_id FROM transaction WHERE id = pending_transaction_id), (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id)) = TRUE THEN
	                transaction_approved = TRUE;
2023-01-16 21:44:39.613 GMT [98554] ERROR:  syntax error at or near "ELSE" at character 1
2023-01-16 21:44:39.613 GMT [98554] STATEMENT:  ELSE
	                transaction_approved = FALSE;
2023-01-16 21:44:39.613 GMT [98554] ERROR:  syntax error at or near "IF" at character 5
2023-01-16 21:44:39.613 GMT [98554] STATEMENT:  END IF;
2023-01-16 21:44:39.613 GMT [98554] ERROR:  column "pending_transaction_id" does not exist at character 44
2023-01-16 21:44:39.613 GMT [98554] STATEMENT:  DELETE FROM pending_transaction WHERE id = pending_transaction_id;
2023-01-16 21:44:39.613 GMT [98554] ERROR:  syntax error at or near "IF" at character 5
2023-01-16 21:44:39.613 GMT [98554] STATEMENT:  END IF;
2023-01-16 21:44:39.614 GMT [98554] ERROR:  syntax error at or near "ELSE" at character 1
2023-01-16 21:44:39.614 GMT [98554] STATEMENT:  ELSE
	        RAISE NOTICE 'EXTERNAL TRANSFER OCCURING';
2023-01-16 21:44:39.614 GMT [98554] ERROR:  syntax error at or near "IF" at character 1
2023-01-16 21:44:39.614 GMT [98554] STATEMENT:  IF bank.update_balance_amounts((SELECT origin_account_id FROM transaction WHERE id = pending_transaction_id), (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id)) THEN
	            transaction_approved = TRUE;
2023-01-16 21:44:39.614 GMT [98554] ERROR:  syntax error at or near "ELSE" at character 1
2023-01-16 21:44:39.614 GMT [98554] STATEMENT:  ELSE
	            transaction_approved = FALSE;
2023-01-16 21:44:39.614 GMT [98554] ERROR:  column "pending_transaction_id" does not exist at character 44
2023-01-16 21:44:39.614 GMT [98554] STATEMENT:  DELETE FROM pending_transaction WHERE id = pending_transaction_id;
2023-01-16 21:44:39.614 GMT [98554] ERROR:  syntax error at or near "IF" at character 5
2023-01-16 21:44:39.614 GMT [98554] STATEMENT:  END IF;
2023-01-16 21:44:39.615 GMT [98554] ERROR:  syntax error at or near "IF" at character 5
2023-01-16 21:44:39.615 GMT [98554] STATEMENT:  END IF;
2023-01-16 21:44:39.615 GMT [98554] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 21:44:39.615 GMT [98554] STATEMENT:  RETURN transaction_approved;
2023-01-16 21:44:39.615 GMT [98554] WARNING:  there is no transaction in progress
2023-01-16 21:44:39.615 GMT [98554] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	    
	CREATE OR REPLACE FUNCTION bank.verify_transaction_type(pending_transaction_id INT)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-16 21:44:39.615 GMT [98554] STATEMENT:  $$ LANGUAGE plpgsql;
	
	    
	CREATE OR REPLACE FUNCTION bank.verify_transaction_type(pending_transaction_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE transaction_approved BOOLEAN;
2023-01-16 21:44:39.615 GMT [98554] ERROR:  syntax error at or near "IF" at character 16
2023-01-16 21:44:39.615 GMT [98554] STATEMENT:  BEGIN
	    
	    IF EXISTS (SELECT * FROM bank.pending_transactions) THEN
	        
	        IF EXISTS (SELECT * FROM bank.pending_transactions WHERE id = pending_transaction_id AND is_transfer = TRUE) THEN
	            RAISE NOTICE 'Transfer transaction';
2023-01-16 21:44:39.615 GMT [98554] ERROR:  syntax error at or near "INTO" at character 95
2023-01-16 21:44:39.615 GMT [98554] STATEMENT:  SELECT * FROM bank.verify_and_update_transaction_amounts(pending_transaction_id, TRUE, FALSE) INTO transaction_approved;
2023-01-16 21:44:39.615 GMT [98554] ERROR:  syntax error at or near "ELSIF" at character 1
2023-01-16 21:44:39.615 GMT [98554] STATEMENT:  ELSIF EXISTS (SELECT * FROM bank.pending_transactions WHERE id = pending_transaction_id AND is_loan_payment = TRUE) THEN
	            RAISE NOTICE 'Loan payment transaction';
2023-01-16 21:44:39.615 GMT [98554] ERROR:  syntax error at or near "INTO" at character 95
2023-01-16 21:44:39.615 GMT [98554] STATEMENT:  SELECT * FROM bank.verify_and_update_transaction_amounts(pending_transaction_id, FALSE, TRUE) INTO transaction_approved;
2023-01-16 21:44:39.615 GMT [98554] ERROR:  syntax error at or near "ELSIF" at character 1
2023-01-16 21:44:39.615 GMT [98554] STATEMENT:  ELSIF EXISTS (SELECT * FROM bank.pending_transactions WHERE id = pending_transaction_id AND is_transfer = FALSE) THEN
	            RAISE NOTICE 'Payment transaction';
2023-01-16 21:44:39.616 GMT [98554] ERROR:  syntax error at or near "INTO" at character 96
2023-01-16 21:44:39.616 GMT [98554] STATEMENT:  SELECT * FROM bank.verify_and_update_transaction_amounts(pending_transaction_id, FALSE, FALSE) INTO transaction_approved;
2023-01-16 21:44:39.616 GMT [98554] ERROR:  syntax error at or near "ELSE" at character 1
2023-01-16 21:44:39.616 GMT [98554] STATEMENT:  ELSE
	            RAISE NOTICE 'Unknown transaction type';
2023-01-16 21:44:39.616 GMT [98554] ERROR:  syntax error at or near "transaction_approved" at character 1
2023-01-16 21:44:39.616 GMT [98554] STATEMENT:  transaction_approved = FALSE;
2023-01-16 21:44:39.616 GMT [98554] ERROR:  syntax error at or near "IF" at character 5
2023-01-16 21:44:39.616 GMT [98554] STATEMENT:  END IF;
2023-01-16 21:44:39.616 GMT [98554] ERROR:  syntax error at or near "ELSE" at character 1
2023-01-16 21:44:39.616 GMT [98554] STATEMENT:  ELSE
	        RAISE NOTICE 'Transaction does not exist';
2023-01-16 21:44:39.616 GMT [98554] ERROR:  syntax error at or near "transaction_approved" at character 1
2023-01-16 21:44:39.616 GMT [98554] STATEMENT:  transaction_approved = FALSE;
2023-01-16 21:44:39.616 GMT [98554] ERROR:  syntax error at or near "IF" at character 5
2023-01-16 21:44:39.616 GMT [98554] STATEMENT:  END IF;
2023-01-16 21:44:39.616 GMT [98554] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 21:44:39.616 GMT [98554] STATEMENT:  RETURN transaction_approved;
2023-01-16 21:44:39.617 GMT [98554] WARNING:  there is no transaction in progress
2023-01-16 21:44:39.617 GMT [98554] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION bank.verify_transaction(pending_transaction_id INT)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-16 21:44:39.617 GMT [98554] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION bank.verify_transaction(pending_transaction_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE transaction_approved BOOLEAN;
2023-01-16 21:44:39.617 GMT [98554] ERROR:  syntax error at or near "TEXT" at character 22
2023-01-16 21:44:39.617 GMT [98554] STATEMENT:  DECLARE account_type TEXT;
2023-01-16 21:44:39.617 GMT [98554] ERROR:  syntax error at or near "IF" at character 16
2023-01-16 21:44:39.617 GMT [98554] STATEMENT:  BEGIN
	    
	    IF bank.verify_transaction_type(pending_transaction_id) = TRUE THEN
	        RAISE NOTICE 'Transaction approved';
2023-01-16 21:44:39.617 GMT [98554] ERROR:  syntax error at or near "transaction_approved" at character 1
2023-01-16 21:44:39.617 GMT [98554] STATEMENT:  transaction_approved = TRUE;
2023-01-16 21:44:39.618 GMT [98554] ERROR:  syntax error at or near "ELSE" at character 1
2023-01-16 21:44:39.618 GMT [98554] STATEMENT:  ELSE
	        RAISE NOTICE 'Transaction not approved';
2023-01-16 21:44:39.618 GMT [98554] ERROR:  syntax error at or near "transaction_approved" at character 1
2023-01-16 21:44:39.618 GMT [98554] STATEMENT:  transaction_approved = FALSE;
2023-01-16 21:44:39.618 GMT [98554] ERROR:  syntax error at or near "IF" at character 5
2023-01-16 21:44:39.618 GMT [98554] STATEMENT:  END IF;
2023-01-16 21:44:39.618 GMT [98554] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 21:44:39.618 GMT [98554] STATEMENT:  RETURN transaction_approved;
2023-01-16 21:44:39.619 GMT [98554] WARNING:  there is no transaction in progress
2023-01-16 21:44:39.619 GMT [98554] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	--CREATE OR REPLACE FUNCTION bank.approve_loan_payment(loan_payment_id INT)
	
	CREATE SCHEMA IF NOT EXISTS staff;
	SET search_path TO public, staff, client;
	
	CREATE OR REPLACE VIEW staff.accounts AS
	    SELECT account.account_number, account.account_id, online_account.sort_code
	    FROM account
	    INNER JOIN online_account ON account.account_id = online_account.id;
	
	CREATE OR REPLACE VIEW staff.credit_account_applications AS
	    SELECT credit_account_application.id, credit_account_application.application_status, credit_account.account_number, credit_account.outstanding_balance, credit_account.credit_limit, credit_account.interest_rate
	    FROM credit_account_application
	    INNER JOIN credit_account ON credit_account_application.account_number = credit_account.account_number;
	
	CREATE OR REPLACE VIEW staff.loan_applications AS
	    SELECT loan_application.id, loan_application.application_status, loan.id as loan_id, loan.amount, loan.end_date, loan.loan_type, loan.interest_rate, loan.account_id
	    FROM loan_application
	    INNER JOIN loan ON loan_application.loan_id = loan.id;
	
	CREATE OR REPLACE VIEW staff.customers AS
	    SELECT online_account.id as account_id, customer.first_name, customer.last_name
	    FROM online_account
	    INNER JOIN customer ON customer.id = online_account.customer_id;
	
	CREATE OR REPLACE FUNCTION staff.view_outstanding_credit_applications()
	RETURNS TABLE(first_name TEXT, last_name TEXT, account_number INT) AS $$" at character 1
2023-01-16 21:44:39.619 GMT [98554] STATEMENT:  $$ LANGUAGE plpgsql;
	
	--CREATE OR REPLACE FUNCTION bank.approve_loan_payment(loan_payment_id INT)
	
	CREATE SCHEMA IF NOT EXISTS staff;
	SET search_path TO public, staff, client;
	
	CREATE OR REPLACE VIEW staff.accounts AS
	    SELECT account.account_number, account.account_id, online_account.sort_code
	    FROM account
	    INNER JOIN online_account ON account.account_id = online_account.id;
	
	CREATE OR REPLACE VIEW staff.credit_account_applications AS
	    SELECT credit_account_application.id, credit_account_application.application_status, credit_account.account_number, credit_account.outstanding_balance, credit_account.credit_limit, credit_account.interest_rate
	    FROM credit_account_application
	    INNER JOIN credit_account ON credit_account_application.account_number = credit_account.account_number;
	
	CREATE OR REPLACE VIEW staff.loan_applications AS
	    SELECT loan_application.id, loan_application.application_status, loan.id as loan_id, loan.amount, loan.end_date, loan.loan_type, loan.interest_rate, loan.account_id
	    FROM loan_application
	    INNER JOIN loan ON loan_application.loan_id = loan.id;
	
	CREATE OR REPLACE VIEW staff.customers AS
	    SELECT online_account.id as account_id, customer.first_name, customer.last_name
	    FROM online_account
	    INNER JOIN customer ON customer.id = online_account.customer_id;
	
	CREATE OR REPLACE FUNCTION staff.view_outstanding_credit_applications()
	RETURNS TABLE(first_name TEXT, last_name TEXT, account_number INT) AS $$
	BEGIN
	    RETURN QUERY SELECT customers.first_name, customers.last_name, credit_account_applications.account_number
	    FROM staff.customers
	    INNER JOIN staff.accounts ON customers.account_id = accounts.account_id
	    INNER JOIN staff.credit_card_applications ON accounts.account_number = credit_card_applications.account_number
	    WHERE credit_card_applications.application_status = 'PENDING';
2023-01-16 21:44:39.619 GMT [98554] WARNING:  there is no transaction in progress
2023-01-16 21:44:39.619 GMT [98554] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION staff.view_outstanding_loan_applications()
	RETURNS TABLE(first_name TEXT, last_name TEXT, loan_id INT) AS $$" at character 1
2023-01-16 21:44:39.619 GMT [98554] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION staff.view_outstanding_loan_applications()
	RETURNS TABLE(first_name TEXT, last_name TEXT, loan_id INT) AS $$
	BEGIN
	    RETURN QUERY SELECT customers.first_name, customers.last_name, loan_applications.id
	    FROM staff.customers
	    INNER JOIN staff.loan_applications ON loan_applications.account_id = customers.account_id
	    WHERE loan_applications.application_status = 'PENDING';
2023-01-16 21:44:39.620 GMT [98554] WARNING:  there is no transaction in progress
2023-01-16 21:44:39.620 GMT [98554] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	-- CREATE OR REPLACE FUNCTION staff.view_personal_information(first_name, last_name);
	-- RETURNS TABLE(first_name TEXT, last_name TEXT, )
	
	
	CREATE SCHEMA IF NOT EXISTS client;
	SET search_path TO public, client;
	
	
	CREATE OR REPLACE VIEW client.accounts AS
	    SELECT account.account_number, account.account_id, online_account.sort_code FROM account
	    INNER JOIN online_account ON account.account_id = online_account.id;
	
	CREATE OR REPLACE VIEW client.debit_accounts AS
	    SELECT accounts.account_id, accounts.account_number, debit_account.current_balance, debit_account.interest_rate, debit_overdraft.overdraft_limit, debit_overdraft.overdraft_usage, debit_overdraft.interest_rate AS overdraft_interest_rate
	    FROM client.accounts
	    INNER JOIN debit_account ON accounts.account_number = debit_account.account_number
	    INNER JOIN debit_overdraft ON accounts.account_number = debit_overdraft.account_number;
	
	CREATE OR REPLACE VIEW client.debit_accounts_statements AS
	    SELECT debit_accounts.account_id, debit_accounts.account_number, debit_statement.id, debit_statement.starting_date, debit_statement.end_date, debit_statement.amount
	    FROM debit_accounts
	    INNER JOIN debit_statement ON debit_accounts.account_number = debit_statement.account_number;
	
	CREATE OR REPLACE VIEW client.debit_accounts_statement AS
	    SELECT debit_accounts_statements.account_id, debit_accounts_statements.account_number, debit_accounts_statements.id, debit_accounts_statements.starting_date, debit_accounts_statements.end_date, debit_accounts_statements.amount AS total_amount, transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date
	    FROM debit_accounts_statements
	    INNER JOIN transaction ON debit_accounts_statements.id = transaction.debit_statement_id;
	
	CREATE OR REPLACE VIEW client.credit_accounts AS
	    SELECT accounts.account_id, accounts.account_number, credit_account.outstanding_balance, credit_account.credit_limit, credit_account.interest_rate, credit_account_application.application_status
	    FROM client.accounts
	    INNER JOIN credit_account ON accounts.account_number = credit_account.account_number
	    INNER JOIN credit_account_application ON accounts.account_number = credit_account_application.account_number;
	
	CREATE OR REPLACE VIEW client.credit_accounts_statements AS
	    SELECT credit_accounts.account_id, credit_accounts.account_number, credit_statement.id, credit_statement.starting_date, credit_statement.end_date, credit_statement.amount, credit_statement.minimum_payment, credit_statement.minimum_payment_due_date
	    FROM credit_accounts
	    INNER JOIN credit_statement ON credit_accounts.account_number = credit_statement.account_number;
	
	CREATE OR REPLACE VIEW client.credit_accounts_statement AS
	    SELECT credit_accounts_statements.account_id, credit_accounts_statements.account_number, credit_accounts_statements.id, credit_accounts_statements.starting_date, credit_accounts_statements.end_date, credit_accounts_statements.amount AS total_amount, credit_accounts_statements.minimum_payment, credit_accounts_statements.minimum_payment_due_date, transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date
	    FROM credit_accounts_statements
	    INNER JOIN transaction ON credit_accounts_statements.id = transaction.credit_statement_id;
	
	CREATE OR REPLACE VIEW client.savings_accounts AS
	    SELECT accounts.account_id, accounts.account_number, savings_account.current_balance, savings_account.interest_rate
	    FROM client.accounts
	    INNER JOIN savings_account ON accounts.account_number = savings_account.account_number;
	
	CREATE OR REPLACE VIEW client.savings_accounts_statements AS
	    SELECT savings_accounts.account_id, savings_accounts.account_number, savings_statement.id, savings_statement.starting_date, savings_statement.end_date, savings_statement.amount
	    FROM savings_accounts
	    INNER JOIN savings_statement ON savings_accounts.account_number = savings_statement.account_number;
	
	CREATE OR REPLACE VIEW client.loans AS
	    SELECT loan.account_id, loan.id, loan.amount, loan.interest_rate, loan.loan_type, loan.end_date, loan_application.application_status
	    FROM loan
	    INNER JOIN loan_application ON loan.id = loan_application.loan_id;
	
	CREATE OR REPLACE VIEW client.loan_statements AS
	    SELECT loans.account_id, loans.id, loan_statement.id as statement_id, loan_statement.starting_date, loan_statement.amount
	    FROM client.loans
	    INNER JOIN loan_statement ON loans.id = loan_statement.loan_id;
	
	CREATE OR REPLACE VIEW client.loan_applications AS
	    SELECT loan.account_id, loan_application.id, loan_application.application_status, loan_application.loan_id
	    FROM loan_application
	    INNER JOIN loan ON loan_application.loan_id = loan.id;
	
	CREATE OR REPLACE FUNCTION client.update_personal_information(account_identifier INT, first_name TEXT, last_name TEXT, date_of_birth DATE, phone_number TEXT, email_address TEXT, address_street TEXT, address_city TEXT, address_county TEXT, address_postcode TEXT, account_id INT)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-16 21:44:39.620 GMT [98554] STATEMENT:  $$ LANGUAGE plpgsql;
	
	-- CREATE OR REPLACE FUNCTION staff.view_personal_information(first_name, last_name);
	-- RETURNS TABLE(first_name TEXT, last_name TEXT, )
	
	
	CREATE SCHEMA IF NOT EXISTS client;
	SET search_path TO public, client;
	
	
	CREATE OR REPLACE VIEW client.accounts AS
	    SELECT account.account_number, account.account_id, online_account.sort_code FROM account
	    INNER JOIN online_account ON account.account_id = online_account.id;
	
	CREATE OR REPLACE VIEW client.debit_accounts AS
	    SELECT accounts.account_id, accounts.account_number, debit_account.current_balance, debit_account.interest_rate, debit_overdraft.overdraft_limit, debit_overdraft.overdraft_usage, debit_overdraft.interest_rate AS overdraft_interest_rate
	    FROM client.accounts
	    INNER JOIN debit_account ON accounts.account_number = debit_account.account_number
	    INNER JOIN debit_overdraft ON accounts.account_number = debit_overdraft.account_number;
	
	CREATE OR REPLACE VIEW client.debit_accounts_statements AS
	    SELECT debit_accounts.account_id, debit_accounts.account_number, debit_statement.id, debit_statement.starting_date, debit_statement.end_date, debit_statement.amount
	    FROM debit_accounts
	    INNER JOIN debit_statement ON debit_accounts.account_number = debit_statement.account_number;
	
	CREATE OR REPLACE VIEW client.debit_accounts_statement AS
	    SELECT debit_accounts_statements.account_id, debit_accounts_statements.account_number, debit_accounts_statements.id, debit_accounts_statements.starting_date, debit_accounts_statements.end_date, debit_accounts_statements.amount AS total_amount, transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date
	    FROM debit_accounts_statements
	    INNER JOIN transaction ON debit_accounts_statements.id = transaction.debit_statement_id;
	
	CREATE OR REPLACE VIEW client.credit_accounts AS
	    SELECT accounts.account_id, accounts.account_number, credit_account.outstanding_balance, credit_account.credit_limit, credit_account.interest_rate, credit_account_application.application_status
	    FROM client.accounts
	    INNER JOIN credit_account ON accounts.account_number = credit_account.account_number
	    INNER JOIN credit_account_application ON accounts.account_number = credit_account_application.account_number;
	
	CREATE OR REPLACE VIEW client.credit_accounts_statements AS
	    SELECT credit_accounts.account_id, credit_accounts.account_number, credit_statement.id, credit_statement.starting_date, credit_statement.end_date, credit_statement.amount, credit_statement.minimum_payment, credit_statement.minimum_payment_due_date
	    FROM credit_accounts
	    INNER JOIN credit_statement ON credit_accounts.account_number = credit_statement.account_number;
	
	CREATE OR REPLACE VIEW client.credit_accounts_statement AS
	    SELECT credit_accounts_statements.account_id, credit_accounts_statements.account_number, credit_accounts_statements.id, credit_accounts_statements.starting_date, credit_accounts_statements.end_date, credit_accounts_statements.amount AS total_amount, credit_accounts_statements.minimum_payment, credit_accounts_statements.minimum_payment_due_date, transaction.origin_account_id, transaction.dest_account_id, transaction.amount, transaction.date
	    FROM credit_accounts_statements
	    INNER JOIN transaction ON credit_accounts_statements.id = transaction.credit_statement_id;
	
	CREATE OR REPLACE VIEW client.savings_accounts AS
	    SELECT accounts.account_id, accounts.account_number, savings_account.current_balance, savings_account.interest_rate
	    FROM client.accounts
	    INNER JOIN savings_account ON accounts.account_number = savings_account.account_number;
	
	CREATE OR REPLACE VIEW client.savings_accounts_statements AS
	    SELECT savings_accounts.account_id, savings_accounts.account_number, savings_statement.id, savings_statement.starting_date, savings_statement.end_date, savings_statement.amount
	    FROM savings_accounts
	    INNER JOIN savings_statement ON savings_accounts.account_number = savings_statement.account_number;
	
	CREATE OR REPLACE VIEW client.loans AS
	    SELECT loan.account_id, loan.id, loan.amount, loan.interest_rate, loan.loan_type, loan.end_date, loan_application.application_status
	    FROM loan
	    INNER JOIN loan_application ON loan.id = loan_application.loan_id;
	
	CREATE OR REPLACE VIEW client.loan_statements AS
	    SELECT loans.account_id, loans.id, loan_statement.id as statement_id, loan_statement.starting_date, loan_statement.amount
	    FROM client.loans
	    INNER JOIN loan_statement ON loans.id = loan_statement.loan_id;
	
	CREATE OR REPLACE VIEW client.loan_applications AS
	    SELECT loan.account_id, loan_application.id, loan_application.application_status, loan_application.loan_id
	    FROM loan_application
	    INNER JOIN loan ON loan_application.loan_id = loan.id;
	
	CREATE OR REPLACE FUNCTION client.update_personal_information(account_identifier INT, first_name TEXT, last_name TEXT, date_of_birth DATE, phone_number TEXT, email_address TEXT, address_street TEXT, address_city TEXT, address_county TEXT, address_postcode TEXT, account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-16 21:44:39.621 GMT [98554] ERROR:  syntax error at or near "UPDATE" at character 11
2023-01-16 21:44:39.621 GMT [98554] STATEMENT:  BEGIN
	    UPDATE customer SET first_name = first_name, last_name = last_name, date_of_birth = date_of_birth, phone_number = phone_number, email_address = email_address, address_street = address_street, address_city = address_city, address_county = address_county, address_postcode = address_postcode
	    WHERE id = (SELECT customer_id FROM online_account WHERE id = account_identifier);
2023-01-16 21:44:39.621 GMT [98554] ERROR:  syntax error at or near "passed" at character 1
2023-01-16 21:44:39.621 GMT [98554] STATEMENT:  passed = CASE WHEN @@ROWCOUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-16 21:44:39.621 GMT [98554] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 21:44:39.621 GMT [98554] STATEMENT:  RETURN passed;
2023-01-16 21:44:39.621 GMT [98554] WARNING:  there is no transaction in progress
2023-01-16 21:44:39.621 GMT [98554] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.update_password(account_identifier INT, new_password TEXT)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-16 21:44:39.621 GMT [98554] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.update_password(account_identifier INT, new_password TEXT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-16 21:44:39.621 GMT [98554] ERROR:  syntax error at or near "INT" at character 19
2023-01-16 21:44:39.621 GMT [98554] STATEMENT:  DECLARE ROW_COUNT INT;
2023-01-16 21:44:39.621 GMT [98554] ERROR:  syntax error at or near "UPDATE" at character 11
2023-01-16 21:44:39.621 GMT [98554] STATEMENT:  BEGIN
	    UPDATE user_login SET password = md5(new_password)
	    WHERE account_id = account_identifier;
2023-01-16 21:44:39.621 GMT [98554] ERROR:  syntax error at or near "GET" at character 1
2023-01-16 21:44:39.621 GMT [98554] STATEMENT:  GET DIAGNOSTICS ROW_COUNT = ROW_COUNT;
2023-01-16 21:44:39.622 GMT [98554] ERROR:  column "account_identifier" does not exist at character 76
2023-01-16 21:44:39.622 GMT [98554] STATEMENT:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Updated password', CURRENT_DATE);
2023-01-16 21:44:39.622 GMT [98554] ERROR:  syntax error at or near "passed" at character 1
2023-01-16 21:44:39.622 GMT [98554] STATEMENT:  passed = CASE WHEN ROW_COUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-16 21:44:39.622 GMT [98554] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 21:44:39.622 GMT [98554] STATEMENT:  RETURN passed;
2023-01-16 21:44:39.622 GMT [98554] WARNING:  there is no transaction in progress
2023-01-16 21:44:39.622 GMT [98554] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.update_email(account_identifier INT, new_email TEXT)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-16 21:44:39.622 GMT [98554] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.update_email(account_identifier INT, new_email TEXT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-16 21:44:39.622 GMT [98554] ERROR:  syntax error at or near "INT" at character 19
2023-01-16 21:44:39.622 GMT [98554] STATEMENT:  DECLARE ROW_COUNT INT;
2023-01-16 21:44:39.623 GMT [98554] ERROR:  syntax error at or near "UPDATE" at character 11
2023-01-16 21:44:39.623 GMT [98554] STATEMENT:  BEGIN
	    UPDATE user_login SET email = new_email
	    WHERE account_id = account_identifier;
2023-01-16 21:44:39.623 GMT [98554] ERROR:  syntax error at or near "GET" at character 1
2023-01-16 21:44:39.623 GMT [98554] STATEMENT:  GET DIAGNOSTICS ROW_COUNT = ROW_COUNT;
2023-01-16 21:44:39.623 GMT [98554] ERROR:  column "account_identifier" does not exist at character 76
2023-01-16 21:44:39.623 GMT [98554] STATEMENT:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Updated email', CURRENT_DATE);
2023-01-16 21:44:39.623 GMT [98554] ERROR:  syntax error at or near "passed" at character 1
2023-01-16 21:44:39.623 GMT [98554] STATEMENT:  passed = CASE WHEN ROW_COUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-16 21:44:39.624 GMT [98554] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 21:44:39.624 GMT [98554] STATEMENT:  RETURN passed;
2023-01-16 21:44:39.624 GMT [98554] WARNING:  there is no transaction in progress
2023-01-16 21:44:39.625 GMT [98554] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	
	CREATE OR REPLACE FUNCTION client.open_debit_account(account_id INT)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-16 21:44:39.625 GMT [98554] STATEMENT:  $$ LANGUAGE plpgsql;
	
	
	CREATE OR REPLACE FUNCTION client.open_debit_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-16 21:44:39.625 GMT [98554] ERROR:  syntax error at or near "INT" at character 30
2023-01-16 21:44:39.625 GMT [98554] STATEMENT:  DECLARE debit_account_number INT;
2023-01-16 21:44:39.625 GMT [98554] ERROR:  syntax error at or near "INT" at character 29
2023-01-16 21:44:39.625 GMT [98554] STATEMENT:  DECLARE next_account_number INT;
2023-01-16 21:44:39.625 GMT [98554] ERROR:  syntax error at or near "INT" at character 19
2023-01-16 21:44:39.625 GMT [98554] STATEMENT:  DECLARE ROW_COUNT INT;
2023-01-16 21:44:39.625 GMT [98554] ERROR:  syntax error at or near "SELECT" at character 11
2023-01-16 21:44:39.625 GMT [98554] STATEMENT:  BEGIN
	    SELECT get_next_account_number() INTO next_account_number;
2023-01-16 21:44:39.626 GMT [98554] ERROR:  syntax error at or near "INTO" at character 163
2023-01-16 21:44:39.626 GMT [98554] STATEMENT:  INSERT INTO debit_account (account_number, account_id, current_balance, interest_rate) VALUES (next_account_number ,account_id, 0, 0.01) RETURNING account_number INTO debit_account_number;
2023-01-16 21:44:39.626 GMT [98554] ERROR:  syntax error at or near "GET" at character 1
2023-01-16 21:44:39.626 GMT [98554] STATEMENT:  GET DIAGNOSTICS ROW_COUNT = ROW_COUNT;
2023-01-16 21:44:39.626 GMT [98554] ERROR:  column "debit_account_number" does not exist at character 189
2023-01-16 21:44:39.626 GMT [98554] STATEMENT:  INSERT INTO debit_statement (starting_date, end_date, amount, account_number) VALUES (date_trunc('month', now()::date), (date_trunc('month', now()::date)) + interval '1 month - 1 day', 0, debit_account_number);
2023-01-16 21:44:39.627 GMT [98554] ERROR:  column "debit_account_number" does not exist at character 115
2023-01-16 21:44:39.627 GMT [98554] STATEMENT:  INSERT INTO debit_overdraft (overdraft_usage, overdraft_limit, interest_rate, account_number) VALUES (0, 0, 0.01, debit_account_number);
2023-01-16 21:44:39.627 GMT [98554] ERROR:  column "account_id" does not exist at character 76
2023-01-16 21:44:39.627 GMT [98554] HINT:  There is a column named "account_id" in table "management_log", but it cannot be referenced from this part of the query.
2023-01-16 21:44:39.627 GMT [98554] STATEMENT:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened debit account', CURRENT_DATE);
2023-01-16 21:44:39.627 GMT [98554] ERROR:  syntax error at or near "passed" at character 1
2023-01-16 21:44:39.627 GMT [98554] STATEMENT:  passed = CASE WHEN ROW_COUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-16 21:44:39.627 GMT [98554] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 21:44:39.627 GMT [98554] STATEMENT:  RETURN passed;
2023-01-16 21:44:39.627 GMT [98554] WARNING:  there is no transaction in progress
2023-01-16 21:44:39.628 GMT [98554] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_credit_account(account_id INT)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-16 21:44:39.628 GMT [98554] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_credit_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-16 21:44:39.628 GMT [98554] ERROR:  syntax error at or near "INT" at character 31
2023-01-16 21:44:39.628 GMT [98554] STATEMENT:  DECLARE credit_account_number INT;
2023-01-16 21:44:39.628 GMT [98554] ERROR:  syntax error at or near "INT" at character 29
2023-01-16 21:44:39.628 GMT [98554] STATEMENT:  DECLARE next_account_number INT;
2023-01-16 21:44:39.628 GMT [98554] ERROR:  syntax error at or near "INT" at character 19
2023-01-16 21:44:39.628 GMT [98554] STATEMENT:  DECLARE ROW_COUNT INT;
2023-01-16 21:44:39.629 GMT [98554] ERROR:  syntax error at or near "SELECT" at character 11
2023-01-16 21:44:39.629 GMT [98554] STATEMENT:  BEGIN
	    SELECT get_next_account_number() INTO next_account_number;
2023-01-16 21:44:39.629 GMT [98554] ERROR:  syntax error at or near "INTO" at character 185
2023-01-16 21:44:39.629 GMT [98554] STATEMENT:  INSERT INTO credit_account (account_number, outstanding_balance, credit_limit, interest_rate, account_id) VALUES (next_account_number ,0, 0, 24.9, account_id) RETURNING account_number INTO credit_account_number;
2023-01-16 21:44:39.629 GMT [98554] ERROR:  syntax error at or near "GET" at character 1
2023-01-16 21:44:39.629 GMT [98554] STATEMENT:  GET DIAGNOSTICS ROW_COUNT = ROW_COUNT;
2023-01-16 21:44:39.629 GMT [98554] ERROR:  column "credit_account_number" does not exist at character 250
2023-01-16 21:44:39.629 GMT [98554] STATEMENT:  INSERT INTO credit_statement (starting_date, end_date, amount, minimum_payment, minimum_payment_due_date, account_number) VALUES (date_trunc('month', now()::date), (date_trunc('month', now()::date)) + interval '1 month - 1 day', 0, 0, CURRENT_DATE, credit_account_number);
2023-01-16 21:44:39.630 GMT [98554] ERROR:  column "credit_account_number" does not exist at character 85
2023-01-16 21:44:39.630 GMT [98554] STATEMENT:  INSERT INTO credit_account_application (account_number, application_status) VALUES (credit_account_number, 'PENDING');
2023-01-16 21:44:39.630 GMT [98554] ERROR:  column "account_id" does not exist at character 76
2023-01-16 21:44:39.630 GMT [98554] HINT:  There is a column named "account_id" in table "management_log", but it cannot be referenced from this part of the query.
2023-01-16 21:44:39.630 GMT [98554] STATEMENT:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened credit account', CURRENT_DATE);
2023-01-16 21:44:39.630 GMT [98554] ERROR:  syntax error at or near "passed" at character 1
2023-01-16 21:44:39.630 GMT [98554] STATEMENT:  passed = CASE WHEN ROW_COUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-16 21:44:39.630 GMT [98554] ERROR:  syntax error at or near "return" at character 1
2023-01-16 21:44:39.630 GMT [98554] STATEMENT:  return PASSED;
2023-01-16 21:44:39.630 GMT [98554] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_savings_account(account_id INT)
	RETURNS BOOLEAN AS $$" at character 5
2023-01-16 21:44:39.630 GMT [98554] STATEMENT:  END
	$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_savings_account(account_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-16 21:44:39.630 GMT [98554] ERROR:  syntax error at or near "INT" at character 28
2023-01-16 21:44:39.630 GMT [98554] STATEMENT:  DECLARE savings_account_id INT;
2023-01-16 21:44:39.631 GMT [98554] ERROR:  syntax error at or near "INT" at character 29
2023-01-16 21:44:39.631 GMT [98554] STATEMENT:  DECLARE next_account_number INT;
2023-01-16 21:44:39.631 GMT [98554] ERROR:  syntax error at or near "INT" at character 19
2023-01-16 21:44:39.631 GMT [98554] STATEMENT:  DECLARE ROW_COUNT INT;
2023-01-16 21:44:39.631 GMT [98554] ERROR:  syntax error at or near "SELECT" at character 11
2023-01-16 21:44:39.631 GMT [98554] STATEMENT:  BEGIN
	    SELECT get_next_account_number() INTO next_account_number;
2023-01-16 21:44:39.631 GMT [98554] ERROR:  syntax error at or near "INTO" at character 169
2023-01-16 21:44:39.631 GMT [98554] STATEMENT:  INSERT INTO savings_account (account_number, account_id, current_balance, interest_rate) VALUES (next_account_number ,account_id, 10000, 0.01) RETURNING account_number INTO savings_account_id;
2023-01-16 21:44:39.631 GMT [98554] ERROR:  syntax error at or near "GET" at character 1
2023-01-16 21:44:39.631 GMT [98554] STATEMENT:  GET DIAGNOSTICS ROW_COUNT = ROW_COUNT;
2023-01-16 21:44:39.631 GMT [98554] ERROR:  column "savings_account_id" does not exist at character 191
2023-01-16 21:44:39.631 GMT [98554] STATEMENT:  INSERT INTO savings_statement (starting_date, end_date, amount, account_number) VALUES (date_trunc('month', now()::date), (date_trunc('month', now()::date)) + interval '1 month - 1 day', 0, savings_account_id);
2023-01-16 21:44:39.632 GMT [98554] ERROR:  column "account_id" does not exist at character 76
2023-01-16 21:44:39.632 GMT [98554] HINT:  There is a column named "account_id" in table "management_log", but it cannot be referenced from this part of the query.
2023-01-16 21:44:39.632 GMT [98554] STATEMENT:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened savings account', CURRENT_DATE);
2023-01-16 21:44:39.632 GMT [98554] ERROR:  syntax error at or near "passed" at character 1
2023-01-16 21:44:39.632 GMT [98554] STATEMENT:  passed = CASE WHEN ROW_COUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-16 21:44:39.632 GMT [98554] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 21:44:39.632 GMT [98554] STATEMENT:  RETURN passed;
2023-01-16 21:44:39.632 GMT [98554] WARNING:  there is no transaction in progress
2023-01-16 21:44:39.632 GMT [98554] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_loan(account_id INT, loan_amount INT, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-16 21:44:39.632 GMT [98554] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.open_loan(account_id INT, loan_amount INT, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-16 21:44:39.632 GMT [98554] ERROR:  syntax error at or near "INT" at character 17
2023-01-16 21:44:39.632 GMT [98554] STATEMENT:  DECLARE loan_id INT;
2023-01-16 21:44:39.632 GMT [98554] ERROR:  syntax error at or near "INT" at character 19
2023-01-16 21:44:39.632 GMT [98554] STATEMENT:  DECLARE ROW_COUNT INT;
2023-01-16 21:44:39.632 GMT [98554] ERROR:  syntax error at or near "INSERT" at character 11
2023-01-16 21:44:39.632 GMT [98554] STATEMENT:  BEGIN
	    INSERT INTO loan (account_id, loan_amount, loan_end_date, loan_type, loan_interest_rate) VALUES (account_id, loan_amount, loan_end_date, loan_type, loan_interest_rate) RETURNING id INTO loan_id;
2023-01-16 21:44:39.632 GMT [98554] ERROR:  syntax error at or near "GET" at character 1
2023-01-16 21:44:39.632 GMT [98554] STATEMENT:  GET DIAGNOSTICS ROW_COUNT = ROW_COUNT;
2023-01-16 21:44:39.633 GMT [98554] ERROR:  column "end_date" of relation "loan_statement" does not exist at character 44
2023-01-16 21:44:39.633 GMT [98554] STATEMENT:  INSERT INTO loan_statement (starting_date, end_date, amount, account_id) VALUES (date_trunc('month', now()::date), (date_trunc('month', now()::date)) + interval '1 month - 1 day', 0, loan_id);
2023-01-16 21:44:39.633 GMT [98554] ERROR:  column "loan_id" does not exist at character 68
2023-01-16 21:44:39.633 GMT [98554] HINT:  There is a column named "loan_id" in table "loan_application", but it cannot be referenced from this part of the query.
2023-01-16 21:44:39.633 GMT [98554] STATEMENT:  INSERT INTO loan_application (loan_id, application_status) VALUES (loan_id, 'PENDING');
2023-01-16 21:44:39.633 GMT [98554] ERROR:  column "account_id" does not exist at character 76
2023-01-16 21:44:39.633 GMT [98554] HINT:  There is a column named "account_id" in table "management_log", but it cannot be referenced from this part of the query.
2023-01-16 21:44:39.633 GMT [98554] STATEMENT:  INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Opened loan', CURRENT_DATE);
2023-01-16 21:44:39.633 GMT [98554] ERROR:  syntax error at or near "passed" at character 1
2023-01-16 21:44:39.633 GMT [98554] STATEMENT:  passed = CASE WHEN ROW_COUNT = 1 THEN TRUE ELSE FALSE END;
2023-01-16 21:44:39.633 GMT [98554] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 21:44:39.633 GMT [98554] STATEMENT:  RETURN passed;
2023-01-16 21:44:39.633 GMT [98554] WARNING:  there is no transaction in progress
2023-01-16 21:44:39.634 GMT [98554] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_personal_information(account_id INT)
	RETURNS TABLE (first_name TEXT, last_name TEXT, email TEXT, phone_number TEXT, address TEXT, city TEXT, country TEXT, postal_code TEXT) AS $$" at character 1
2023-01-16 21:44:39.634 GMT [98554] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_personal_information(account_id INT)
	RETURNS TABLE (first_name TEXT, last_name TEXT, email TEXT, phone_number TEXT, address TEXT, city TEXT, country TEXT, postal_code TEXT) AS $$
	BEGIN
	    RETURN QUERY
	        SELECT first_name, last_name, email, phone_number, address, city, country, postal_code
	            FROM customer
	        INNER JOIN account ON account.customer_id = customer.id
	        WHERE account.id = account_id;
2023-01-16 21:44:39.634 GMT [98554] WARNING:  there is no transaction in progress
2023-01-16 21:44:39.634 GMT [98554] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_accounts(account_identifier INT)
	RETURNS TABLE (account_number INT, account_id INT, balance NUMERIC, interest_rate NUMERIC, account_type TEXT) AS $$" at character 1
2023-01-16 21:44:39.634 GMT [98554] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_accounts(account_identifier INT)
	RETURNS TABLE (account_number INT, account_id INT, balance NUMERIC, interest_rate NUMERIC, account_type TEXT) AS $$
	BEGIN
	    RETURN QUERY
	        SELECT account.*, COALESCE(debit_accounts.current_balance, credit_accounts.outstanding_balance, savings_accounts.current_balance) AS balance,
	            COALESCE(debit_accounts.interest_rate, credit_accounts.interest_rate, savings_accounts.interest_rate) AS interest_rate,
	            get_account_type(account.account_number) AS account_type
	            FROM account
	            LEFT JOIN client.credit_accounts ON account.account_number = credit_accounts.account_number
	            LEFT JOIN client.debit_accounts ON account.account_number = debit_accounts.account_number
	            LEFT JOIN client.savings_accounts ON account.account_number = savings_accounts.account_number
	            WHERE account.account_id = account_identifier;
2023-01-16 21:44:39.634 GMT [98554] WARNING:  there is no transaction in progress
2023-01-16 21:44:39.634 GMT [98554] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, overdraft_limit NUMERIC, overdraft_usage NUMERIC, overdraft_interest_rate NUMERIC, external_account_number INT) AS $$" at character 1
2023-01-16 21:44:39.634 GMT [98554] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, overdraft_limit NUMERIC, overdraft_usage NUMERIC, overdraft_interest_rate NUMERIC, external_account_number INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed debit accounts', CURRENT_DATE);
2023-01-16 21:44:39.634 GMT [98554] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 21:44:39.634 GMT [98554] STATEMENT:  RETURN QUERY
	        SELECT * FROM client.debit_accounts WHERE account_id = account_id;
2023-01-16 21:44:39.634 GMT [98554] WARNING:  there is no transaction in progress
2023-01-16 21:44:39.635 GMT [98554] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_accounts(account_id INT)
	RETURNS TABLE (id INT, outstanding_balance NUMERIC, credit_limit NUMERIC, interest_rate NUMERIC, application_status TEXT) AS $$" at character 1
2023-01-16 21:44:39.635 GMT [98554] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_accounts(account_id INT)
	RETURNS TABLE (id INT, outstanding_balance NUMERIC, credit_limit NUMERIC, interest_rate NUMERIC, application_status TEXT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit accounts', CURRENT_DATE);
2023-01-16 21:44:39.635 GMT [98554] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 21:44:39.635 GMT [98554] STATEMENT:  RETURN QUERY
	        SELECT * FROM client.credit_accounts WHERE account_id = account_id;
2023-01-16 21:44:39.635 GMT [98554] WARNING:  there is no transaction in progress
2023-01-16 21:44:39.635 GMT [98554] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_savings_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, external_account_number INT) AS $$" at character 1
2023-01-16 21:44:39.635 GMT [98554] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_savings_accounts(account_id INT)
	RETURNS TABLE (id INT, current_balance NUMERIC, interest_rate NUMERIC, external_account_number INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings accounts', CURRENT_DATE);
2023-01-16 21:44:39.635 GMT [98554] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 21:44:39.635 GMT [98554] STATEMENT:  RETURN QUERY
	        SELECT * FROM client.savings_accounts WHERE account_id = account_id;
2023-01-16 21:44:39.636 GMT [98554] WARNING:  there is no transaction in progress
2023-01-16 21:44:39.636 GMT [98554] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_loans(account_id INT)
	RETURNS TABLE (id INT, loan_amount NUMERIC, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC, application_status TEXT) AS $$" at character 1
2023-01-16 21:44:39.636 GMT [98554] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_loans(account_id INT)
	RETURNS TABLE (id INT, loan_amount NUMERIC, loan_end_date DATE, loan_type TEXT, loan_interest_rate NUMERIC, application_status TEXT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed loans', CURRENT_DATE);
2023-01-16 21:44:39.636 GMT [98554] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 21:44:39.636 GMT [98554] STATEMENT:  RETURN QUERY
	        SELECT * FROM client.loans WHERE account_id = account_id;
2023-01-16 21:44:39.636 GMT [98554] WARNING:  there is no transaction in progress
2023-01-16 21:44:39.636 GMT [98554] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_savings_statements(account_identifier INT, orig_account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-16 21:44:39.636 GMT [98554] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_savings_statements(account_identifier INT, orig_account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Viewed savings statements', CURRENT_DATE);
2023-01-16 21:44:39.637 GMT [98554] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 21:44:39.637 GMT [98554] STATEMENT:  RETURN QUERY
	        SELECT savings_accounts_statements.starting_date, savings_accounts_statements.end_date, savings_accounts_statements.amount, savings_accounts_statements.account_id
	        FROM client.savings_accounts_statements
	        WHERE savings_accounts_statements.account_number = orig_account_number
	        AND savings_accounts_statements.account_id = account_identifier;
2023-01-16 21:44:39.637 GMT [98554] WARNING:  there is no transaction in progress
2023-01-16 21:44:39.637 GMT [98554] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_statements(account_identifier INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-16 21:44:39.637 GMT [98554] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_statements(account_identifier INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Viewed debit statements', CURRENT_DATE);
2023-01-16 21:44:39.638 GMT [98554] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 21:44:39.638 GMT [98554] STATEMENT:  RETURN QUERY
	        SELECT debit_accounts_statements.account_id, debit_accounts_statements.account_number, debit_accounts_statements.starting_date, debit_accounts_statements.end_date, debit_accounts_statements.amount
	        FROM client.debit_accounts_statements
	        WHERE debit_accounts_statements.account_number = account_number
	        AND debit_accounts_statements.account_id = account_identifier;
2023-01-16 21:44:39.638 GMT [98554] WARNING:  there is no transaction in progress
2023-01-16 21:44:39.639 GMT [98554] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_statements(account_identifier INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-16 21:44:39.639 GMT [98554] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_statements(account_identifier INT, account_number INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Viewed credit statements', CURRENT_DATE);
2023-01-16 21:44:39.639 GMT [98554] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 21:44:39.639 GMT [98554] STATEMENT:  RETURN QUERY
	        SELECT credit_accounts_statements.account_id, credit_accounts_statements.account_number, credit_accounts_statements.starting_date, credit_accounts_statements.end_date, credit_accounts_statements.amount
	        FROM client.credit_accounts_statements
	        WHERE credit_accounts_statements.account_number = account_number
	        AND credit_accounts_statements.account_id = account_identifier;
2023-01-16 21:44:39.639 GMT [98554] WARNING:  there is no transaction in progress
2023-01-16 21:44:39.639 GMT [98554] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_statement(account_identifier INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-16 21:44:39.639 GMT [98554] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_debit_statement(account_identifier INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Viewed debit statement', CURRENT_DATE);
2023-01-16 21:44:39.639 GMT [98554] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 21:44:39.639 GMT [98554] STATEMENT:  RETURN QUERY
	        SELECT debit_accounts_statement.account_id, debit_accounts_statement.account_number, debit_accounts_statement.starting_date, debit_accounts_statement.end_date, debit_accounts_statement.amount
	        FROM client.debit_accounts_statement
	        WHERE debit_accounts_statement.account_id = account_identifier
	        AND debit_accounts_statement.account_number = account_number
	        AND debit_accounts_statement.statement_id = statement_id;
2023-01-16 21:44:39.640 GMT [98554] WARNING:  there is no transaction in progress
2023-01-16 21:44:39.640 GMT [98554] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_statement(account_identifier INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-16 21:44:39.640 GMT [98554] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_credit_statement(account_identifier INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed credit statement', CURRENT_DATE);
2023-01-16 21:44:39.640 GMT [98554] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 21:44:39.640 GMT [98554] STATEMENT:  RETURN QUERY
	        SELECT credit_accounts_statement.account_id, credit_accounts_statement.account_number, credit_accounts_statement.starting_date, credit_accounts_statement.end_date, credit_accounts_statement.amount
	        FROM client.credit_accounts_statement
	        WHERE credit_accounts_statement.account_id = account_identifier
	        AND credit_accounts_statement.account_number = account_number
	        AND credit_accounts_statement.statement_id = statement_id;
2023-01-16 21:44:39.640 GMT [98554] WARNING:  there is no transaction in progress
2023-01-16 21:44:39.640 GMT [98554] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_savings_statement(account_identifier INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$" at character 1
2023-01-16 21:44:39.640 GMT [98554] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.view_savings_statement(account_identifier INT, account_number INT, statement_id INT)
	RETURNS TABLE (starting_date DATE, end_date DATE, amount NUMERIC, account_id INT) AS $$
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_id, 'Viewed savings statement', CURRENT_DATE);
2023-01-16 21:44:39.640 GMT [98554] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 21:44:39.640 GMT [98554] STATEMENT:  RETURN QUERY
	        SELECT savings_accounts_statement.account_id, savings_accounts_statement.account_number, savings_accounts_statement.starting_date, savings_accounts_statement.end_date, savings_accounts_statement.amount
	        FROM client.savings_accounts_statement
	        WHERE savings_accounts_statement.account_id = account_identifier
	        AND savings_accounts_statement.account_number = account_number
	        AND savings_accounts_statement.statement_id = statement_id;
2023-01-16 21:44:39.641 GMT [98554] WARNING:  there is no transaction in progress
2023-01-16 21:44:39.641 GMT [98554] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.get_or_create_statement(account_identifier INT, orig_account_number INT)
	RETURNS INT AS $$" at character 1
2023-01-16 21:44:39.641 GMT [98554] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.get_or_create_statement(account_identifier INT, orig_account_number INT)
	RETURNS INT AS $$
	DECLARE statement_id INT;
2023-01-16 21:44:39.641 GMT [98554] ERROR:  syntax error at or near "CASE" at character 11
2023-01-16 21:44:39.641 GMT [98554] STATEMENT:  BEGIN
	    CASE WHEN EXISTS (SELECT * FROM client.debit_accounts WHERE account_id = account_identifier AND account_number = orig_account_number) THEN
	        IF EXISTS (SELECT * FROM debit_statement WHERE account_number = orig_account_number AND starting_date <= now()::date AND end_date >= now()::date) THEN
	            SELECT id INTO statement_id FROM debit_statement WHERE account_number = orig_account_number AND starting_date <= now()::date AND end_date >= now()::date;
2023-01-16 21:44:39.641 GMT [98554] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 21:44:39.641 GMT [98554] STATEMENT:  RETURN statement_id;
2023-01-16 21:44:39.641 GMT [98554] ERROR:  syntax error at or near "ELSE" at character 1
2023-01-16 21:44:39.641 GMT [98554] STATEMENT:  ELSE 
	            INSERT INTO debit_statement (account_number, starting_date, end_date, amount) VALUES (orig_account_number, date_trunc('month', now()::date), now()::date + 30, 0);
2023-01-16 21:44:39.643 GMT [98554] ERROR:  column "orig_account_number" does not exist at character 73
2023-01-16 21:44:39.643 GMT [98554] STATEMENT:  SELECT id INTO statement_id FROM debit_statement WHERE account_number = orig_account_number AND starting_date <= now()::date AND end_date >= now()::date;
2023-01-16 21:44:39.644 GMT [98554] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 21:44:39.644 GMT [98554] STATEMENT:  RETURN statement_id;
2023-01-16 21:44:39.644 GMT [98554] ERROR:  syntax error at or near "IF" at character 5
2023-01-16 21:44:39.644 GMT [98554] STATEMENT:  END IF;
2023-01-16 21:44:39.644 GMT [98554] ERROR:  syntax error at or near "WHEN" at character 1
2023-01-16 21:44:39.644 GMT [98554] STATEMENT:  WHEN EXISTS (SELECT * FROM client.credit_accounts WHERE account_id = account_identifier AND account_number = orig_account_number) THEN
	        IF EXISTS (SELECT * FROM credit_statement WHERE account_number = orig_account_number AND starting_date <= now()::date AND end_date >= now()::date) THEN
	            SELECT id INTO statement_id FROM credit_statement WHERE account_number = orig_account_number AND starting_date <= now()::date AND end_date >= now()::date;
2023-01-16 21:44:39.644 GMT [98554] ERROR:  syntax error at or near "return" at character 1
2023-01-16 21:44:39.644 GMT [98554] STATEMENT:  return statement_id;
2023-01-16 21:44:39.644 GMT [98554] ERROR:  syntax error at or near "ELSE" at character 1
2023-01-16 21:44:39.644 GMT [98554] STATEMENT:  ELSE 
	            INSERT INTO credit_statement (account_number, starting_date, end_date, amount) VALUES (orig_account_number, date_trunc('month', now()::date), now()::date + 30, 0);
2023-01-16 21:44:39.645 GMT [98554] ERROR:  column "orig_account_number" does not exist at character 74
2023-01-16 21:44:39.645 GMT [98554] STATEMENT:  SELECT id INTO statement_id FROM credit_statement WHERE account_number = orig_account_number AND starting_date <= now()::date AND end_date >= now()::date;
2023-01-16 21:44:39.645 GMT [98554] ERROR:  syntax error at or near "return" at character 1
2023-01-16 21:44:39.645 GMT [98554] STATEMENT:  return statement_id;
2023-01-16 21:44:39.645 GMT [98554] ERROR:  syntax error at or near "IF" at character 5
2023-01-16 21:44:39.645 GMT [98554] STATEMENT:  END IF;
2023-01-16 21:44:39.645 GMT [98554] ERROR:  syntax error at or near "WHEN" at character 1
2023-01-16 21:44:39.645 GMT [98554] STATEMENT:  WHEN EXISTS (SELECT * FROM client.savings_accounts WHERE account_id = account_identifier AND account_number = orig_account_number) THEN
	        IF EXISTS (SELECT * FROM savings_statement WHERE account_number = orig_account_number AND starting_date <= now()::date AND end_date >= now()::date) THEN
	            SELECT id INTO statement_id FROM savings_statement WHERE account_number = orig_account_number AND starting_date <= now()::date AND end_date >= now()::date;
2023-01-16 21:44:39.646 GMT [98554] ERROR:  syntax error at or near "return" at character 1
2023-01-16 21:44:39.646 GMT [98554] STATEMENT:  return statement_id;
2023-01-16 21:44:39.646 GMT [98554] ERROR:  syntax error at or near "ELSE" at character 1
2023-01-16 21:44:39.646 GMT [98554] STATEMENT:  ELSE
	            INSERT INTO savings_statement (account_number, starting_date, end_date, amount) VALUES (orig_account_number, date_trunc('month', now()::date), now()::date + 30, 0);
2023-01-16 21:44:39.646 GMT [98554] ERROR:  column "orig_account_number" does not exist at character 75
2023-01-16 21:44:39.646 GMT [98554] STATEMENT:  SELECT id INTO statement_id FROM savings_statement WHERE account_number = orig_account_number AND starting_date <= now()::date AND end_date >= now()::date;
2023-01-16 21:44:39.646 GMT [98554] ERROR:  syntax error at or near "return" at character 1
2023-01-16 21:44:39.646 GMT [98554] STATEMENT:  return statement_id;
2023-01-16 21:44:39.646 GMT [98554] ERROR:  syntax error at or near "IF" at character 5
2023-01-16 21:44:39.646 GMT [98554] STATEMENT:  END IF;
2023-01-16 21:44:39.646 GMT [98554] ERROR:  syntax error at or near "CASE" at character 5
2023-01-16 21:44:39.646 GMT [98554] STATEMENT:  END CASE;
2023-01-16 21:44:39.646 GMT [98554] WARNING:  there is no transaction in progress
2023-01-16 21:44:39.646 GMT [98554] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.place_transaction_into_account(account_identifier INT, orig_account_number INT, transaction_account_number INT, transaction_amount NUMERIC, transfer_account_sort_code INT, is_loan_payment BOOLEAN)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-16 21:44:39.646 GMT [98554] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.place_transaction_into_account(account_identifier INT, orig_account_number INT, transaction_account_number INT, transaction_amount NUMERIC, transfer_account_sort_code INT, is_loan_payment BOOLEAN)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-16 21:44:39.647 GMT [98554] ERROR:  syntax error at or near "INT" at character 22
2023-01-16 21:44:39.647 GMT [98554] STATEMENT:  DECLARE statement_id INT;
2023-01-16 21:44:39.647 GMT [98554] ERROR:  syntax error at or near "INT" at character 24
2023-01-16 21:44:39.647 GMT [98554] STATEMENT:  DECLARE transaction_id INT;
2023-01-16 21:44:39.647 GMT [98554] ERROR:  syntax error at or near "INSERT" at character 11
2023-01-16 21:44:39.647 GMT [98554] STATEMENT:  BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Placed transaction into account', CURRENT_DATE);
2023-01-16 21:44:39.647 GMT [98554] ERROR:  syntax error at or near "CASE" at character 1
2023-01-16 21:44:39.647 GMT [98554] STATEMENT:  CASE WHEN EXISTS (SELECT * FROM client.debit_accounts WHERE account_id = account_identifier AND account_number = orig_account_number) THEN
	        
	        SELECT * FROM client.get_or_create_statement(account_identifier, orig_account_number) INTO statement_id;
2023-01-16 21:44:39.647 GMT [98554] ERROR:  syntax error at or near "INTO" at character 284
2023-01-16 21:44:39.647 GMT [98554] STATEMENT:  INSERT INTO transaction (origin_account_id, dest_account_id, amount, date, debit_statement_id, dest_account_sort_code, approved)
	        VALUES (orig_account_number, transaction_account_number, transaction_amount, now(), statement_id, transfer_account_sort_code, FALSE) RETURNING id INTO transaction_id;
2023-01-16 21:44:39.647 GMT [98554] ERROR:  column "transaction_id" does not exist at character 71
2023-01-16 21:44:39.647 GMT [98554] STATEMENT:  INSERT INTO pending_transaction (id, account_id, is_transfer) VALUES (transaction_id, orig_account_number, true, is_loan_payment);
2023-01-16 21:44:39.647 GMT [98554] ERROR:  syntax error at or near "WHEN" at character 1
2023-01-16 21:44:39.647 GMT [98554] STATEMENT:  WHEN EXISTS (SELECT * FROM client.credit_accounts WHERE account_id = account_identifier AND account_number = orig_account_number) THEN
	        
	        SELECT * FROM client.get_or_create_statement(account_identifier, orig_account_number) INTO statement_id;
2023-01-16 21:44:39.647 GMT [98554] ERROR:  syntax error at or near "INTO" at character 285
2023-01-16 21:44:39.647 GMT [98554] STATEMENT:  INSERT INTO transaction (origin_account_id, dest_account_id, amount, date, credit_statement_id, dest_account_sort_code, approved)
	        VALUES (orig_account_number, transaction_account_number, transaction_amount, now(), statement_id, transfer_account_sort_code, FALSE) RETURNING id INTO transaction_id;
2023-01-16 21:44:39.647 GMT [98554] ERROR:  column "transaction_id" does not exist at character 71
2023-01-16 21:44:39.647 GMT [98554] STATEMENT:  INSERT INTO pending_transaction (id, account_id, is_transfer) VALUES (transaction_id, orig_account_number, true, is_loan_payment);
2023-01-16 21:44:39.648 GMT [98554] ERROR:  syntax error at or near "WHEN" at character 1
2023-01-16 21:44:39.648 GMT [98554] STATEMENT:  WHEN EXISTS (SELECT * FROM client.savings_accounts WHERE account_id = account_identifier AND account_number = orig_account_number) THEN
	        
	        SELECT * FROM client.get_or_create_statement(account_identifier, orig_account_number) INTO statement_id;
2023-01-16 21:44:39.648 GMT [98554] ERROR:  syntax error at or near "INTO" at character 286
2023-01-16 21:44:39.648 GMT [98554] STATEMENT:  INSERT INTO transaction (origin_account_id, dest_account_id, amount, date, savings_statement_id, dest_account_sort_code, approved)
	        VALUES (orig_account_number, transaction_account_number, transaction_amount, now(), statement_id, transfer_account_sort_code, FALSE) RETURNING id INTO transaction_id;
2023-01-16 21:44:39.648 GMT [98554] ERROR:  column "transaction_id" does not exist at character 71
2023-01-16 21:44:39.648 GMT [98554] STATEMENT:  INSERT INTO pending_transaction (id, account_id, is_transfer) VALUES (transaction_id, orig_account_number, true, is_loan_payment);
2023-01-16 21:44:39.648 GMT [98554] ERROR:  syntax error at or near "ELSE" at character 1
2023-01-16 21:44:39.648 GMT [98554] STATEMENT:  ELSE
	        RAISE NOTICE 'Account does not exist';
2023-01-16 21:44:39.648 GMT [98554] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 21:44:39.648 GMT [98554] STATEMENT:  RETURN FALSE;
2023-01-16 21:44:39.648 GMT [98554] ERROR:  syntax error at or near "CASE" at character 5
2023-01-16 21:44:39.648 GMT [98554] STATEMENT:  END CASE;
2023-01-16 21:44:39.648 GMT [98554] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 21:44:39.648 GMT [98554] STATEMENT:  RETURN TRUE;
2023-01-16 21:44:39.648 GMT [98554] WARNING:  there is no transaction in progress
2023-01-16 21:44:39.649 GMT [98554] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	
	CREATE OR REPLACE FUNCTION client.initiate_transfer(account_identifier INT, orig_account_number INT, transfer_amount NUMERIC, transfer_account_number INT, transfer_account_sort_code INT)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-16 21:44:39.649 GMT [98554] STATEMENT:  $$ LANGUAGE plpgsql;
	
	
	CREATE OR REPLACE FUNCTION client.initiate_transfer(account_identifier INT, orig_account_number INT, transfer_amount NUMERIC, transfer_account_number INT, transfer_account_sort_code INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-16 21:44:39.649 GMT [98554] ERROR:  syntax error at or near "INT" at character 29
2023-01-16 21:44:39.649 GMT [98554] STATEMENT:  DECLARE internal_account_id INT;
2023-01-16 21:44:39.649 GMT [98554] ERROR:  syntax error at or near "INT" at character 19
2023-01-16 21:44:39.649 GMT [98554] STATEMENT:  DECLARE ROW_COUNT INT;
2023-01-16 21:44:39.649 GMT [98554] ERROR:  syntax error at or near "INSERT" at character 11
2023-01-16 21:44:39.649 GMT [98554] STATEMENT:  BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Initiated transfer', CURRENT_DATE);
2023-01-16 21:44:39.650 GMT [98554] ERROR:  syntax error at or near "INTO" at character 164
2023-01-16 21:44:39.650 GMT [98554] STATEMENT:  SELECT * FROM client.place_transaction_into_account(account_identifier, orig_account_number, transfer_account_number, transfer_amount, transfer_account_sort_code) INTO passed;
2023-01-16 21:44:39.650 GMT [98554] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 21:44:39.650 GMT [98554] STATEMENT:  RETURN passed;
2023-01-16 21:44:39.650 GMT [98554] WARNING:  there is no transaction in progress
2023-01-16 21:44:39.650 GMT [98554] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.initiate_loan_payment(account_identifier INT, orig_account_number INT, payment_amount NUMERIC, loan_id INT)
	RETURNS BOOLEAN AS $$" at character 1
2023-01-16 21:44:39.650 GMT [98554] STATEMENT:  $$ LANGUAGE plpgsql;
	
	CREATE OR REPLACE FUNCTION client.initiate_loan_payment(account_identifier INT, orig_account_number INT, payment_amount NUMERIC, loan_id INT)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
2023-01-16 21:44:39.650 GMT [98554] ERROR:  syntax error at or near "INSERT" at character 11
2023-01-16 21:44:39.650 GMT [98554] STATEMENT:  BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Initiated loan payment', CURRENT_DATE);
2023-01-16 21:44:39.650 GMT [98554] ERROR:  syntax error at or near "INTO" at character 128
2023-01-16 21:44:39.650 GMT [98554] STATEMENT:  SELECT * FROM client.place_transaction_into_account(account_identifier, orig_account_number, loan_id, payment_amount, 0, TRUE) INTO passed;
2023-01-16 21:44:39.650 GMT [98554] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 21:44:39.650 GMT [98554] STATEMENT:  RETURN passed;
2023-01-16 21:44:39.650 GMT [98554] WARNING:  there is no transaction in progress
2023-01-16 21:44:39.650 GMT [98554] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	 
	
	CREATE SCHEMA IF NOT EXISTS unauthenticated;
	SET search_path TO unauthenticated, public;
	
	-- Allows an unauthenticated user to match hashes to hashes of personal information contained in the customer table
	CREATE OR REPLACE VIEW unauthenticated.unauthenticated_personal_information AS
	SELECT id, md5(first_name) AS first_name, md5(last_name) AS last_name, md5(email_address) AS email_address
	FROM customer;
	
	-- Allows an unauthenticated user to view hashes of usernames contained in the user_login table
	CREATE OR REPLACE VIEW unauthenticated.unauthenticated_login AS
	SELECT md5(username) AS username FROM user_login;
	
	-- Allows a user to insert personal information into the online banking system
	CREATE OR REPLACE FUNCTION unauthenticated.create_personal_info(first_name TEXT, last_name TEXT, date_of_birth DATE, phone_number TEXT, email_address TEXT, address_street TEXT, address_city TEXT, address_county TEXT, address_postcode TEXT)
	RETURNS INT AS $$" at character 1
2023-01-16 21:44:39.650 GMT [98554] STATEMENT:  $$ LANGUAGE plpgsql;
	 
	
	CREATE SCHEMA IF NOT EXISTS unauthenticated;
	SET search_path TO unauthenticated, public;
	
	-- Allows an unauthenticated user to match hashes to hashes of personal information contained in the customer table
	CREATE OR REPLACE VIEW unauthenticated.unauthenticated_personal_information AS
	SELECT id, md5(first_name) AS first_name, md5(last_name) AS last_name, md5(email_address) AS email_address
	FROM customer;
	
	-- Allows an unauthenticated user to view hashes of usernames contained in the user_login table
	CREATE OR REPLACE VIEW unauthenticated.unauthenticated_login AS
	SELECT md5(username) AS username FROM user_login;
	
	-- Allows a user to insert personal information into the online banking system
	CREATE OR REPLACE FUNCTION unauthenticated.create_personal_info(first_name TEXT, last_name TEXT, date_of_birth DATE, phone_number TEXT, email_address TEXT, address_street TEXT, address_city TEXT, address_county TEXT, address_postcode TEXT)
	RETURNS INT AS $$
	DECLARE customer_id INT;
2023-01-16 21:44:39.651 GMT [98554] ERROR:  syntax error at or near "IF" at character 11
2023-01-16 21:44:39.651 GMT [98554] STATEMENT:  BEGIN
	    IF NOT EXISTS (SELECT FROM unauthenticated.unauthenticated_personal_information WHERE md5(first_name) = first_name AND md5(last_name) = last_name AND md5(email_address) = email_address) THEN
	        INSERT INTO customer
	        VALUES (first_name, last_name, date_of_birth, phone_number, email_address, address_street, address_city, address_county, address_postcode)
	        RETURNING id INTO customer_id;
2023-01-16 21:44:39.653 GMT [98554] ERROR:  syntax error at or near "ELSE" at character 1
2023-01-16 21:44:39.653 GMT [98554] STATEMENT:  ELSE
	        RAISE NOTICE 'CUSTOMER INFORMATION ALREADY PRESENT';
2023-01-16 21:44:39.654 GMT [98554] ERROR:  relation "unauthenticated.unauthenticated_personal_information" does not exist at character 33
2023-01-16 21:44:39.654 GMT [98554] STATEMENT:  SELECT id INTO customer_id FROM unauthenticated.unauthenticated_personal_information WHERE md5(first_name) = first_name AND md5(last_name) = last_name AND md5(email_address) = email_address;
2023-01-16 21:44:39.654 GMT [98554] ERROR:  syntax error at or near "IF" at character 5
2023-01-16 21:44:39.654 GMT [98554] STATEMENT:  END IF;
2023-01-16 21:44:39.654 GMT [98554] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 21:44:39.654 GMT [98554] STATEMENT:  RETURN customer_id;
2023-01-16 21:44:39.654 GMT [98554] WARNING:  there is no transaction in progress
2023-01-16 21:44:39.654 GMT [98554] ERROR:  syntax error at or near "$$ LANGUAGE plpgsql;
	
	-- Allows an unauthenticated user to create an online account
	CREATE OR REPLACE FUNCTION unauthenticated.create_online_account_details(customer_id INT, first_name TEXT, last_name TEXT, email_address TEXT, question_choice_ids INT[], question_answers TEXT[])
	RETURNS INT AS $$" at character 1
2023-01-16 21:44:39.654 GMT [98554] STATEMENT:  $$ LANGUAGE plpgsql;
	
	-- Allows an unauthenticated user to create an online account
	CREATE OR REPLACE FUNCTION unauthenticated.create_online_account_details(customer_id INT, first_name TEXT, last_name TEXT, email_address TEXT, question_choice_ids INT[], question_answers TEXT[])
	RETURNS INT AS $$
	DECLARE account_id INT;
2023-01-16 21:44:39.654 GMT [98554] ERROR:  syntax error at or near "INT" at character 27
2023-01-16 21:44:39.654 GMT [98554] STATEMENT:  DECLARE online_account_id INT;
2023-01-16 21:44:39.655 GMT [98554] ERROR:  syntax error at or near "INT" at character 28
2023-01-16 21:44:39.655 GMT [98554] STATEMENT:  DECLARE question_choice_id INT;
2023-01-16 21:44:39.655 GMT [98554] ERROR:  syntax error at or near "IF" at character 11
2023-01-16 21:44:39.655 GMT [98554] STATEMENT:  BEGIN
	    IF NOT EXISTS (SELECT FROM user_login WHERE username = username) THEN
	        INSERT INTO online_account (date_opened, sort_code, customer_id)
	        VALUES ((SELECT now()), (SELECT num FROM GENERATE_SERIES(1, 6) AS s(num) LIMIT 1), customer_id)
	        RETURNING id INTO account_id;
2023-01-16 21:44:39.655 GMT [98554] ERROR:  syntax error at or near "INTO" at character 131
2023-01-16 21:44:39.655 GMT [98554] STATEMENT:  INSERT INTO user_login (account_id, username, password)
	        VALUES (account_id, username, md5(password))
	        RETURNING id INTO online_account_id;
2023-01-16 21:44:39.655 GMT [98554] ERROR:  syntax error at or near "FOR" at character 1
2023-01-16 21:44:39.655 GMT [98554] STATEMENT:  FOR i IN 0..2 LOOP
	            
	            INSERT INTO user_login_security_question (question_choice_id, login_id)
	            VALUES (question_choice_ids[i], online_account_id)
	            RETURNING id INTO question_choice_id;
2023-01-16 21:44:39.655 GMT [98554] ERROR:  column "answer" of relation "security_question_answer" does not exist at character 39
2023-01-16 21:44:39.655 GMT [98554] STATEMENT:  INSERT INTO security_question_answer (answer, question_id)
	            VALUES (question_answers[i], question_choice_id);
2023-01-16 21:44:39.655 GMT [98554] ERROR:  syntax error at or near "LOOP" at character 5
2023-01-16 21:44:39.655 GMT [98554] STATEMENT:  END LOOP;
2023-01-16 21:44:39.656 GMT [98554] ERROR:  column "account_id" does not exist at character 117
2023-01-16 21:44:39.656 GMT [98554] HINT:  There is a column named "account_id" in table "authentication_log", but it cannot be referenced from this part of the query.
2023-01-16 21:44:39.656 GMT [98554] STATEMENT:  INSERT INTO authentication_log (log_description, log_date, account_id) VALUES ('New online account created', now(), account_id);
2023-01-16 21:44:39.656 GMT [98554] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 21:44:39.656 GMT [98554] STATEMENT:  RETURN account_id;
2023-01-16 21:44:39.656 GMT [98554] ERROR:  syntax error at or near "ELSE" at character 1
2023-01-16 21:44:39.656 GMT [98554] STATEMENT:  ELSE
	        RAISE NOTICE 'USERNAME ALREADY TAKEN';
2023-01-16 21:44:39.657 GMT [98554] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 21:44:39.657 GMT [98554] STATEMENT:  RETURN NULL;
2023-01-16 21:44:39.657 GMT [98554] ERROR:  syntax error at or near "IF" at character 5
2023-01-16 21:44:39.657 GMT [98554] STATEMENT:  END IF;
2023-01-16 21:44:39.657 GMT [98554] ERROR:  syntax error at or near "RETURN" at character 1
2023-01-16 21:44:39.657 GMT [98554] STATEMENT:  RETURN success;
2023-01-16 21:44:39.657 GMT [98554] WARNING:  there is no transaction in progress
2023-01-16 21:44:39.658 GMT [98554] ERROR:  unterminated dollar-quoted string at or near "$$ LANGUAGE plpgsql;
	
	
	
	
	
	-- sample data for customers
	INSERT INTO customer (first_name, last_name, date_of_birth, phone_number, email_address, address_street, address_city, address_county, address_postcode)
	VALUES ('John', 'Smith', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('Jane', 'Doe', '1990-01-01', '01234567890', 'test@gmail.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Bloggs', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('John', 'Bloggs', '1990-01-01', '01234567890', 'hello@yahoo.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('Jane', 'Bloggs', '1990-01-01', '01234567890', 'test@outlook.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Doe', '1990-01-01', '01234567890', 'hello@outlook.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('John', 'Doe', '1990-01-01', '01234567890', 'mybankemail@icloud.com', '1 My Bank Street', 'My Bank City', 'My Bank County', 'MB1 1NK'),
	('Jane', 'Smith', '1990-01-01', '01234567890', 'bankemail@outlook.com', '1 Bank Street', 'Bank City', 'Bank County', 'BA1 1NK'),
	('Joe', 'Smith', '1990-01-01', '01234567890', 'example@icloud.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX');
	
	-- sample data for online account
	INSERT INTO online_account (date_opened, sort_code, customer_id)
	VALUES ('2020-01-01', '123456', 1),
	('2019-01-01', '126485', 2),
	('2018-01-01', '128475', 3),
	('2017-01-01', '129476', 4),
	('2016-01-01', '120386', 5),
	('2017-02-03', '127385', 6),
	('2018-02-04', '128256', 7),
	('2020-01-01', '129386', 8),
	('2020-01-01', '120386', 9);
	
	-- sample data for user login
	INSERT INTO user_login (account_id, username, password)
	VALUES (1, 'johnsmith', 'b29af57c2b3bba21e9df0cece40952c6'),
	(2, 'janedoe', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(3, 'joebloggs', 'b29af57c2b3bba21e9df0cece40952c6'),
	(4, 'johnbloggs', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(5, 'janebloggs', 'b29af57c2b3bba21e9df0cece40952c6'),
	(6, 'joedoe', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(7, 'johndoe', 'b29af57c2b3bba21e9df0cece40952c6'),
	(8, 'joesmith', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(9, 'janesmith', 'b29af57c2b3bba21e9df0cece40952c6');
	
	-- sample data for security question option
	INSERT INTO security_question_option (question_description)
	VALUES ('What is your favourite colour?'),
	('What is your favourite food?'),
	('What is your favourite animal?'),
	('What is your favourite sport?'),
	('What is your favourite movie?'),
	('What is your favourite book?'),
	('What is your favourite song?'),
	('What is your favourite band?'),
	('What is your favourite game?'),
	('What is your favourite TV show?');
	
	--sample data for user login security question
	INSERT INTO user_login_security_question (question_choice_id, login_id)
	VALUES (1, 1),
	(2, 2),
	(3, 3),
	(4, 4),
	(5, 5),
	(6, 6),
	(7, 7),
	(8, 8),
	(9, 9);
	
	-- sample data for security question answer
	INSERT INTO security_question_answer (question_answer, question_id)
	VALUES ('Red', 1),
	('Blue', 2),
	('Green', 3),
	('Yellow', 4),
	('Orange', 5),
	('Purple', 6),
	('Pink', 7),
	('Black', 8),
	('White', 9);
	
	SELECT * FROM savings_statement;
	
	
	SELECT * FROM client.open_savings_account(1);
	
	--sample data for savings account
	SELECT * FROM client.open_savings_account(1);
	SELECT * FROM client.open_savings_account(2);
	SELECT * FROM client.open_savings_account(3);
	SELECT * FROM client.open_savings_account(4);
	
	SELECT * FROM client.open_debit_account(1);
	SELECT * FROM client.open_debit_account(2);
	SELECT * FROM client.open_debit_account(3);
	SELECT * FROM client.open_debit_account(4);
	
	SELECT * FROM client.open_credit_account(1);
	SELECT * FROM client.open_credit_account(2);
	SELECT * FROM client.open_credit_account(3);
	SELECT * FROM client.open_credit_account(4);
	
	SELECT * FROM client.view_accounts(1);
	
	SELECT * FROM transaction;
	
	SELECT * FROM client.initiate_transfer(1, 10000001, 100.00, 20000000, 123456);
	
	SELECT * FROM pending_transaction;
	
	
	--SELECT * FROM bank.verify_transaction(1);
	
	
	SELECT * FROM client.view_accounts(1);
	
	
	SELECT * FROM savings_statement;
	
	-- -- sample data for savings account
	-- INSERT INTO savings_account (current_balance, interest_rate, account_id)
	-- VALUES (2000.00, 2.05, 1),
	-- (1000.00, 2.05, 2),
	-- (5000.00, 2.05, 3),
	-- (10000.00, 2.05, 4),
	-- (20000.00, 2.05, 5),
	-- (50000.00, 2.05, 6),
	-- (100000.00, 2.05, 7),
	-- (200000.00, 2.05, 8);
	
	-- -- sample data for credit account
	-- INSERT INTO credit_account (outstanding_balance, credit_limit, interest_rate, account_id)
	-- VALUES (55.43, 2000.00, 4.22, 1),
	-- (100.00, 1000.00, 4.22, 2),
	-- (200.00, 5000.00, 4.22, 3),
	-- (300.00, 10000.00, 4.22, 4),
	-- (400.00, 20000.00, 4.22, 5),
	-- (500.00, 50000.00, 4.22, 6),
	-- (600.00, 100000.00, 4.22, 7),
	-- (700.00, 200000.00, 4.22, 8);
	
	-- -- sample data for debit account
	-- INSERT INTO debit_account (current_balance, interest_rate, account_id)
	-- VALUES (3465.43, 0.05, 1),
	-- (1000.00, 0.05, 1),
	-- (5000.00, 0.05, 2),
	-- (10000.00, 0.05, 3),
	-- (20000.00, 0.05, 4),
	-- (50000.00, 0.05, 5),
	-- (100000.00, 0.05, 6),
	-- (200000.00, 0.05, 9);
	
	-- -- sample data for loan
	-- INSERT INTO loan (loan_end_date, loan_amount, loan_type, account_id)
	-- VALUES ('2024-01-01', 10000, 'vehicle', 8),
	-- ('2023-03-04', 300000, 'mortgage', 8),
	-- ('2035-03-03', 400000, 'mortgage', 1),
	-- ('2025-04-05', 25000, 'vehicle', 1),
	-- ('2026-05-05', 34000, 'vehicle', 1),
	-- ('2023-06-07', 500000, 'mortgage', 2),
	-- ('2026-04-04', 60000, 'vehicle', 2),
	-- ('2024-03-03', 70000, 'vehicle', 2),
	-- ('2023-02-02', 800000, 'mortgage', 3),
	-- ('2022-01-01', 90000, 'vehicle', 3),
	-- ('2021-01-01', 100000, 'vehicle', 3),
	-- ('2020-01-01', 110000, 'mortgage', 4),
	-- ('2020-01-01', 12000, 'vehicle', 4),
	-- ('2020-01-01', 13000, 'vehicle', 4),
	-- ('2020-01-01', 140000, 'mortgage', 5),
	-- ('2020-01-01', 15000, 'vehicle', 5),
	-- ('2020-01-01', 16000, 'vehicle', 5),
	-- ('2020-01-01', 170000, 'mortgage', 6),
	-- ('2020-01-01', 18000, 'vehicle', 6),
	-- ('2020-01-01', 19000, 'vehicle', 6),
	-- ('2020-01-01', 200000, 'mortgage', 7),
	-- ('2020-01-01', 21000, 'vehicle', 7),
	-- ('2020-01-01', 22000, 'vehicle', 7);
	
	-- CREATE SCHEMA IF NOT EXISTS staff;
	
	-- SET search_path TO public, staff;" at character 1
2023-01-16 21:44:39.658 GMT [98554] STATEMENT:  $$ LANGUAGE plpgsql;
	
	
	
	
	
	-- sample data for customers
	INSERT INTO customer (first_name, last_name, date_of_birth, phone_number, email_address, address_street, address_city, address_county, address_postcode)
	VALUES ('John', 'Smith', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('Jane', 'Doe', '1990-01-01', '01234567890', 'test@gmail.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Bloggs', '1990-01-01', '01234567890', 'example@gmail.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX'),
	('John', 'Bloggs', '1990-01-01', '01234567890', 'hello@yahoo.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('Jane', 'Bloggs', '1990-01-01', '01234567890', 'test@outlook.com', '1 Test Street', 'Test City', 'Test County', 'TE1 1ST'),
	('Joe', 'Doe', '1990-01-01', '01234567890', 'hello@outlook.com', '1 Hello Street', 'Hello City', 'Hello County', 'HE1 1LO'),
	('John', 'Doe', '1990-01-01', '01234567890', 'mybankemail@icloud.com', '1 My Bank Street', 'My Bank City', 'My Bank County', 'MB1 1NK'),
	('Jane', 'Smith', '1990-01-01', '01234567890', 'bankemail@outlook.com', '1 Bank Street', 'Bank City', 'Bank County', 'BA1 1NK'),
	('Joe', 'Smith', '1990-01-01', '01234567890', 'example@icloud.com', '1 Example Street', 'Example City', 'Example County', 'EX1 1EX');
	
	-- sample data for online account
	INSERT INTO online_account (date_opened, sort_code, customer_id)
	VALUES ('2020-01-01', '123456', 1),
	('2019-01-01', '126485', 2),
	('2018-01-01', '128475', 3),
	('2017-01-01', '129476', 4),
	('2016-01-01', '120386', 5),
	('2017-02-03', '127385', 6),
	('2018-02-04', '128256', 7),
	('2020-01-01', '129386', 8),
	('2020-01-01', '120386', 9);
	
	-- sample data for user login
	INSERT INTO user_login (account_id, username, password)
	VALUES (1, 'johnsmith', 'b29af57c2b3bba21e9df0cece40952c6'),
	(2, 'janedoe', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(3, 'joebloggs', 'b29af57c2b3bba21e9df0cece40952c6'),
	(4, 'johnbloggs', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(5, 'janebloggs', 'b29af57c2b3bba21e9df0cece40952c6'),
	(6, 'joedoe', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(7, 'johndoe', 'b29af57c2b3bba21e9df0cece40952c6'),
	(8, 'joesmith', 'ee02f771bbeb15b28ccd7bbd68faf193'),
	(9, 'janesmith', 'b29af57c2b3bba21e9df0cece40952c6');
	
	-- sample data for security question option
	INSERT INTO security_question_option (question_description)
	VALUES ('What is your favourite colour?'),
	('What is your favourite food?'),
	('What is your favourite animal?'),
	('What is your favourite sport?'),
	('What is your favourite movie?'),
	('What is your favourite book?'),
	('What is your favourite song?'),
	('What is your favourite band?'),
	('What is your favourite game?'),
	('What is your favourite TV show?');
	
	--sample data for user login security question
	INSERT INTO user_login_security_question (question_choice_id, login_id)
	VALUES (1, 1),
	(2, 2),
	(3, 3),
	(4, 4),
	(5, 5),
	(6, 6),
	(7, 7),
	(8, 8),
	(9, 9);
	
	-- sample data for security question answer
	INSERT INTO security_question_answer (question_answer, question_id)
	VALUES ('Red', 1),
	('Blue', 2),
	('Green', 3),
	('Yellow', 4),
	('Orange', 5),
	('Purple', 6),
	('Pink', 7),
	('Black', 8),
	('White', 9);
	
	SELECT * FROM savings_statement;
	
	
	SELECT * FROM client.open_savings_account(1);
	
	--sample data for savings account
	SELECT * FROM client.open_savings_account(1);
	SELECT * FROM client.open_savings_account(2);
	SELECT * FROM client.open_savings_account(3);
	SELECT * FROM client.open_savings_account(4);
	
	SELECT * FROM client.open_debit_account(1);
	SELECT * FROM client.open_debit_account(2);
	SELECT * FROM client.open_debit_account(3);
	SELECT * FROM client.open_debit_account(4);
	
	SELECT * FROM client.open_credit_account(1);
	SELECT * FROM client.open_credit_account(2);
	SELECT * FROM client.open_credit_account(3);
	SELECT * FROM client.open_credit_account(4);
	
	SELECT * FROM client.view_accounts(1);
	
	SELECT * FROM transaction;
	
	SELECT * FROM client.initiate_transfer(1, 10000001, 100.00, 20000000, 123456);
	
	SELECT * FROM pending_transaction;
	
	
	--SELECT * FROM bank.verify_transaction(1);
	
	
	SELECT * FROM client.view_accounts(1);
	
	
	SELECT * FROM savings_statement;
	
	-- -- sample data for savings account
	-- INSERT INTO savings_account (current_balance, interest_rate, account_id)
	-- VALUES (2000.00, 2.05, 1),
	-- (1000.00, 2.05, 2),
	-- (5000.00, 2.05, 3),
	-- (10000.00, 2.05, 4),
	-- (20000.00, 2.05, 5),
	-- (50000.00, 2.05, 6),
	-- (100000.00, 2.05, 7),
	-- (200000.00, 2.05, 8);
	
	-- -- sample data for credit account
	-- INSERT INTO credit_account (outstanding_balance, credit_limit, interest_rate, account_id)
	-- VALUES (55.43, 2000.00, 4.22, 1),
	-- (100.00, 1000.00, 4.22, 2),
	-- (200.00, 5000.00, 4.22, 3),
	-- (300.00, 10000.00, 4.22, 4),
	-- (400.00, 20000.00, 4.22, 5),
	-- (500.00, 50000.00, 4.22, 6),
	-- (600.00, 100000.00, 4.22, 7),
	-- (700.00, 200000.00, 4.22, 8);
	
	-- -- sample data for debit account
	-- INSERT INTO debit_account (current_balance, interest_rate, account_id)
	-- VALUES (3465.43, 0.05, 1),
	-- (1000.00, 0.05, 1),
	-- (5000.00, 0.05, 2),
	-- (10000.00, 0.05, 3),
	-- (20000.00, 0.05, 4),
	-- (50000.00, 0.05, 5),
	-- (100000.00, 0.05, 6),
	-- (200000.00, 0.05, 9);
	
	-- -- sample data for loan
	-- INSERT INTO loan (loan_end_date, loan_amount, loan_type, account_id)
	-- VALUES ('2024-01-01', 10000, 'vehicle', 8),
	-- ('2023-03-04', 300000, 'mortgage', 8),
	-- ('2035-03-03', 400000, 'mortgage', 1),
	-- ('2025-04-05', 25000, 'vehicle', 1),
	-- ('2026-05-05', 34000, 'vehicle', 1),
	-- ('2023-06-07', 500000, 'mortgage', 2),
	-- ('2026-04-04', 60000, 'vehicle', 2),
	-- ('2024-03-03', 70000, 'vehicle', 2),
	-- ('2023-02-02', 800000, 'mortgage', 3),
	-- ('2022-01-01', 90000, 'vehicle', 3),
	-- ('2021-01-01', 100000, 'vehicle', 3),
	-- ('2020-01-01', 110000, 'mortgage', 4),
	-- ('2020-01-01', 12000, 'vehicle', 4),
	-- ('2020-01-01', 13000, 'vehicle', 4),
	-- ('2020-01-01', 140000, 'mortgage', 5),
	-- ('2020-01-01', 15000, 'vehicle', 5),
	-- ('2020-01-01', 16000, 'vehicle', 5),
	-- ('2020-01-01', 170000, 'mortgage', 6),
	-- ('2020-01-01', 18000, 'vehicle', 6),
	-- ('2020-01-01', 19000, 'vehicle', 6),
	-- ('2020-01-01', 200000, 'mortgage', 7),
	-- ('2020-01-01', 21000, 'vehicle', 7),
	-- ('2020-01-01', 22000, 'vehicle', 7);
	
	-- CREATE SCHEMA IF NOT EXISTS staff;
	
	-- SET search_path TO public, staff;
2023-01-16 21:46:04.532 GMT [98528] LOG:  received fast shutdown request
2023-01-16 21:46:04.534 GMT [98528] LOG:  aborting any active transactions
2023-01-16 21:46:04.541 GMT [98528] LOG:  background worker "logical replication launcher" (PID 98535) exited with exit code 1
2023-01-16 21:46:04.544 GMT [98530] LOG:  shutting down
2023-01-16 21:46:04.590 GMT [98528] LOG:  database system is shut down
2023-01-16 21:46:05.872 GMT [98877] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 21:46:05.873 GMT [98877] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 21:46:05.875 GMT [98877] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 21:46:05.880 GMT [98878] LOG:  database system was shut down at 2023-01-16 21:46:05 GMT
2023-01-16 21:46:05.887 GMT [98877] LOG:  database system is ready to accept connections
2023-01-16 21:46:06.758 GMT [98903] ERROR:  syntax error at or near ";" at character 3006
2023-01-16 21:46:06.758 GMT [98903] STATEMENT:  CREATE OR REPLACE FUNCTION bank.verify_and_update_transaction_amounts(pending_transaction_id INT, is_transfer BOOLEAN, is_loan_payment BOOLEAN)
	RETURNS BOOLEAN AS $$
	DECLARE transaction_approved BOOLEAN;
	DECLARE account_type TEXT;
	BEGIN
	
	    
	    IF EXISTS (SELECT * FROM bank.accounts WHERE account_number = (SELECT dest_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id) AND sort_code = (SELECT sort_code FROM bank.pending_transactions WHERE id = pending_transaction_id)) THEN
	        RAISE NOTICE 'INTERNAL TRANSFER OCCURING';
	
	        IF is_loan_payment = TRUE THEN
	            IF bank.update_loan_amounts((SELECT dest_account_id FROM transaction WHERE id = pending_transaction_id), (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id)) = TRUE THEN
	                IF bank.update_balance_amounts((SELECT origin_account_id FROM transaction WHERE id = pending_transaction_id), (SELECT SUM(amount*-1) FROM bank.pending_transactions WHERE id = pending_transaction_id)) = TRUE THEN
	                    transaction_approved = TRUE;
	                ELSE
	                    transaction_approved = FALSE;
	                END IF;
	            ELSE
	                transaction_approved = FALSE;
	            END IF;
	
	            DELETE FROM pending_transaction WHERE id = pending_transaction_id;
	
	        IF is_transfer = TRUE THEN
	            IF bank.update_balance_amounts((SELECT origin_account_id FROM transaction WHERE id = pending_transaction_id), (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id)) = TRUE THEN
	                IF bank.update_balance_amounts((SELECT dest_account_id FROM transaction WHERE id = pending_transaction_id), (SELECT SUM(amount*-1) FROM bank.pending_transactions WHERE id = pending_transaction_id)) THEN
	                    transaction_approved = TRUE;
	                END IF;
	            ELSE
	                transaction_approved = FALSE;
	            END IF;
	
	            DELETE FROM pending_transaction WHERE id = pending_transaction_id;
	
	        ELSE
	            IF bank.update_balance_amounts((SELECT origin_account_id FROM transaction WHERE id = pending_transaction_id), (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id)) = TRUE THEN
	                transaction_approved = TRUE;
	            ELSE
	                transaction_approved = FALSE;
	            END IF;
	
	            DELETE FROM pending_transaction WHERE id = pending_transaction_id;
	        END IF;
	    ELSE
	        RAISE NOTICE 'EXTERNAL TRANSFER OCCURING';
	        IF bank.update_balance_amounts((SELECT origin_account_id FROM transaction WHERE id = pending_transaction_id), (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id)) THEN
	            transaction_approved = TRUE;
	        ELSE
	            transaction_approved = FALSE;
	        DELETE FROM pending_transaction WHERE id = pending_transaction_id;
	        END IF;
	    END IF;
	
	
	    RETURN transaction_approved;
	END;
	$$ LANGUAGE plpgsql;
2023-01-16 21:46:06.914 GMT [98903] ERROR:  function client.place_transaction_into_account(integer, integer, integer, numeric, integer) does not exist at character 15
2023-01-16 21:46:06.914 GMT [98903] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2023-01-16 21:46:06.914 GMT [98903] QUERY:  SELECT * FROM client.place_transaction_into_account(account_identifier, orig_account_number, transfer_account_number, transfer_amount, transfer_account_sort_code)
2023-01-16 21:46:06.914 GMT [98903] CONTEXT:  PL/pgSQL function initiate_transfer(integer,integer,numeric,integer,integer) line 8 at SQL statement
2023-01-16 21:46:06.914 GMT [98903] STATEMENT:  SELECT * FROM client.initiate_transfer(1, 10000001, 100.00, 20000000, 123456);
2023-01-16 21:48:36.574 GMT [98877] LOG:  received fast shutdown request
2023-01-16 21:48:36.577 GMT [98877] LOG:  aborting any active transactions
2023-01-16 21:48:36.581 GMT [98877] LOG:  background worker "logical replication launcher" (PID 98884) exited with exit code 1
2023-01-16 21:48:36.581 GMT [98879] LOG:  shutting down
2023-01-16 21:48:36.630 GMT [98877] LOG:  database system is shut down
2023-01-16 21:48:37.915 GMT [99404] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 21:48:37.916 GMT [99404] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 21:48:37.918 GMT [99404] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 21:48:37.923 GMT [99405] LOG:  database system was shut down at 2023-01-16 21:48:37 GMT
2023-01-16 21:48:37.929 GMT [99404] LOG:  database system is ready to accept connections
2023-01-16 21:48:39.007 GMT [99443] ERROR:  function client.place_transaction_into_account(integer, integer, integer, numeric, integer) does not exist at character 15
2023-01-16 21:48:39.007 GMT [99443] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2023-01-16 21:48:39.007 GMT [99443] QUERY:  SELECT * FROM client.place_transaction_into_account(account_identifier, orig_account_number, transfer_account_number, transfer_amount, transfer_account_sort_code)
2023-01-16 21:48:39.007 GMT [99443] CONTEXT:  PL/pgSQL function initiate_transfer(integer,integer,numeric,integer,integer) line 8 at SQL statement
2023-01-16 21:48:39.007 GMT [99443] STATEMENT:  SELECT * FROM client.initiate_transfer(1, 10000001, 100.00, 20000000, 123456);
2023-01-16 21:50:30.462 GMT [99404] LOG:  received fast shutdown request
2023-01-16 21:50:30.465 GMT [99404] LOG:  aborting any active transactions
2023-01-16 21:50:30.470 GMT [99404] LOG:  background worker "logical replication launcher" (PID 99411) exited with exit code 1
2023-01-16 21:50:30.473 GMT [99406] LOG:  shutting down
2023-01-16 21:50:30.523 GMT [99404] LOG:  database system is shut down
2023-01-16 21:50:31.894 GMT [99840] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 21:50:31.894 GMT [99840] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 21:50:31.896 GMT [99840] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 21:50:31.900 GMT [99843] LOG:  database system was shut down at 2023-01-16 21:50:31 GMT
2023-01-16 21:50:31.907 GMT [99840] LOG:  database system is ready to accept connections
2023-01-16 21:50:33.055 GMT [99891] ERROR:  INSERT has more expressions than target columns at character 114
2023-01-16 21:50:33.055 GMT [99891] QUERY:  INSERT INTO pending_transaction (id, account_id, is_transfer) VALUES (transaction_id, orig_account_number, true, is_loan_payment)
2023-01-16 21:50:33.055 GMT [99891] CONTEXT:  PL/pgSQL function place_transaction_into_account(integer,integer,integer,numeric,integer,boolean) line 27 at SQL statement
	SQL statement "SELECT * FROM client.place_transaction_into_account(account_identifier, orig_account_number, transfer_account_number, transfer_amount, transfer_account_sort_code, FALSE)"
	PL/pgSQL function initiate_transfer(integer,integer,numeric,integer,integer) line 8 at SQL statement
2023-01-16 21:50:33.055 GMT [99891] STATEMENT:  SELECT * FROM client.initiate_transfer(1, 10000001, 100.00, 20000000, 123456);
2023-01-16 21:52:18.555 GMT [99840] LOG:  received fast shutdown request
2023-01-16 21:52:18.559 GMT [99840] LOG:  aborting any active transactions
2023-01-16 21:52:18.564 GMT [99840] LOG:  background worker "logical replication launcher" (PID 99849) exited with exit code 1
2023-01-16 21:52:18.564 GMT [99844] LOG:  shutting down
2023-01-16 21:52:18.620 GMT [99840] LOG:  database system is shut down
2023-01-16 21:52:19.965 GMT [100291] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 21:52:19.966 GMT [100291] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 21:52:19.968 GMT [100291] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 21:52:19.975 GMT [100295] LOG:  database system was shut down at 2023-01-16 21:52:19 GMT
2023-01-16 21:52:19.981 GMT [100291] LOG:  database system is ready to accept connections
2023-01-16 21:52:20.949 GMT [100330] ERROR:  syntax error at or near "," at character 3037
2023-01-16 21:52:20.949 GMT [100330] STATEMENT:  CREATE OR REPLACE FUNCTION client.place_transaction_into_account(account_identifier INT, orig_account_number INT, transaction_account_number INT, transaction_amount NUMERIC, transfer_account_sort_code INT, loan_payment BOOLEAN)
	RETURNS BOOLEAN AS $$
	DECLARE passed BOOLEAN;
	DECLARE statement_id INT;
	DECLARE transaction_id INT;
	BEGIN
	    INSERT INTO management_log (account_id, log_description, log_date) VALUES (account_identifier, 'Placed transaction into account', CURRENT_DATE);
	
	    CASE WHEN EXISTS (SELECT * FROM client.debit_accounts WHERE account_id = account_identifier AND account_number = orig_account_number) THEN
	        --UPDATE debit_account SET current_balance = current_balance - transaction_amount WHERE debit_account.account_number = orig_account_number;
	        SELECT * FROM client.get_or_create_statement(account_identifier, orig_account_number) INTO statement_id;
	        INSERT INTO transaction (origin_account_id, dest_account_id, amount, date, debit_statement_id, dest_account_sort_code, approved)
	        VALUES (orig_account_number, transaction_account_number, transaction_amount, now(), statement_id, transfer_account_sort_code, FALSE) RETURNING id INTO transaction_id;
	        INSERT INTO pending_transaction (id, account_id, is_transfer, is_loan_payment) VALUES (transaction_id, orig_account_number, true, loan_payment);
	
	    WHEN EXISTS (SELECT * FROM client.credit_accounts WHERE account_id = account_identifier AND account_number = orig_account_number) THEN
	        --UPDATE credit_account SET outstanding_balance = outstanding_balance - transaction_amount WHERE credit_account.account_number = orig_account_number;
	        SELECT * FROM client.get_or_create_statement(account_identifier, orig_account_number) INTO statement_id;
	        INSERT INTO transaction (origin_account_id, dest_account_id, amount, date, credit_statement_id, dest_account_sort_code, approved)
	        VALUES (orig_account_number, transaction_account_number, transaction_amount, now(), statement_id, transfer_account_sort_code, FALSE) RETURNING id INTO transaction_id;
	        INSERT INTO pending_transaction (id, account_id, is_transfer, is_loan_payment) VALUES (transaction_id, orig_account_number, true, loan_payment);
	
	    WHEN EXISTS (SELECT * FROM client.savings_accounts WHERE account_id = account_identifier AND account_number = orig_account_number) THEN
	        --UPDATE savings_account SET current_balance = current_balance - transaction_amount WHERE savings_account.account_number = orig_account_number;
	        SELECT * FROM client.get_or_create_statement(account_identifier, orig_account_number) INTO statement_id;
	        INSERT INTO transaction (origin_account_id, dest_account_id, amount, date, savings_statement_id, dest_account_sort_code, approved)
	        VALUES (orig_account_number, transaction_account_number, transaction_amount, now(), statement_id, transfer_account_sort_code, FALSE) RETURNING id INTO transaction_id;
	        INSERT INTO pending_transaction (id, account_id, is_transfer, is_loan_payment), VALUES (transaction_id, orig_account_number, true, loan_payment);
	    ELSE
	        RAISE NOTICE 'Account does not exist';
	        RETURN FALSE;
	    END CASE;
	    RETURN TRUE;
	END;
	$$ LANGUAGE plpgsql;
2023-01-16 21:52:21.021 GMT [100330] ERROR:  function client.place_transaction_into_account(integer, integer, integer, numeric, integer, boolean) does not exist at character 15
2023-01-16 21:52:21.021 GMT [100330] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2023-01-16 21:52:21.021 GMT [100330] QUERY:  SELECT * FROM client.place_transaction_into_account(account_identifier, orig_account_number, transfer_account_number, transfer_amount, transfer_account_sort_code, FALSE)
2023-01-16 21:52:21.021 GMT [100330] CONTEXT:  PL/pgSQL function initiate_transfer(integer,integer,numeric,integer,integer) line 8 at SQL statement
2023-01-16 21:52:21.021 GMT [100330] STATEMENT:  SELECT * FROM client.initiate_transfer(1, 10000001, 100.00, 20000000, 123456);
2023-01-16 21:52:45.167 GMT [100291] LOG:  received fast shutdown request
2023-01-16 21:52:45.169 GMT [100291] LOG:  aborting any active transactions
2023-01-16 21:52:45.171 GMT [100291] LOG:  background worker "logical replication launcher" (PID 100301) exited with exit code 1
2023-01-16 21:52:45.178 GMT [100296] LOG:  shutting down
2023-01-16 21:52:45.234 GMT [100291] LOG:  database system is shut down
2023-01-16 21:52:46.710 GMT [100481] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 21:52:46.710 GMT [100481] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 21:52:46.712 GMT [100481] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 21:52:46.717 GMT [100482] LOG:  database system was shut down at 2023-01-16 21:52:46 GMT
2023-01-16 21:52:46.726 GMT [100481] LOG:  database system is ready to accept connections
2023-01-16 21:55:32.532 GMT [100481] LOG:  received fast shutdown request
2023-01-16 21:55:32.533 GMT [100481] LOG:  aborting any active transactions
2023-01-16 21:55:32.537 GMT [100481] LOG:  background worker "logical replication launcher" (PID 100488) exited with exit code 1
2023-01-16 21:55:32.542 GMT [100483] LOG:  shutting down
2023-01-16 21:55:32.602 GMT [100481] LOG:  database system is shut down
2023-01-16 21:55:33.887 GMT [101089] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 21:55:33.887 GMT [101089] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 21:55:33.889 GMT [101089] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 21:55:33.895 GMT [101090] LOG:  database system was shut down at 2023-01-16 21:55:33 GMT
2023-01-16 21:55:33.902 GMT [101089] LOG:  database system is ready to accept connections
2023-01-16 21:55:34.778 GMT [101117] ERROR:  syntax error at or near ";" at character 2928
2023-01-16 21:55:34.778 GMT [101117] STATEMENT:  CREATE OR REPLACE FUNCTION bank.verify_and_update_transaction_amounts(pending_transaction_id INT, is_transfer BOOLEAN, is_loan_payment BOOLEAN)
	RETURNS BOOLEAN AS $$
	DECLARE transaction_approved BOOLEAN;
	DECLARE account_type TEXT;
	BEGIN
	
	    
	    IF EXISTS (SELECT * FROM bank.accounts WHERE account_number = (SELECT dest_account_id FROM bank.pending_transactions WHERE id = pending_transaction_id) AND sort_code = (SELECT sort_code FROM bank.pending_transactions WHERE id = pending_transaction_id)) THEN
	        RAISE NOTICE 'INTERNAL TRANSFER OCCURING';
	
	        IF is_loan_payment = TRUE THEN
	            IF bank.update_balance_amounts((SELECT origin_account_id FROM transaction WHERE id = pending_transaction_id), (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id)) = TRUE THEN
	                IF bank.update_loan_amounts((SELECT dest_account_id FROM transaction WHERE id = pending_transaction_id), (SELECT SUM(amount*-1) FROM bank.pending_transactions WHERE id = pending_transaction_id)) THEN
	                    transaction_approved = TRUE;
	                END IF;
	            ELSE
	                transaction_approved = FALSE;
	            END IF;
	
	            DELETE FROM pending_transaction WHERE id = pending_transaction_id;
	
	        IF is_transfer = TRUE THEN
	            IF bank.update_balance_amounts((SELECT origin_account_id FROM transaction WHERE id = pending_transaction_id), (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id)) = TRUE THEN
	                IF bank.update_balance_amounts((SELECT dest_account_id FROM transaction WHERE id = pending_transaction_id), (SELECT SUM(amount*-1) FROM bank.pending_transactions WHERE id = pending_transaction_id)) THEN
	                    transaction_approved = TRUE;
	                END IF;
	            ELSE
	                transaction_approved = FALSE;
	            END IF;
	
	            DELETE FROM pending_transaction WHERE id = pending_transaction_id;
	
	        ELSE
	            IF bank.update_balance_amounts((SELECT origin_account_id FROM transaction WHERE id = pending_transaction_id), (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id)) = TRUE THEN
	                transaction_approved = TRUE;
	            ELSE
	                transaction_approved = FALSE;
	            END IF;
	
	            DELETE FROM pending_transaction WHERE id = pending_transaction_id;
	        END IF;
	    ELSE
	        RAISE NOTICE 'EXTERNAL TRANSFER OCCURING';
	        IF bank.update_balance_amounts((SELECT origin_account_id FROM transaction WHERE id = pending_transaction_id), (SELECT amount FROM bank.pending_transactions WHERE id = pending_transaction_id)) THEN
	            transaction_approved = TRUE;
	        ELSE
	            transaction_approved = FALSE;
	        DELETE FROM pending_transaction WHERE id = pending_transaction_id;
	        END IF;
	    END IF;
	
	
	    RETURN transaction_approved;
	END;
	$$ LANGUAGE plpgsql;
2023-01-16 21:55:34.947 GMT [101117] ERROR:  function bank.verify_and_update_transaction_amounts(integer, boolean, boolean) does not exist at character 15
2023-01-16 21:55:34.947 GMT [101117] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2023-01-16 21:55:34.947 GMT [101117] QUERY:  SELECT * FROM bank.verify_and_update_transaction_amounts(pending_transaction_id, TRUE, FALSE)
2023-01-16 21:55:34.947 GMT [101117] CONTEXT:  PL/pgSQL function verify_transaction_type(integer) line 9 at SQL statement
	PL/pgSQL function verify_transaction(integer) line 6 at IF
	SQL statement "SELECT * FROM bank.verify_transaction(NEW.id)"
	PL/pgSQL function transaction_verification() line 5 at SQL statement
	SQL statement "INSERT INTO pending_transaction (id, account_id, is_transfer, is_loan_payment) VALUES (transaction_id, orig_account_number, true, loan_payment)"
	PL/pgSQL function place_transaction_into_account(integer,integer,integer,numeric,integer,boolean) line 27 at SQL statement
	SQL statement "SELECT * FROM client.place_transaction_into_account(account_identifier, orig_account_number, transfer_account_number, transfer_amount, transfer_account_sort_code, FALSE)"
	PL/pgSQL function initiate_transfer(integer,integer,numeric,integer,integer) line 8 at SQL statement
2023-01-16 21:55:34.947 GMT [101117] STATEMENT:  SELECT * FROM client.initiate_transfer(1, 10000001, 100.00, 20000000, 123456);
2023-01-16 21:55:53.578 GMT [101089] LOG:  received fast shutdown request
2023-01-16 21:55:53.580 GMT [101089] LOG:  aborting any active transactions
2023-01-16 21:55:53.586 GMT [101089] LOG:  background worker "logical replication launcher" (PID 101096) exited with exit code 1
2023-01-16 21:55:53.587 GMT [101091] LOG:  shutting down
2023-01-16 21:55:53.648 GMT [101089] LOG:  database system is shut down
2023-01-16 21:55:54.995 GMT [101257] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 21:55:54.995 GMT [101257] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 21:55:55.004 GMT [101257] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 21:55:55.038 GMT [101258] LOG:  database system was shut down at 2023-01-16 21:55:54 GMT
2023-01-16 21:55:55.044 GMT [101257] LOG:  database system is ready to accept connections
2023-01-16 22:00:21.317 GMT [101257] LOG:  received fast shutdown request
2023-01-16 22:00:21.320 GMT [101257] LOG:  aborting any active transactions
2023-01-16 22:00:21.326 GMT [101257] LOG:  background worker "logical replication launcher" (PID 101264) exited with exit code 1
2023-01-16 22:00:21.327 GMT [101259] LOG:  shutting down
2023-01-16 22:00:21.382 GMT [101257] LOG:  database system is shut down
2023-01-16 22:00:22.701 GMT [102165] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 22:00:22.701 GMT [102165] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 22:00:22.702 GMT [102165] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 22:00:22.708 GMT [102166] LOG:  database system was shut down at 2023-01-16 22:00:22 GMT
2023-01-16 22:00:22.714 GMT [102165] LOG:  database system is ready to accept connections
2023-01-16 22:00:23.711 GMT [102195] ERROR:  function client.open_loan(integer, numeric, integer, numeric) does not exist at character 15
2023-01-16 22:00:23.711 GMT [102195] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2023-01-16 22:00:23.711 GMT [102195] STATEMENT:  SELECT * FROM client.open_loan(1, 10000.00, 22-12-2025, 5.00);
2023-01-16 22:01:01.055 GMT [102165] LOG:  received fast shutdown request
2023-01-16 22:01:01.057 GMT [102165] LOG:  aborting any active transactions
2023-01-16 22:01:01.064 GMT [102165] LOG:  background worker "logical replication launcher" (PID 102172) exited with exit code 1
2023-01-16 22:01:01.066 GMT [102167] LOG:  shutting down
2023-01-16 22:01:01.119 GMT [102165] LOG:  database system is shut down
2023-01-16 22:01:02.320 GMT [102387] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 22:01:02.320 GMT [102387] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 22:01:02.322 GMT [102387] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 22:01:02.327 GMT [102388] LOG:  database system was shut down at 2023-01-16 22:01:02 GMT
2023-01-16 22:01:02.333 GMT [102387] LOG:  database system is ready to accept connections
2023-01-16 22:01:03.360 GMT [102416] ERROR:  function client.open_loan(integer, numeric, integer, unknown, numeric) does not exist at character 15
2023-01-16 22:01:03.360 GMT [102416] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2023-01-16 22:01:03.360 GMT [102416] STATEMENT:  SELECT * FROM client.open_loan(1, 10000.00, 22-12-2025, 'vehicle', 5.00);
2023-01-16 22:01:29.384 GMT [102387] LOG:  received fast shutdown request
2023-01-16 22:01:29.386 GMT [102387] LOG:  aborting any active transactions
2023-01-16 22:01:29.391 GMT [102387] LOG:  background worker "logical replication launcher" (PID 102394) exited with exit code 1
2023-01-16 22:01:29.394 GMT [102389] LOG:  shutting down
2023-01-16 22:01:29.452 GMT [102387] LOG:  database system is shut down
2023-01-16 22:01:30.705 GMT [102577] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 22:01:30.705 GMT [102577] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 22:01:30.707 GMT [102577] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 22:01:30.714 GMT [102578] LOG:  database system was shut down at 2023-01-16 22:01:30 GMT
2023-01-16 22:01:30.720 GMT [102577] LOG:  database system is ready to accept connections
2023-01-16 22:01:31.656 GMT [102607] ERROR:  function client.open_loan(integer, numeric, integer, text, numeric) does not exist at character 15
2023-01-16 22:01:31.656 GMT [102607] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2023-01-16 22:01:31.656 GMT [102607] STATEMENT:  SELECT * FROM client.open_loan(1, 10000.00, 22-12-2025, 'vehicle'::TEXT, 5.00);
2023-01-16 22:01:56.797 GMT [102577] LOG:  received fast shutdown request
2023-01-16 22:01:56.800 GMT [102577] LOG:  aborting any active transactions
2023-01-16 22:01:56.804 GMT [102577] LOG:  background worker "logical replication launcher" (PID 102584) exited with exit code 1
2023-01-16 22:01:56.804 GMT [102579] LOG:  shutting down
2023-01-16 22:01:56.869 GMT [102577] LOG:  database system is shut down
2023-01-16 22:01:58.128 GMT [102768] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 22:01:58.129 GMT [102768] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 22:01:58.130 GMT [102768] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 22:01:58.135 GMT [102769] LOG:  database system was shut down at 2023-01-16 22:01:57 GMT
2023-01-16 22:01:58.142 GMT [102768] LOG:  database system is ready to accept connections
2023-01-16 22:01:59.131 GMT [102797] ERROR:  function client.open_loan(integer, numeric, integer, text, numeric) does not exist at character 15
2023-01-16 22:01:59.131 GMT [102797] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2023-01-16 22:01:59.131 GMT [102797] STATEMENT:  SELECT * FROM client.open_loan(1, 10000.00, 22-12-2025, 'vehicle'::TEXT, 5.00);
2023-01-16 22:02:26.687 GMT [102768] LOG:  received fast shutdown request
2023-01-16 22:02:26.689 GMT [102768] LOG:  aborting any active transactions
2023-01-16 22:02:26.696 GMT [102768] LOG:  background worker "logical replication launcher" (PID 102775) exited with exit code 1
2023-01-16 22:02:26.697 GMT [102770] LOG:  shutting down
2023-01-16 22:02:26.761 GMT [102768] LOG:  database system is shut down
2023-01-16 22:02:28.170 GMT [102964] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 22:02:28.170 GMT [102964] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 22:02:28.172 GMT [102964] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 22:02:28.177 GMT [102965] LOG:  database system was shut down at 2023-01-16 22:02:27 GMT
2023-01-16 22:02:28.184 GMT [102964] LOG:  database system is ready to accept connections
2023-01-16 22:02:29.163 GMT [103000] ERROR:  cannot cast type integer to date at character 55
2023-01-16 22:02:29.163 GMT [103000] STATEMENT:  SELECT * FROM client.open_loan(1, 10000.00, 22-12-2025::DATE, 'vehicle'::TEXT, 5.00);
2023-01-16 22:02:40.760 GMT [102964] LOG:  received fast shutdown request
2023-01-16 22:02:40.761 GMT [102964] LOG:  aborting any active transactions
2023-01-16 22:02:40.768 GMT [102964] LOG:  background worker "logical replication launcher" (PID 102971) exited with exit code 1
2023-01-16 22:02:40.769 GMT [102966] LOG:  shutting down
2023-01-16 22:02:40.838 GMT [102964] LOG:  database system is shut down
2023-01-16 22:02:42.057 GMT [103131] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 22:02:42.057 GMT [103131] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 22:02:42.074 GMT [103131] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 22:02:42.082 GMT [103135] LOG:  database system was shut down at 2023-01-16 22:02:41 GMT
2023-01-16 22:02:42.089 GMT [103131] LOG:  database system is ready to accept connections
2023-01-16 22:02:43.031 GMT [103160] ERROR:  column "loan_amount" of relation "loan" does not exist at character 31
2023-01-16 22:02:43.031 GMT [103160] QUERY:  INSERT INTO loan (account_id, loan_amount, loan_end_date, loan_type, loan_interest_rate) VALUES (account_id, loan_amount, loan_end_date, loan_type, loan_interest_rate) RETURNING id
2023-01-16 22:02:43.031 GMT [103160] CONTEXT:  PL/pgSQL function client.open_loan(integer,numeric,date,text,numeric) line 6 at SQL statement
2023-01-16 22:02:43.031 GMT [103160] STATEMENT:  SELECT * FROM client.open_loan(1, 10000.00, '22-12-2025'::DATE, 'vehicle'::TEXT, 5.00);
2023-01-16 22:03:34.597 GMT [103131] LOG:  received fast shutdown request
2023-01-16 22:03:34.601 GMT [103131] LOG:  aborting any active transactions
2023-01-16 22:03:34.607 GMT [103131] LOG:  background worker "logical replication launcher" (PID 103141) exited with exit code 1
2023-01-16 22:03:34.607 GMT [103136] LOG:  shutting down
2023-01-16 22:03:34.663 GMT [103131] LOG:  database system is shut down
2023-01-16 22:03:36.127 GMT [103407] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 22:03:36.127 GMT [103407] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 22:03:36.147 GMT [103407] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 22:03:36.154 GMT [103408] LOG:  database system was shut down at 2023-01-16 22:03:35 GMT
2023-01-16 22:03:36.164 GMT [103407] LOG:  database system is ready to accept connections
2023-01-16 22:03:37.212 GMT [103443] ERROR:  column "end_date" of relation "loan_statement" does not exist at character 44
2023-01-16 22:03:37.212 GMT [103443] QUERY:  INSERT INTO loan_statement (starting_date, end_date, amount, account_id) VALUES (date_trunc('month', now()::date), (date_trunc('month', now()::date)) + interval '1 month - 1 day', 0, loan_id)
2023-01-16 22:03:37.212 GMT [103443] CONTEXT:  PL/pgSQL function client.open_loan(integer,numeric,date,text,numeric) line 8 at SQL statement
2023-01-16 22:03:37.212 GMT [103443] STATEMENT:  SELECT * FROM client.open_loan(1, 10000.00, '22-12-2025'::DATE, 'vehicle'::TEXT, 5.00);
2023-01-16 22:04:11.234 GMT [103407] LOG:  received fast shutdown request
2023-01-16 22:04:11.238 GMT [103407] LOG:  aborting any active transactions
2023-01-16 22:04:11.242 GMT [103407] LOG:  background worker "logical replication launcher" (PID 103414) exited with exit code 1
2023-01-16 22:04:11.245 GMT [103409] LOG:  shutting down
2023-01-16 22:04:11.301 GMT [103407] LOG:  database system is shut down
2023-01-16 22:04:12.601 GMT [103630] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 22:04:12.601 GMT [103630] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 22:04:12.603 GMT [103630] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 22:04:12.608 GMT [103631] LOG:  database system was shut down at 2023-01-16 22:04:12 GMT
2023-01-16 22:04:12.614 GMT [103630] LOG:  database system is ready to accept connections
2023-01-16 22:04:13.776 GMT [103656] ERROR:  column "account_id" of relation "loan_statement" does not exist at character 52
2023-01-16 22:04:13.776 GMT [103656] QUERY:  INSERT INTO loan_statement (starting_date, amount, account_id) VALUES (date_trunc('month', now()::date), 0, loan_id)
2023-01-16 22:04:13.776 GMT [103656] CONTEXT:  PL/pgSQL function client.open_loan(integer,numeric,date,text,numeric) line 8 at SQL statement
2023-01-16 22:04:13.776 GMT [103656] STATEMENT:  SELECT * FROM client.open_loan(1, 10000.00, '22-12-2025'::DATE, 'vehicle'::TEXT, 5.00);
2023-01-16 22:04:27.100 GMT [103630] LOG:  received fast shutdown request
2023-01-16 22:04:27.102 GMT [103630] LOG:  aborting any active transactions
2023-01-16 22:04:27.107 GMT [103630] LOG:  background worker "logical replication launcher" (PID 103637) exited with exit code 1
2023-01-16 22:04:27.110 GMT [103632] LOG:  shutting down
2023-01-16 22:04:27.170 GMT [103630] LOG:  database system is shut down
2023-01-16 22:04:28.354 GMT [103790] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 22:04:28.355 GMT [103790] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 22:04:28.357 GMT [103790] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 22:04:28.362 GMT [103791] LOG:  database system was shut down at 2023-01-16 22:04:28 GMT
2023-01-16 22:04:28.369 GMT [103790] LOG:  database system is ready to accept connections
2023-01-16 22:04:29.364 GMT [103816] ERROR:  column "starting_date" is of type integer but expression is of type timestamp with time zone at character 69
2023-01-16 22:04:29.364 GMT [103816] HINT:  You will need to rewrite or cast the expression.
2023-01-16 22:04:29.364 GMT [103816] QUERY:  INSERT INTO loan_statement (starting_date, amount, loan_id) VALUES (date_trunc('month', now()::date), 0, loan_id)
2023-01-16 22:04:29.364 GMT [103816] CONTEXT:  PL/pgSQL function client.open_loan(integer,numeric,date,text,numeric) line 8 at SQL statement
2023-01-16 22:04:29.364 GMT [103816] STATEMENT:  SELECT * FROM client.open_loan(1, 10000.00, '22-12-2025'::DATE, 'vehicle'::TEXT, 5.00);
2023-01-16 22:04:48.544 GMT [103790] LOG:  received fast shutdown request
2023-01-16 22:04:48.546 GMT [103790] LOG:  aborting any active transactions
2023-01-16 22:04:48.552 GMT [103790] LOG:  background worker "logical replication launcher" (PID 103797) exited with exit code 1
2023-01-16 22:04:48.558 GMT [103792] LOG:  shutting down
2023-01-16 22:04:48.614 GMT [103790] LOG:  database system is shut down
2023-01-16 22:04:49.993 GMT [103961] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 22:04:49.993 GMT [103961] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 22:04:49.994 GMT [103961] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 22:04:50.000 GMT [103962] LOG:  database system was shut down at 2023-01-16 22:04:49 GMT
2023-01-16 22:04:50.008 GMT [103961] LOG:  database system is ready to accept connections
2023-01-16 22:05:19.953 GMT [103961] LOG:  received fast shutdown request
2023-01-16 22:05:19.957 GMT [103961] LOG:  aborting any active transactions
2023-01-16 22:05:19.960 GMT [103961] LOG:  background worker "logical replication launcher" (PID 103968) exited with exit code 1
2023-01-16 22:05:19.963 GMT [103963] LOG:  shutting down
2023-01-16 22:05:20.021 GMT [103961] LOG:  database system is shut down
2023-01-16 22:05:21.259 GMT [104163] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 22:05:21.259 GMT [104163] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 22:05:21.261 GMT [104163] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 22:05:21.266 GMT [104164] LOG:  database system was shut down at 2023-01-16 22:05:20 GMT
2023-01-16 22:05:21.273 GMT [104163] LOG:  database system is ready to accept connections
2023-01-16 22:07:13.458 GMT [104163] LOG:  received fast shutdown request
2023-01-16 22:07:13.462 GMT [104163] LOG:  aborting any active transactions
2023-01-16 22:07:13.467 GMT [104163] LOG:  background worker "logical replication launcher" (PID 104170) exited with exit code 1
2023-01-16 22:07:13.467 GMT [104165] LOG:  shutting down
2023-01-16 22:07:13.526 GMT [104163] LOG:  database system is shut down
2023-01-16 22:07:14.755 GMT [104624] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 22:07:14.755 GMT [104624] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 22:07:14.757 GMT [104624] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 22:07:14.762 GMT [104625] LOG:  database system was shut down at 2023-01-16 22:07:14 GMT
2023-01-16 22:07:14.768 GMT [104624] LOG:  database system is ready to accept connections
2023-01-16 22:08:02.182 GMT [104624] LOG:  received fast shutdown request
2023-01-16 22:08:02.185 GMT [104624] LOG:  aborting any active transactions
2023-01-16 22:08:02.190 GMT [104624] LOG:  background worker "logical replication launcher" (PID 104631) exited with exit code 1
2023-01-16 22:08:02.191 GMT [104626] LOG:  shutting down
2023-01-16 22:08:02.251 GMT [104624] LOG:  database system is shut down
2023-01-16 22:08:03.402 GMT [104864] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 22:08:03.402 GMT [104864] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 22:08:03.403 GMT [104864] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 22:08:03.412 GMT [104865] LOG:  database system was shut down at 2023-01-16 22:08:03 GMT
2023-01-16 22:08:03.417 GMT [104864] LOG:  database system is ready to accept connections
2023-01-16 22:09:58.207 GMT [104864] LOG:  received fast shutdown request
2023-01-16 22:09:58.209 GMT [104864] LOG:  aborting any active transactions
2023-01-16 22:09:58.215 GMT [104864] LOG:  background worker "logical replication launcher" (PID 104871) exited with exit code 1
2023-01-16 22:09:58.215 GMT [104866] LOG:  shutting down
2023-01-16 22:09:58.269 GMT [104864] LOG:  database system is shut down
2023-01-16 22:09:59.644 GMT [105301] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 22:09:59.645 GMT [105301] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 22:09:59.648 GMT [105301] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 22:09:59.656 GMT [105302] LOG:  database system was shut down at 2023-01-16 22:09:59 GMT
2023-01-16 22:09:59.663 GMT [105301] LOG:  database system is ready to accept connections
2023-01-16 22:10:00.726 GMT [105344] ERROR:  column "loan_payment" does not exist at character 110
2023-01-16 22:10:00.726 GMT [105344] QUERY:  EXISTS (SELECT * FROM bank.pending_transactions WHERE id = pending_transaction_id AND is_transfer = TRUE AND loan_payment = FALSE)
2023-01-16 22:10:00.726 GMT [105344] CONTEXT:  PL/pgSQL function verify_transaction_type(integer) line 8 at IF
	PL/pgSQL function verify_transaction(integer) line 6 at IF
	SQL statement "SELECT * FROM bank.verify_transaction(NEW.id)"
	PL/pgSQL function transaction_verification() line 5 at SQL statement
	SQL statement "INSERT INTO pending_transaction (id, account_id, is_transfer, is_loan_payment) VALUES (transaction_id, orig_account_number, true, loan_payment)"
	PL/pgSQL function place_transaction_into_account(integer,integer,integer,numeric,integer,boolean) line 27 at SQL statement
	SQL statement "SELECT * FROM client.place_transaction_into_account(account_identifier, orig_account_number, loan_id, payment_amount, 0, TRUE)"
	PL/pgSQL function initiate_loan_payment(integer,integer,numeric,integer) line 6 at SQL statement
2023-01-16 22:10:00.726 GMT [105344] STATEMENT:  SELECT * FROM client.initiate_loan_payment(1, 10000001, 50.00, 1);
2023-01-16 22:10:00.736 GMT [105344] ERROR:  column "loan_payment" does not exist at character 110
2023-01-16 22:10:00.736 GMT [105344] QUERY:  EXISTS (SELECT * FROM bank.pending_transactions WHERE id = pending_transaction_id AND is_transfer = TRUE AND loan_payment = FALSE)
2023-01-16 22:10:00.736 GMT [105344] CONTEXT:  PL/pgSQL function verify_transaction_type(integer) line 8 at IF
	PL/pgSQL function verify_transaction(integer) line 6 at IF
	SQL statement "SELECT * FROM bank.verify_transaction(NEW.id)"
	PL/pgSQL function transaction_verification() line 5 at SQL statement
	SQL statement "INSERT INTO pending_transaction (id, account_id, is_transfer, is_loan_payment) VALUES (transaction_id, orig_account_number, true, loan_payment)"
	PL/pgSQL function place_transaction_into_account(integer,integer,integer,numeric,integer,boolean) line 27 at SQL statement
	SQL statement "SELECT * FROM client.place_transaction_into_account(account_identifier, orig_account_number, transfer_account_number, transfer_amount, transfer_account_sort_code, FALSE)"
	PL/pgSQL function initiate_transfer(integer,integer,numeric,integer,integer) line 8 at SQL statement
2023-01-16 22:10:00.736 GMT [105344] STATEMENT:  SELECT * FROM client.initiate_transfer(1, 10000001, 100.00, 20000000, 123456);
2023-01-16 22:10:24.839 GMT [105301] LOG:  received fast shutdown request
2023-01-16 22:10:24.840 GMT [105301] LOG:  aborting any active transactions
2023-01-16 22:10:24.845 GMT [105301] LOG:  background worker "logical replication launcher" (PID 105308) exited with exit code 1
2023-01-16 22:10:24.845 GMT [105303] LOG:  shutting down
2023-01-16 22:10:24.911 GMT [105301] LOG:  database system is shut down
2023-01-16 22:10:26.169 GMT [105516] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 22:10:26.170 GMT [105516] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 22:10:26.171 GMT [105516] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 22:10:26.176 GMT [105517] LOG:  database system was shut down at 2023-01-16 22:10:25 GMT
2023-01-16 22:10:26.183 GMT [105516] LOG:  database system is ready to accept connections
2023-01-16 22:10:27.144 GMT [105545] ERROR:  column "is_loan_payment" does not exist at character 110
2023-01-16 22:10:27.144 GMT [105545] QUERY:  EXISTS (SELECT * FROM bank.pending_transactions WHERE id = pending_transaction_id AND is_transfer = TRUE AND is_loan_payment = FALSE)
2023-01-16 22:10:27.144 GMT [105545] CONTEXT:  PL/pgSQL function verify_transaction_type(integer) line 8 at IF
	PL/pgSQL function verify_transaction(integer) line 6 at IF
	SQL statement "SELECT * FROM bank.verify_transaction(NEW.id)"
	PL/pgSQL function transaction_verification() line 5 at SQL statement
	SQL statement "INSERT INTO pending_transaction (id, account_id, is_transfer, is_loan_payment) VALUES (transaction_id, orig_account_number, true, loan_payment)"
	PL/pgSQL function place_transaction_into_account(integer,integer,integer,numeric,integer,boolean) line 27 at SQL statement
	SQL statement "SELECT * FROM client.place_transaction_into_account(account_identifier, orig_account_number, loan_id, payment_amount, 0, TRUE)"
	PL/pgSQL function initiate_loan_payment(integer,integer,numeric,integer) line 6 at SQL statement
2023-01-16 22:10:27.144 GMT [105545] STATEMENT:  SELECT * FROM client.initiate_loan_payment(1, 10000001, 50.00, 1);
2023-01-16 22:10:27.155 GMT [105545] ERROR:  column "is_loan_payment" does not exist at character 110
2023-01-16 22:10:27.155 GMT [105545] QUERY:  EXISTS (SELECT * FROM bank.pending_transactions WHERE id = pending_transaction_id AND is_transfer = TRUE AND is_loan_payment = FALSE)
2023-01-16 22:10:27.155 GMT [105545] CONTEXT:  PL/pgSQL function verify_transaction_type(integer) line 8 at IF
	PL/pgSQL function verify_transaction(integer) line 6 at IF
	SQL statement "SELECT * FROM bank.verify_transaction(NEW.id)"
	PL/pgSQL function transaction_verification() line 5 at SQL statement
	SQL statement "INSERT INTO pending_transaction (id, account_id, is_transfer, is_loan_payment) VALUES (transaction_id, orig_account_number, true, loan_payment)"
	PL/pgSQL function place_transaction_into_account(integer,integer,integer,numeric,integer,boolean) line 27 at SQL statement
	SQL statement "SELECT * FROM client.place_transaction_into_account(account_identifier, orig_account_number, transfer_account_number, transfer_amount, transfer_account_sort_code, FALSE)"
	PL/pgSQL function initiate_transfer(integer,integer,numeric,integer,integer) line 8 at SQL statement
2023-01-16 22:10:27.155 GMT [105545] STATEMENT:  SELECT * FROM client.initiate_transfer(1, 10000001, 100.00, 20000000, 123456);
2023-01-16 22:10:50.198 GMT [105516] LOG:  received fast shutdown request
2023-01-16 22:10:50.200 GMT [105516] LOG:  aborting any active transactions
2023-01-16 22:10:50.206 GMT [105516] LOG:  background worker "logical replication launcher" (PID 105523) exited with exit code 1
2023-01-16 22:10:50.209 GMT [105518] LOG:  shutting down
2023-01-16 22:10:50.265 GMT [105516] LOG:  database system is shut down
2023-01-16 22:10:51.636 GMT [105712] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 22:10:51.637 GMT [105712] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 22:10:51.639 GMT [105712] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 22:10:51.644 GMT [105713] LOG:  database system was shut down at 2023-01-16 22:10:51 GMT
2023-01-16 22:10:51.651 GMT [105712] LOG:  database system is ready to accept connections
2023-01-16 22:12:26.282 GMT [105712] LOG:  received fast shutdown request
2023-01-16 22:12:26.284 GMT [105712] LOG:  aborting any active transactions
2023-01-16 22:12:26.288 GMT [105712] LOG:  background worker "logical replication launcher" (PID 105719) exited with exit code 1
2023-01-16 22:12:26.289 GMT [105714] LOG:  shutting down
2023-01-16 22:12:26.347 GMT [105712] LOG:  database system is shut down
2023-01-16 22:12:27.556 GMT [106111] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 22:12:27.556 GMT [106111] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 22:12:27.558 GMT [106111] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 22:12:27.563 GMT [106112] LOG:  database system was shut down at 2023-01-16 22:12:27 GMT
2023-01-16 22:12:27.569 GMT [106111] LOG:  database system is ready to accept connections
2023-01-16 22:12:28.603 GMT [106140] ERROR:  column "current_balance" of relation "loan" does not exist at character 17
2023-01-16 22:12:28.603 GMT [106140] QUERY:  UPDATE loan SET current_balance = amount - payment_amount WHERE id = loan_id
2023-01-16 22:12:28.603 GMT [106140] CONTEXT:  PL/pgSQL function update_loan_amounts(integer,numeric) line 8 at SQL statement
	SQL expression "bank.update_loan_amounts((SELECT dest_account_id FROM transaction WHERE id = pending_transaction_id), (SELECT SUM(amount*-1) FROM bank.pending_transactions WHERE id = pending_transaction_id))"
	PL/pgSQL function verify_and_update_transaction_amounts(integer,boolean,boolean) line 12 at IF
	SQL statement "SELECT * FROM bank.verify_and_update_transaction_amounts(pending_transaction_id, FALSE, TRUE)"
	PL/pgSQL function verify_transaction_type(integer) line 13 at SQL statement
	PL/pgSQL function verify_transaction(integer) line 6 at IF
	SQL statement "SELECT * FROM bank.verify_transaction(NEW.id)"
	PL/pgSQL function transaction_verification() line 5 at SQL statement
	SQL statement "INSERT INTO pending_transaction (id, account_id, is_transfer, is_loan_payment) VALUES (transaction_id, orig_account_number, true, loan_payment)"
	PL/pgSQL function place_transaction_into_account(integer,integer,integer,numeric,integer,boolean) line 27 at SQL statement
	SQL statement "SELECT * FROM client.place_transaction_into_account(account_identifier, orig_account_number, loan_id, payment_amount, 0, TRUE)"
	PL/pgSQL function initiate_loan_payment(integer,integer,numeric,integer) line 6 at SQL statement
2023-01-16 22:12:28.603 GMT [106140] STATEMENT:  SELECT * FROM client.initiate_loan_payment(1, 10000001, 50.00, 1);
2023-01-16 22:12:59.292 GMT [106111] LOG:  received fast shutdown request
2023-01-16 22:12:59.295 GMT [106111] LOG:  aborting any active transactions
2023-01-16 22:12:59.300 GMT [106111] LOG:  background worker "logical replication launcher" (PID 106118) exited with exit code 1
2023-01-16 22:12:59.300 GMT [106113] LOG:  shutting down
2023-01-16 22:12:59.360 GMT [106111] LOG:  database system is shut down
2023-01-16 22:13:00.640 GMT [106317] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 22:13:00.640 GMT [106317] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 22:13:00.642 GMT [106317] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 22:13:00.648 GMT [106318] LOG:  database system was shut down at 2023-01-16 22:13:00 GMT
2023-01-16 22:13:00.654 GMT [106317] LOG:  database system is ready to accept connections
2023-01-16 22:13:32.475 GMT [106317] LOG:  received fast shutdown request
2023-01-16 22:13:32.479 GMT [106317] LOG:  aborting any active transactions
2023-01-16 22:13:32.486 GMT [106317] LOG:  background worker "logical replication launcher" (PID 106324) exited with exit code 1
2023-01-16 22:13:32.486 GMT [106319] LOG:  shutting down
2023-01-16 22:13:32.542 GMT [106317] LOG:  database system is shut down
2023-01-16 22:13:33.891 GMT [106523] LOG:  starting PostgreSQL 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, 64-bit
2023-01-16 22:13:33.891 GMT [106523] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-01-16 22:13:33.895 GMT [106523] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-01-16 22:13:33.900 GMT [106524] LOG:  database system was shut down at 2023-01-16 22:13:33 GMT
2023-01-16 22:13:33.906 GMT [106523] LOG:  database system is ready to accept connections
